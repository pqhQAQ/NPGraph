public class data.action.ActionText extends data.action.Action
{

    public void <init>(data.Locator, java.lang.String)
    {
        data.action.ActionText this;
        data.Locator locator;
        java.lang.String text;
        java.util.HashMap $r0;
        java.util.Map $r1;

        this := @this: data.action.ActionText;
        locator := @parameter0: data.Locator;
        text := @parameter1: java.lang.String;
        specialinvoke this.<data.action.Action: void <init>()>();
        this.<data.action.ActionText: java.lang.String action> = "text";
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<data.action.ActionText: java.util.Map params> = $r0;
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("locator", locator);
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("keys", text);
        return;
    }

    public data.action.Action clone()
    {
        data.action.ActionText this, $r0, tar;
        java.util.Map $r1, $r4;
        java.lang.Object $r2, $r5;
        data.Locator $r3;
        java.lang.String $r6;

        this := @this: data.action.ActionText;
        $r0 = new data.action.ActionText;
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("locator");
        $r3 = (data.Locator) $r2;
        $r4 = this.<data.action.ActionText: java.util.Map params>;
        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("keys");
        $r6 = (java.lang.String) $r5;
        specialinvoke $r0.<data.action.ActionText: void <init>(data.Locator,java.lang.String)>($r3, $r6);
        tar = $r0;
        return tar;
    }

    public void setlocator(data.Locator)
    {
        data.action.ActionText this;
        data.Locator locator;
        java.util.Map $r0;

        this := @this: data.action.ActionText;
        locator := @parameter0: data.Locator;
        $r0 = this.<data.action.ActionText: java.util.Map params>;
        interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>("locator");
        $r0 = this.<data.action.ActionText: java.util.Map params>;
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("locator", locator);
        return;
    }

    public java.lang.String toScript()
    {
        data.action.ActionText this;
        java.lang.StringBuilder $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        data.Locator $r3;
        java.lang.String $r4, $r5;

        this := @this: data.action.ActionText;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t");
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("locator");
        $r3 = (data.Locator) $r2;
        $r4 = virtualinvoke $r3.<data.Locator: java.lang.String toScript()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".send_keys(\"");
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("keys");
        $r4 = (java.lang.String) $r2;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\")\n");
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }

    public java.lang.String toString()
    {
        data.action.ActionText this;
        java.lang.StringBuilder $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        data.Locator $r3;
        java.lang.String $r4, $r5;

        this := @this: data.action.ActionText;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Input Text ");
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("locator");
        $r3 = (data.Locator) $r2;
        $r4 = virtualinvoke $r3.<data.Locator: java.lang.String toString()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = this.<data.action.ActionText: java.util.Map params>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("keys");
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r5;
    }
}

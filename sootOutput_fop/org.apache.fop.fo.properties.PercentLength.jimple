public class org.apache.fop.fo.properties.PercentLength extends org.apache.fop.fo.properties.LengthProperty
{
    private double factor;
    private org.apache.fop.datatypes.PercentBase lbase;
    private double resolvedValue;
    static java.lang.Class class$org$apache$fop$fo$properties$PercentLength;

    public void <init>(double, org.apache.fop.datatypes.PercentBase)
    {
        org.apache.fop.fo.properties.PercentLength this;
        double factor;
        org.apache.fop.datatypes.PercentBase lbase;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        factor := @parameter0: double;
        lbase := @parameter1: org.apache.fop.datatypes.PercentBase;
        specialinvoke this.<org.apache.fop.fo.properties.LengthProperty: void <init>()>();
        this.<org.apache.fop.fo.properties.PercentLength: org.apache.fop.datatypes.PercentBase lbase> = null;
        this.<org.apache.fop.fo.properties.PercentLength: double factor> = factor;
        this.<org.apache.fop.fo.properties.PercentLength: org.apache.fop.datatypes.PercentBase lbase> = lbase;
        return;
    }

    public org.apache.fop.datatypes.PercentBase getBaseLength()
    {
        org.apache.fop.fo.properties.PercentLength this;
        org.apache.fop.datatypes.PercentBase $r0;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        $r0 = this.<org.apache.fop.fo.properties.PercentLength: org.apache.fop.datatypes.PercentBase lbase>;
        return $r0;
    }

    protected double getPercentage()
    {
        org.apache.fop.fo.properties.PercentLength this;
        double $d0;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        $d0 = this.<org.apache.fop.fo.properties.PercentLength: double factor>;
        $d0 = $d0 * 100.0;
        return $d0;
    }

    public boolean isAbsolute()
    {
        org.apache.fop.fo.properties.PercentLength this;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        return 0;
    }

    public double getNumericValue()
    {
        org.apache.fop.fo.properties.PercentLength this;
        double $d0;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        $d0 = virtualinvoke this.<org.apache.fop.fo.properties.PercentLength: double getNumericValue(org.apache.fop.datatypes.PercentBaseContext)>(null);
        return $d0;
    }

    public double getNumericValue(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.PercentLength this;
        org.apache.fop.datatypes.PercentBaseContext context;
        org.apache.fop.fo.expr.PropertyException exc, $r1;
        double $d0, $d1, $d2;
        org.apache.fop.datatypes.PercentBase $r0;
        int $i0;
        org.apache.commons.logging.Log $r2;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;

     label0:
        $d0 = this.<org.apache.fop.fo.properties.PercentLength: double factor>;
        $r0 = this.<org.apache.fop.fo.properties.PercentLength: org.apache.fop.datatypes.PercentBase lbase>;
        $i0 = interfaceinvoke $r0.<org.apache.fop.datatypes.PercentBase: int getBaseLength(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $d1 = (double) $i0;
        $d0 = $d0 * $d1;
        this.<org.apache.fop.fo.properties.PercentLength: double resolvedValue> = $d0;
        $d2 = this.<org.apache.fop.fo.properties.PercentLength: double resolvedValue>;

     label1:
        return $d2;

     label2:
        $r1 := @caughtexception;
        exc = $r1;
        $r2 = <org.apache.fop.fo.properties.PercentLength: org.apache.commons.logging.Log log>;
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object)>(exc);
        return 0.0;

        catch org.apache.fop.fo.expr.PropertyException from label0 to label1 with label2;
    }

    public java.lang.String getString()
    {
        org.apache.fop.fo.properties.PercentLength this;
        java.lang.StringBuffer $r0;
        double $d0;
        java.lang.String $r1;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $d0 = this.<org.apache.fop.fo.properties.PercentLength: double factor>;
        $d0 = $d0 * 100.0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%");
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public int getValue()
    {
        org.apache.fop.fo.properties.PercentLength this;
        double $d0;
        int $i0;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        $d0 = virtualinvoke this.<org.apache.fop.fo.properties.PercentLength: double getNumericValue()>();
        $i0 = (int) $d0;
        return $i0;
    }

    public int getValue(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.PercentLength this;
        org.apache.fop.datatypes.PercentBaseContext context;
        double $d0;
        int $i0;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        $d0 = virtualinvoke this.<org.apache.fop.fo.properties.PercentLength: double getNumericValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i0 = (int) $d0;
        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.properties.PercentLength this;
        java.lang.StringBuffer $r0, $r1, sb;
        java.lang.Class $r2;
        java.lang.String $r3, $r5;
        double $d0;
        org.apache.fop.datatypes.PercentBase $r4;

        this := @this: org.apache.fop.fo.properties.PercentLength;
        $r0 = new java.lang.StringBuffer;
        $r1 = $r0;
        $r2 = <org.apache.fop.fo.properties.PercentLength: java.lang.Class class$org$apache$fop$fo$properties$PercentLength>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <org.apache.fop.fo.properties.PercentLength: java.lang.Class class$(java.lang.String)>("org.apache.fop.fo.properties.PercentLength");
        <org.apache.fop.fo.properties.PercentLength: java.lang.Class class$org$apache$fop$fo$properties$PercentLength> = $r2;
        goto label1;

     label0:
        $r2 = <org.apache.fop.fo.properties.PercentLength: java.lang.Class class$org$apache$fop$fo$properties$PercentLength>;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[factor=");
        $d0 = this.<org.apache.fop.fo.properties.PercentLength: double factor>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",lbase=");
        $r4 = this.<org.apache.fop.fo.properties.PercentLength: org.apache.fop.datatypes.PercentBase lbase>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);
        sb = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r5 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

public class org.apache.fop.fonts.type1.AFMWritingDirectionMetrics extends java.lang.Object
{
    private java.lang.Number underlinePosition;
    private java.lang.Number underlineThickness;
    private double italicAngle;
    private boolean isFixedPitch;

    public void <init>()
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public java.lang.Number getUnderlinePosition()
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        $r0 = this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: java.lang.Number underlinePosition>;
        return $r0;
    }

    public void setUnderlinePosition(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        java.lang.Number underlinePosition;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        underlinePosition := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: java.lang.Number underlinePosition> = underlinePosition;
        return;
    }

    public java.lang.Number getUnderlineThickness()
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        $r0 = this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: java.lang.Number underlineThickness>;
        return $r0;
    }

    public void setUnderlineThickness(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        java.lang.Number underlineThickness;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        underlineThickness := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: java.lang.Number underlineThickness> = underlineThickness;
        return;
    }

    public double getItalicAngle()
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        double $d0;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        $d0 = this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: double italicAngle>;
        return $d0;
    }

    public void setItalicAngle(double)
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        double italicAngle;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        italicAngle := @parameter0: double;
        this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: double italicAngle> = italicAngle;
        return;
    }

    public boolean isFixedPitch()
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        boolean $z0;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        $z0 = this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: boolean isFixedPitch>;
        return $z0;
    }

    public void setFixedPitch(boolean)
    {
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics this;
        boolean value;

        this := @this: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        value := @parameter0: boolean;
        this.<org.apache.fop.fonts.type1.AFMWritingDirectionMetrics: boolean isFixedPitch> = value;
        return;
    }
}

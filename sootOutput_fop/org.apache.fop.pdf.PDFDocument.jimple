public class org.apache.fop.pdf.PDFDocument extends java.lang.Object
{
    private static final java.lang.Integer LOCATION_PLACEHOLDER;
    public static final int PDF_VERSION_1_3;
    public static final int PDF_VERSION_1_4;
    public static final java.lang.String ENCODING;
    private org.apache.commons.logging.Log log;
    protected int position;
    protected java.util.List location;
    private java.util.List trailerObjects;
    protected int objectcount;
    protected java.util.List objects;
    protected int xref;
    protected int pdfVersion;
    protected org.apache.fop.pdf.PDFProfile pdfProfile;
    protected org.apache.fop.pdf.PDFRoot root;
    private org.apache.fop.pdf.PDFOutline outlineRoot;
    private org.apache.fop.pdf.PDFPages pages;
    protected org.apache.fop.pdf.PDFInfo info;
    protected org.apache.fop.pdf.PDFResources resources;
    protected org.apache.fop.pdf.PDFEncryption encryption;
    protected org.apache.fop.pdf.PDFDeviceColorSpace colorspace;
    protected int patternCount;
    protected int shadingCount;
    protected int xObjectCount;
    protected java.util.Map xObjectsMap;
    protected java.util.Map fontMap;
    protected java.util.Map filterMap;
    protected java.util.List gstates;
    protected java.util.List functions;
    protected java.util.List shadings;
    protected java.util.List patterns;
    protected java.util.List links;
    protected java.util.List destinations;
    protected java.util.List filespecs;
    protected java.util.List gotoremotes;
    protected java.util.List gotos;
    private org.apache.fop.pdf.PDFDests dests;
    private org.apache.fop.pdf.PDFFactory factory;
    private boolean encodingOnTheFly;

    public void <init>(java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String prod;
        org.apache.commons.logging.Log $r0;
        java.util.ArrayList $r1;
        java.util.LinkedList $r2;
        org.apache.fop.pdf.PDFProfile $r3;
        org.apache.fop.pdf.PDFDeviceColorSpace $r4;
        java.util.HashMap $r5;
        org.apache.fop.pdf.PDFFactory $r6;
        org.apache.fop.pdf.PDFPages $r7, $r8;
        org.apache.fop.pdf.PDFRoot $r9;
        org.apache.fop.pdf.PDFResources $r10;
        org.apache.fop.pdf.PDFInfo $r11;

        this := @this: org.apache.fop.pdf.PDFDocument;
        prod := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>("org.apache.fop.pdf");
        this.<org.apache.fop.pdf.PDFDocument: org.apache.commons.logging.Log log> = $r0;
        this.<org.apache.fop.pdf.PDFDocument: int position> = 0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List location> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List trailerObjects> = $r1;
        this.<org.apache.fop.pdf.PDFDocument: int objectcount> = 0;
        $r2 = new java.util.LinkedList;
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List objects> = $r2;
        this.<org.apache.fop.pdf.PDFDocument: int pdfVersion> = 4;
        $r3 = new org.apache.fop.pdf.PDFProfile;
        specialinvoke $r3.<org.apache.fop.pdf.PDFProfile: void <init>(org.apache.fop.pdf.PDFDocument)>(this);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile pdfProfile> = $r3;
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot> = null;
        $r4 = new org.apache.fop.pdf.PDFDeviceColorSpace;
        specialinvoke $r4.<org.apache.fop.pdf.PDFDeviceColorSpace: void <init>(int)>(2);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace colorspace> = $r4;
        this.<org.apache.fop.pdf.PDFDocument: int patternCount> = 0;
        this.<org.apache.fop.pdf.PDFDocument: int shadingCount> = 0;
        this.<org.apache.fop.pdf.PDFDocument: int xObjectCount> = 0;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap> = $r5;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.Map fontMap> = $r5;
        $r5 = new java.util.HashMap;
        specialinvoke $r5.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.Map filterMap> = $r5;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List gstates> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List functions> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List shadings> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List patterns> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List links> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List filespecs> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List gotoremotes> = $r1;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List gotos> = $r1;
        this.<org.apache.fop.pdf.PDFDocument: boolean encodingOnTheFly> = 1;
        $r6 = new org.apache.fop.pdf.PDFFactory;
        specialinvoke $r6.<org.apache.fop.pdf.PDFFactory: void <init>(org.apache.fop.pdf.PDFDocument)>(this);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory factory> = $r6;
        $r6 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r7 = virtualinvoke $r6.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFPages makePages()>();
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPages pages> = $r7;
        $r6 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r8 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPages pages>;
        $r9 = virtualinvoke $r6.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFRoot makeRoot(org.apache.fop.pdf.PDFPages)>($r8);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root> = $r9;
        $r6 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r10 = virtualinvoke $r6.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFResources makeResources()>();
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources resources> = $r10;
        $r6 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r11 = virtualinvoke $r6.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFInfo makeInfo(java.lang.String)>(prod);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo info> = $r11;
        return;
    }

    public int getPDFVersion()
    {
        org.apache.fop.pdf.PDFDocument this;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int pdfVersion>;
        return $i0;
    }

    public java.lang.String getPDFVersionString()
    {
        org.apache.fop.pdf.PDFDocument this;
        int $i0;
        java.lang.IllegalStateException $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: int getPDFVersion()>();
        lookupswitch($i0)
        {
            case 3: goto label0;
            case 4: goto label1;
            default: goto label2;
        };

     label0:
        return "1.3";

     label1:
        return "1.4";

     label2:
        $r0 = new java.lang.IllegalStateException;
        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unsupported PDF version selected");
        throw $r0;
    }

    public org.apache.fop.pdf.PDFProfile getProfile()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFProfile $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile pdfProfile>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFFactory getFactory()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFFactory $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory factory>;
        return $r0;
    }

    public boolean isEncodingOnTheFly()
    {
        org.apache.fop.pdf.PDFDocument this;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $z0 = this.<org.apache.fop.pdf.PDFDocument: boolean encodingOnTheFly>;
        return $z0;
    }

    public static byte[] encode(java.lang.String)
    {
        java.lang.String text;
        java.io.UnsupportedEncodingException uee, $r1;
        byte[] $r0;

        text := @parameter0: java.lang.String;

     label0:
        $r0 = virtualinvoke text.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        uee = $r1;
        $r0 = virtualinvoke text.<java.lang.String: byte[] getBytes()>();
        return $r0;

        catch java.io.UnsupportedEncodingException from label0 to label1 with label2;
    }

    public static java.io.Writer getWriterFor(java.io.OutputStream)
    {
        java.io.OutputStream out;
        java.io.BufferedWriter $r0;
        java.io.OutputStreamWriter $r1;
        java.io.UnsupportedEncodingException uee, $r2;
        java.lang.Error $r3;

        out := @parameter0: java.io.OutputStream;

     label0:
        $r0 = new java.io.BufferedWriter;
        $r1 = new java.io.OutputStreamWriter;
        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(out, "ISO-8859-1");
        specialinvoke $r0.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r1);

     label1:
        return $r0;

     label2:
        $r2 := @caughtexception;
        uee = $r2;
        $r3 = new java.lang.Error;
        specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>("JVM doesn\'t support ISO-8859-1 encoding!");
        throw $r3;

        catch java.io.UnsupportedEncodingException from label0 to label1 with label2;
    }

    public void setProducer(java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String producer;
        org.apache.fop.pdf.PDFInfo $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        producer := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo info>;
        virtualinvoke $r0.<org.apache.fop.pdf.PDFInfo: void setProducer(java.lang.String)>(producer);
        return;
    }

    public void setCreationDate(java.util.Date)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.util.Date date;
        org.apache.fop.pdf.PDFInfo $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        date := @parameter0: java.util.Date;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo info>;
        virtualinvoke $r0.<org.apache.fop.pdf.PDFInfo: void setCreationDate(java.util.Date)>(date);
        return;
    }

    public void setCreator(java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String creator;
        org.apache.fop.pdf.PDFInfo $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        creator := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo info>;
        virtualinvoke $r0.<org.apache.fop.pdf.PDFInfo: void setCreator(java.lang.String)>(creator);
        return;
    }

    public void setFilterMap(java.util.Map)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.util.Map map;

        this := @this: org.apache.fop.pdf.PDFDocument;
        map := @parameter0: java.util.Map;
        this.<org.apache.fop.pdf.PDFDocument: java.util.Map filterMap> = map;
        return;
    }

    public java.util.Map getFilterMap()
    {
        org.apache.fop.pdf.PDFDocument this;
        java.util.Map $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map filterMap>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFPages getPages()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFPages $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPages pages>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFRoot getRoot()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFRoot $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFInfo getInfo()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFInfo $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo info>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFObject obj;

        this := @this: org.apache.fop.pdf.PDFDocument;
        obj := @parameter0: org.apache.fop.pdf.PDFObject;
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: void assignObjectNumber(org.apache.fop.pdf.PDFObject)>(obj);
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: void addObject(org.apache.fop.pdf.PDFObject)>(obj);
        return obj;
    }

    public void assignObjectNumber(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFDocument this, currentParent;
        org.apache.fop.pdf.PDFObject obj;
        java.lang.NullPointerException $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        obj := @parameter0: org.apache.fop.pdf.PDFObject;
        if obj != null goto label0;

        $r0 = new java.lang.NullPointerException;
        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("obj must not be null");
        throw $r0;

     label0:
        $z0 = virtualinvoke obj.<org.apache.fop.pdf.PDFObject: boolean hasObjectNumber()>();
        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error registering a PDFObject: PDFObject already has an object number");
        throw $r1;

     label1:
        currentParent = virtualinvoke obj.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocument()>();
        if currentParent == null goto label2;

        if currentParent == this goto label2;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error registering a PDFObject: PDFObject already has a parent PDFDocument");
        throw $r1;

     label2:
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i1 = $i0 + 1;
        this.<org.apache.fop.pdf.PDFDocument: int objectcount> = $i1;
        virtualinvoke obj.<org.apache.fop.pdf.PDFObject: void setObjectNumber(int)>($i1);
        if currentParent != null goto label3;

        virtualinvoke obj.<org.apache.fop.pdf.PDFObject: void setDocument(org.apache.fop.pdf.PDFDocument)>(this);

     label3:
        return;
    }

    public void addObject(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFObject obj;
        java.lang.String shadingName, patternName, $r8;
        org.apache.fop.pdf.PDFFont font;
        java.lang.NullPointerException $r0;
        boolean $z0;
        java.lang.IllegalStateException $r1;
        java.util.List $r2;
        java.lang.StringBuffer $r3;
        int $i0, $i1;
        org.apache.fop.pdf.PDFShading $r5;
        org.apache.fop.pdf.PDFPattern $r6;
        java.util.Map $r7;
        org.apache.fop.pdf.PDFPages $r10;
        org.apache.fop.pdf.PDFPage $r11;

        this := @this: org.apache.fop.pdf.PDFDocument;
        obj := @parameter0: org.apache.fop.pdf.PDFObject;
        if obj != null goto label0;

        $r0 = new java.lang.NullPointerException;
        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("obj must not be null");
        throw $r0;

     label0:
        $z0 = virtualinvoke obj.<org.apache.fop.pdf.PDFObject: boolean hasObjectNumber()>();
        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error adding a PDFObject: PDFObject doesn\'t have an object number");
        throw $r1;

     label1:
        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List objects>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);
        $z0 = obj instanceof org.apache.fop.pdf.PDFFunction;
        if $z0 == 0 goto label2;

        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List functions>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label2:
        $z0 = obj instanceof org.apache.fop.pdf.PDFShading;
        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Sh");
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int shadingCount>;
        $i1 = $i0 + 1;
        this.<org.apache.fop.pdf.PDFDocument: int shadingCount> = $i1;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        shadingName = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r5 = (org.apache.fop.pdf.PDFShading) obj;
        virtualinvoke $r5.<org.apache.fop.pdf.PDFShading: void setName(java.lang.String)>(shadingName);
        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List shadings>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label3:
        $z0 = obj instanceof org.apache.fop.pdf.PDFPattern;
        if $z0 == 0 goto label4;

        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Pa");
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int patternCount>;
        $i1 = $i0 + 1;
        this.<org.apache.fop.pdf.PDFDocument: int patternCount> = $i1;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        patternName = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r6 = (org.apache.fop.pdf.PDFPattern) obj;
        virtualinvoke $r6.<org.apache.fop.pdf.PDFPattern: void setName(java.lang.String)>(patternName);
        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List patterns>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label4:
        $z0 = obj instanceof org.apache.fop.pdf.PDFFont;
        if $z0 == 0 goto label5;

        font = (org.apache.fop.pdf.PDFFont) obj;
        $r7 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map fontMap>;
        $r8 = virtualinvoke font.<org.apache.fop.pdf.PDFFont: java.lang.String getName()>();
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, font);

     label5:
        $z0 = obj instanceof org.apache.fop.pdf.PDFGState;
        if $z0 == 0 goto label6;

        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List gstates>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label6:
        $z0 = obj instanceof org.apache.fop.pdf.PDFPage;
        if $z0 == 0 goto label7;

        $r10 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPages pages>;
        $r11 = (org.apache.fop.pdf.PDFPage) obj;
        virtualinvoke $r10.<org.apache.fop.pdf.PDFPages: void notifyKidRegistered(org.apache.fop.pdf.PDFPage)>($r11);

     label7:
        $z0 = obj instanceof org.apache.fop.pdf.PDFLink;
        if $z0 == 0 goto label8;

        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List links>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label8:
        $z0 = obj instanceof org.apache.fop.pdf.PDFFileSpec;
        if $z0 == 0 goto label9;

        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List filespecs>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label9:
        $z0 = obj instanceof org.apache.fop.pdf.PDFGoToRemote;
        if $z0 == 0 goto label10;

        $r2 = this.<org.apache.fop.pdf.PDFDocument: java.util.List gotoremotes>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(obj);

     label10:
        return;
    }

    public void addTrailerObject(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFObject obj;
        java.util.List $r0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        obj := @parameter0: org.apache.fop.pdf.PDFObject;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List trailerObjects>;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(obj);
        $z0 = obj instanceof org.apache.fop.pdf.PDFGoTo;
        if $z0 == 0 goto label0;

        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List gotos>;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(obj);

     label0:
        return;
    }

    public void applyEncryption(org.apache.fop.pdf.AbstractPDFStream)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.AbstractPDFStream stream;
        boolean $z0;
        org.apache.fop.pdf.PDFEncryption $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        stream := @parameter0: org.apache.fop.pdf.AbstractPDFStream;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: boolean isEncryptionActive()>();
        if $z0 == 0 goto label0;

        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        interfaceinvoke $r0.<org.apache.fop.pdf.PDFEncryption: void applyFilter(org.apache.fop.pdf.AbstractPDFStream)>(stream);

     label0:
        return;
    }

    public void setEncryption(org.apache.fop.pdf.PDFEncryptionParams)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFEncryptionParams params;
        org.apache.fop.pdf.PDFProfile $r1;
        int $i0, $i1;
        org.apache.fop.pdf.PDFEncryption $r2, $r3;
        org.apache.fop.pdf.PDFObject $r4, $r5;
        org.apache.commons.logging.Log $r6;

        this := @this: org.apache.fop.pdf.PDFDocument;
        params := @parameter0: org.apache.fop.pdf.PDFEncryptionParams;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile getProfile()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFProfile: void verifyEncryptionAllowed()>();
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i1 = $i0 + 1;
        this.<org.apache.fop.pdf.PDFDocument: int objectcount> = $i1;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: org.apache.fop.pdf.PDFEncryption newInstance(int,org.apache.fop.pdf.PDFEncryptionParams)>($i1, params);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption> = $r2;
        $r3 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        $r4 = (org.apache.fop.pdf.PDFObject) $r3;
        virtualinvoke $r4.<org.apache.fop.pdf.PDFObject: void setDocument(org.apache.fop.pdf.PDFDocument)>(this);
        $r3 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        if $r3 == null goto label0;

        $r2 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        $r5 = (org.apache.fop.pdf.PDFObject) $r2;
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>($r5);
        goto label1;

     label0:
        $r6 = this.<org.apache.fop.pdf.PDFDocument: org.apache.commons.logging.Log log>;
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("PDF encryption is unavailable. PDF will be generated without encryption.");

     label1:
        return;
    }

    public boolean isEncryptionActive()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFEncryption $r0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public org.apache.fop.pdf.PDFEncryption getEncryption()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFEncryption $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        return $r0;
    }

    private java.lang.Object findPDFObject(java.util.List, org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.util.List list;
        org.apache.fop.pdf.PDFObject compare;
        java.util.Iterator iter;
        java.lang.Object obj;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        list := @parameter0: java.util.List;
        compare := @parameter1: org.apache.fop.pdf.PDFObject;
        iter = interfaceinvoke list.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        obj = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        $z0 = virtualinvoke compare.<java.lang.Object: boolean equals(java.lang.Object)>(obj);
        if $z0 == 0 goto label1;

        return obj;

     label1:
        goto label0;

     label2:
        return null;
    }

    protected org.apache.fop.pdf.PDFFunction findFunction(org.apache.fop.pdf.PDFFunction)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFFunction compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFFunction;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List functions>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFFunction) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFShading findShading(org.apache.fop.pdf.PDFShading)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFShading compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFShading;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List shadings>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFShading) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFPattern findPattern(org.apache.fop.pdf.PDFPattern)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFPattern compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFPattern;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List patterns>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFPattern) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFFont findFont(java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String fontname;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.apache.fop.pdf.PDFFont $r2;

        this := @this: org.apache.fop.pdf.PDFDocument;
        fontname := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map fontMap>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(fontname);
        $r2 = (org.apache.fop.pdf.PDFFont) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFDestination findDestination(org.apache.fop.pdf.PDFDestination)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFDestination compare, $r2;
        int index;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFDestination;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: java.util.List getDestinationList()>();
        index = interfaceinvoke $r0.<java.util.List: int indexOf(java.lang.Object)>(compare);
        if index < 0 goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: java.util.List getDestinationList()>();
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(index);
        $r2 = (org.apache.fop.pdf.PDFDestination) $r1;
        return $r2;

     label0:
        return null;
    }

    protected org.apache.fop.pdf.PDFLink findLink(org.apache.fop.pdf.PDFLink)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFLink compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFLink;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List links>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFLink) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFFileSpec findFileSpec(org.apache.fop.pdf.PDFFileSpec)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFFileSpec compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFFileSpec;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List filespecs>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFFileSpec) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFGoToRemote findGoToRemote(org.apache.fop.pdf.PDFGoToRemote)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFGoToRemote compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFGoToRemote;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List gotoremotes>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFGoToRemote) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFGoTo findGoTo(org.apache.fop.pdf.PDFGoTo)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFGoTo compare, $r2;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        compare := @parameter0: org.apache.fop.pdf.PDFGoTo;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List gotos>;
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.Object findPDFObject(java.util.List,org.apache.fop.pdf.PDFObject)>($r0, compare);
        $r2 = (org.apache.fop.pdf.PDFGoTo) $r1;
        return $r2;
    }

    protected org.apache.fop.pdf.PDFGState findGState(org.apache.fop.pdf.PDFGState, org.apache.fop.pdf.PDFGState)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFGState wanted, current, avail, poss, $r2;
        java.util.Iterator iter;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        wanted := @parameter0: org.apache.fop.pdf.PDFGState;
        current := @parameter1: org.apache.fop.pdf.PDFGState;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List gstates>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        avail = (org.apache.fop.pdf.PDFGState) $r1;
        $r2 = new org.apache.fop.pdf.PDFGState;
        specialinvoke $r2.<org.apache.fop.pdf.PDFGState: void <init>()>();
        poss = $r2;
        virtualinvoke poss.<org.apache.fop.pdf.PDFGState: void addValues(org.apache.fop.pdf.PDFGState)>(current);
        virtualinvoke poss.<org.apache.fop.pdf.PDFGState: void addValues(org.apache.fop.pdf.PDFGState)>(avail);
        $z0 = virtualinvoke poss.<org.apache.fop.pdf.PDFGState: boolean equals(java.lang.Object)>(wanted);
        if $z0 == 0 goto label1;

        return avail;

     label1:
        goto label0;

     label2:
        return null;
    }

    public org.apache.fop.pdf.PDFDeviceColorSpace getPDFColorSpace()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFDeviceColorSpace $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace colorspace>;
        return $r0;
    }

    public int getColorSpace()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFDeviceColorSpace $r0;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace getPDFColorSpace()>();
        $i0 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDeviceColorSpace: int getColorSpace()>();
        return $i0;
    }

    public void setColorSpace(int)
    {
        org.apache.fop.pdf.PDFDocument this;
        int theColorspace;
        org.apache.fop.pdf.PDFDeviceColorSpace $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        theColorspace := @parameter0: int;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace colorspace>;
        virtualinvoke $r0.<org.apache.fop.pdf.PDFDeviceColorSpace: void setColorSpace(int)>(theColorspace);
        return;
    }

    public java.util.Map getFontMap()
    {
        org.apache.fop.pdf.PDFDocument this;
        java.util.Map $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map fontMap>;
        return $r0;
    }

    protected java.io.InputStream resolveURI(java.lang.String) throws java.io.FileNotFoundException
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String uri, $r5, $r6;
        java.net.URL $r0;
        java.lang.Exception e, $r2;
        java.io.InputStream $r1;
        java.io.FileNotFoundException $r3;
        java.lang.StringBuffer $r4;

        this := @this: org.apache.fop.pdf.PDFDocument;
        uri := @parameter0: java.lang.String;

     label0:
        $r0 = new java.net.URL;
        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(uri);
        $r1 = virtualinvoke $r0.<java.net.URL: java.io.InputStream openStream()>();

     label1:
        return $r1;

     label2:
        $r2 := @caughtexception;
        e = $r2;
        $r3 = new java.io.FileNotFoundException;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("URI could not be resolved (");
        $r5 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("): ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(uri);
        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r6);
        throw $r3;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public org.apache.fop.pdf.PDFImageXObject getImage(java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String key;
        org.apache.fop.pdf.PDFImageXObject xObject;
        java.util.Map $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        key := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);
        xObject = (org.apache.fop.pdf.PDFImageXObject) $r1;
        return xObject;
    }

    public org.apache.fop.pdf.PDFXObject getXObject(java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        java.lang.String key;
        org.apache.fop.pdf.PDFXObject xObject;
        java.util.Map $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        key := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);
        xObject = (org.apache.fop.pdf.PDFXObject) $r1;
        return xObject;
    }

    public org.apache.fop.pdf.PDFDests getDests()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFDests $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDests dests>;
        return $r0;
    }

    public void addDestination(org.apache.fop.pdf.PDFDestination)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFDestination destination;
        java.util.ArrayList $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        destination := @parameter0: org.apache.fop.pdf.PDFDestination;
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        if $r1 != null goto label0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations> = $r0;

     label0:
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(destination);
        return;
    }

    public java.util.List getDestinationList()
    {
        org.apache.fop.pdf.PDFDocument this;
        boolean $z0;
        java.util.List $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: boolean hasDestinations()>();
        if $z0 == 0 goto label0;

        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        return $r0;

     label0:
        $r0 = <java.util.Collections: java.util.List EMPTY_LIST>;
        return $r0;
    }

    public boolean hasDestinations()
    {
        org.apache.fop.pdf.PDFDocument this;
        java.util.List $r0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public org.apache.fop.pdf.PDFImageXObject addImage(org.apache.fop.pdf.PDFResourceContext, org.apache.fop.pdf.PDFImage)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFResourceContext res;
        org.apache.fop.pdf.PDFImage img;
        java.lang.String key;
        org.apache.fop.pdf.PDFImageXObject xObject, $r4;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.fop.pdf.PDFResources $r3;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        img := @parameter1: org.apache.fop.pdf.PDFImage;
        key = interfaceinvoke img.<org.apache.fop.pdf.PDFImage: java.lang.String getKey()>();
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);
        xObject = (org.apache.fop.pdf.PDFImageXObject) $r2;
        if xObject == null goto label1;

        if res == null goto label0;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addXObject(org.apache.fop.pdf.PDFXObject)>(xObject);

     label0:
        return xObject;

     label1:
        interfaceinvoke img.<org.apache.fop.pdf.PDFImage: void setup(org.apache.fop.pdf.PDFDocument)>(this);
        $r4 = new org.apache.fop.pdf.PDFImageXObject;
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int xObjectCount>;
        $i1 = $i0 + 1;
        this.<org.apache.fop.pdf.PDFDocument: int xObjectCount> = $i1;
        specialinvoke $r4.<org.apache.fop.pdf.PDFImageXObject: void <init>(int,org.apache.fop.pdf.PDFImage)>($i1, img);
        xObject = $r4;
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(xObject);
        $r3 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources resources>;
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addXObject(org.apache.fop.pdf.PDFXObject)>(xObject);
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addXObject(org.apache.fop.pdf.PDFXObject)>(xObject);

     label2:
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, xObject);
        return xObject;
    }

    public org.apache.fop.pdf.PDFFormXObject addFormXObject(org.apache.fop.pdf.PDFResourceContext, org.apache.fop.pdf.PDFStream, org.apache.fop.pdf.PDFReference, java.lang.String)
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFResourceContext res;
        org.apache.fop.pdf.PDFStream cont;
        org.apache.fop.pdf.PDFReference formres;
        java.lang.String key;
        org.apache.fop.pdf.PDFFormXObject xObject, $r4;
        java.util.Map $r1;
        java.lang.Object $r2;
        org.apache.fop.pdf.PDFResources $r3;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        cont := @parameter1: org.apache.fop.pdf.PDFStream;
        formres := @parameter2: org.apache.fop.pdf.PDFReference;
        key := @parameter3: java.lang.String;
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);
        xObject = (org.apache.fop.pdf.PDFFormXObject) $r2;
        if xObject == null goto label1;

        if res == null goto label0;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addXObject(org.apache.fop.pdf.PDFXObject)>(xObject);

     label0:
        return xObject;

     label1:
        $r4 = new org.apache.fop.pdf.PDFFormXObject;
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int xObjectCount>;
        $i1 = $i0 + 1;
        this.<org.apache.fop.pdf.PDFDocument: int xObjectCount> = $i1;
        specialinvoke $r4.<org.apache.fop.pdf.PDFFormXObject: void <init>(int,org.apache.fop.pdf.PDFStream,org.apache.fop.pdf.PDFReference)>($i1, cont, formres);
        xObject = $r4;
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(xObject);
        $r3 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources resources>;
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addXObject(org.apache.fop.pdf.PDFXObject)>(xObject);
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addXObject(org.apache.fop.pdf.PDFXObject)>(xObject);

     label2:
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.Map xObjectsMap>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, xObject);
        return xObject;
    }

    public org.apache.fop.pdf.PDFOutline getOutlineRoot()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFOutline $r0, $r1;
        org.apache.fop.pdf.PDFRoot $r2;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r1 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot>;
        if $r1 == null goto label0;

        $r1 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot>;
        return $r1;

     label0:
        $r0 = new org.apache.fop.pdf.PDFOutline;
        specialinvoke $r0.<org.apache.fop.pdf.PDFOutline: void <init>(java.lang.String,java.lang.String,boolean)>(null, null, 1);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot> = $r0;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot>;
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: void assignObjectNumber(org.apache.fop.pdf.PDFObject)>($r0);
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot>;
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>($r0);
        $r2 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root>;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot>;
        virtualinvoke $r2.<org.apache.fop.pdf.PDFRoot: void setRootOutline(org.apache.fop.pdf.PDFOutline)>($r0);
        $r1 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFOutline outlineRoot>;
        return $r1;
    }

    public org.apache.fop.pdf.PDFResources getResources()
    {
        org.apache.fop.pdf.PDFDocument this;
        org.apache.fop.pdf.PDFResources $r0;

        this := @this: org.apache.fop.pdf.PDFDocument;
        $r0 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources resources>;
        return $r0;
    }

    private void setLocation(int, int)
    {
        org.apache.fop.pdf.PDFDocument this;
        int objidx, position, $i0;
        java.lang.Integer $r0, $r2;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        objidx := @parameter0: int;
        position := @parameter1: int;

     label0:
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List location>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i0 > objidx goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List location>;
        $r2 = <org.apache.fop.pdf.PDFDocument: java.lang.Integer LOCATION_PLACEHOLDER>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);
        goto label0;

     label1:
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List location>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(position);
        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(objidx, $r0);
        return;
    }

    public void output(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFDocument this;
        java.io.OutputStream stream;
        org.apache.fop.pdf.PDFObject object;
        java.util.List $r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        stream := @parameter0: java.io.OutputStream;

     label0:
        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List objects>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 <= 0 goto label1;

        $r0 = this.<org.apache.fop.pdf.PDFDocument: java.util.List objects>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(0);
        object = (org.apache.fop.pdf.PDFObject) $r1;
        $i1 = virtualinvoke object.<org.apache.fop.pdf.PDFObject: int getObjectNumber()>();
        $i1 = $i1 - 1;
        $i2 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        specialinvoke this.<org.apache.fop.pdf.PDFDocument: void setLocation(int,int)>($i1, $i2);
        $i1 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        $i2 = virtualinvoke object.<org.apache.fop.pdf.PDFObject: int output(java.io.OutputStream)>(stream);
        $i1 = $i1 + $i2;
        this.<org.apache.fop.pdf.PDFDocument: int position> = $i1;
        goto label0;

     label1:
        return;
    }

    public void outputHeader(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFDocument this;
        java.io.OutputStream stream;
        byte[] pdf, bin, $r5;
        org.apache.fop.pdf.PDFProfile $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFDocument;
        stream := @parameter0: java.io.OutputStream;
        this.<org.apache.fop.pdf.PDFDocument: int position> = 0;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile getProfile()>();
        virtualinvoke $r0.<org.apache.fop.pdf.PDFProfile: void verifyPDFVersion()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%PDF-");
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.String getPDFVersionString()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        pdf = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>($r3);
        virtualinvoke stream.<java.io.OutputStream: void write(byte[])>(pdf);
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        $i1 = lengthof pdf;
        $i0 = $i0 + $i1;
        this.<org.apache.fop.pdf.PDFDocument: int position> = $i0;
        $r5 = newarray (byte)[6];
        $r5[0] = 37;
        $r5[1] = -86;
        $r5[2] = -85;
        $r5[3] = -84;
        $r5[4] = -83;
        $r5[5] = 10;
        bin = $r5;
        virtualinvoke stream.<java.io.OutputStream: void write(byte[])>(bin);
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        $i1 = lengthof bin;
        $i0 = $i0 + $i1;
        this.<org.apache.fop.pdf.PDFDocument: int position> = $i0;
        return;
    }

    protected java.lang.String getIDEntry()
    {
        org.apache.fop.pdf.PDFDocument this;
        java.security.MessageDigest digest;
        java.text.SimpleDateFormat df, $r0;
        byte[] res, $r3;
        java.lang.String s, $r2, $r6, $r11, $r12;
        java.security.NoSuchAlgorithmException e, $r7;
        java.util.Date $r1;
        int $i0;
        org.apache.fop.pdf.PDFInfo $r4;
        java.lang.StringBuffer $r5, $r10;
        org.apache.fop.pdf.PDFProfile $r8;
        boolean $z0;
        java.lang.UnsupportedOperationException $r9;

        this := @this: org.apache.fop.pdf.PDFDocument;

     label0:
        digest = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");
        $r0 = new java.text.SimpleDateFormat;
        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss\'.\'SSS");
        df = $r0;
        $r1 = new java.util.Date;
        specialinvoke $r1.<java.util.Date: void <init>()>();
        $r2 = virtualinvoke df.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r1);
        $r3 = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>($r2);
        virtualinvoke digest.<java.security.MessageDigest: void update(byte[])>($r3);
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        $r3 = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>($r2);
        virtualinvoke digest.<java.security.MessageDigest: void update(byte[])>($r3);
        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo getInfo()>();
        $r3 = virtualinvoke $r4.<org.apache.fop.pdf.PDFInfo: byte[] toPDF()>();
        virtualinvoke digest.<java.security.MessageDigest: void update(byte[])>($r3);
        res = virtualinvoke digest.<java.security.MessageDigest: byte[] digest()>();
        s = staticinvoke <org.apache.fop.pdf.PDFText: java.lang.String toHex(byte[])>(res);
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/ID [");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(s);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(s);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        return $r6;

     label2:
        $r7 := @caughtexception;
        e = $r7;
        $r8 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile getProfile()>();
        $z0 = virtualinvoke $r8.<org.apache.fop.pdf.PDFProfile: boolean isIDEntryRequired()>();
        if $z0 == 0 goto label3;

        $r9 = new java.lang.UnsupportedOperationException;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MD5 not available: ");
        $r11 = virtualinvoke e.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);
        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r12);
        throw $r9;

     label3:
        return "";

        catch java.security.NoSuchAlgorithmException from label0 to label1 with label2;
    }

    public void outputTrailer(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFDocument this;
        java.io.OutputStream stream;
        org.apache.fop.pdf.DestinationComparator $r0;
        int count, $i0, $i1, $i2;
        org.apache.fop.pdf.PDFObject o;
        java.lang.String encryptEntry, pdf, $r15;
        boolean $z0;
        java.util.List $r1, $r3, $r8;
        org.apache.fop.pdf.PDFFactory $r2;
        org.apache.fop.pdf.PDFDests $r4;
        org.apache.fop.pdf.PDFRoot $r5, $r14;
        org.apache.fop.pdf.PDFNames $r6, $r7;
        java.lang.Object $r9;
        java.lang.Integer $r10;
        org.apache.fop.pdf.PDFEncryption $r12;
        java.lang.StringBuffer $r13;
        org.apache.fop.pdf.PDFInfo $r16;
        byte[] $r17;

        this := @this: org.apache.fop.pdf.PDFDocument;
        stream := @parameter0: java.io.OutputStream;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: boolean hasDestinations()>();
        if $z0 == 0 goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        $r0 = new org.apache.fop.pdf.DestinationComparator;
        specialinvoke $r0.<org.apache.fop.pdf.DestinationComparator: void <init>()>();
        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r0);
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r3 = this.<org.apache.fop.pdf.PDFDocument: java.util.List destinations>;
        $r4 = virtualinvoke $r2.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDests makeDests(java.util.List)>($r3);
        this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDests dests> = $r4;
        $r5 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root>;
        $r6 = virtualinvoke $r5.<org.apache.fop.pdf.PDFRoot: org.apache.fop.pdf.PDFNames getNames()>();
        if $r6 != null goto label0;

        $r5 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root>;
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r7 = virtualinvoke $r2.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFNames makeNames()>();
        virtualinvoke $r5.<org.apache.fop.pdf.PDFRoot: void setNames(org.apache.fop.pdf.PDFNames)>($r7);

     label0:
        $r5 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root>;
        $r6 = virtualinvoke $r5.<org.apache.fop.pdf.PDFRoot: org.apache.fop.pdf.PDFNames getNames()>();
        $r4 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDests dests>;
        virtualinvoke $r6.<org.apache.fop.pdf.PDFNames: void setDests(org.apache.fop.pdf.PDFDests)>($r4);

     label1:
        virtualinvoke this.<org.apache.fop.pdf.PDFDocument: void output(java.io.OutputStream)>(stream);
        count = 0;

     label2:
        $r8 = this.<org.apache.fop.pdf.PDFDocument: java.util.List trailerObjects>;
        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();
        if count >= $i0 goto label3;

        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List trailerObjects>;
        $r9 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(count);
        o = (org.apache.fop.pdf.PDFObject) $r9;
        $r1 = this.<org.apache.fop.pdf.PDFDocument: java.util.List location>;
        $i0 = virtualinvoke o.<org.apache.fop.pdf.PDFObject: int getObjectNumber()>();
        $i0 = $i0 - 1;
        $r10 = new java.lang.Integer;
        $i1 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i1);
        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, $r10);
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        $i2 = virtualinvoke o.<org.apache.fop.pdf.PDFObject: int output(java.io.OutputStream)>(stream);
        $i0 = $i0 + $i2;
        this.<org.apache.fop.pdf.PDFDocument: int position> = $i0;
        count = count + 1;
        goto label2;

     label3:
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        $i2 = specialinvoke this.<org.apache.fop.pdf.PDFDocument: int outputXref(java.io.OutputStream)>(stream);
        $i0 = $i0 + $i2;
        this.<org.apache.fop.pdf.PDFDocument: int position> = $i0;
        encryptEntry = "";
        $r12 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        if $r12 == null goto label4;

        $r12 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption encryption>;
        encryptEntry = interfaceinvoke $r12.<org.apache.fop.pdf.PDFEncryption: java.lang.String getTrailerEntry()>();

     label4:
        $r13 = new java.lang.StringBuffer;
        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("trailer\n<<\n/Size ");
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i0 = $i0 + 1;
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/Root ");
        $r14 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFRoot root>;
        $r15 = virtualinvoke $r14.<org.apache.fop.pdf.PDFRoot: java.lang.String referencePDF()>();
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/Info ");
        $r16 = this.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFInfo info>;
        $r15 = virtualinvoke $r16.<org.apache.fop.pdf.PDFInfo: java.lang.String referencePDF()>();
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");
        $r15 = virtualinvoke this.<org.apache.fop.pdf.PDFDocument: java.lang.String getIDEntry()>();
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(encryptEntry);
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">>\nstartxref\n");
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int xref>;
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r13 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n%%EOF\n");
        pdf = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();
        $r17 = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>(pdf);
        virtualinvoke stream.<java.io.OutputStream: void write(byte[])>($r17);
        return;
    }

    private int outputXref(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFDocument this;
        java.io.OutputStream stream;
        java.lang.StringBuffer pdf, $r0, $r1;
        int count, $i0, $i1, $i2;
        java.lang.String x, padding, loc, $r2, $r6;
        byte[] pdfBytes;
        java.util.List $r3, $r4;
        java.lang.Object $r5;

        this := @this: org.apache.fop.pdf.PDFDocument;
        stream := @parameter0: java.io.OutputStream;
        $i0 = this.<org.apache.fop.pdf.PDFDocument: int position>;
        this.<org.apache.fop.pdf.PDFDocument: int xref> = $i0;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(128);
        pdf = $r0;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xref\n0 ");
        $i1 = this.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i1 = $i1 + 1;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n0000000000 65535 f \n");
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke pdf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        count = 0;

     label0:
        $r3 = this.<org.apache.fop.pdf.PDFDocument: java.util.List location>;
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();
        if count >= $i0 goto label1;

        $r4 = this.<org.apache.fop.pdf.PDFDocument: java.util.List location>;
        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(count);
        x = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        padding = "0000000000";
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $i1 = virtualinvoke x.<java.lang.String: int length()>();
        $r2 = virtualinvoke padding.<java.lang.String: java.lang.String substring(int)>($i1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(x);
        loc = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(loc);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" 00000 n \n");
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        pdf = virtualinvoke pdf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        count = count + 1;
        goto label0;

     label1:
        $r6 = virtualinvoke pdf.<java.lang.StringBuffer: java.lang.String toString()>();
        pdfBytes = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>($r6);
        virtualinvoke stream.<java.io.OutputStream: void write(byte[])>(pdfBytes);
        $i2 = lengthof pdfBytes;
        return $i2;
    }

    static void <clinit>()
    {
        java.lang.Integer $r0;

        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(0);
        <org.apache.fop.pdf.PDFDocument: java.lang.Integer LOCATION_PLACEHOLDER> = $r0;
        return;
    }
}

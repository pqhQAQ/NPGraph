final class org.apache.fop.render.ps.ResourceHandler$2 extends org.apache.xmlgraphics.ps.FormGenerator
{
    private final org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D val$imageG2D;
    private final java.awt.geom.Dimension2D val$dimensionsMpt;

    void <init>(java.lang.String, java.lang.String, java.awt.geom.Dimension2D, org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D, java.awt.geom.Dimension2D)
    {
        org.apache.fop.render.ps.ResourceHandler$2 this;
        java.lang.String x0, x1;
        java.awt.geom.Dimension2D x2, l5;
        org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D l4;

        this := @this: org.apache.fop.render.ps.ResourceHandler$2;
        x0 := @parameter0: java.lang.String;
        x1 := @parameter1: java.lang.String;
        x2 := @parameter2: java.awt.geom.Dimension2D;
        l4 := @parameter3: org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;
        l5 := @parameter4: java.awt.geom.Dimension2D;
        this.<org.apache.fop.render.ps.ResourceHandler$2: org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D val$imageG2D> = l4;
        this.<org.apache.fop.render.ps.ResourceHandler$2: java.awt.geom.Dimension2D val$dimensionsMpt> = l5;
        specialinvoke this.<org.apache.xmlgraphics.ps.FormGenerator: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D)>(x0, x1, x2);
        return;
    }

    protected void generatePaintProc(org.apache.xmlgraphics.ps.PSGenerator) throws java.io.IOException
    {
        org.apache.fop.render.ps.ResourceHandler$2 this;
        org.apache.xmlgraphics.ps.PSGenerator gen;
        org.apache.xmlgraphics.ps.PSResource $r0;
        org.apache.fop.render.ps.PSGraphics2DAdapter adapter, $r2;
        org.apache.xmlgraphics.ps.dsc.ResourceTracker $r1;
        org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D $r3;
        org.apache.xmlgraphics.java2d.Graphics2DImagePainter $r4;
        java.awt.geom.Dimension2D $r5, $r6;
        double $d0, $d1;
        long $l0, $l2;
        int $i1, $i3;

        this := @this: org.apache.fop.render.ps.ResourceHandler$2;
        gen := @parameter0: org.apache.xmlgraphics.ps.PSGenerator;
        $r1 = virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: org.apache.xmlgraphics.ps.dsc.ResourceTracker getResourceTracker()>();
        $r0 = <org.apache.xmlgraphics.ps.PSProcSets: org.apache.xmlgraphics.ps.PSResource EPS_PROCSET>;
        virtualinvoke $r1.<org.apache.xmlgraphics.ps.dsc.ResourceTracker: void notifyResourceUsageOnPage(org.apache.xmlgraphics.ps.PSResource)>($r0);
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("BeginEPSF");
        $r2 = new org.apache.fop.render.ps.PSGraphics2DAdapter;
        specialinvoke $r2.<org.apache.fop.render.ps.PSGraphics2DAdapter: void <init>(org.apache.xmlgraphics.ps.PSGenerator,boolean)>(gen, 0);
        adapter = $r2;
        $r3 = this.<org.apache.fop.render.ps.ResourceHandler$2: org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D val$imageG2D>;
        $r4 = virtualinvoke $r3.<org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D: org.apache.xmlgraphics.java2d.Graphics2DImagePainter getGraphics2DImagePainter()>();
        $r5 = this.<org.apache.fop.render.ps.ResourceHandler$2: java.awt.geom.Dimension2D val$dimensionsMpt>;
        $d0 = virtualinvoke $r5.<java.awt.geom.Dimension2D: double getWidth()>();
        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i1 = (int) $l0;
        $r6 = this.<org.apache.fop.render.ps.ResourceHandler$2: java.awt.geom.Dimension2D val$dimensionsMpt>;
        $d1 = virtualinvoke $r6.<java.awt.geom.Dimension2D: double getHeight()>();
        $l2 = staticinvoke <java.lang.Math: long round(double)>($d1);
        $i3 = (int) $l2;
        virtualinvoke adapter.<org.apache.fop.render.ps.PSGraphics2DAdapter: void paintImage(org.apache.xmlgraphics.java2d.Graphics2DImagePainter,org.apache.fop.render.RendererContext,int,int,int,int)>($r4, null, 0, 0, $i1, $i3);
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("EndEPSF");
        return;
    }
}

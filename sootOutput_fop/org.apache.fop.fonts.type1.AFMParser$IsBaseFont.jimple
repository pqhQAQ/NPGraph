class org.apache.fop.fonts.type1.AFMParser$IsBaseFont extends org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler
{

    private void <init>()
    {
        org.apache.fop.fonts.type1.AFMParser$IsBaseFont this;

        this := @this: org.apache.fop.fonts.type1.AFMParser$IsBaseFont;
        specialinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: void <init>(org.apache.fop.fonts.type1.AFMParser$1)>(null);
        return;
    }

    public void parse(java.lang.String, int, java.util.Stack) throws java.io.IOException
    {
        org.apache.fop.fonts.type1.AFMParser$IsBaseFont this;
        java.lang.String line;
        int startpos;
        java.util.Stack stack;
        java.lang.Boolean $r0;
        boolean $z0;
        java.io.IOException $r1;

        this := @this: org.apache.fop.fonts.type1.AFMParser$IsBaseFont;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        stack := @parameter2: java.util.Stack;
        $r0 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$IsBaseFont: java.lang.Boolean getBooleanValue(java.lang.String,int)>(line, startpos);
        $z0 = virtualinvoke $r0.<java.lang.Boolean: boolean booleanValue()>();
        if $z0 == 0 goto label0;

        $r1 = new java.io.IOException;
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Only base fonts are currently supported!");
        throw $r1;

     label0:
        return;
    }

    void <init>(org.apache.fop.fonts.type1.AFMParser$1)
    {
        org.apache.fop.fonts.type1.AFMParser$IsBaseFont this;
        org.apache.fop.fonts.type1.AFMParser$1 x0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$IsBaseFont;
        x0 := @parameter0: org.apache.fop.fonts.type1.AFMParser$1;
        specialinvoke this.<org.apache.fop.fonts.type1.AFMParser$IsBaseFont: void <init>()>();
        return;
    }
}

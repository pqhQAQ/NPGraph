public class org.apache.fop.area.NormalFlow extends org.apache.fop.area.BlockParent
{

    public void <init>(int)
    {
        org.apache.fop.area.NormalFlow this;
        int ipd;
        java.lang.Integer $r0;
        java.lang.Boolean $r1;

        this := @this: org.apache.fop.area.NormalFlow;
        ipd := @parameter0: int;
        specialinvoke this.<org.apache.fop.area.BlockParent: void <init>()>();
        $r0 = <org.apache.fop.area.Trait: java.lang.Integer IS_REFERENCE_AREA>;
        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        virtualinvoke this.<org.apache.fop.area.NormalFlow: void addTrait(java.lang.Object,java.lang.Object)>($r0, $r1);
        virtualinvoke this.<org.apache.fop.area.NormalFlow: void setIPD(int)>(ipd);
        return;
    }

    public void addBlock(org.apache.fop.area.Block)
    {
        org.apache.fop.area.NormalFlow this;
        org.apache.fop.area.Block block;
        boolean $z0;
        int $i0, $i1;

        this := @this: org.apache.fop.area.NormalFlow;
        block := @parameter0: org.apache.fop.area.Block;
        specialinvoke this.<org.apache.fop.area.BlockParent: void addBlock(org.apache.fop.area.Block)>(block);
        $z0 = virtualinvoke block.<org.apache.fop.area.Block: boolean isStacked()>();
        if $z0 == 0 goto label0;

        $i0 = this.<org.apache.fop.area.NormalFlow: int bpd>;
        $i1 = virtualinvoke block.<org.apache.fop.area.Block: int getAllocBPD()>();
        $i0 = $i0 + $i1;
        this.<org.apache.fop.area.NormalFlow: int bpd> = $i0;

     label0:
        return;
    }
}

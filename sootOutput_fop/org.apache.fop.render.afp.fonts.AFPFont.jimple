public abstract class org.apache.fop.render.afp.fonts.AFPFont extends org.apache.fop.fonts.Typeface
{
    protected java.lang.String name;

    public void <init>(java.lang.String)
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        java.lang.String name;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        name := @parameter0: java.lang.String;
        specialinvoke this.<org.apache.fop.fonts.Typeface: void <init>()>();
        this.<org.apache.fop.render.afp.fonts.AFPFont: java.lang.String name> = name;
        return;
    }

    public java.lang.String getFontName()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        java.lang.String $r0;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        $r0 = this.<org.apache.fop.render.afp.fonts.AFPFont: java.lang.String name>;
        return $r0;
    }

    public java.lang.String getEmbedFontName()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        java.lang.String $r0;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        $r0 = this.<org.apache.fop.render.afp.fonts.AFPFont: java.lang.String name>;
        return $r0;
    }

    public java.lang.String getFullName()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        java.lang.String $r0;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        $r0 = virtualinvoke this.<org.apache.fop.render.afp.fonts.AFPFont: java.lang.String getFontName()>();
        return $r0;
    }

    public java.util.Set getFamilyNames()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        java.util.HashSet $r0, s;
        java.lang.String $r1;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        $r0 = new java.util.HashSet;
        specialinvoke $r0.<java.util.HashSet: void <init>()>();
        s = $r0;
        $r1 = this.<org.apache.fop.render.afp.fonts.AFPFont: java.lang.String name>;
        interfaceinvoke s.<java.util.Set: boolean add(java.lang.Object)>($r1);
        return s;
    }

    public org.apache.fop.fonts.FontType getFontType()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        org.apache.fop.fonts.FontType $r0;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        $r0 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType OTHER>;
        return $r0;
    }

    public boolean hasKerningInfo()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        return 0;
    }

    public java.util.Map getKerningInfo()
    {
        org.apache.fop.render.afp.fonts.AFPFont this;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        return null;
    }

    public abstract org.apache.fop.render.afp.fonts.CharacterSet getCharacterSet(int);

    public boolean hasChar(char)
    {
        org.apache.fop.render.afp.fonts.AFPFont this;
        char c;

        this := @this: org.apache.fop.render.afp.fonts.AFPFont;
        c := @parameter0: char;
        return 1;
    }
}

public final class org.apache.fop.render.txt.Helper extends java.lang.Object
{

    private void <init>()
    {
        org.apache.fop.render.txt.Helper this;

        this := @this: org.apache.fop.render.txt.Helper;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static int round(int, int)
    {
        int x, quantum, ceil, floor, $i0, $i1;

        x := @parameter0: int;
        quantum := @parameter1: int;
        ceil = staticinvoke <org.apache.fop.render.txt.Helper: int ceil(int,int)>(x, quantum);
        floor = staticinvoke <org.apache.fop.render.txt.Helper: int floor(int,int)>(x, quantum);
        $i0 = ceil - x;
        $i1 = x - floor;
        if $i0 >= $i1 goto label0;

        $i0 = ceil;
        goto label1;

     label0:
        $i0 = floor;

     label1:
        return $i0;
    }

    public static int ceil(int, int)
    {
        int x, quantum, $i0;
        byte dx, $b1;

        x := @parameter0: int;
        quantum := @parameter1: int;
        if x < 0 goto label0;

        $i0 = x % quantum;
        if $i0 != 0 goto label1;

     label0:
        $b1 = 0;
        goto label2;

     label1:
        $b1 = 1;

     label2:
        dx = $b1;
        $i0 = x / quantum;
        $i0 = $i0 + dx;
        $i0 = $i0 * quantum;
        return $i0;
    }

    public static int floor(int, int)
    {
        int x, quantum, $i0;
        byte dx, $b1;

        x := @parameter0: int;
        quantum := @parameter1: int;
        if x > 0 goto label0;

        $i0 = x % quantum;
        if $i0 != 0 goto label1;

     label0:
        $b1 = 0;
        goto label2;

     label1:
        $b1 = -1;

     label2:
        dx = $b1;
        $i0 = x / quantum;
        $i0 = $i0 + dx;
        $i0 = $i0 * quantum;
        return $i0;
    }

    public static int roundPosition(int, int)
    {
        int x, y, $i0;

        x := @parameter0: int;
        y := @parameter1: int;
        $i0 = staticinvoke <org.apache.fop.render.txt.Helper: int round(int,int)>(x, y);
        $i0 = $i0 / y;
        return $i0;
    }

    public static int ceilPosition(int, int)
    {
        int x, y, $i0;

        x := @parameter0: int;
        y := @parameter1: int;
        $i0 = staticinvoke <org.apache.fop.render.txt.Helper: int ceil(int,int)>(x, y);
        $i0 = $i0 / y;
        return $i0;
    }

    public static int floorPosition(int, int)
    {
        int x, y, $i0;

        x := @parameter0: int;
        y := @parameter1: int;
        $i0 = staticinvoke <org.apache.fop.render.txt.Helper: int floor(int,int)>(x, y);
        $i0 = $i0 / y;
        return $i0;
    }
}

public class org.apache.fop.render.java2d.Java2DFontMetrics extends java.lang.Object
{
    public static final int FONT_SIZE;
    public static final int FONT_FACTOR;
    private int[] width;
    private int xHeight;
    private int ascender;
    private int descender;
    private java.awt.Font f1;
    private java.lang.String family;
    private int style;
    private float size;
    private java.awt.FontMetrics fmt;
    private java.awt.font.LineMetrics lineMetrics;
    private java.awt.Graphics2D graphics;

    public void <init>(java.awt.Graphics2D)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.awt.Graphics2D graphics;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        graphics := @parameter0: java.awt.Graphics2D;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int[] width> = null;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int xHeight> = 0;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int ascender> = 0;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int descender> = 0;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1> = null;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.lang.String family> = "";
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int style> = 0;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: float size> = 0.0F;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.FontMetrics fmt> = null;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics> = graphics;
        return;
    }

    public int getMaxAscent(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size, $i0;
        java.awt.font.LineMetrics $r0;
        float $f0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.font.LineMetrics lineMetrics>;
        $f0 = virtualinvoke $r0.<java.awt.font.LineMetrics: float getAscent()>();
        $f0 = $f0 * 1000000.0F;
        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);
        return $i0;
    }

    public int getAscender(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size, $i0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $i0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int ascender>;
        $i0 = $i0 * 1000;
        return $i0;
    }

    public int getCapHeight(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size, $i0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        $i0 = virtualinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: int getAscender(java.lang.String,int,int)>(family, style, size);
        return $i0;
    }

    public int getDescender(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size, $i0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $i0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int descender>;
        $i0 = $i0 * 1000;
        return $i0;
    }

    public int getXHeight(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size, $i0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $i0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int xHeight>;
        $i0 = $i0 * 1000;
        return $i0;
    }

    public int width(int, java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        int i, style, size, w, $i0;
        java.lang.String family;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        i := @parameter0: int;
        family := @parameter1: java.lang.String;
        style := @parameter2: int;
        size := @parameter3: int;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $i0 = specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: int internalCharWidth(int)>(i);
        w = $i0 * 1000;
        return w;
    }

    private int internalCharWidth(int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        int i, $i2;
        char[] ch, $r0;
        java.awt.geom.Rectangle2D rect;
        char $c0;
        java.awt.FontMetrics $r1;
        java.awt.Graphics2D $r2;
        double $d0;
        long $l1;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        i := @parameter0: int;
        $r0 = newarray (char)[1];
        $c0 = (char) i;
        $r0[0] = $c0;
        ch = $r0;
        $r1 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.FontMetrics fmt>;
        $r2 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        rect = virtualinvoke $r1.<java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(char[],int,int,java.awt.Graphics)>(ch, 0, 1, $r2);
        $d0 = virtualinvoke rect.<java.awt.geom.Rectangle2D: double getWidth()>();
        $d0 = $d0 * 1000.0;
        $l1 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i2 = (int) $l1;
        return $i2;
    }

    public int[] getWidths(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size, i, $i0, $i1;
        int[] $r0, $r1;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int[] width>;
        if $r0 != null goto label0;

        $r1 = newarray (int)[256];
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int[] width> = $r1;

     label0:
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        i = 0;

     label1:
        if i >= 256 goto label2;

        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int[] width>;
        $i0 = specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: int internalCharWidth(int)>(i);
        $i1 = 1000 * $i0;
        $r0[i] = $i1;
        i = i + 1;
        goto label1;

     label2:
        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int[] width>;
        return $r0;
    }

    private java.awt.Font getBaseFont(java.lang.String, int, float)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, $i0;
        float size;
        java.util.HashMap $r0, atts;
        java.awt.font.TextAttribute $r1;
        java.lang.Float $r3;
        java.awt.Font $r4;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: float;
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        atts = $r0;
        $r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute FAMILY>;
        interfaceinvoke atts.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, family);
        $i0 = style & 1;
        if $i0 == 0 goto label0;

        $r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute WEIGHT>;
        $r3 = <java.awt.font.TextAttribute: java.lang.Float WEIGHT_BOLD>;
        interfaceinvoke atts.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label0:
        $i0 = style & 2;
        if $i0 == 0 goto label1;

        $r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute POSTURE>;
        $r3 = <java.awt.font.TextAttribute: java.lang.Float POSTURE_OBLIQUE>;
        interfaceinvoke atts.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);

     label1:
        $r1 = <java.awt.font.TextAttribute: java.awt.font.TextAttribute SIZE>;
        $r3 = new java.lang.Float;
        specialinvoke $r3.<java.lang.Float: void <init>(float)>(size);
        interfaceinvoke atts.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r3);
        $r4 = new java.awt.Font;
        specialinvoke $r4.<java.awt.Font: void <init>(java.util.Map)>(atts);
        return $r4;
    }

    private boolean setFont(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family, $r5, $r6;
        int style, size, $i0, $i3;
        boolean changed, $z0;
        float s, $f0;
        java.awt.font.TextLayout layout, $r7;
        java.awt.geom.Rectangle2D rect;
        java.awt.Font $r0, $r1, $r3, $r8;
        java.awt.Graphics2D $r2, $r9, $r11;
        java.awt.FontMetrics $r4;
        byte $b1;
        java.awt.font.FontRenderContext $r10, $r12;
        double $d0, $d1;
        long $l2;
        java.awt.font.LineMetrics $r13;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        changed = 0;
        $f0 = (float) size;
        s = $f0 / 1000.0F;
        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        if $r0 != null goto label0;

        $r1 = specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font getBaseFont(java.lang.String,int,float)>(family, style, s);
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1> = $r1;
        $r2 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        $r3 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r4 = virtualinvoke $r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r3);
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.FontMetrics fmt> = $r4;
        changed = 1;
        goto label4;

     label0:
        $i0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: int style>;
        if $i0 != style goto label1;

        $r5 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.lang.String family>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(family);
        if $z0 == 0 goto label1;

        $f0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: float size>;
        $b1 = $f0 cmpl s;
        if $b1 == 0 goto label4;

     label1:
        $r6 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.lang.String family>;
        $z0 = virtualinvoke family.<java.lang.String: boolean equals(java.lang.Object)>($r6);
        if $z0 == 0 goto label2;

        $r1 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r1 = virtualinvoke $r1.<java.awt.Font: java.awt.Font deriveFont(int,float)>(style, s);
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1> = $r1;
        goto label3;

     label2:
        $r1 = specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font getBaseFont(java.lang.String,int,float)>(family, style, s);
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1> = $r1;

     label3:
        $r2 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        $r3 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r4 = virtualinvoke $r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r3);
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.FontMetrics fmt> = $r4;
        changed = 1;

     label4:
        if changed == 0 goto label5;

        $r7 = new java.awt.font.TextLayout;
        $r8 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r9 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        $r10 = virtualinvoke $r9.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();
        specialinvoke $r7.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>("x", $r8, $r10);
        layout = $r7;
        rect = virtualinvoke layout.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();
        $d0 = virtualinvoke rect.<java.awt.geom.Rectangle2D: double getY()>();
        $d0 = neg $d0;
        $d0 = $d0 * 1000.0;
        $l2 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i3 = (int) $l2;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int xHeight> = $i3;
        $r7 = new java.awt.font.TextLayout;
        $r8 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r9 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        $r10 = virtualinvoke $r9.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();
        specialinvoke $r7.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>("d", $r8, $r10);
        layout = $r7;
        rect = virtualinvoke layout.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();
        $d0 = virtualinvoke rect.<java.awt.geom.Rectangle2D: double getY()>();
        $d0 = neg $d0;
        $d0 = $d0 * 1000.0;
        $l2 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i3 = (int) $l2;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int ascender> = $i3;
        $r7 = new java.awt.font.TextLayout;
        $r8 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r9 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        $r10 = virtualinvoke $r9.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();
        specialinvoke $r7.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>("p", $r8, $r10);
        layout = $r7;
        rect = virtualinvoke layout.<java.awt.font.TextLayout: java.awt.geom.Rectangle2D getBounds()>();
        $d0 = virtualinvoke rect.<java.awt.geom.Rectangle2D: double getY()>();
        $d1 = virtualinvoke rect.<java.awt.geom.Rectangle2D: double getHeight()>();
        $d0 = $d0 + $d1;
        $d0 = $d0 * -1000.0;
        $l2 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i3 = (int) $l2;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int descender> = $i3;
        $r1 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $r11 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Graphics2D graphics>;
        $r12 = virtualinvoke $r11.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();
        $r13 = virtualinvoke $r1.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("", $r12);
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.font.LineMetrics lineMetrics> = $r13;

     label5:
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.lang.String family> = family;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: int style> = style;
        this.<org.apache.fop.render.java2d.Java2DFontMetrics: float size> = s;
        return changed;
    }

    public java.awt.Font getFont(java.lang.String, int, int)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size;
        java.awt.Font $r0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        return $r0;
    }

    public boolean hasChar(java.lang.String, int, int, char)
    {
        org.apache.fop.render.java2d.Java2DFontMetrics this;
        java.lang.String family;
        int style, size;
        char c;
        boolean $z0;
        java.awt.Font $r0;

        this := @this: org.apache.fop.render.java2d.Java2DFontMetrics;
        family := @parameter0: java.lang.String;
        style := @parameter1: int;
        size := @parameter2: int;
        c := @parameter3: char;
        specialinvoke this.<org.apache.fop.render.java2d.Java2DFontMetrics: boolean setFont(java.lang.String,int,int)>(family, style, size);
        $r0 = this.<org.apache.fop.render.java2d.Java2DFontMetrics: java.awt.Font f1>;
        $z0 = virtualinvoke $r0.<java.awt.Font: boolean canDisplay(char)>(c);
        return $z0;
    }
}

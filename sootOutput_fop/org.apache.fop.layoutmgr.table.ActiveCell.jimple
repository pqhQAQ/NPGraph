class org.apache.fop.layoutmgr.table.ActiveCell extends java.lang.Object
{
    private static org.apache.commons.logging.Log log;
    private org.apache.fop.fo.flow.table.PrimaryGridUnit pgu;
    private java.util.List elementList;
    private java.util.ListIterator knuthIter;
    private int endRowIndex;
    private int remainingLength;
    private int totalLength;
    private int includedLength;
    private int paddingBeforeNormal;
    private int paddingBeforeLeading;
    private int paddingAfterNormal;
    private int paddingAfterTrailing;
    private int bpBeforeNormal;
    private int bpBeforeLeading;
    private int bpAfterNormal;
    private int bpAfterTrailing;
    private boolean lastCellPart;
    private boolean keepWithNextSignal;
    private int spanIndex;
    private org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep;
    private org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep;
    private org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep;
    static java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell;
    static final boolean $assertionsDisabled;

    static int getElementContentLength(org.apache.fop.layoutmgr.KnuthElement)
    {
        org.apache.fop.layoutmgr.KnuthElement el;
        boolean $z0;
        org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty $r0;
        int $i0;

        el := @parameter0: org.apache.fop.layoutmgr.KnuthElement;
        $z0 = el instanceof org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty;
        if $z0 == 0 goto label0;

        $r0 = (org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty) el;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty: int access$000(org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty)>($r0);
        return $i0;

     label0:
        $z0 = el instanceof org.apache.fop.layoutmgr.table.ActiveCell$FillerBox;
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        return $i0;
    }

    void <init>(org.apache.fop.fo.flow.table.PrimaryGridUnit, org.apache.fop.fo.flow.table.EffRow, int, int, org.apache.fop.layoutmgr.table.TableLayoutManager)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        org.apache.fop.fo.flow.table.PrimaryGridUnit pgu;
        org.apache.fop.fo.flow.table.EffRow row;
        int rowIndex, previousRowsLength, $i0, $i1, $i2;
        org.apache.fop.layoutmgr.table.TableLayoutManager tableLM;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground bordersPaddings;
        org.apache.fop.layoutmgr.table.TableCellLayoutManager cellLM;
        org.apache.fop.fo.flow.table.TableCell $r0, $r2, $r9;
        java.util.LinkedList $r1;
        org.apache.fop.fo.properties.LengthRangeProperty $r3;
        org.apache.fop.traits.MinOptMax $r4, $r5;
        java.util.List $r6, $r8;
        java.util.ListIterator $r7;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r10, $r11, $r12;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        pgu := @parameter0: org.apache.fop.fo.flow.table.PrimaryGridUnit;
        row := @parameter1: org.apache.fop.fo.flow.table.EffRow;
        rowIndex := @parameter2: int;
        previousRowsLength := @parameter3: int;
        tableLM := @parameter4: org.apache.fop.layoutmgr.table.TableLayoutManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int spanIndex> = 0;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu> = pgu;
        $r0 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: org.apache.fop.fo.flow.table.TableCell getCell()>();
        bordersPaddings = virtualinvoke $r0.<org.apache.fop.fo.flow.table.TableCell: org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()>();
        cellLM = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: org.apache.fop.layoutmgr.table.TableCellLayoutManager getCellLM()>();
        $i0 = virtualinvoke bordersPaddings.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getPaddingBefore(boolean,org.apache.fop.datatypes.PercentBaseContext)>(0, cellLM);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingBeforeNormal> = $i0;
        $i0 = virtualinvoke bordersPaddings.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getPaddingBefore(boolean,org.apache.fop.datatypes.PercentBaseContext)>(1, cellLM);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingBeforeLeading> = $i0;
        $i0 = virtualinvoke bordersPaddings.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getPaddingAfter(boolean,org.apache.fop.datatypes.PercentBaseContext)>(0, cellLM);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterNormal> = $i0;
        $i0 = virtualinvoke bordersPaddings.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getPaddingAfter(boolean,org.apache.fop.datatypes.PercentBaseContext)>(1, cellLM);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterTrailing> = $i0;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingBeforeNormal>;
        $i1 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getBeforeBorderWidth(int,int)>(0, 0);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeNormal> = $i0;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingBeforeLeading>;
        $i1 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getBeforeBorderWidth(int,int)>(0, 2);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeLeading> = $i0;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterNormal>;
        $i1 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getAfterBorderWidth(int)>(0);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterNormal> = $i0;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterTrailing>;
        $i1 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getAfterBorderWidth(int,int)>(0, 2);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing> = $i0;
        $r1 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: java.util.LinkedList getElements()>();
        this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList> = $r1;
        $r2 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: org.apache.fop.fo.flow.table.TableCell getCell()>();
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.TableCell: org.apache.fop.fo.properties.LengthRangeProperty getBlockProgressionDimension()>();
        $r4 = staticinvoke <org.apache.fop.layoutmgr.MinOptMaxUtil: org.apache.fop.traits.MinOptMax toMinOptMax(org.apache.fop.fo.properties.LengthRangeProperty,org.apache.fop.datatypes.PercentBaseContext)>($r3, tableLM);
        $r5 = virtualinvoke row.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax getExplicitHeight()>();
        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void handleExplicitHeight(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)>($r4, $r5);
        $r6 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $r7 = interfaceinvoke $r6.<java.util.List: java.util.ListIterator listIterator()>();
        this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.ListIterator knuthIter> = $r7;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int includedLength> = -1;
        $r8 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.ElementListUtils: int calcContentLength(java.util.List)>($r8);
        $i0 = previousRowsLength + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int totalLength> = $i0;
        $r9 = virtualinvoke pgu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: org.apache.fop.fo.flow.table.TableCell getCell()>();
        $i1 = virtualinvoke $r9.<org.apache.fop.fo.flow.table.TableCell: int getNumberRowsSpanned()>();
        $i0 = rowIndex + $i1;
        $i0 = $i0 - 1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int endRowIndex> = $i0;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean keepWithNextSignal> = 0;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int totalLength>;
        $i0 = $i0 - previousRowsLength;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int remainingLength> = $i0;
        $r10 = new org.apache.fop.layoutmgr.table.ActiveCell$Step;
        specialinvoke $r10.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void <init>(int)>(previousRowsLength);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep> = $r10;
        $r10 = new org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $r11 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        specialinvoke $r10.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void <init>(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r11);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep> = $r10;
        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void gotoNextLegalBreak()>();
        $r10 = new org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $r11 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        specialinvoke $r10.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void <init>(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r11);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep> = $r10;
        $r12 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i2 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r12);
        $r6 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();
        $i0 = $i0 - 1;
        if $i2 >= $i0 goto label0;

        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void gotoNextLegalBreak()>();

     label0:
        return;
    }

    private void handleExplicitHeight(org.apache.fop.traits.MinOptMax, org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        org.apache.fop.traits.MinOptMax cellBPD, rowBPD;
        int minBPD, cumulateLength, optBPD, $i0, $i1, $i2, $i3, $i4;
        java.util.ListIterator iter;
        boolean prevIsBox, $z0;
        org.apache.fop.layoutmgr.KnuthElement el;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty $r2, $r3;
        org.apache.fop.layoutmgr.KnuthPenalty $r4;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r5, $r7;
        org.apache.fop.layoutmgr.table.ActiveCell$FillerBox $r6;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        cellBPD := @parameter0: org.apache.fop.traits.MinOptMax;
        rowBPD := @parameter1: org.apache.fop.traits.MinOptMax;
        $i0 = cellBPD.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = rowBPD.<org.apache.fop.traits.MinOptMax: int min>;
        minBPD = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);
        if minBPD <= 0 goto label5;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.ListIterator listIterator()>();
        cumulateLength = 0;
        prevIsBox = 0;

     label0:
        $z0 = interfaceinvoke iter.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        if cumulateLength >= minBPD goto label5;

        $r1 = interfaceinvoke iter.<java.util.ListIterator: java.lang.Object next()>();
        el = (org.apache.fop.layoutmgr.KnuthElement) $r1;
        $z0 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: boolean isBox()>();
        if $z0 == 0 goto label1;

        prevIsBox = 1;
        $i1 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        cumulateLength = cumulateLength + $i1;
        goto label4;

     label1:
        $z0 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: boolean isGlue()>();
        if $z0 == 0 goto label3;

        if prevIsBox == 0 goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke iter.<java.util.ListIterator: int nextIndex()>();
        $i1 = $i1 - 1;
        $r2 = new org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty;
        $i2 = minBPD - cumulateLength;
        specialinvoke $r2.<org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty: void <init>(int)>($i2);
        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>($i1, $r2);

     label2:
        prevIsBox = 0;
        $i1 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        cumulateLength = cumulateLength + $i1;
        goto label4;

     label3:
        prevIsBox = 0;
        $i1 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        $i0 = cumulateLength + $i1;
        if $i0 >= minBPD goto label4;

        $r3 = new org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty;
        $r4 = (org.apache.fop.layoutmgr.KnuthPenalty) el;
        $i2 = minBPD - cumulateLength;
        specialinvoke $r3.<org.apache.fop.layoutmgr.table.ActiveCell$FillerPenalty: void <init>(org.apache.fop.layoutmgr.KnuthPenalty,int)>($r4, $i2);
        interfaceinvoke iter.<java.util.ListIterator: void set(java.lang.Object)>($r3);

     label4:
        goto label0;

     label5:
        $i1 = cellBPD.<org.apache.fop.traits.MinOptMax: int opt>;
        $i3 = rowBPD.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i3);
        optBPD = staticinvoke <java.lang.Math: int max(int,int)>(minBPD, $i1);
        $r5 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getContentLength()>();
        if $i0 >= optBPD goto label6;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $r6 = new org.apache.fop.layoutmgr.table.ActiveCell$FillerBox;
        $r7 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i2 = virtualinvoke $r7.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getContentLength()>();
        $i4 = optBPD - $i2;
        specialinvoke $r6.<org.apache.fop.layoutmgr.table.ActiveCell$FillerBox: void <init>(int)>($i4);
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label6:
        return;
    }

    org.apache.fop.fo.flow.table.PrimaryGridUnit getPrimaryGridUnit()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        return $r0;
    }

    boolean endsOnRow(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int rowIndex, $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        rowIndex := @parameter0: int;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int endRowIndex>;
        if rowIndex != $i0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    int getRemainingLength()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        boolean $z0;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0;
        int $i0, $i1;
        java.util.List $r1;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $z0 = specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean includedInLastStep()>();
        if $z0 == 0 goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 != $i1 goto label0;

        return 0;

     label0:
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeLeading>;
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int remainingLength>;
        $i0 = $i0 + $i1;
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterNormal>;
        $i0 = $i0 + $i1;
        return $i0;
    }

    private void gotoNextLegalBreak()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        boolean breakFound, prevIsBox, boxFound, $z0;
        org.apache.fop.layoutmgr.KnuthElement el;
        org.apache.fop.layoutmgr.KnuthPenalty p;
        org.apache.fop.layoutmgr.table.ActiveCell$Step l5, $r0, $r4;
        int $i0, $i1, $i2;
        java.util.ListIterator $r1, $r3;
        java.lang.Object $r2;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$202(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, 0);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$302(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, 0);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$402(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, 9);
        breakFound = 0;
        prevIsBox = 0;
        boxFound = 0;

     label0:
        if breakFound != 0 goto label7;

        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.ListIterator knuthIter>;
        $z0 = interfaceinvoke $r1.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.ListIterator knuthIter>;
        $r2 = interfaceinvoke $r1.<java.util.ListIterator: java.lang.Object next()>();
        el = (org.apache.fop.layoutmgr.KnuthElement) $r2;
        $z0 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: boolean isPenalty()>();
        if $z0 == 0 goto label2;

        prevIsBox = 0;
        $i0 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getP()>();
        if $i0 >= 1000 goto label6;

        breakFound = 1;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i1 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$202(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);
        p = (org.apache.fop.layoutmgr.KnuthPenalty) el;
        $z0 = virtualinvoke p.<org.apache.fop.layoutmgr.KnuthPenalty: boolean isForcedBreak()>();
        if $z0 == 0 goto label1;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i1 = virtualinvoke p.<org.apache.fop.layoutmgr.KnuthPenalty: int getBreakClass()>();
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$402(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);

     label1:
        goto label6;

     label2:
        $z0 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: boolean isGlue()>();
        if $z0 == 0 goto label5;

        if prevIsBox == 0 goto label3;

        breakFound = 1;
        goto label4;

     label3:
        l5 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l5);
        $i2 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        $i1 = $i1 + $i2;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$502(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l5, $i1);
        if boxFound != 0 goto label4;

        l5 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$300(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l5);
        $i2 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        $i1 = $i1 + $i2;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$302(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l5, $i1);

     label4:
        prevIsBox = 0;
        goto label6;

     label5:
        prevIsBox = 1;
        boxFound = 1;
        l5 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l5);
        $i2 = virtualinvoke el.<org.apache.fop.layoutmgr.KnuthElement: int getW()>();
        $i1 = $i1 + $i2;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$502(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l5, $i1);

     label6:
        goto label0;

     label7:
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $r3 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.ListIterator knuthIter>;
        $i1 = interfaceinvoke $r3.<java.util.ListIterator: int nextIndex()>();
        $i1 = $i1 - 1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$102(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeNormal>;
        $r4 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i2 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r4);
        $i1 = $i1 + $i2;
        $r4 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i2 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r4);
        $i1 = $i1 + $i2;
        $i2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i1 = $i1 + $i2;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);
        return;
    }

    int getFirstStep()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r2, $r4;
        int $i0, $i1;
        java.lang.String $r3;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(this);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": min first step = ");
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $r4 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r4);
        return $i1;
    }

    int getLastStep()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        boolean $z0;
        int lastStep, $i0, $i1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0;
        java.util.List $r1;
        java.lang.AssertionError $r2;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $z0 = <org.apache.fop.layoutmgr.table.ActiveCell: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 == $i1 goto label0;

        $r2 = new java.lang.AssertionError;
        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
        throw $r2;

     label0:
        $z0 = <org.apache.fop.layoutmgr.table.ActiveCell: boolean $assertionsDisabled>;
        if $z0 != 0 goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int totalLength>;
        if $i0 != $i1 goto label1;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 == 0 goto label2;

     label1:
        $r2 = new java.lang.AssertionError;
        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();
        throw $r2;

     label2:
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeNormal>;
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int totalLength>;
        $i0 = $i0 + $i1;
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterNormal>;
        $i0 = $i0 + $i1;
        $r3 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i1 = virtualinvoke $r3.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getAfterBorderWidth(int)>(1);
        lastStep = $i0 + $i1;
        $r4 = <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(this);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": last step = ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(lastStep);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);
        return lastStep;
    }

    private void increaseCurrentStep(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int limit, $i0, $i1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0, $r2;
        java.util.List $r1;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        limit := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 >= $i1 goto label2;

     label0:
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 > limit goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$400(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 != 9 goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        virtualinvoke $r0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void set(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r2);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 < $i1 goto label1;

        goto label2;

     label1:
        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void gotoNextLegalBreak()>();
        goto label0;

     label2:
        return;
    }

    void signalRowFirstStep(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int firstStep, $i0;
        org.apache.commons.logging.Log $r0;
        boolean $z0;
        java.lang.StringBuffer $r1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        firstStep := @parameter0: int;
        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void increaseCurrentStep(int)>(firstStep);
        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(this);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": first step increased to ");
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label0:
        return;
    }

    void signalRowLastStep(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int lastStep, $i0;
        org.apache.commons.logging.Log $r0;
        boolean $z0;
        java.lang.StringBuffer $r1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        lastStep := @parameter0: int;
        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void increaseCurrentStep(int)>(lastStep);
        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(this);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": next step increased to ");
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label0:
        return;
    }

    int getNextStep()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        boolean $z0;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0, $r1;
        int $i0, $i1;
        java.util.List $r2;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $z0 = specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean includedInLastStep()>();
        if $z0 == 0 goto label1;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep>;
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        virtualinvoke $r0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void set(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r1);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 < $i1 goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$702(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);
        return -1;

     label0:
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        virtualinvoke $r0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void set(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r1);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r1);
        $i1 = $i1 + 1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$702(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r1);
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$702(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>($r0, $i1);
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 >= $i1 goto label1;

        specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: void gotoNextLegalBreak()>();

     label1:
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        return $i0;
    }

    private boolean includedInLastStep()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int $i0, $i1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int includedLength>;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 != $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    int signalNextStep(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int minStep, $i0, $i1, $i2;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0, $r1, $r2;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        minStep := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 > minStep goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r1);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int includedLength> = $i1;
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int totalLength>;
        $i2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int includedLength>;
        $i1 = $i1 - $i2;
        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i2 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$300(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r2);
        $i1 = $i1 - $i2;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int remainingLength> = $i1;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$400(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        return $i0;

     label0:
        return 9;
    }

    void nextRowStarts()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        org.apache.fop.layoutmgr.table.ActiveCell$Step l1;
        int $i0, $i1, $i3;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r1;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int spanIndex>;
        $i0 = $i0 + 1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int spanIndex> = $i0;
        l1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l1);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i0 = $i0 - $i1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l1, $i0);
        l1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l1);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i0 = $i0 - $i1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l1, $i0);
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterTrailing>;
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i3 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int spanIndex>;
        $i1 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getAfterBorderWidth(int,int)>($i3, 2);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing> = $i0;
        l1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l1);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i0 = $i0 + $i1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l1, $i0);
        l1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step afterNextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l1);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i0 = $i0 + $i1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l1, $i0);
        return;
    }

    void endRow(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int rowIndex, $i0, $i1, $i3;
        org.apache.fop.layoutmgr.table.ActiveCell$Step l2;
        boolean $z0;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        rowIndex := @parameter0: int;
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean endsOnRow(int)>(rowIndex);
        if $z0 == 0 goto label0;

        l2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l2);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i0 = $i0 - $i1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l2, $i0);
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingAfterNormal>;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getAfterBorderWidth(int)>(1);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing> = $i0;
        l2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(l2);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        $i0 = $i0 + $i1;
        staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step,int)>(l2, $i0);
        this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean lastCellPart> = 1;
        goto label1;

     label0:
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingBeforeLeading>;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i3 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int spanIndex>;
        $i3 = $i3 + 1;
        $i1 = virtualinvoke $r0.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getBeforeBorderWidth(int,int)>($i3, 2);
        $i0 = $i0 + $i1;
        this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeLeading> = $i0;

     label1:
        return;
    }

    boolean finishes(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int step, $i0, $i1;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0;
        java.util.List $r1;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        step := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 > step goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        if $i0 != $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    org.apache.fop.layoutmgr.table.CellPart createCellPart()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        int bpBeforeFirst, length, $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.fop.layoutmgr.table.ActiveCell$Step $r0, $r4, $r7, $r8, $r9, $r10;
        java.util.List $r1;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r2, $r3, $r6;
        boolean $z0, $z1, $z2;
        org.apache.fop.layoutmgr.table.CellPart $r5;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $i0 = $i0 + 1;
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i0 != $i1 goto label0;

        $r2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $z0 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.PrimaryGridUnit: boolean mustKeepWithNext()>();
        this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean keepWithNextSignal> = $z0;

     label0:
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        if $i0 != 0 goto label1;

        $r3 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i0 = virtualinvoke $r3.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getBeforeBorderWidth(int,int)>(0, 1);
        $i1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int paddingBeforeNormal>;
        bpBeforeFirst = $i0 + $i1;
        goto label2;

     label1:
        bpBeforeFirst = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeLeading>;

     label2:
        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r4 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$300(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r4);
        $i0 = $i0 - $i1;
        $r4 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep>;
        $i1 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r4);
        length = $i0 - $i1;
        $z1 = specialinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean includedInLastStep()>();
        if $z1 == 0 goto label3;

        $r0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: java.util.List elementList>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i0 != $i1 goto label4;

     label3:
        $r5 = new org.apache.fop.layoutmgr.table.CellPart;
        $r6 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $r7 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i2 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r7);
        $r8 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep>;
        $i3 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r8);
        $z2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean lastCellPart>;
        $r9 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step previousStep>;
        $i4 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r9);
        $i5 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeNormal>;
        $i6 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterNormal>;
        $i7 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        specialinvoke $r5.<org.apache.fop.layoutmgr.table.CellPart: void <init>(org.apache.fop.fo.flow.table.PrimaryGridUnit,int,int,boolean,int,int,int,int,int,int,int)>($r6, $i2, $i3, $z2, 0, 0, $i4, $i5, bpBeforeFirst, $i6, $i7);
        return $r5;

     label4:
        $r5 = new org.apache.fop.layoutmgr.table.CellPart;
        $r6 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $r7 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i2 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r7);
        $r8 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i3 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r8);
        $z2 = this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean lastCellPart>;
        $r10 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i8 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$300(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r10);
        $r9 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.layoutmgr.table.ActiveCell$Step nextStep>;
        $i4 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell$Step: int access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)>($r9);
        $i5 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpBeforeNormal>;
        $i6 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterNormal>;
        $i7 = this.<org.apache.fop.layoutmgr.table.ActiveCell: int bpAfterTrailing>;
        specialinvoke $r5.<org.apache.fop.layoutmgr.table.CellPart: void <init>(org.apache.fop.fo.flow.table.PrimaryGridUnit,int,int,boolean,int,int,int,int,int,int,int)>($r6, $i2, $i3, $z2, $i8, length, $i4, $i5, bpBeforeFirst, $i6, $i7);
        return $r5;
    }

    boolean keepWithNextSignal()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $z0 = this.<org.apache.fop.layoutmgr.table.ActiveCell: boolean keepWithNextSignal>;
        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.table.ActiveCell this;
        java.lang.StringBuffer $r0;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r1;
        int $i0;
        java.lang.String $r2;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cell ");
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getRowIndex()>();
        $i0 = $i0 + 1;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");
        $r1 = this.<org.apache.fop.layoutmgr.table.ActiveCell: org.apache.fop.fo.flow.table.PrimaryGridUnit pgu>;
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getColIndex()>();
        $i0 = $i0 + 1;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.table.ActiveCell");
        <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell>;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        <org.apache.fop.layoutmgr.table.ActiveCell: boolean $assertionsDisabled> = $z0;
        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell>;
        if $r0 != null goto label4;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.table.ActiveCell");
        <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell> = $r0;
        goto label5;

     label4:
        $r0 = <org.apache.fop.layoutmgr.table.ActiveCell: java.lang.Class class$org$apache$fop$layoutmgr$table$ActiveCell>;

     label5:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.table.ActiveCell: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

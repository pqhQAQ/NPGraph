abstract class org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler extends java.lang.Object implements org.apache.fop.fonts.type1.AFMParser$ValueHandler
{

    private void <init>()
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    protected int findValue(java.lang.String, int)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        java.lang.String line;
        int startpos, $i0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        $i0 = staticinvoke <org.apache.fop.fonts.type1.AFMParser: int access$800(java.lang.String,int)>(line, startpos);
        return $i0;
    }

    protected java.lang.String getStringValue(java.lang.String, int)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        java.lang.String line, $r0;
        int startpos;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        $r0 = virtualinvoke line.<java.lang.String: java.lang.String substring(int)>(startpos);
        return $r0;
    }

    protected java.lang.Number getNumberValue(java.lang.String, int)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        java.lang.String line;
        int startpos, $i0;
        java.lang.Integer $r0;
        java.lang.NumberFormatException nfe, $r1;
        java.lang.Double $r2;
        double $d0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;

     label0:
        $r0 = new java.lang.Integer;
        $i0 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: int getIntegerValue(java.lang.String,int)>(line, startpos);
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>($i0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        nfe = $r1;
        $r2 = new java.lang.Double;
        $d0 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: double getDoubleValue(java.lang.String,int)>(line, startpos);
        specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0);
        return $r2;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    protected int getIntegerValue(java.lang.String, int)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        java.lang.String line, $r0;
        int startpos, endpos, $i0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        endpos = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: int findValue(java.lang.String,int)>(line, startpos);
        $r0 = virtualinvoke line.<java.lang.String: java.lang.String substring(int,int)>(startpos, endpos);
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);
        return $i0;
    }

    protected double getDoubleValue(java.lang.String, int)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        java.lang.String line, $r0;
        int startpos, endpos;
        double $d0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        endpos = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: int findValue(java.lang.String,int)>(line, startpos);
        $r0 = virtualinvoke line.<java.lang.String: java.lang.String substring(int,int)>(startpos, endpos);
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);
        return $d0;
    }

    protected java.lang.Boolean getBooleanValue(java.lang.String, int)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        java.lang.String line, $r0;
        int startpos;
        java.lang.Boolean $r1;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        $r0 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: java.lang.String getStringValue(java.lang.String,int)>(line, startpos);
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r0);
        return $r1;
    }

    void <init>(org.apache.fop.fonts.type1.AFMParser$1)
    {
        org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler this;
        org.apache.fop.fonts.type1.AFMParser$1 x0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler;
        x0 := @parameter0: org.apache.fop.fonts.type1.AFMParser$1;
        specialinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: void <init>()>();
        return;
    }
}

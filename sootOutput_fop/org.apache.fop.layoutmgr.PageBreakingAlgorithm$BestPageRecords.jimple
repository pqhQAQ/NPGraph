public class org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords extends org.apache.fop.layoutmgr.BreakingAlgorithm$BestRecords
{
    private int[] bestFootnotesLength;
    private int[] bestFootnoteListIndex;
    private int[] bestFootnoteElementIndex;
    private final org.apache.fop.layoutmgr.PageBreakingAlgorithm this$0;

    protected void <init>(org.apache.fop.layoutmgr.PageBreakingAlgorithm)
    {
        org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords this;
        org.apache.fop.layoutmgr.PageBreakingAlgorithm this$0;
        int[] $r0;

        this := @this: org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords;
        this$0 := @parameter0: org.apache.fop.layoutmgr.PageBreakingAlgorithm;
        this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: org.apache.fop.layoutmgr.PageBreakingAlgorithm this$0> = this$0;
        specialinvoke this.<org.apache.fop.layoutmgr.BreakingAlgorithm$BestRecords: void <init>(org.apache.fop.layoutmgr.BreakingAlgorithm)>(this$0);
        $r0 = newarray (int)[4];
        this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnotesLength> = $r0;
        $r0 = newarray (int)[4];
        this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnoteListIndex> = $r0;
        $r0 = newarray (int)[4];
        this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnoteElementIndex> = $r0;
        return;
    }

    public void addRecord(double, org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode, double, int, int, int, int)
    {
        org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords this;
        double demerits, adjust;
        org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode node;
        int availableShrink, availableStretch, difference, fitness, $i0;
        int[] $r0;
        org.apache.fop.layoutmgr.PageBreakingAlgorithm $r1;

        this := @this: org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords;
        demerits := @parameter0: double;
        node := @parameter1: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode;
        adjust := @parameter2: double;
        availableShrink := @parameter3: int;
        availableStretch := @parameter4: int;
        difference := @parameter5: int;
        fitness := @parameter6: int;
        specialinvoke this.<org.apache.fop.layoutmgr.BreakingAlgorithm$BestRecords: void addRecord(double,org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode,double,int,int,int,int)>(demerits, node, adjust, availableShrink, availableStretch, difference, fitness);
        $r0 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnotesLength>;
        $r1 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: org.apache.fop.layoutmgr.PageBreakingAlgorithm this$0>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.PageBreakingAlgorithm: int access$000(org.apache.fop.layoutmgr.PageBreakingAlgorithm)>($r1);
        $r0[fitness] = $i0;
        $r0 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnoteListIndex>;
        $r1 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: org.apache.fop.layoutmgr.PageBreakingAlgorithm this$0>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.PageBreakingAlgorithm: int access$100(org.apache.fop.layoutmgr.PageBreakingAlgorithm)>($r1);
        $r0[fitness] = $i0;
        $r0 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnoteElementIndex>;
        $r1 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: org.apache.fop.layoutmgr.PageBreakingAlgorithm this$0>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.PageBreakingAlgorithm: int access$200(org.apache.fop.layoutmgr.PageBreakingAlgorithm)>($r1);
        $r0[fitness] = $i0;
        return;
    }

    public int getFootnotesLength(int)
    {
        org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords this;
        int fitness, $i0;
        int[] $r0;

        this := @this: org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords;
        fitness := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnotesLength>;
        $i0 = $r0[fitness];
        return $i0;
    }

    public int getFootnoteListIndex(int)
    {
        org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords this;
        int fitness, $i0;
        int[] $r0;

        this := @this: org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords;
        fitness := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnoteListIndex>;
        $i0 = $r0[fitness];
        return $i0;
    }

    public int getFootnoteElementIndex(int)
    {
        org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords this;
        int fitness, $i0;
        int[] $r0;

        this := @this: org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords;
        fitness := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.PageBreakingAlgorithm$BestPageRecords: int[] bestFootnoteElementIndex>;
        $i0 = $r0[fitness];
        return $i0;
    }
}

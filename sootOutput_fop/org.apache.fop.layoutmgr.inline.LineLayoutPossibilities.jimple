public class org.apache.fop.layoutmgr.inline.LineLayoutPossibilities extends java.lang.Object
{
    protected static org.apache.commons.logging.Log log;
    private java.util.List possibilitiesList;
    private java.util.List savedPossibilities;
    private int minimumIndex;
    private int optimumIndex;
    private int maximumIndex;
    private int chosenIndex;
    private int savedOptLineCount;
    static java.lang.Class class$org$apache$fop$layoutmgr$inline$LineLayoutPossibilities;

    public void <init>()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList> = $r0;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List savedPossibilities> = $r0;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex> = -1;
        return;
    }

    public void addPossibility(int, double)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int ln, $i0, $i1, $i3, $i4;
        double dem, $d0;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility $r0, $r4;
        java.util.List $r1, $r2, $r5;
        java.lang.Object $r3, $r6;
        byte $b2;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        ln := @parameter0: int;
        dem := @parameter1: double;
        $r1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $r0 = new org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility;
        specialinvoke $r0.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: void <init>(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities,int,double,org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$1)>(this, ln, dem, null);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);
        $r1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        if $i0 != 1 goto label0;

        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int minimumIndex> = 0;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex> = 0;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex> = 0;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex> = 0;
        goto label3;

     label0:
        $r2 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);
        $r4 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r3;
        $d0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: double access$100(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>($r4);
        $b2 = dem cmpg $d0;
        if $b2 >= 0 goto label1;

        $r5 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i3 = $i3 - 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex> = $i3;
        $i3 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex> = $i3;

     label1:
        $r5 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i4 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int minimumIndex>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i4);
        $r0 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r6;
        $i3 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>($r0);
        if ln >= $i3 goto label2;

        $r5 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i3 = $i3 - 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int minimumIndex> = $i3;

     label2:
        $r5 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i4 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i4);
        $r0 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r6;
        $i3 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>($r0);
        if ln <= $i3 goto label3;

        $r5 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i3 = interfaceinvoke $r5.<java.util.List: int size()>();
        $i3 = $i3 - 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex> = $i3;

     label3:
        return;
    }

    public void savePossibilities(boolean)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        boolean bSaveOptLineCount;
        int $i0;
        java.util.List $r0;
        java.util.ArrayList $r1;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        bSaveOptLineCount := @parameter0: boolean;
        if bSaveOptLineCount == 0 goto label0;

        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getOptLineCount()>();
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int savedOptLineCount> = $i0;
        goto label1;

     label0:
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int savedOptLineCount> = 0;

     label1:
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List savedPossibilities> = $r0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList> = $r1;
        return;
    }

    public void restorePossibilities()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int index, $i0, $i1, $i2;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility restoredPossibility;
        java.util.List $r0, $r3;
        java.lang.Object $r1;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6;
        double $d0, $d1;
        byte $b3;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        index = 0;

     label0:
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List savedPossibilities>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 <= 0 goto label9;

        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List savedPossibilities>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>(0);
        restoredPossibility = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r1;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMinLineCount()>();
        if $i0 >= $i1 goto label1;

        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>(0, restoredPossibility);
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int minimumIndex> = 0;
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        $i1 = $i1 + 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex> = $i1;
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex>;
        $i1 = $i1 + 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex> = $i1;
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $i1 = $i1 + 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex> = $i1;
        goto label5;

     label1:
        $i0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMaxLineCount()>();
        if $i0 <= $i1 goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $r3 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();
        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>($i1, restoredPossibility);
        $r3 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex> = $i1;
        index = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex>;
        goto label5;

     label2:
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex>;
        if index >= $i1 goto label3;

        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>(index);
        $i1 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        if $i0 >= $i1 goto label3;

        index = index + 1;
        goto label2;

     label3:
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>(index);
        $i1 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        if $i0 != $i1 goto label4;

        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(index, restoredPossibility);
        goto label5;

     label4:
        $r4 = <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LineLayoutPossibilities restorePossibilities(), min= ");
        $i2 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMinLineCount()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" max= ");
        $i2 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMaxLineCount()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" restored= ");
        $i2 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r6);
        return;

     label5:
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int savedOptLineCount>;
        if $i0 != 0 goto label6;

        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        $d0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: double getDemerits(int)>($i1);
        $d1 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: double access$100(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        $b3 = $d0 cmpl $d1;
        if $b3 > 0 goto label7;

     label6:
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int savedOptLineCount>;
        if $i0 == 0 goto label8;

        $i0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>(restoredPossibility);
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int savedOptLineCount>;
        if $i0 != $i1 goto label8;

     label7:
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex> = index;
        $i1 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex> = $i1;

     label8:
        goto label0;

     label9:
        return;
    }

    public void addBreakPosition(org.apache.fop.layoutmgr.Position, int)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        org.apache.fop.layoutmgr.Position pos;
        int i;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility $r2;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        pos := @parameter0: org.apache.fop.layoutmgr.Position;
        i := @parameter1: int;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i);
        $r2 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r1;
        staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: void access$300(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility,org.apache.fop.layoutmgr.Position)>($r2, pos);
        return;
    }

    public boolean canUseMoreLines()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0, $i1;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getOptLineCount()>();
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMaxLineCount()>();
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean canUseLessLines()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0, $i1;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMinLineCount()>();
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getOptLineCount()>();
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public int getMinLineCount()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0, $i1;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int minimumIndex>;
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>($i0);
        return $i1;
    }

    public int getOptLineCount()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0, $i1;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>($i0);
        return $i1;
    }

    public int getMaxLineCount()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0, $i1;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex>;
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>($i0);
        return $i1;
    }

    public int getChosenLineCount()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0, $i1;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>($i0);
        return $i1;
    }

    public int getLineCount(int)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int i, $i0;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility $r2;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        i := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i);
        $r2 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r1;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>($r2);
        return $i0;
    }

    public double getChosenDemerits()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int $i0;
        double $d0;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $d0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: double getDemerits(int)>($i0);
        return $d0;
    }

    public double getDemerits(int)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int i;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility $r2;
        double $d0;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        i := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i);
        $r2 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r1;
        $d0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: double access$100(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>($r2);
        return $d0;
    }

    public int getPossibilitiesNumber()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        java.util.List $r0;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        return $i0;
    }

    public org.apache.fop.layoutmgr.Position getChosenPosition(int)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int i, $i0;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility $r2;
        org.apache.fop.layoutmgr.Position $r3;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        i := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);
        $r2 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r1;
        $r3 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: org.apache.fop.layoutmgr.Position access$400(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility,int)>($r2, i);
        return $r3;
    }

    public int applyLineCountAdjustment(int)
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        int adj, $i0, $i1, $i2, $i3;
        org.apache.commons.logging.Log $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        adj := @parameter0: int;
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMinLineCount()>();
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getChosenLineCount()>();
        $i0 = $i0 - $i1;
        if adj < $i0 goto label0;

        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getMaxLineCount()>();
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getChosenLineCount()>();
        $i0 = $i0 - $i1;
        if adj > $i0 goto label0;

        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $i0 = $i0 + adj;
        $i2 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>($i0);
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getChosenLineCount()>();
        $i0 = $i0 + adj;
        if $i2 != $i0 goto label0;

        $i0 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $i0 = $i0 + adj;
        this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex> = $i0;
        $r1 = <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("chosenLineCount= ");
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getChosenLineCount()>();
        $i1 = $i1 - adj;
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" adjustment= ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(adj);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" => chosenLineCount= ");
        $i3 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int chosenIndex>;
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int getLineCount(int)>($i3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        return adj;

     label0:
        $r1 = <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: org.apache.commons.logging.Log log>;
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Cannot apply the desired line count adjustment.");
        return 0;
    }

    public void printAll()
    {
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities this;
        java.io.PrintStream $r0;
        int i, $i0, $i1, $i2;
        java.lang.StringBuffer $r1;
        java.util.List $r2, $r4;
        java.lang.String $r3, $r7;
        java.lang.Object $r5;
        org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility $r6;

        this := @this: org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("++++++++++");
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r2 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" possibility\':");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        i = 0;

     label0:
        $r4 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();
        if i >= $i1 goto label7;

        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("   ");
        $r2 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.util.List possibilitiesList>;
        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        $r6 = (org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility) $r5;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility: int access$200(org.apache.fop.layoutmgr.inline.LineLayoutPossibilities$Possibility)>($r6);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $i2 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int optimumIndex>;
        if i != $i2 goto label1;

        $r7 = " *";
        goto label2;

     label1:
        $r7 = "";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $i2 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int minimumIndex>;
        if i != $i2 goto label3;

        $r7 = " -";
        goto label4;

     label3:
        $r7 = "";

     label4:
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $i2 = this.<org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: int maximumIndex>;
        if i != $i2 goto label5;

        $r7 = " +";
        goto label6;

     label5:
        $r7 = "";

     label6:
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        i = i + 1;
        goto label0;

     label7:
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("++++++++++");
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.lang.Class class$org$apache$fop$layoutmgr$inline$LineLayoutPossibilities>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.inline.LineLayoutPossibilities");
        <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.lang.Class class$org$apache$fop$layoutmgr$inline$LineLayoutPossibilities> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: java.lang.Class class$org$apache$fop$layoutmgr$inline$LineLayoutPossibilities>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.inline.LineLayoutPossibilities: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

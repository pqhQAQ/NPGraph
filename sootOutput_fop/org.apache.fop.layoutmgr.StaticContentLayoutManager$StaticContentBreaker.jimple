class org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker extends org.apache.fop.layoutmgr.AbstractBreaker
{
    private org.apache.fop.layoutmgr.StaticContentLayoutManager lm;
    private int displayAlign;
    private int ipd;
    private boolean overflow;
    private final org.apache.fop.layoutmgr.StaticContentLayoutManager this$0;

    public void <init>(org.apache.fop.layoutmgr.StaticContentLayoutManager, org.apache.fop.layoutmgr.StaticContentLayoutManager, int, int)
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.StaticContentLayoutManager l1, lm;
        int ipd, displayAlign;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        l1 := @parameter0: org.apache.fop.layoutmgr.StaticContentLayoutManager;
        lm := @parameter1: org.apache.fop.layoutmgr.StaticContentLayoutManager;
        ipd := @parameter2: int;
        displayAlign := @parameter3: int;
        this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager this$0> = l1;
        specialinvoke this.<org.apache.fop.layoutmgr.AbstractBreaker: void <init>()>();
        this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: boolean overflow> = 0;
        this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager lm> = lm;
        this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: int ipd> = ipd;
        this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: int displayAlign> = displayAlign;
        return;
    }

    protected void observeElementList(java.util.List)
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        java.util.List elementList;
        java.lang.String elementListID, pageSequenceID;
        org.apache.fop.layoutmgr.StaticContentLayoutManager $r0;
        org.apache.fop.fo.pagination.StaticContent $r1;
        org.apache.fop.layoutmgr.LayoutManager $r2;
        org.apache.fop.fo.FObj $r3;
        org.apache.fop.fo.pagination.PageSequence $r4;
        int $i0;
        java.lang.StringBuffer $r5;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        elementList := @parameter0: java.util.List;
        $r0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager this$0>;
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.StaticContentLayoutManager: org.apache.fop.fo.pagination.StaticContent getStaticContentFO()>();
        elementListID = virtualinvoke $r1.<org.apache.fop.fo.pagination.StaticContent: java.lang.String getFlowName()>();
        $r0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager lm>;
        $r2 = virtualinvoke $r0.<org.apache.fop.layoutmgr.StaticContentLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        $r3 = interfaceinvoke $r2.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.fo.FObj getFObj()>();
        $r4 = (org.apache.fop.fo.pagination.PageSequence) $r3;
        pageSequenceID = virtualinvoke $r4.<org.apache.fop.fo.pagination.PageSequence: java.lang.String getId()>();
        if pageSequenceID == null goto label0;

        $i0 = virtualinvoke pageSequenceID.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(elementListID);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(pageSequenceID);
        elementListID = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label0:
        staticinvoke <org.apache.fop.layoutmgr.ElementListObserver: void observe(java.util.List,java.lang.String,java.lang.String)>(elementList, "static-content", elementListID);
        return;
    }

    protected boolean isPartOverflowRecoveryActivated()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        return 0;
    }

    public boolean isOverflow()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        $z0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: boolean overflow>;
        return $z0;
    }

    protected org.apache.fop.layoutmgr.LayoutManager getTopLevelLM()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.StaticContentLayoutManager $r0;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        $r0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager lm>;
        return $r0;
    }

    protected org.apache.fop.layoutmgr.LayoutContext createLayoutContext()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.LayoutContext lc;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        lc = specialinvoke this.<org.apache.fop.layoutmgr.AbstractBreaker: org.apache.fop.layoutmgr.LayoutContext createLayoutContext()>();
        $i0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: int ipd>;
        virtualinvoke lc.<org.apache.fop.layoutmgr.LayoutContext: void setRefIPD(int)>($i0);
        return lc;
    }

    protected java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext, int)
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.LayoutContext context, childLC, $r3;
        int alignment, $i0;
        java.util.LinkedList $r0, returnList, returnedList;
        org.apache.fop.layoutmgr.LayoutManager curLM, $r2;
        boolean ignore, $z0;
        org.apache.fop.layoutmgr.StaticContentLayoutManager $r1;
        org.apache.fop.traits.MinOptMax $r4;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter1: int;
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        returnList = $r0;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager this$0>;
        $r2 = virtualinvoke $r1.<org.apache.fop.layoutmgr.StaticContentLayoutManager: org.apache.fop.layoutmgr.LayoutManager getChildLM()>();
        curLM = $r2;
        if $r2 == null goto label3;

        $r3 = new org.apache.fop.layoutmgr.LayoutContext;
        specialinvoke $r3.<org.apache.fop.layoutmgr.LayoutContext: void <init>(int)>(0);
        childLC = $r3;
        $r4 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitBP()>();
        virtualinvoke childLC.<org.apache.fop.layoutmgr.LayoutContext: void setStackLimitBP(org.apache.fop.traits.MinOptMax)>($r4);
        $i0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getRefIPD()>();
        virtualinvoke childLC.<org.apache.fop.layoutmgr.LayoutContext: void setRefIPD(int)>($i0);
        $i0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getWritingMode()>();
        virtualinvoke childLC.<org.apache.fop.layoutmgr.LayoutContext: void setWritingMode(int)>($i0);
        returnedList = null;
        ignore = curLM instanceof org.apache.fop.layoutmgr.inline.TextLayoutManager;
        $z0 = interfaceinvoke curLM.<org.apache.fop.layoutmgr.LayoutManager: boolean isFinished()>();
        if $z0 != 0 goto label1;

        returnedList = interfaceinvoke curLM.<org.apache.fop.layoutmgr.LayoutManager: java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int)>(childLC, alignment);

     label1:
        if returnedList == null goto label2;

        if ignore != 0 goto label2;

        $r1 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager lm>;
        virtualinvoke $r1.<org.apache.fop.layoutmgr.StaticContentLayoutManager: void wrapPositionElements(java.util.List,java.util.List)>(returnedList, returnList);

     label2:
        goto label0;

     label3:
        staticinvoke <org.apache.fop.layoutmgr.SpaceResolver: void resolveElementList(java.util.LinkedList)>(returnList);
        $r1 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager this$0>;
        virtualinvoke $r1.<org.apache.fop.layoutmgr.StaticContentLayoutManager: void setFinished(boolean)>(1);
        return returnList;
    }

    protected int getCurrentDisplayAlign()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        $i0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: int displayAlign>;
        return $i0;
    }

    protected boolean hasMoreContent()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.StaticContentLayoutManager $r0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        $r0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager lm>;
        $z0 = virtualinvoke $r0.<org.apache.fop.layoutmgr.StaticContentLayoutManager: boolean isFinished()>();
        if $z0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    protected void addAreas(org.apache.fop.layoutmgr.PositionIterator, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.PositionIterator posIter;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.layoutmgr.StaticContentLayoutManager $r0;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        posIter := @parameter0: org.apache.fop.layoutmgr.PositionIterator;
        context := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: org.apache.fop.layoutmgr.StaticContentLayoutManager lm>;
        staticinvoke <org.apache.fop.layoutmgr.AreaAdditionUtil: void addAreas(org.apache.fop.layoutmgr.BlockStackingLayoutManager,org.apache.fop.layoutmgr.PositionIterator,org.apache.fop.layoutmgr.LayoutContext)>($r0, posIter, context);
        return;
    }

    protected void doPhase3(org.apache.fop.layoutmgr.PageBreakingAlgorithm, int, org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence, org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.PageBreakingAlgorithm alg;
        int partCount;
        org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence originalList, effectiveList;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        alg := @parameter0: org.apache.fop.layoutmgr.PageBreakingAlgorithm;
        partCount := @parameter1: int;
        originalList := @parameter2: org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence;
        effectiveList := @parameter3: org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence;
        if partCount <= 1 goto label0;

        this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: boolean overflow> = 1;

     label0:
        virtualinvoke alg.<org.apache.fop.layoutmgr.PageBreakingAlgorithm: void removeAllPageBreaks()>();
        virtualinvoke this.<org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker: void addAreas(org.apache.fop.layoutmgr.PageBreakingAlgorithm,int,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence,org.apache.fop.layoutmgr.AbstractBreaker$BlockSequence)>(alg, 1, originalList, effectiveList);
        return;
    }

    protected void finishPart(org.apache.fop.layoutmgr.PageBreakingAlgorithm, org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition)
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;
        org.apache.fop.layoutmgr.PageBreakingAlgorithm alg;
        org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition pbp;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        alg := @parameter0: org.apache.fop.layoutmgr.PageBreakingAlgorithm;
        pbp := @parameter1: org.apache.fop.layoutmgr.AbstractBreaker$PageBreakPosition;
        return;
    }

    protected org.apache.fop.layoutmgr.LayoutManager getCurrentChildLM()
    {
        org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker this;

        this := @this: org.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker;
        return null;
    }
}

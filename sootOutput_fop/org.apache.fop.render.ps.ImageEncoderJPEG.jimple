public class org.apache.fop.render.ps.ImageEncoderJPEG extends java.lang.Object implements org.apache.xmlgraphics.ps.ImageEncoder
{
    private final org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG jpeg;

    public void <init>(org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG)
    {
        org.apache.fop.render.ps.ImageEncoderJPEG this;
        org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG jpeg;

        this := @this: org.apache.fop.render.ps.ImageEncoderJPEG;
        jpeg := @parameter0: org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.render.ps.ImageEncoderJPEG: org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG jpeg> = jpeg;
        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.ps.ImageEncoderJPEG this;
        java.io.OutputStream out;
        org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG $r0;

        this := @this: org.apache.fop.render.ps.ImageEncoderJPEG;
        out := @parameter0: java.io.OutputStream;
        $r0 = this.<org.apache.fop.render.ps.ImageEncoderJPEG: org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG jpeg>;
        virtualinvoke $r0.<org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG: void writeTo(java.io.OutputStream)>(out);
        return;
    }

    public java.lang.String getImplicitFilter()
    {
        org.apache.fop.render.ps.ImageEncoderJPEG this;

        this := @this: org.apache.fop.render.ps.ImageEncoderJPEG;
        return "<< >> /DCTDecode";
    }
}

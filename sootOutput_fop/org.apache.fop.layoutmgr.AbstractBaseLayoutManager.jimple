public abstract class org.apache.fop.layoutmgr.AbstractBaseLayoutManager extends java.lang.Object implements org.apache.fop.layoutmgr.LayoutManager, org.apache.fop.datatypes.PercentBaseContext
{
    protected boolean generatesReferenceArea;
    protected boolean generatesBlockArea;
    protected org.apache.fop.fo.FObj fobj;
    private static org.apache.commons.logging.Log log;
    static java.lang.Class class$org$apache$fop$layoutmgr$AbstractBaseLayoutManager;

    public void <init>()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesReferenceArea> = 0;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesBlockArea> = 0;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.fo.FObj fobj> = null;
        return;
    }

    public void <init>(org.apache.fop.fo.FObj)
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.fo.FObj fo;
        boolean $z0, $z1;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        fo := @parameter0: org.apache.fop.fo.FObj;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesReferenceArea> = 0;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesBlockArea> = 0;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.fo.FObj fobj> = null;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.fo.FObj fobj> = fo;
        $z0 = virtualinvoke fo.<org.apache.fop.fo.FObj: boolean generatesReferenceAreas()>();
        virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: void setGeneratesReferenceArea(boolean)>($z0);
        $z1 = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean getGeneratesReferenceArea()>();
        if $z1 == 0 goto label0;

        virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: void setGeneratesBlockArea(boolean)>(1);

     label0:
        return;
    }

    public int getBaseLength(int, org.apache.fop.fo.FObj)
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        int lengthBase, $i0;
        org.apache.fop.fo.FObj fobj, $r1;
        java.lang.StringBuffer $r0, $r5;
        org.apache.fop.layoutmgr.LayoutManager lm;
        org.apache.commons.logging.Log $r2;
        java.lang.Exception $r3;
        java.lang.String $r4, $r6, $r7;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lengthBase := @parameter0: int;
        fobj := @parameter1: org.apache.fop.fo.FObj;
        $r1 = this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.fo.FObj fobj>;
        if fobj != $r1 goto label5;

        tableswitch(lengthBase)
        {
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label0;
            case 6: goto label1;
            default: goto label4;
        };

     label0:
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: int getAncestorBlockAreaIPD()>();
        return $i0;

     label1:
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: int getAncestorBlockAreaBPD()>();
        return $i0;

     label2:
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: int getParentAreaIPD()>();
        return $i0;

     label3:
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: int getReferenceAreaIPD()>();
        return $i0;

     label4:
        $r2 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.Exception;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown base type for LengthBase:");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(lengthBase);
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r4);
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        return 0;

     label5:
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();

     label6:
        if lm == null goto label7;

        $r1 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.fo.FObj getFObj()>();
        if fobj == $r1 goto label7;

        lm = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        goto label6;

     label7:
        if lm == null goto label8;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getBaseLength(int,org.apache.fop.fo.FObj)>(lengthBase, fobj);
        return $i0;

     label8:
        $r2 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot find LM to handle given FO for LengthBase. (");
        $r6 = virtualinvoke fobj.<org.apache.fop.fo.FObj: java.lang.String getContextInfo()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        return 0;
    }

    protected int getAncestorBlockAreaIPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.layoutmgr.LayoutManager lm;
        boolean $z0;
        int $i0;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();

     label0:
        if lm == null goto label2;

        $z0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: boolean getGeneratesBlockArea()>();
        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: boolean getGeneratesLineArea()>();
        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getContentAreaIPD()>();
        return $i0;

     label1:
        lm = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        goto label0;

     label2:
        if lm != null goto label3;

        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("No parent LM found");

     label3:
        return 0;
    }

    protected int getAncestorBlockAreaBPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.layoutmgr.LayoutManager lm;
        boolean $z0;
        int $i0;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();

     label0:
        if lm == null goto label2;

        $z0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: boolean getGeneratesBlockArea()>();
        if $z0 == 0 goto label1;

        $z0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: boolean getGeneratesLineArea()>();
        if $z0 != 0 goto label1;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getContentAreaBPD()>();
        return $i0;

     label1:
        lm = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        goto label0;

     label2:
        if lm != null goto label3;

        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("No parent LM found");

     label3:
        return 0;
    }

    protected int getParentAreaIPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.layoutmgr.LayoutManager lm;
        int $i0;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        if lm == null goto label0;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getContentAreaIPD()>();
        return $i0;

     label0:
        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("No parent LM found");
        return 0;
    }

    protected int getParentAreaBPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.layoutmgr.LayoutManager lm;
        int $i0;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        if lm == null goto label0;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getContentAreaBPD()>();
        return $i0;

     label0:
        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("No parent LM found");
        return 0;
    }

    public int getReferenceAreaIPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.layoutmgr.LayoutManager lm;
        boolean $z0;
        int $i0;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();

     label0:
        if lm == null goto label2;

        $z0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: boolean getGeneratesReferenceArea()>();
        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getContentAreaIPD()>();
        return $i0;

     label1:
        lm = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        goto label0;

     label2:
        if lm != null goto label3;

        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("No parent LM found");

     label3:
        return 0;
    }

    protected int getReferenceAreaBPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.layoutmgr.LayoutManager lm;
        boolean $z0;
        int $i0;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        lm = virtualinvoke this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();

     label0:
        if lm == null goto label2;

        $z0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: boolean getGeneratesReferenceArea()>();
        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: int getContentAreaBPD()>();
        return $i0;

     label1:
        lm = interfaceinvoke lm.<org.apache.fop.layoutmgr.LayoutManager: org.apache.fop.layoutmgr.LayoutManager getParent()>();
        goto label0;

     label2:
        if lm != null goto label3;

        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("No parent LM found");

     label3:
        return 0;
    }

    public int getContentAreaIPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("getContentAreaIPD called when it should have been overwritten");
        return 0;
    }

    public int getContentAreaBPD()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("getContentAreaBPD called when it should have been overwritten");
        return 0;
    }

    public boolean getGeneratesReferenceArea()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        $z0 = this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesReferenceArea>;
        return $z0;
    }

    protected void setGeneratesReferenceArea(boolean)
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        boolean generatesReferenceArea;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        generatesReferenceArea := @parameter0: boolean;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesReferenceArea> = generatesReferenceArea;
        return;
    }

    public boolean getGeneratesBlockArea()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        $z0 = this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesBlockArea>;
        return $z0;
    }

    protected void setGeneratesBlockArea(boolean)
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        boolean generatesBlockArea;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        generatesBlockArea := @parameter0: boolean;
        this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: boolean generatesBlockArea> = generatesBlockArea;
        return;
    }

    public boolean getGeneratesLineArea()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        return 0;
    }

    public org.apache.fop.fo.FObj getFObj()
    {
        org.apache.fop.layoutmgr.AbstractBaseLayoutManager this;
        org.apache.fop.fo.FObj $r0;

        this := @this: org.apache.fop.layoutmgr.AbstractBaseLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.fop.fo.FObj fobj>;
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$AbstractBaseLayoutManager>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.AbstractBaseLayoutManager");
        <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$AbstractBaseLayoutManager> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$AbstractBaseLayoutManager>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.AbstractBaseLayoutManager: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

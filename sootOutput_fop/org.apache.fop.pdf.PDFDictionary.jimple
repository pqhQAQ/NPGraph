public class org.apache.fop.pdf.PDFDictionary extends org.apache.fop.pdf.PDFObject
{
    protected java.util.Map entries;
    protected java.util.List order;

    public void <init>()
    {
        org.apache.fop.pdf.PDFDictionary this;
        java.util.HashMap $r0;
        java.util.ArrayList $r1;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries> = $r0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDictionary: java.util.List order> = $r1;
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFDictionary this;
        org.apache.fop.pdf.PDFObject parent;
        java.util.HashMap $r0;
        java.util.ArrayList $r1;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries> = $r0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFDictionary: java.util.List order> = $r1;
        return;
    }

    public void put(java.lang.String, java.lang.Object)
    {
        org.apache.fop.pdf.PDFDictionary this;
        java.lang.String name;
        java.lang.Object value;
        org.apache.fop.pdf.PDFObject pdfObj;
        boolean $z0;
        java.util.Map $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        name := @parameter0: java.lang.String;
        value := @parameter1: java.lang.Object;
        $z0 = value instanceof org.apache.fop.pdf.PDFObject;
        if $z0 == 0 goto label0;

        pdfObj = (org.apache.fop.pdf.PDFObject) value;
        $z0 = virtualinvoke pdfObj.<org.apache.fop.pdf.PDFObject: boolean hasObjectNumber()>();
        if $z0 != 0 goto label0;

        virtualinvoke pdfObj.<org.apache.fop.pdf.PDFObject: void setParent(org.apache.fop.pdf.PDFObject)>(this);

     label0:
        $r0 = this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries>;
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>(name);
        if $z0 != 0 goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFDictionary: java.util.List order>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(name);

     label1:
        $r0 = this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries>;
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value);
        return;
    }

    public void put(java.lang.String, int)
    {
        org.apache.fop.pdf.PDFDictionary this;
        java.lang.String name;
        int value;
        java.lang.Integer $r0;
        java.util.Map $r1;
        boolean $z0;
        java.util.List $r2;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        name := @parameter0: java.lang.String;
        value := @parameter1: int;
        $r1 = this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(name);
        if $z0 != 0 goto label0;

        $r2 = this.<org.apache.fop.pdf.PDFDictionary: java.util.List order>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(name);

     label0:
        $r1 = this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(value);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, $r0);
        return;
    }

    public java.lang.Object get(java.lang.String)
    {
        org.apache.fop.pdf.PDFDictionary this;
        java.lang.String name;
        java.util.Map $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        name := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        return $r1;
    }

    protected int output(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFDictionary this;
        java.io.OutputStream stream;
        org.apache.commons.io.output.CountingOutputStream $r0, cout;
        java.io.Writer writer;
        boolean $z0;
        java.lang.String $r1;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        stream := @parameter0: java.io.OutputStream;
        $r0 = new org.apache.commons.io.output.CountingOutputStream;
        specialinvoke $r0.<org.apache.commons.io.output.CountingOutputStream: void <init>(java.io.OutputStream)>(stream);
        cout = $r0;
        writer = staticinvoke <org.apache.fop.pdf.PDFDocument: java.io.Writer getWriterFor(java.io.OutputStream)>(cout);
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFDictionary: boolean hasObjectNumber()>();
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFDictionary: java.lang.String getObjectID()>();
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r1);

     label0:
        virtualinvoke this.<org.apache.fop.pdf.PDFDictionary: void writeDictionary(java.io.OutputStream,java.io.Writer)>(cout, writer);
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFDictionary: boolean hasObjectNumber()>();
        if $z0 == 0 goto label1;

        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>("\nendobj\n");

     label1:
        virtualinvoke writer.<java.io.Writer: void flush()>();
        $i0 = virtualinvoke cout.<org.apache.commons.io.output.CountingOutputStream: int getCount()>();
        return $i0;
    }

    protected void writeDictionary(java.io.OutputStream, java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFDictionary this;
        java.io.OutputStream out;
        java.io.Writer writer;
        boolean compact, $z0;
        java.util.Iterator iter;
        java.lang.String key;
        java.lang.Object obj, $r1;
        java.util.List $r0;
        int $i0;
        java.util.Map $r2;

        this := @this: org.apache.fop.pdf.PDFDictionary;
        out := @parameter0: java.io.OutputStream;
        writer := @parameter1: java.io.Writer;
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>("<<");
        $r0 = this.<org.apache.fop.pdf.PDFDictionary: java.util.List order>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 > 2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        compact = $z0;
        $r0 = this.<org.apache.fop.pdf.PDFDictionary: java.util.List order>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        key = (java.lang.String) $r1;
        if compact == 0 goto label3;

        virtualinvoke writer.<java.io.Writer: void write(int)>(32);
        goto label4;

     label3:
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>("\n  ");

     label4:
        virtualinvoke writer.<java.io.Writer: void write(int)>(47);
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>(key);
        virtualinvoke writer.<java.io.Writer: void write(int)>(32);
        $r2 = this.<org.apache.fop.pdf.PDFDictionary: java.util.Map entries>;
        obj = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);
        virtualinvoke this.<org.apache.fop.pdf.PDFDictionary: void formatObject(java.lang.Object,java.io.OutputStream,java.io.Writer)>(obj, out, writer);
        goto label2;

     label5:
        if compact == 0 goto label6;

        virtualinvoke writer.<java.io.Writer: void write(int)>(32);
        goto label7;

     label6:
        virtualinvoke writer.<java.io.Writer: void write(int)>(10);

     label7:
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>(">>\n");
        return;
    }
}

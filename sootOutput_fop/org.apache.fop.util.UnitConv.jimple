public final class org.apache.fop.util.UnitConv extends java.lang.Object
{
    public static final float IN2MM;
    public static final float IN2CM;
    public static final int IN2PT;

    public void <init>()
    {
        org.apache.fop.util.UnitConv this;

        this := @this: org.apache.fop.util.UnitConv;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static double mm2pt(double)
    {
        double mm, $d0;

        mm := @parameter0: double;
        $d0 = mm * 72.0;
        $d0 = $d0 / 25.399999618530273;
        return $d0;
    }

    public static double mm2mpt(double)
    {
        double mm, $d0;

        mm := @parameter0: double;
        $d0 = mm * 1000.0;
        $d0 = $d0 * 72.0;
        $d0 = $d0 / 25.399999618530273;
        return $d0;
    }

    public static double pt2mm(double)
    {
        double pt, $d0;

        pt := @parameter0: double;
        $d0 = pt * 25.399999618530273;
        $d0 = $d0 / 72.0;
        return $d0;
    }

    public static double mm2in(double)
    {
        double mm, $d0;

        mm := @parameter0: double;
        $d0 = mm / 25.399999618530273;
        return $d0;
    }

    public static double in2mm(double)
    {
        double in, $d0;

        in := @parameter0: double;
        $d0 = in * 25.399999618530273;
        return $d0;
    }

    public static double in2mpt(double)
    {
        double in, $d0;

        in := @parameter0: double;
        $d0 = in * 72.0;
        $d0 = $d0 * 1000.0;
        return $d0;
    }

    public static double in2pt(double)
    {
        double in, $d0;

        in := @parameter0: double;
        $d0 = in * 72.0;
        return $d0;
    }

    public static double mpt2in(double)
    {
        double mpt, $d0;

        mpt := @parameter0: double;
        $d0 = mpt / 72.0;
        $d0 = $d0 / 1000.0;
        return $d0;
    }

    public static double mm2px(double, int)
    {
        double mm, $d0, $d1;
        int resolution;

        mm := @parameter0: double;
        resolution := @parameter1: int;
        $d0 = staticinvoke <org.apache.fop.util.UnitConv: double mm2in(double)>(mm);
        $d1 = (double) resolution;
        $d0 = $d0 * $d1;
        return $d0;
    }

    public static double mpt2px(double, int)
    {
        double mpt, $d0, $d1;
        int resolution;

        mpt := @parameter0: double;
        resolution := @parameter1: int;
        $d0 = staticinvoke <org.apache.fop.util.UnitConv: double mpt2in(double)>(mpt);
        $d1 = (double) resolution;
        $d0 = $d0 * $d1;
        return $d0;
    }
}

class org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo extends java.lang.Object
{
    private short iStartIndex;
    private short iBreakIndex;
    private short iWScount;
    private short iLScount;
    private org.apache.fop.traits.MinOptMax ipdArea;
    private boolean bHyphenated;
    private boolean isSpace;
    private boolean breakOppAfter;
    private final org.apache.fop.layoutmgr.inline.TextLayoutManager this$0;

    public void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager, short, short, short, short, org.apache.fop.traits.MinOptMax, boolean, boolean, boolean)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo this;
        org.apache.fop.layoutmgr.inline.TextLayoutManager l1;
        short iSIndex, iBIndex, iWS, iLS;
        org.apache.fop.traits.MinOptMax ipd;
        boolean bHyph, isSpace, breakOppAfter;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        l1 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        iSIndex := @parameter1: short;
        iBIndex := @parameter2: short;
        iWS := @parameter3: short;
        iLS := @parameter4: short;
        ipd := @parameter5: org.apache.fop.traits.MinOptMax;
        bHyph := @parameter6: boolean;
        isSpace := @parameter7: boolean;
        breakOppAfter := @parameter8: boolean;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.layoutmgr.inline.TextLayoutManager this$0> = l1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iStartIndex> = iSIndex;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iBreakIndex> = iBIndex;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iWScount> = iWS;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iLScount> = iLS;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea> = ipd;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean bHyphenated> = bHyph;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean isSpace> = isSpace;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean breakOppAfter> = breakOppAfter;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo this;
        java.lang.StringBuffer $r0;
        short $s0;
        org.apache.fop.traits.MinOptMax $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ lscnt=");
        $s0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iLScount>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($s0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", wscnt=");
        $s0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iWScount>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($s0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ipd=");
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $r2 = virtualinvoke $r1.<org.apache.fop.traits.MinOptMax: java.lang.String toString()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", sidx=");
        $s0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iStartIndex>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($s0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", bidx=");
        $s0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iBreakIndex>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($s0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", hyph=");
        $z0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean bHyphenated>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", space=");
        $z0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean isSpace>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }

    static short access$000(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        short $s0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iWScount>;
        return $s0;
    }

    static short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        short $s0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iLScount>;
        return $s0;
    }

    static org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        org.apache.fop.traits.MinOptMax $r0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $r0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        return $r0;
    }

    static short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        short $s0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iBreakIndex>;
        return $s0;
    }

    static short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        short $s0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iStartIndex>;
        return $s0;
    }

    static boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        boolean $z0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $z0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean bHyphenated>;
        return $z0;
    }

    static boolean access$600(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        boolean $z0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $z0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean isSpace>;
        return $z0;
    }

    static boolean access$702(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo, boolean)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        boolean x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        x1 := @parameter1: boolean;
        x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean breakOppAfter> = x1;
        return x1;
    }

    static short access$108(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        short $s0, $s2;
        int $i1;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iLScount>;
        $i1 = $s0 + 1;
        $s2 = (short) $i1;
        x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short iLScount> = $s2;
        return $s0;
    }

    static boolean access$700(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo x0;
        boolean $z0;

        x0 := @parameter0: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $z0 = x0.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean breakOppAfter>;
        return $z0;
    }
}

public class org.apache.fop.render.afp.fonts.OutlineFont extends org.apache.fop.render.afp.fonts.AFPFont
{
    private org.apache.fop.render.afp.fonts.CharacterSet charSet;

    public void <init>(java.lang.String, org.apache.fop.render.afp.fonts.CharacterSet)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        java.lang.String name;
        org.apache.fop.render.afp.fonts.CharacterSet charSet;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        name := @parameter0: java.lang.String;
        charSet := @parameter1: org.apache.fop.render.afp.fonts.CharacterSet;
        specialinvoke this.<org.apache.fop.render.afp.fonts.AFPFont: void <init>(java.lang.String)>(name);
        this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet> = null;
        this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet> = charSet;
        return;
    }

    public org.apache.fop.render.afp.fonts.CharacterSet getCharacterSet()
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        return $r0;
    }

    public org.apache.fop.render.afp.fonts.CharacterSet getCharacterSet(int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int size;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        size := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        return $r0;
    }

    public int getFirstChar()
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;
        int $i0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int getFirstChar()>();
        return $i0;
    }

    public int getLastChar()
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;
        int $i0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int getLastChar()>();
        return $i0;
    }

    public int getAscender(int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int size, $i0;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        size := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int getAscender()>();
        $i0 = $i0 / 1000;
        $i0 = $i0 * size;
        return $i0;
    }

    public int getCapHeight(int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int size, $i0;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        size := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int getCapHeight()>();
        $i0 = $i0 / 1000;
        $i0 = $i0 * size;
        return $i0;
    }

    public int getDescender(int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int size, $i0;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        size := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int getDescender()>();
        $i0 = $i0 / 1000;
        $i0 = $i0 * size;
        return $i0;
    }

    public int getXHeight(int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int size, $i0;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        size := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int getXHeight()>();
        $i0 = $i0 / 1000;
        $i0 = $i0 * size;
        return $i0;
    }

    public int getWidth(int, int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int character, size, $i0;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        character := @parameter0: int;
        size := @parameter1: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int width(int)>(character);
        $i0 = $i0 / 1000;
        $i0 = $i0 * size;
        return $i0;
    }

    public int[] getWidths(int)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int size, i, $i0, $i1;
        int[] widths;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        size := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        widths = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: int[] getWidths()>();
        i = 0;

     label0:
        $i0 = lengthof widths;
        if i >= $i0 goto label1;

        $i1 = widths[i];
        $i1 = $i1 / 1000;
        $i1 = $i1 * size;
        widths[i] = $i1;
        i = i + 1;
        goto label0;

     label1:
        return widths;
    }

    public int[] getWidths()
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        int[] $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        $r0 = virtualinvoke this.<org.apache.fop.render.afp.fonts.OutlineFont: int[] getWidths(int)>(1000);
        return $r0;
    }

    public char mapChar(char)
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        char c, $c0;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        c := @parameter0: char;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $c0 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: char mapChar(char)>(c);
        return $c0;
    }

    public java.lang.String getEncoding()
    {
        org.apache.fop.render.afp.fonts.OutlineFont this;
        org.apache.fop.render.afp.fonts.CharacterSet $r0;
        java.lang.String $r1;

        this := @this: org.apache.fop.render.afp.fonts.OutlineFont;
        $r0 = this.<org.apache.fop.render.afp.fonts.OutlineFont: org.apache.fop.render.afp.fonts.CharacterSet charSet>;
        $r1 = virtualinvoke $r0.<org.apache.fop.render.afp.fonts.CharacterSet: java.lang.String getEncoding()>();
        return $r1;
    }
}

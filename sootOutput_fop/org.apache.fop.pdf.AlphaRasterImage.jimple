public class org.apache.fop.pdf.AlphaRasterImage extends java.lang.Object implements org.apache.fop.pdf.PDFImage
{
    private int bitsPerComponent;
    private org.apache.fop.pdf.PDFDeviceColorSpace colorSpace;
    private java.awt.image.Raster alpha;
    private java.lang.String key;

    public void <init>(java.lang.String, java.awt.image.Raster)
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        java.lang.String k;
        java.awt.image.Raster alpha;
        org.apache.fop.pdf.PDFDeviceColorSpace $r0;
        java.lang.NullPointerException $r1;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        k := @parameter0: java.lang.String;
        alpha := @parameter1: java.awt.image.Raster;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.pdf.AlphaRasterImage: java.lang.String key> = k;
        this.<org.apache.fop.pdf.AlphaRasterImage: int bitsPerComponent> = 8;
        $r0 = new org.apache.fop.pdf.PDFDeviceColorSpace;
        specialinvoke $r0.<org.apache.fop.pdf.PDFDeviceColorSpace: void <init>(int)>(1);
        this.<org.apache.fop.pdf.AlphaRasterImage: org.apache.fop.pdf.PDFDeviceColorSpace colorSpace> = $r0;
        if alpha != null goto label0;

        $r1 = new java.lang.NullPointerException;
        specialinvoke $r1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Parameter alpha must not be null");
        throw $r1;

     label0:
        this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha> = alpha;
        return;
    }

    public void <init>(java.lang.String, java.awt.image.RenderedImage)
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        java.lang.String k;
        java.awt.image.RenderedImage image;
        java.awt.image.Raster $r0;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        k := @parameter0: java.lang.String;
        image := @parameter1: java.awt.image.RenderedImage;
        $r0 = staticinvoke <org.apache.xmlgraphics.image.GraphicsUtil: java.awt.image.Raster getAlphaRaster(java.awt.image.RenderedImage)>(image);
        specialinvoke this.<org.apache.fop.pdf.AlphaRasterImage: void <init>(java.lang.String,java.awt.image.Raster)>(k, $r0);
        return;
    }

    public void setup(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        org.apache.fop.pdf.PDFDocument doc;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        doc := @parameter0: org.apache.fop.pdf.PDFDocument;
        return;
    }

    public java.lang.String getKey()
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        java.lang.String $r0;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.lang.String key>;
        return $r0;
    }

    public int getWidth()
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        java.awt.image.Raster $r0;
        int $i0;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        $i0 = virtualinvoke $r0.<java.awt.image.Raster: int getWidth()>();
        return $i0;
    }

    public int getHeight()
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        java.awt.image.Raster $r0;
        int $i0;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        $i0 = virtualinvoke $r0.<java.awt.image.Raster: int getHeight()>();
        return $i0;
    }

    public org.apache.fop.pdf.PDFDeviceColorSpace getColorSpace()
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        org.apache.fop.pdf.PDFDeviceColorSpace $r0;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: org.apache.fop.pdf.PDFDeviceColorSpace colorSpace>;
        return $r0;
    }

    public int getBitsPerComponent()
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        int $i0;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        $i0 = this.<org.apache.fop.pdf.AlphaRasterImage: int bitsPerComponent>;
        return $i0;
    }

    public boolean isTransparent()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return 0;
    }

    public org.apache.fop.pdf.PDFColor getTransparentColor()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return null;
    }

    public java.lang.String getMask()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return null;
    }

    public java.lang.String getSoftMask()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return null;
    }

    public org.apache.fop.pdf.PDFReference getSoftMaskReference()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return null;
    }

    public boolean isInverted()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return 0;
    }

    public void outputContents(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        java.io.OutputStream out;
        int w, h, nbands, dataType, y, shift, i, $i0, $i1;
        byte[] line;
        java.awt.image.SampleModel sampleModel;
        java.awt.image.SinglePixelPackedSampleModel m;
        int[] iline, $r4;
        java.awt.image.Raster $r0, $r6;
        java.lang.UnsupportedOperationException $r1;
        java.awt.image.DataBuffer $r2, $r7;
        boolean $z0;
        byte $b2;
        java.lang.StringBuffer $r5;
        java.lang.Class $r8;
        java.lang.String $r9, $r10;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        out := @parameter0: java.io.OutputStream;
        w = virtualinvoke this.<org.apache.fop.pdf.AlphaRasterImage: int getWidth()>();
        h = virtualinvoke this.<org.apache.fop.pdf.AlphaRasterImage: int getHeight()>();
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        nbands = virtualinvoke $r0.<java.awt.image.Raster: int getNumBands()>();
        if nbands == 1 goto label0;

        $r1 = new java.lang.UnsupportedOperationException;
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Expected only one band/component for the alpha channel");
        throw $r1;

     label0:
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        $r2 = virtualinvoke $r0.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();
        dataType = virtualinvoke $r2.<java.awt.image.DataBuffer: int getDataType()>();
        if dataType != 0 goto label3;

        $i0 = nbands * w;
        line = newarray (byte)[$i0];
        y = 0;

     label1:
        if y >= h goto label2;

        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        virtualinvoke $r0.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,int,int,java.lang.Object)>(0, y, w, 1, line);
        virtualinvoke out.<java.io.OutputStream: void write(byte[])>(line);
        y = y + 1;
        goto label1;

     label2:
        goto label10;

     label3:
        if dataType != 3 goto label9;

        shift = 24;
        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        sampleModel = virtualinvoke $r0.<java.awt.image.Raster: java.awt.image.SampleModel getSampleModel()>();
        $z0 = sampleModel instanceof java.awt.image.SinglePixelPackedSampleModel;
        if $z0 == 0 goto label4;

        m = (java.awt.image.SinglePixelPackedSampleModel) sampleModel;
        $r4 = virtualinvoke m.<java.awt.image.SinglePixelPackedSampleModel: int[] getBitOffsets()>();
        shift = $r4[0];

     label4:
        $i0 = nbands * w;
        iline = newarray (int)[$i0];
        $i0 = nbands * w;
        line = newarray (byte)[$i0];
        y = 0;

     label5:
        if y >= h goto label8;

        $r0 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        virtualinvoke $r0.<java.awt.image.Raster: java.lang.Object getDataElements(int,int,int,int,java.lang.Object)>(0, y, w, 1, iline);
        i = 0;

     label6:
        if i >= w goto label7;

        $i1 = iline[i];
        $i1 = $i1 >> shift;
        $b2 = (byte) $i1;
        line[i] = $b2;
        i = i + 1;
        goto label6;

     label7:
        virtualinvoke out.<java.io.OutputStream: void write(byte[])>(line);
        y = y + 1;
        goto label5;

     label8:
        goto label10;

     label9:
        $r1 = new java.lang.UnsupportedOperationException;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported DataBuffer type: ");
        $r6 = this.<org.apache.fop.pdf.AlphaRasterImage: java.awt.image.Raster alpha>;
        $r7 = virtualinvoke $r6.<java.awt.image.Raster: java.awt.image.DataBuffer getDataBuffer()>();
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r10 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r10);
        throw $r1;

     label10:
        return;
    }

    public void populateXObjectDictionary(org.apache.fop.pdf.PDFDictionary)
    {
        org.apache.fop.pdf.AlphaRasterImage this;
        org.apache.fop.pdf.PDFDictionary dict;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        dict := @parameter0: org.apache.fop.pdf.PDFDictionary;
        return;
    }

    public org.apache.fop.pdf.PDFICCStream getICCStream()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return null;
    }

    public boolean isPS()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return 0;
    }

    public java.lang.String getFilterHint()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return "image";
    }

    public org.apache.fop.pdf.PDFFilter getPDFFilter()
    {
        org.apache.fop.pdf.AlphaRasterImage this;

        this := @this: org.apache.fop.pdf.AlphaRasterImage;
        return null;
    }
}

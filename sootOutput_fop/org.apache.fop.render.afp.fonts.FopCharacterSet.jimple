public class org.apache.fop.render.afp.fonts.FopCharacterSet extends org.apache.fop.render.afp.fonts.CharacterSet
{
    private org.apache.fop.fonts.Typeface charSet;
    private int size;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, org.apache.fop.fonts.Typeface)
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        java.lang.String codePage, encoding, name;
        int size, $i0;
        org.apache.fop.fonts.Typeface charSet;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        codePage := @parameter0: java.lang.String;
        encoding := @parameter1: java.lang.String;
        name := @parameter2: java.lang.String;
        size := @parameter3: int;
        charSet := @parameter4: org.apache.fop.fonts.Typeface;
        specialinvoke this.<org.apache.fop.render.afp.fonts.CharacterSet: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(codePage, encoding, name, null);
        this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet> = null;
        this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size> = 0;
        this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet> = charSet;
        $i0 = size * 1000;
        this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size> = $i0;
        return;
    }

    public int getAscender()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        org.apache.fop.fonts.Typeface $r0;
        int $i0, $i1;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $i0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: int getAscender(int)>($i0);
        return $i1;
    }

    public int getCapHeight()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        org.apache.fop.fonts.Typeface $r0;
        int $i0, $i1;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $i0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: int getCapHeight(int)>($i0);
        return $i1;
    }

    public int getDescender()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        org.apache.fop.fonts.Typeface $r0;
        int $i0, $i1;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $i0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: int getDescender(int)>($i0);
        return $i1;
    }

    public int getFirstChar()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        return 0;
    }

    public int getLastChar()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        return 0;
    }

    public int[] getWidths()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        org.apache.fop.fonts.Typeface $r0;
        int[] $r1;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: int[] getWidths()>();
        return $r1;
    }

    public int getXHeight()
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        org.apache.fop.fonts.Typeface $r0;
        int $i0, $i1;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $i0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: int getXHeight(int)>($i0);
        return $i1;
    }

    public int width(int)
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        int character, $i0, $i1;
        org.apache.fop.fonts.Typeface $r0;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        character := @parameter0: int;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $i0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: int size>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: int getWidth(int,int)>(character, $i0);
        return $i1;
    }

    public char mapChar(char)
    {
        org.apache.fop.render.afp.fonts.FopCharacterSet this;
        char c, $c0;
        org.apache.fop.fonts.Typeface $r0;

        this := @this: org.apache.fop.render.afp.fonts.FopCharacterSet;
        c := @parameter0: char;
        $r0 = this.<org.apache.fop.render.afp.fonts.FopCharacterSet: org.apache.fop.fonts.Typeface charSet>;
        $c0 = virtualinvoke $r0.<org.apache.fop.fonts.Typeface: char mapChar(char)>(c);
        return $c0;
    }
}

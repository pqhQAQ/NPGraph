public class org.apache.fop.render.ps.PSImageFormResource extends org.apache.xmlgraphics.ps.PSResource
{
    private java.lang.String uri;

    public void <init>(int, java.lang.String)
    {
        org.apache.fop.render.ps.PSImageFormResource this;
        int id;
        java.lang.String uri, $r1, $r2;
        java.lang.StringBuffer $r0;

        this := @this: org.apache.fop.render.ps.PSImageFormResource;
        id := @parameter0: int;
        uri := @parameter1: java.lang.String;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FOPForm:");
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(id);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke this.<org.apache.fop.render.ps.PSImageFormResource: void <init>(java.lang.String,java.lang.String)>($r2, uri);
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.fop.render.ps.PSImageFormResource this;
        java.lang.String name, uri;

        this := @this: org.apache.fop.render.ps.PSImageFormResource;
        name := @parameter0: java.lang.String;
        uri := @parameter1: java.lang.String;
        specialinvoke this.<org.apache.xmlgraphics.ps.PSResource: void <init>(java.lang.String,java.lang.String)>("form", name);
        this.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String uri> = uri;
        return;
    }

    public java.lang.String getImageURI()
    {
        org.apache.fop.render.ps.PSImageFormResource this;
        java.lang.String $r0;

        this := @this: org.apache.fop.render.ps.PSImageFormResource;
        $r0 = this.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String uri>;
        return $r0;
    }
}

public final class org.apache.fop.fo.properties.CommonHyphenation extends java.lang.Object
{
    protected static org.apache.commons.logging.Log log;
    private static final org.apache.fop.fo.properties.PropertyCache cache;
    private int hash;
    public final org.apache.fop.fo.properties.StringProperty language;
    public final org.apache.fop.fo.properties.StringProperty country;
    public final org.apache.fop.fo.properties.StringProperty script;
    public final org.apache.fop.fo.properties.EnumProperty hyphenate;
    public final org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter;
    public final org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount;
    public final org.apache.fop.fo.properties.NumberProperty hyphenationRemainCharacterCount;
    private static final char HYPHEN_MINUS;
    private static final char MINUS_SIGN;
    static java.lang.Class class$org$apache$fop$fo$properties$CommonHyphenation;

    private void <init>(org.apache.fop.fo.properties.StringProperty, org.apache.fop.fo.properties.StringProperty, org.apache.fop.fo.properties.StringProperty, org.apache.fop.fo.properties.EnumProperty, org.apache.fop.fo.properties.CharacterProperty, org.apache.fop.fo.properties.NumberProperty, org.apache.fop.fo.properties.NumberProperty)
    {
        org.apache.fop.fo.properties.CommonHyphenation this;
        org.apache.fop.fo.properties.StringProperty language, country, script;
        org.apache.fop.fo.properties.EnumProperty hyphenate;
        org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter;
        org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount, hyphenationRemainCharacterCount;

        this := @this: org.apache.fop.fo.properties.CommonHyphenation;
        language := @parameter0: org.apache.fop.fo.properties.StringProperty;
        country := @parameter1: org.apache.fop.fo.properties.StringProperty;
        script := @parameter2: org.apache.fop.fo.properties.StringProperty;
        hyphenate := @parameter3: org.apache.fop.fo.properties.EnumProperty;
        hyphenationCharacter := @parameter4: org.apache.fop.fo.properties.CharacterProperty;
        hyphenationPushCharacterCount := @parameter5: org.apache.fop.fo.properties.NumberProperty;
        hyphenationRemainCharacterCount := @parameter6: org.apache.fop.fo.properties.NumberProperty;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.fo.properties.CommonHyphenation: int hash> = 0;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty language> = language;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty country> = country;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty script> = script;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.EnumProperty hyphenate> = hyphenate;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter> = hyphenationCharacter;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount> = hyphenationPushCharacterCount;
        this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationRemainCharacterCount> = hyphenationRemainCharacterCount;
        return;
    }

    public static org.apache.fop.fo.properties.CommonHyphenation getInstance(org.apache.fop.fo.PropertyList) throws org.apache.fop.fo.expr.PropertyException
    {
        org.apache.fop.fo.PropertyList propertyList;
        org.apache.fop.fo.properties.StringProperty language, country, script;
        org.apache.fop.fo.properties.EnumProperty hyphenate;
        org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter;
        org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount, hyphenationRemainCharacterCount;
        org.apache.fop.fo.properties.CommonHyphenation instance, $r1;
        org.apache.fop.fo.properties.Property $r0;
        org.apache.fop.fo.properties.PropertyCache $r2;

        propertyList := @parameter0: org.apache.fop.fo.PropertyList;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(121);
        language = (org.apache.fop.fo.properties.StringProperty) $r0;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(75);
        country = (org.apache.fop.fo.properties.StringProperty) $r0;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(196);
        script = (org.apache.fop.fo.properties.StringProperty) $r0;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(107);
        hyphenate = (org.apache.fop.fo.properties.EnumProperty) $r0;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(108);
        hyphenationCharacter = (org.apache.fop.fo.properties.CharacterProperty) $r0;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(111);
        hyphenationPushCharacterCount = (org.apache.fop.fo.properties.NumberProperty) $r0;
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(112);
        hyphenationRemainCharacterCount = (org.apache.fop.fo.properties.NumberProperty) $r0;
        $r1 = new org.apache.fop.fo.properties.CommonHyphenation;
        specialinvoke $r1.<org.apache.fop.fo.properties.CommonHyphenation: void <init>(org.apache.fop.fo.properties.StringProperty,org.apache.fop.fo.properties.StringProperty,org.apache.fop.fo.properties.StringProperty,org.apache.fop.fo.properties.EnumProperty,org.apache.fop.fo.properties.CharacterProperty,org.apache.fop.fo.properties.NumberProperty,org.apache.fop.fo.properties.NumberProperty)>(language, country, script, hyphenate, hyphenationCharacter, hyphenationPushCharacterCount, hyphenationRemainCharacterCount);
        instance = $r1;
        $r2 = <org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.PropertyCache cache>;
        $r1 = virtualinvoke $r2.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.CommonHyphenation fetch(org.apache.fop.fo.properties.CommonHyphenation)>(instance);
        return $r1;
    }

    public char getHyphChar(org.apache.fop.fonts.Font)
    {
        org.apache.fop.fo.properties.CommonHyphenation this;
        org.apache.fop.fonts.Font font;
        char hyphChar, effHyphChar;
        boolean warn, $z0;
        org.apache.fop.fonts.FontMetrics metrics;
        org.apache.fop.fonts.Typeface typeface;
        org.apache.fop.fo.properties.CharacterProperty $r0;
        java.lang.String $r1, $r2, $r5;
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuffer $r4;
        org.apache.fop.fonts.FontTriplet $r6;

        this := @this: org.apache.fop.fo.properties.CommonHyphenation;
        font := @parameter0: org.apache.fop.fonts.Font;
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter>;
        hyphChar = virtualinvoke $r0.<org.apache.fop.fo.properties.CharacterProperty: char getCharacter()>();
        $z0 = virtualinvoke font.<org.apache.fop.fonts.Font: boolean hasChar(char)>(hyphChar);
        if $z0 == 0 goto label0;

        return hyphChar;

     label0:
        effHyphChar = hyphChar;
        warn = 0;
        $z0 = virtualinvoke font.<org.apache.fop.fonts.Font: boolean hasChar(char)>(45);
        if $z0 == 0 goto label1;

        effHyphChar = 45;
        warn = 1;
        goto label6;

     label1:
        $z0 = virtualinvoke font.<org.apache.fop.fonts.Font: boolean hasChar(char)>(8722);
        if $z0 == 0 goto label4;

        effHyphChar = 8722;
        metrics = virtualinvoke font.<org.apache.fop.fonts.Font: org.apache.fop.fonts.FontMetrics getFontMetrics()>();
        $z0 = metrics instanceof org.apache.fop.fonts.Typeface;
        if $z0 == 0 goto label3;

        typeface = (org.apache.fop.fonts.Typeface) metrics;
        $r1 = "SymbolEncoding";
        $r2 = virtualinvoke typeface.<org.apache.fop.fonts.Typeface: java.lang.String getEncoding()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label2;

        goto label3;

     label2:
        warn = 1;

     label3:
        goto label6;

     label4:
        effHyphChar = 32;
        metrics = virtualinvoke font.<org.apache.fop.fonts.Font: org.apache.fop.fonts.FontMetrics getFontMetrics()>();
        $z0 = metrics instanceof org.apache.fop.fonts.Typeface;
        if $z0 == 0 goto label6;

        typeface = (org.apache.fop.fonts.Typeface) metrics;
        $r1 = "ZapfDingbatsEncoding";
        $r2 = virtualinvoke typeface.<org.apache.fop.fonts.Typeface: java.lang.String getEncoding()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label5;

        goto label6;

     label5:
        warn = 1;

     label6:
        if warn == 0 goto label7;

        $r3 = <org.apache.fop.fo.properties.CommonHyphenation: org.apache.commons.logging.Log log>;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Substituted specified hyphenation character (0x");
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(hyphChar);
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") with 0x");
        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(effHyphChar);
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" because the font doesn\'t have the specified hyphenation character: ");
        $r6 = virtualinvoke font.<org.apache.fop.fonts.Font: org.apache.fop.fonts.FontTriplet getFontTriplet()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r2);

     label7:
        return effHyphChar;
    }

    public int getHyphIPD(org.apache.fop.fonts.Font)
    {
        org.apache.fop.fo.properties.CommonHyphenation this;
        org.apache.fop.fonts.Font font;
        char hyphChar;
        int $i0;

        this := @this: org.apache.fop.fo.properties.CommonHyphenation;
        font := @parameter0: org.apache.fop.fonts.Font;
        hyphChar = virtualinvoke this.<org.apache.fop.fo.properties.CommonHyphenation: char getHyphChar(org.apache.fop.fonts.Font)>(font);
        $i0 = virtualinvoke font.<org.apache.fop.fonts.Font: int getCharWidth(char)>(hyphChar);
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.fo.properties.CommonHyphenation this, ch;
        java.lang.Object obj;
        boolean $z0;
        org.apache.fop.fo.properties.StringProperty $r0, $r1;
        org.apache.fop.fo.properties.EnumProperty $r2, $r3;
        org.apache.fop.fo.properties.CharacterProperty $r4, $r5;
        org.apache.fop.fo.properties.NumberProperty $r6, $r7;

        this := @this: org.apache.fop.fo.properties.CommonHyphenation;
        obj := @parameter0: java.lang.Object;
        if obj != this goto label0;

        return 1;

     label0:
        $z0 = obj instanceof org.apache.fop.fo.properties.CommonHyphenation;
        if $z0 == 0 goto label3;

        ch = (org.apache.fop.fo.properties.CommonHyphenation) obj;
        $r0 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty language>;
        $r1 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty language>;
        if $r0 != $r1 goto label1;

        $r0 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty country>;
        $r1 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty country>;
        if $r0 != $r1 goto label1;

        $r0 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty script>;
        $r1 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty script>;
        if $r0 != $r1 goto label1;

        $r2 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.EnumProperty hyphenate>;
        $r3 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.EnumProperty hyphenate>;
        if $r2 != $r3 goto label1;

        $r4 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter>;
        $r5 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter>;
        if $r4 != $r5 goto label1;

        $r6 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount>;
        $r7 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount>;
        if $r6 != $r7 goto label1;

        $r6 = ch.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationRemainCharacterCount>;
        $r7 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationRemainCharacterCount>;
        if $r6 != $r7 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.fop.fo.properties.CommonHyphenation this;
        byte hash;
        int $i0, $i1, hash;
        org.apache.fop.fo.properties.StringProperty $r0;
        org.apache.fop.fo.properties.EnumProperty $r1;
        org.apache.fop.fo.properties.CharacterProperty $r2;
        org.apache.fop.fo.properties.NumberProperty $r3;

        this := @this: org.apache.fop.fo.properties.CommonHyphenation;
        $i0 = this.<org.apache.fop.fo.properties.CommonHyphenation: int hash>;
        if $i0 != 0 goto label14;

        hash = 17;
        $i0 = 37 * hash;
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty language>;
        if $r0 != null goto label0;

        $i1 = 0;
        goto label1;

     label0:
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty language>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fo.properties.StringProperty: int hashCode()>();

     label1:
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty script>;
        if $r0 != null goto label2;

        $i1 = 0;
        goto label3;

     label2:
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty script>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fo.properties.StringProperty: int hashCode()>();

     label3:
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty country>;
        if $r0 != null goto label4;

        $i1 = 0;
        goto label5;

     label4:
        $r0 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.StringProperty country>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fo.properties.StringProperty: int hashCode()>();

     label5:
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r1 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.EnumProperty hyphenate>;
        if $r1 != null goto label6;

        $i1 = 0;
        goto label7;

     label6:
        $r1 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.EnumProperty hyphenate>;
        $i1 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int hashCode()>();

     label7:
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r2 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter>;
        if $r2 != null goto label8;

        $i1 = 0;
        goto label9;

     label8:
        $r2 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.CharacterProperty hyphenationCharacter>;
        $i1 = virtualinvoke $r2.<org.apache.fop.fo.properties.CharacterProperty: int hashCode()>();

     label9:
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r3 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount>;
        if $r3 != null goto label10;

        $i1 = 0;
        goto label11;

     label10:
        $r3 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationPushCharacterCount>;
        $i1 = virtualinvoke $r3.<org.apache.fop.fo.properties.NumberProperty: int hashCode()>();

     label11:
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r3 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationRemainCharacterCount>;
        if $r3 != null goto label12;

        $i1 = 0;
        goto label13;

     label12:
        $r3 = this.<org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.NumberProperty hyphenationRemainCharacterCount>;
        $i1 = virtualinvoke $r3.<org.apache.fop.fo.properties.NumberProperty: int hashCode()>();

     label13:
        hash = $i0 + $i1;

     label14:
        $i0 = this.<org.apache.fop.fo.properties.CommonHyphenation: int hash>;
        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;
        org.apache.fop.fo.properties.PropertyCache $r2;

        $r0 = <org.apache.fop.fo.properties.CommonHyphenation: java.lang.Class class$org$apache$fop$fo$properties$CommonHyphenation>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.fo.properties.CommonHyphenation: java.lang.Class class$(java.lang.String)>("org.apache.fop.fo.properties.CommonHyphenation");
        <org.apache.fop.fo.properties.CommonHyphenation: java.lang.Class class$org$apache$fop$fo$properties$CommonHyphenation> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.fo.properties.CommonHyphenation: java.lang.Class class$org$apache$fop$fo$properties$CommonHyphenation>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.fo.properties.CommonHyphenation: org.apache.commons.logging.Log log> = $r1;
        $r2 = new org.apache.fop.fo.properties.PropertyCache;
        specialinvoke $r2.<org.apache.fop.fo.properties.PropertyCache: void <init>()>();
        <org.apache.fop.fo.properties.CommonHyphenation: org.apache.fop.fo.properties.PropertyCache cache> = $r2;
        return;
    }
}

public class org.apache.fop.layoutmgr.BreakElement extends org.apache.fop.layoutmgr.UnresolvedListElement
{
    private int penaltyWidth;
    private int penaltyValue;
    private int breakClass;
    private java.util.List pendingBeforeMarks;
    private java.util.List pendingAfterMarks;

    public void <init>(org.apache.fop.layoutmgr.Position, int, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.BreakElement this;
        org.apache.fop.layoutmgr.Position position;
        int penaltyValue;
        org.apache.fop.layoutmgr.LayoutContext context;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        position := @parameter0: org.apache.fop.layoutmgr.Position;
        penaltyValue := @parameter1: int;
        context := @parameter2: org.apache.fop.layoutmgr.LayoutContext;
        specialinvoke this.<org.apache.fop.layoutmgr.BreakElement: void <init>(org.apache.fop.layoutmgr.Position,int,int,int,org.apache.fop.layoutmgr.LayoutContext)>(position, 0, penaltyValue, -1, context);
        return;
    }

    public void <init>(org.apache.fop.layoutmgr.Position, int, int, int, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.BreakElement this;
        org.apache.fop.layoutmgr.Position position;
        int penaltyWidth, penaltyValue, breakClass;
        org.apache.fop.layoutmgr.LayoutContext context;
        java.util.List $r0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        position := @parameter0: org.apache.fop.layoutmgr.Position;
        penaltyWidth := @parameter1: int;
        penaltyValue := @parameter2: int;
        breakClass := @parameter3: int;
        context := @parameter4: org.apache.fop.layoutmgr.LayoutContext;
        specialinvoke this.<org.apache.fop.layoutmgr.UnresolvedListElement: void <init>(org.apache.fop.layoutmgr.Position)>(position);
        this.<org.apache.fop.layoutmgr.BreakElement: int breakClass> = -1;
        this.<org.apache.fop.layoutmgr.BreakElement: int penaltyWidth> = penaltyWidth;
        this.<org.apache.fop.layoutmgr.BreakElement: int penaltyValue> = penaltyValue;
        this.<org.apache.fop.layoutmgr.BreakElement: int breakClass> = breakClass;
        $r0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: java.util.List getPendingBeforeMarks()>();
        this.<org.apache.fop.layoutmgr.BreakElement: java.util.List pendingBeforeMarks> = $r0;
        $r0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: java.util.List getPendingAfterMarks()>();
        this.<org.apache.fop.layoutmgr.BreakElement: java.util.List pendingAfterMarks> = $r0;
        return;
    }

    public boolean isConditional()
    {
        org.apache.fop.layoutmgr.BreakElement this;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        return 0;
    }

    public int getPenaltyWidth()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $i0 = this.<org.apache.fop.layoutmgr.BreakElement: int penaltyWidth>;
        return $i0;
    }

    public int getPenaltyValue()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $i0 = this.<org.apache.fop.layoutmgr.BreakElement: int penaltyValue>;
        return $i0;
    }

    public void setPenaltyValue(int)
    {
        org.apache.fop.layoutmgr.BreakElement this;
        int p;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        p := @parameter0: int;
        this.<org.apache.fop.layoutmgr.BreakElement: int penaltyValue> = p;
        return;
    }

    public boolean isForcedBreak()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $i0 = this.<org.apache.fop.layoutmgr.BreakElement: int penaltyValue>;
        if $i0 != -1000 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public int getBreakClass()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $i0 = this.<org.apache.fop.layoutmgr.BreakElement: int breakClass>;
        return $i0;
    }

    public void setBreakClass(int)
    {
        org.apache.fop.layoutmgr.BreakElement this;
        int breakClass;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        breakClass := @parameter0: int;
        this.<org.apache.fop.layoutmgr.BreakElement: int breakClass> = breakClass;
        return;
    }

    public java.util.List getPendingBeforeMarks()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        java.util.List $r0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $r0 = this.<org.apache.fop.layoutmgr.BreakElement: java.util.List pendingBeforeMarks>;
        return $r0;
    }

    public java.util.List getPendingAfterMarks()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        java.util.List $r0;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $r0 = this.<org.apache.fop.layoutmgr.BreakElement: java.util.List pendingAfterMarks>;
        return $r0;
    }

    public void clearPendingMarks()
    {
        org.apache.fop.layoutmgr.BreakElement this;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        this.<org.apache.fop.layoutmgr.BreakElement: java.util.List pendingBeforeMarks> = null;
        this.<org.apache.fop.layoutmgr.BreakElement: java.util.List pendingAfterMarks> = null;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.BreakElement this;
        java.lang.StringBuffer $r0, sb;
        int $i0, $i1;
        boolean $z0;
        java.lang.String $r1;

        this := @this: org.apache.fop.layoutmgr.BreakElement;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("BreakPossibility[p:");
        $i0 = this.<org.apache.fop.layoutmgr.BreakElement: int penaltyValue>;
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.BreakElement: boolean isForcedBreak()>();
        if $z0 == 0 goto label5;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (forced break");
        $i1 = virtualinvoke this.<org.apache.fop.layoutmgr.BreakElement: int getBreakClass()>();
        lookupswitch($i1)
        {
            case 28: goto label1;
            case 44: goto label2;
            case 100: goto label3;
            case 104: goto label0;
            default: goto label4;
        };

     label0:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", page");
        goto label4;

     label1:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", column");
        goto label4;

     label2:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", even page");
        goto label4;

     label3:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", odd page");
        goto label4;

     label4:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

     label5:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; w:");
        $i0 = this.<org.apache.fop.layoutmgr.BreakElement: int penaltyWidth>;
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }
}

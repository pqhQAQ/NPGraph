public class org.apache.fop.pdf.PDFArray extends org.apache.fop.pdf.PDFObject
{
    protected java.util.List values;

    public void <init>(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFArray this;
        org.apache.fop.pdf.PDFObject parent;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.pdf.PDFArray;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFArray: java.util.List values> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.fop.pdf.PDFArray this;

        this := @this: org.apache.fop.pdf.PDFArray;
        specialinvoke this.<org.apache.fop.pdf.PDFArray: void <init>(org.apache.fop.pdf.PDFObject)>(null);
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFObject, int[])
    {
        org.apache.fop.pdf.PDFArray this;
        org.apache.fop.pdf.PDFObject parent;
        int[] values;
        int i, c, $i0;
        java.util.ArrayList $r0;
        java.util.List $r1;
        java.lang.Integer $r2;

        this := @this: org.apache.fop.pdf.PDFArray;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        values := @parameter1: int[];
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFArray: java.util.List values> = $r0;
        i = 0;
        c = lengthof values;

     label0:
        if i >= c goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $r2 = new java.lang.Integer;
        $i0 = values[i];
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i0);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFObject, double[])
    {
        org.apache.fop.pdf.PDFArray this;
        org.apache.fop.pdf.PDFObject parent;
        double[] values;
        int i, c;
        java.util.ArrayList $r0;
        java.util.List $r1;
        java.lang.Double $r2;
        double $d0;

        this := @this: org.apache.fop.pdf.PDFArray;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        values := @parameter1: double[];
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFArray: java.util.List values> = $r0;
        i = 0;
        c = lengthof values;

     label0:
        if i >= c goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $r2 = new java.lang.Double;
        $d0 = values[i];
        specialinvoke $r2.<java.lang.Double: void <init>(double)>($d0);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFObject, java.util.Collection)
    {
        org.apache.fop.pdf.PDFArray this;
        org.apache.fop.pdf.PDFObject parent;
        java.util.Collection values;
        java.util.ArrayList $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFArray;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        values := @parameter1: java.util.Collection;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFArray: java.util.List values> = $r0;
        $r1 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        interfaceinvoke $r1.<java.util.List: boolean addAll(java.util.Collection)>(values);
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFObject, java.lang.Object[])
    {
        org.apache.fop.pdf.PDFArray this;
        org.apache.fop.pdf.PDFObject parent;
        java.lang.Object[] values;
        int i, c;
        java.util.ArrayList $r0;
        java.util.List $r1;
        java.lang.Object $r2;

        this := @this: org.apache.fop.pdf.PDFArray;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        values := @parameter1: java.lang.Object[];
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFArray: java.util.List values> = $r0;
        i = 0;
        c = lengthof values;

     label0:
        if i >= c goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $r2 = values[i];
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    public int length()
    {
        org.apache.fop.pdf.PDFArray this;
        java.util.List $r0;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFArray;
        $r0 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        return $i0;
    }

    public void set(int, java.lang.Object)
    {
        org.apache.fop.pdf.PDFArray this;
        int index;
        java.lang.Object obj;
        java.util.List $r0;

        this := @this: org.apache.fop.pdf.PDFArray;
        index := @parameter0: int;
        obj := @parameter1: java.lang.Object;
        $r0 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(index, obj);
        return;
    }

    public void set(int, double)
    {
        org.apache.fop.pdf.PDFArray this;
        int index;
        double value;
        java.lang.Double $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFArray;
        index := @parameter0: int;
        value := @parameter1: double;
        $r1 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $r0 = new java.lang.Double;
        specialinvoke $r0.<java.lang.Double: void <init>(double)>(value);
        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(index, $r0);
        return;
    }

    public java.lang.Object get(int)
    {
        org.apache.fop.pdf.PDFArray this;
        int index;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.pdf.PDFArray;
        index := @parameter0: int;
        $r0 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(index);
        return $r1;
    }

    public void add(java.lang.Object)
    {
        org.apache.fop.pdf.PDFArray this;
        java.lang.Object obj;
        org.apache.fop.pdf.PDFObject pdfObj;
        boolean $z0;
        java.util.List $r0;

        this := @this: org.apache.fop.pdf.PDFArray;
        obj := @parameter0: java.lang.Object;
        $z0 = obj instanceof org.apache.fop.pdf.PDFObject;
        if $z0 == 0 goto label0;

        pdfObj = (org.apache.fop.pdf.PDFObject) obj;
        $z0 = virtualinvoke pdfObj.<org.apache.fop.pdf.PDFObject: boolean hasObjectNumber()>();
        if $z0 != 0 goto label0;

        virtualinvoke pdfObj.<org.apache.fop.pdf.PDFObject: void setParent(org.apache.fop.pdf.PDFObject)>(this);

     label0:
        $r0 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(obj);
        return;
    }

    public void add(double)
    {
        org.apache.fop.pdf.PDFArray this;
        double value;
        java.lang.Double $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFArray;
        value := @parameter0: double;
        $r1 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $r0 = new java.lang.Double;
        specialinvoke $r0.<java.lang.Double: void <init>(double)>(value);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);
        return;
    }

    protected int output(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFArray this;
        java.io.OutputStream stream;
        org.apache.commons.io.output.CountingOutputStream $r0, cout;
        java.io.Writer writer;
        int i, $i0, $i1;
        java.lang.Object obj;
        boolean $z0;
        java.lang.String $r1;
        java.util.List $r2, $r3;

        this := @this: org.apache.fop.pdf.PDFArray;
        stream := @parameter0: java.io.OutputStream;
        $r0 = new org.apache.commons.io.output.CountingOutputStream;
        specialinvoke $r0.<org.apache.commons.io.output.CountingOutputStream: void <init>(java.io.OutputStream)>(stream);
        cout = $r0;
        writer = staticinvoke <org.apache.fop.pdf.PDFDocument: java.io.Writer getWriterFor(java.io.OutputStream)>(cout);
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFArray: boolean hasObjectNumber()>();
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFArray: java.lang.String getObjectID()>();
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r1);

     label0:
        virtualinvoke writer.<java.io.Writer: void write(int)>(91);
        i = 0;

     label1:
        $r2 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        if i >= $i0 goto label3;

        if i <= 0 goto label2;

        virtualinvoke writer.<java.io.Writer: void write(int)>(32);

     label2:
        $r3 = this.<org.apache.fop.pdf.PDFArray: java.util.List values>;
        obj = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i);
        virtualinvoke this.<org.apache.fop.pdf.PDFArray: void formatObject(java.lang.Object,java.io.OutputStream,java.io.Writer)>(obj, cout, writer);
        i = i + 1;
        goto label1;

     label3:
        virtualinvoke writer.<java.io.Writer: void write(int)>(93);
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFArray: boolean hasObjectNumber()>();
        if $z0 == 0 goto label4;

        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>("\nendobj\n");

     label4:
        virtualinvoke writer.<java.io.Writer: void flush()>();
        $i1 = virtualinvoke cout.<org.apache.commons.io.output.CountingOutputStream: int getCount()>();
        return $i1;
    }
}

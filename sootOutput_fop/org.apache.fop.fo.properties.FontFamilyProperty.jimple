public final class org.apache.fop.fo.properties.FontFamilyProperty extends org.apache.fop.fo.properties.ListProperty
{
    private static final org.apache.fop.fo.properties.PropertyCache cache;
    private int hash;

    private void <init>(org.apache.fop.fo.properties.Property)
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;
        org.apache.fop.fo.properties.Property prop;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        prop := @parameter0: org.apache.fop.fo.properties.Property;
        specialinvoke this.<org.apache.fop.fo.properties.ListProperty: void <init>()>();
        this.<org.apache.fop.fo.properties.FontFamilyProperty: int hash> = 0;
        virtualinvoke this.<org.apache.fop.fo.properties.FontFamilyProperty: void addProperty(org.apache.fop.fo.properties.Property)>(prop);
        return;
    }

    private void <init>()
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        specialinvoke this.<org.apache.fop.fo.properties.ListProperty: void <init>()>();
        this.<org.apache.fop.fo.properties.FontFamilyProperty: int hash> = 0;
        return;
    }

    public void addProperty(org.apache.fop.fo.properties.Property)
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;
        org.apache.fop.fo.properties.Property prop;
        java.util.List $r0, $r1;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        prop := @parameter0: org.apache.fop.fo.properties.Property;
        $r0 = virtualinvoke prop.<org.apache.fop.fo.properties.Property: java.util.List getList()>();
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        $r1 = virtualinvoke prop.<org.apache.fop.fo.properties.Property: java.util.List getList()>();
        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r1);
        goto label1;

     label0:
        specialinvoke this.<org.apache.fop.fo.properties.ListProperty: void addProperty(org.apache.fop.fo.properties.Property)>(prop);

     label1:
        return;
    }

    public java.lang.String getString()
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;
        org.apache.fop.fo.properties.Property first;
        java.util.List $r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        $r0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 <= 0 goto label0;

        $r0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(0);
        first = (org.apache.fop.fo.properties.Property) $r1;
        $r2 = virtualinvoke first.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        return $r2;

     label0:
        $r2 = specialinvoke this.<org.apache.fop.fo.properties.ListProperty: java.lang.String getString()>();
        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.fo.properties.FontFamilyProperty this, ffp;
        java.lang.Object o;
        boolean $z0;
        java.util.List $r0, $r1;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        o := @parameter0: java.lang.Object;
        if this != o goto label0;

        return 1;

     label0:
        $z0 = o instanceof org.apache.fop.fo.properties.FontFamilyProperty;
        if $z0 == 0 goto label3;

        ffp = (org.apache.fop.fo.properties.FontFamilyProperty) o;
        $r0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        if $r0 == null goto label1;

        $r0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        $r1 = ffp.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;
        int hash, $i0, $i1;
        java.util.Iterator i;
        org.apache.fop.fo.properties.Property p;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        $i0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: int hash>;
        if $i0 != 0 goto label4;

        hash = 17;
        $r0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: java.util.List list>;
        i = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        p = (org.apache.fop.fo.properties.Property) $r1;
        $i0 = 37 * hash;
        if p != null goto label1;

        $i1 = 0;
        goto label2;

     label1:
        $i1 = virtualinvoke p.<java.lang.Object: int hashCode()>();

     label2:
        hash = $i0 + $i1;
        goto label0;

     label3:
        this.<org.apache.fop.fo.properties.FontFamilyProperty: int hash> = hash;

     label4:
        $i0 = this.<org.apache.fop.fo.properties.FontFamilyProperty: int hash>;
        return $i0;
    }

    void <init>(org.apache.fop.fo.properties.FontFamilyProperty$1)
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;
        org.apache.fop.fo.properties.FontFamilyProperty$1 x0;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        x0 := @parameter0: org.apache.fop.fo.properties.FontFamilyProperty$1;
        specialinvoke this.<org.apache.fop.fo.properties.FontFamilyProperty: void <init>()>();
        return;
    }

    static org.apache.fop.fo.properties.PropertyCache access$100()
    {
        org.apache.fop.fo.properties.PropertyCache $r0;

        $r0 = <org.apache.fop.fo.properties.FontFamilyProperty: org.apache.fop.fo.properties.PropertyCache cache>;
        return $r0;
    }

    void <init>(org.apache.fop.fo.properties.Property, org.apache.fop.fo.properties.FontFamilyProperty$1)
    {
        org.apache.fop.fo.properties.FontFamilyProperty this;
        org.apache.fop.fo.properties.Property x0;
        org.apache.fop.fo.properties.FontFamilyProperty$1 x1;

        this := @this: org.apache.fop.fo.properties.FontFamilyProperty;
        x0 := @parameter0: org.apache.fop.fo.properties.Property;
        x1 := @parameter1: org.apache.fop.fo.properties.FontFamilyProperty$1;
        specialinvoke this.<org.apache.fop.fo.properties.FontFamilyProperty: void <init>(org.apache.fop.fo.properties.Property)>(x0);
        return;
    }

    static void <clinit>()
    {
        org.apache.fop.fo.properties.PropertyCache $r0;

        $r0 = new org.apache.fop.fo.properties.PropertyCache;
        specialinvoke $r0.<org.apache.fop.fo.properties.PropertyCache: void <init>()>();
        <org.apache.fop.fo.properties.FontFamilyProperty: org.apache.fop.fo.properties.PropertyCache cache> = $r0;
        return;
    }
}

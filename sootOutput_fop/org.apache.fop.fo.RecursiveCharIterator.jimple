public class org.apache.fop.fo.RecursiveCharIterator extends org.apache.fop.fo.CharIterator
{
    private org.apache.fop.fo.FONode fobj;
    private java.util.Iterator childIter;
    private org.apache.fop.fo.FONode curChild;
    private org.apache.fop.fo.CharIterator curCharIter;

    public void <init>(org.apache.fop.fo.FObj)
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        org.apache.fop.fo.FObj fobj;
        org.apache.fop.fo.FONode$FONodeIterator $r0;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        fobj := @parameter0: org.apache.fop.fo.FObj;
        specialinvoke this.<org.apache.fop.fo.CharIterator: void <init>()>();
        this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter> = null;
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter> = null;
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode fobj> = fobj;
        $r0 = virtualinvoke fobj.<org.apache.fop.fo.FObj: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();
        this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter> = $r0;
        specialinvoke this.<org.apache.fop.fo.RecursiveCharIterator: void getNextCharIter()>();
        return;
    }

    public void <init>(org.apache.fop.fo.FObj, org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        org.apache.fop.fo.FObj fobj;
        org.apache.fop.fo.FONode child;
        org.apache.fop.fo.FONode$FONodeIterator $r0;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        fobj := @parameter0: org.apache.fop.fo.FObj;
        child := @parameter1: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.CharIterator: void <init>()>();
        this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter> = null;
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter> = null;
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode fobj> = fobj;
        $r0 = virtualinvoke fobj.<org.apache.fop.fo.FObj: org.apache.fop.fo.FONode$FONodeIterator getChildNodes(org.apache.fop.fo.FONode)>(child);
        this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter> = $r0;
        specialinvoke this.<org.apache.fop.fo.RecursiveCharIterator: void getNextCharIter()>();
        return;
    }

    public org.apache.fop.fo.CharIterator mark()
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        java.lang.Object $r0;
        org.apache.fop.fo.CharIterator $r1;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        $r0 = virtualinvoke this.<org.apache.fop.fo.RecursiveCharIterator: java.lang.Object clone()>();
        $r1 = (org.apache.fop.fo.CharIterator) $r0;
        return $r1;
    }

    public java.lang.Object clone()
    {
        org.apache.fop.fo.RecursiveCharIterator this, ci;
        java.lang.Object $r0, $r6;
        org.apache.fop.fo.FONode $r1, $r2;
        org.apache.fop.fo.FONode$FONodeIterator $r3;
        java.util.Iterator $r4;
        org.apache.fop.fo.CharIterator $r5;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        $r0 = specialinvoke this.<org.apache.fop.fo.CharIterator: java.lang.Object clone()>();
        ci = (org.apache.fop.fo.RecursiveCharIterator) $r0;
        $r1 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode fobj>;
        $r2 = ci.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode curChild>;
        $r3 = virtualinvoke $r1.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode$FONodeIterator getChildNodes(org.apache.fop.fo.FONode)>($r2);
        ci.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter> = $r3;
        $r4 = ci.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter>;
        interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();
        $r5 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        $r6 = virtualinvoke $r5.<org.apache.fop.fo.CharIterator: java.lang.Object clone()>();
        $r5 = (org.apache.fop.fo.CharIterator) $r6;
        ci.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter> = $r5;
        return ci;
    }

    public void replaceChar(char)
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        char c;
        org.apache.fop.fo.CharIterator $r0;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        c := @parameter0: char;
        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        virtualinvoke $r0.<org.apache.fop.fo.CharIterator: void replaceChar(char)>(c);

     label0:
        return;
    }

    private void getNextCharIter()
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        java.util.Iterator $r0, $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.apache.fop.fo.FONode $r3;
        org.apache.fop.fo.CharIterator $r4;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter>;
        $z0 = interfaceinvoke $r0.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label0;

        $r1 = this.<org.apache.fop.fo.RecursiveCharIterator: java.util.Iterator childIter>;
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();
        $r3 = (org.apache.fop.fo.FONode) $r2;
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode curChild> = $r3;
        $r3 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode curChild>;
        $r4 = virtualinvoke $r3.<org.apache.fop.fo.FONode: org.apache.fop.fo.CharIterator charIterator()>();
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter> = $r4;
        goto label1;

     label0:
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.FONode curChild> = null;
        this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter> = null;

     label1:
        return;
    }

    public boolean hasNext()
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        org.apache.fop.fo.CharIterator $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;

     label0:
        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        if $r0 == null goto label2;

        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.CharIterator: boolean hasNext()>();
        if $z0 != 0 goto label1;

        specialinvoke this.<org.apache.fop.fo.RecursiveCharIterator: void getNextCharIter()>();
        goto label0;

     label1:
        return 1;

     label2:
        return 0;
    }

    public char nextChar() throws java.util.NoSuchElementException
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        org.apache.fop.fo.CharIterator $r0;
        char $c0;
        java.util.NoSuchElementException $r1;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        $c0 = virtualinvoke $r0.<org.apache.fop.fo.CharIterator: char nextChar()>();
        return $c0;

     label0:
        $r1 = new java.util.NoSuchElementException;
        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();
        throw $r1;
    }

    public void remove()
    {
        org.apache.fop.fo.RecursiveCharIterator this;
        org.apache.fop.fo.CharIterator $r0;

        this := @this: org.apache.fop.fo.RecursiveCharIterator;
        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.fo.RecursiveCharIterator: org.apache.fop.fo.CharIterator curCharIter>;
        virtualinvoke $r0.<org.apache.fop.fo.CharIterator: void remove()>();

     label0:
        return;
    }
}

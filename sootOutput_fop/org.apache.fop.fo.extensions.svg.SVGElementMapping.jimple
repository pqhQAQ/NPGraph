public class org.apache.fop.fo.extensions.svg.SVGElementMapping extends org.apache.fop.fo.ElementMapping
{
    public static final java.lang.String URI;
    protected org.apache.commons.logging.Log log;
    private boolean batikAvailable;
    static java.lang.Class class$org$apache$fop$fo$extensions$svg$SVGElementMapping;

    public void <init>()
    {
        org.apache.fop.fo.extensions.svg.SVGElementMapping this;
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r2;

        this := @this: org.apache.fop.fo.extensions.svg.SVGElementMapping;
        specialinvoke this.<org.apache.fop.fo.ElementMapping: void <init>()>();
        $r0 = <org.apache.fop.fo.extensions.svg.SVGElementMapping: java.lang.Class class$org$apache$fop$fo$extensions$svg$SVGElementMapping>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.fo.extensions.svg.SVGElementMapping: java.lang.Class class$(java.lang.String)>("org.apache.fop.fo.extensions.svg.SVGElementMapping");
        <org.apache.fop.fo.extensions.svg.SVGElementMapping: java.lang.Class class$org$apache$fop$fo$extensions$svg$SVGElementMapping> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.fo.extensions.svg.SVGElementMapping: java.lang.Class class$org$apache$fop$fo$extensions$svg$SVGElementMapping>;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: org.apache.commons.logging.Log log> = $r2;
        this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: boolean batikAvailable> = 1;
        this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: java.lang.String namespaceURI> = "http://www.w3.org/2000/svg";
        return;
    }

    public org.w3c.dom.DOMImplementation getDOMImplementation()
    {
        org.apache.fop.fo.extensions.svg.SVGElementMapping this;
        org.w3c.dom.DOMImplementation $r0;

        this := @this: org.apache.fop.fo.extensions.svg.SVGElementMapping;
        $r0 = staticinvoke <org.apache.batik.dom.svg.SVGDOMImplementation: org.w3c.dom.DOMImplementation getDOMImplementation()>();
        return $r0;
    }

    private java.lang.String getAParserClassName()
    {
        org.apache.fop.fo.extensions.svg.SVGElementMapping this;
        javax.xml.parsers.SAXParserFactory factory;
        java.lang.Exception e, $r4;
        javax.xml.parsers.SAXParser $r0;
        org.xml.sax.XMLReader $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.fo.extensions.svg.SVGElementMapping;

     label0:
        factory = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        $r0 = virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        e = $r4;
        return null;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    protected void initialize()
    {
        org.apache.fop.fo.extensions.svg.SVGElementMapping this;
        java.util.HashMap $r0, $r1;
        java.lang.Throwable t, $r6;
        boolean $z0;
        java.lang.String $r2;
        org.apache.fop.fo.extensions.svg.SVGElementMapping$SE $r3;
        org.apache.fop.fo.extensions.svg.SVGElementMapping$SVGMaker $r5;
        org.apache.commons.logging.Log $r7;

        this := @this: org.apache.fop.fo.extensions.svg.SVGElementMapping;
        $r1 = this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: java.util.HashMap foObjs>;
        if $r1 != null goto label3;

        $z0 = this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: boolean batikAvailable>;
        if $z0 == 0 goto label3;

     label0:
        $r2 = specialinvoke this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: java.lang.String getAParserClassName()>();
        staticinvoke <org.apache.batik.util.XMLResourceDescriptor: void setXMLParserClassName(java.lang.String)>($r2);
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: java.util.HashMap foObjs> = $r0;
        $r1 = this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: java.util.HashMap foObjs>;
        $r3 = new org.apache.fop.fo.extensions.svg.SVGElementMapping$SE;
        specialinvoke $r3.<org.apache.fop.fo.extensions.svg.SVGElementMapping$SE: void <init>()>();
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("svg", $r3);
        $r1 = this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: java.util.HashMap foObjs>;
        $r5 = new org.apache.fop.fo.extensions.svg.SVGElementMapping$SVGMaker;
        specialinvoke $r5.<org.apache.fop.fo.extensions.svg.SVGElementMapping$SVGMaker: void <init>()>();
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("<default>", $r5);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        t = $r6;
        $r7 = this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: org.apache.commons.logging.Log log>;
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>("Error while initializing the Batik SVG extensions", t);
        this.<org.apache.fop.fo.extensions.svg.SVGElementMapping: boolean batikAvailable> = 0;

     label3:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
    }

    public java.lang.String getStandardPrefix()
    {
        org.apache.fop.fo.extensions.svg.SVGElementMapping this;

        this := @this: org.apache.fop.fo.extensions.svg.SVGElementMapping;
        return "svg";
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

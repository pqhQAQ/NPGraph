public class org.apache.fop.svg.PDFFlowTextPainter extends org.apache.fop.svg.PDFTextPainter
{

    public void <init>(org.apache.fop.fonts.FontInfo)
    {
        org.apache.fop.svg.PDFFlowTextPainter this;
        org.apache.fop.fonts.FontInfo fontInfo;

        this := @this: org.apache.fop.svg.PDFFlowTextPainter;
        fontInfo := @parameter0: org.apache.fop.fonts.FontInfo;
        specialinvoke this.<org.apache.fop.svg.PDFTextPainter: void <init>(org.apache.fop.fonts.FontInfo)>(fontInfo);
        return;
    }

    public java.util.List getTextRuns(org.apache.batik.gvt.TextNode, java.text.AttributedCharacterIterator)
    {
        org.apache.fop.svg.PDFFlowTextPainter this;
        org.apache.batik.gvt.TextNode node;
        java.text.AttributedCharacterIterator aci;
        org.apache.batik.gvt.TextPainter $r0;
        org.apache.batik.gvt.flow.FlowTextPainter delegate;
        java.util.List $r1;

        this := @this: org.apache.fop.svg.PDFFlowTextPainter;
        node := @parameter0: org.apache.batik.gvt.TextNode;
        aci := @parameter1: java.text.AttributedCharacterIterator;
        $r0 = staticinvoke <org.apache.batik.gvt.flow.FlowTextPainter: org.apache.batik.gvt.TextPainter getInstance()>();
        delegate = (org.apache.batik.gvt.flow.FlowTextPainter) $r0;
        $r1 = virtualinvoke delegate.<org.apache.batik.gvt.flow.FlowTextPainter: java.util.List getTextRuns(org.apache.batik.gvt.TextNode,java.text.AttributedCharacterIterator)>(node, aci);
        return $r1;
    }
}

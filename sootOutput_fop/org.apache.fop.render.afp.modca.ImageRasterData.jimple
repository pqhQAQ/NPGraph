public class org.apache.fop.render.afp.modca.ImageRasterData extends org.apache.fop.render.afp.modca.AbstractAFPObject
{
    private byte[] rasterData;

    public void <init>(byte[])
    {
        org.apache.fop.render.afp.modca.ImageRasterData this;
        byte[] data;

        this := @this: org.apache.fop.render.afp.modca.ImageRasterData;
        data := @parameter0: byte[];
        specialinvoke this.<org.apache.fop.render.afp.modca.AbstractAFPObject: void <init>()>();
        this.<org.apache.fop.render.afp.modca.ImageRasterData: byte[] rasterData> = data;
        return;
    }

    public void writeDataStream(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.ImageRasterData this;
        java.io.OutputStream os;
        byte[] data, x, $r0, $r1;
        int $i0;
        byte $b1;

        this := @this: org.apache.fop.render.afp.modca.ImageRasterData;
        os := @parameter0: java.io.OutputStream;
        data = newarray (byte)[9];
        data[0] = 90;
        $r0 = this.<org.apache.fop.render.afp.modca.ImageRasterData: byte[] rasterData>;
        $i0 = lengthof $r0;
        $i0 = $i0 + 8;
        x = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = x[0];
        data[1] = $b1;
        $b1 = x[1];
        data[2] = $b1;
        data[3] = -45;
        data[4] = -18;
        data[5] = 123;
        data[6] = 0;
        data[7] = 0;
        data[8] = 0;
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        $r1 = this.<org.apache.fop.render.afp.modca.ImageRasterData: byte[] rasterData>;
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>($r1);
        return;
    }
}

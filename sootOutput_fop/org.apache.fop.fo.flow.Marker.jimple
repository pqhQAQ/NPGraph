public class org.apache.fop.fo.flow.Marker extends org.apache.fop.fo.FObjMixed
{
    private java.lang.String markerClassName;
    private org.apache.fop.fo.PropertyListMaker savePropertyListMaker;
    private java.util.Map descendantPropertyLists;

    public void <init>(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.flow.Marker this;
        org.apache.fop.fo.FONode parent;
        java.util.HashMap $r0;

        this := @this: org.apache.fop.fo.flow.Marker;
        parent := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void <init>(org.apache.fop.fo.FONode)>(parent);
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fo.flow.Marker: java.util.Map descendantPropertyLists> = $r0;
        return;
    }

    public void bind(org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.Marker this;
        org.apache.fop.fo.PropertyList pList;
        int $i0;
        org.xml.sax.Locator $r0;
        org.apache.fop.fo.properties.Property $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.Marker;
        pList := @parameter0: org.apache.fop.fo.PropertyList;
        $i0 = virtualinvoke this.<org.apache.fop.fo.flow.Marker: int findAncestor(int)>(11);
        if $i0 >= 0 goto label0;

        $r0 = this.<org.apache.fop.fo.flow.Marker: org.xml.sax.Locator locator>;
        virtualinvoke this.<org.apache.fop.fo.flow.Marker: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String,java.lang.String)>($r0, "http://www.w3.org/1999/XSL/Format", "marker", "An fo:marker is permitted only as the descendant of an fo:flow");

     label0:
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(139);
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        this.<org.apache.fop.fo.flow.Marker: java.lang.String markerClassName> = $r2;
        $r3 = this.<org.apache.fop.fo.flow.Marker: java.lang.String markerClassName>;
        if $r3 == null goto label1;

        $r3 = this.<org.apache.fop.fo.flow.Marker: java.lang.String markerClassName>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label2;

     label1:
        virtualinvoke this.<org.apache.fop.fo.flow.Marker: void missingPropertyError(java.lang.String)>("marker-class-name");

     label2:
        return;
    }

    protected org.apache.fop.fo.flow.Marker$MarkerPropertyList getPropertyListFor(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.flow.Marker this;
        org.apache.fop.fo.FONode foNode;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.apache.fop.fo.flow.Marker$MarkerPropertyList $r2;

        this := @this: org.apache.fop.fo.flow.Marker;
        foNode := @parameter0: org.apache.fop.fo.FONode;
        $r0 = this.<org.apache.fop.fo.flow.Marker: java.util.Map descendantPropertyLists>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(foNode);
        $r2 = (org.apache.fop.fo.flow.Marker$MarkerPropertyList) $r1;
        return $r2;
    }

    protected void startOfNode()
    {
        org.apache.fop.fo.flow.Marker this;
        org.apache.fop.fo.FOEventHandler foEventHandler;
        org.apache.fop.fo.PropertyListMaker $r0;
        org.apache.fop.fo.flow.Marker$1 $r1;

        this := @this: org.apache.fop.fo.flow.Marker;
        foEventHandler = virtualinvoke this.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        $r0 = virtualinvoke foEventHandler.<org.apache.fop.fo.FOEventHandler: org.apache.fop.fo.PropertyListMaker getPropertyListMaker()>();
        this.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.PropertyListMaker savePropertyListMaker> = $r0;
        $r1 = new org.apache.fop.fo.flow.Marker$1;
        specialinvoke $r1.<org.apache.fop.fo.flow.Marker$1: void <init>(org.apache.fop.fo.flow.Marker)>(this);
        virtualinvoke foEventHandler.<org.apache.fop.fo.FOEventHandler: void setPropertyListMaker(org.apache.fop.fo.PropertyListMaker)>($r1);
        return;
    }

    protected void endOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.Marker this;
        org.apache.fop.fo.FOEventHandler $r0;
        org.apache.fop.fo.PropertyListMaker $r1;

        this := @this: org.apache.fop.fo.flow.Marker;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void endOfNode()>();
        $r0 = virtualinvoke this.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        $r1 = this.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.PropertyListMaker savePropertyListMaker>;
        virtualinvoke $r0.<org.apache.fop.fo.FOEventHandler: void setPropertyListMaker(org.apache.fop.fo.PropertyListMaker)>($r1);
        this.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.PropertyListMaker savePropertyListMaker> = null;
        return;
    }

    protected void validateChildNode(org.xml.sax.Locator, java.lang.String, java.lang.String) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.flow.Marker this;
        org.xml.sax.Locator loc;
        java.lang.String nsURI, localName;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.Marker;
        loc := @parameter0: org.xml.sax.Locator;
        nsURI := @parameter1: java.lang.String;
        localName := @parameter2: java.lang.String;
        $z0 = virtualinvoke this.<org.apache.fop.fo.flow.Marker: boolean isBlockOrInlineItem(java.lang.String,java.lang.String)>(nsURI, localName);
        if $z0 != 0 goto label0;

        virtualinvoke this.<org.apache.fop.fo.flow.Marker: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);

     label0:
        return;
    }

    protected boolean inMarker()
    {
        org.apache.fop.fo.flow.Marker this;

        this := @this: org.apache.fop.fo.flow.Marker;
        return 1;
    }

    public java.lang.String getMarkerClassName()
    {
        org.apache.fop.fo.flow.Marker this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fo.flow.Marker;
        $r0 = this.<org.apache.fop.fo.flow.Marker: java.lang.String markerClassName>;
        return $r0;
    }

    public java.lang.String getLocalName()
    {
        org.apache.fop.fo.flow.Marker this;

        this := @this: org.apache.fop.fo.flow.Marker;
        return "marker";
    }

    public int getNameId()
    {
        org.apache.fop.fo.flow.Marker this;

        this := @this: org.apache.fop.fo.flow.Marker;
        return 24;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.flow.Marker this;
        java.lang.StringBuffer $r0, sb;
        java.lang.String $r1, $r2, $r3;

        this := @this: org.apache.fop.fo.flow.Marker;
        $r0 = new java.lang.StringBuffer;
        $r1 = specialinvoke this.<org.apache.fop.fo.FObjMixed: java.lang.String toString()>();
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);
        sb = $r0;
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {");
        $r2 = virtualinvoke this.<org.apache.fop.fo.flow.Marker: java.lang.String getMarkerClassName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");
        $r3 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }

    static java.util.Map access$000(org.apache.fop.fo.flow.Marker)
    {
        org.apache.fop.fo.flow.Marker x0;
        java.util.Map $r0;

        x0 := @parameter0: org.apache.fop.fo.flow.Marker;
        $r0 = x0.<org.apache.fop.fo.flow.Marker: java.util.Map descendantPropertyLists>;
        return $r0;
    }
}

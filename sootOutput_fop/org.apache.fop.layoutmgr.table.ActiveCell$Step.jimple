class org.apache.fop.layoutmgr.table.ActiveCell$Step extends java.lang.Object
{
    private int start;
    private int end;
    private int contentLength;
    private int totalLength;
    private int penaltyLength;
    private int breakClass;
    private int condBeforeContentLength;

    void <init>(int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step this;
        int contentLength;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        contentLength := @parameter0: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int contentLength> = contentLength;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int end> = -1;
        return;
    }

    void <init>(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step this, other;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        other := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        specialinvoke this.<java.lang.Object: void <init>()>();
        virtualinvoke this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: void set(org.apache.fop.layoutmgr.table.ActiveCell$Step)>(other);
        return;
    }

    void set(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step this, other;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        other := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int start>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int start> = $i0;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int end>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int end> = $i0;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int contentLength>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int contentLength> = $i0;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int totalLength>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int totalLength> = $i0;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int penaltyLength>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int penaltyLength> = $i0;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int condBeforeContentLength>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int condBeforeContentLength> = $i0;
        $i0 = other.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int breakClass>;
        this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int breakClass> = $i0;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step this;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r1;

        this := @this: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Step: start=");
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int start>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" end=");
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int end>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" length=");
        $i0 = this.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int totalLength>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    static int access$100(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int end>;
        return $i0;
    }

    static int access$202(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int penaltyLength> = x1;
        return x1;
    }

    static int access$302(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int condBeforeContentLength> = x1;
        return x1;
    }

    static int access$402(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int breakClass> = x1;
        return x1;
    }

    static int access$500(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int contentLength>;
        return $i0;
    }

    static int access$502(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int contentLength> = x1;
        return x1;
    }

    static int access$300(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int condBeforeContentLength>;
        return $i0;
    }

    static int access$102(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int end> = x1;
        return x1;
    }

    static int access$602(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int totalLength> = x1;
        return x1;
    }

    static int access$200(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int penaltyLength>;
        return $i0;
    }

    static int access$600(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int totalLength>;
        return $i0;
    }

    static int access$400(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int breakClass>;
        return $i0;
    }

    static int access$702(org.apache.fop.layoutmgr.table.ActiveCell$Step, int)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int x1;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        x1 := @parameter1: int;
        x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int start> = x1;
        return x1;
    }

    static int access$700(org.apache.fop.layoutmgr.table.ActiveCell$Step)
    {
        org.apache.fop.layoutmgr.table.ActiveCell$Step x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.layoutmgr.table.ActiveCell$Step;
        $i0 = x0.<org.apache.fop.layoutmgr.table.ActiveCell$Step: int start>;
        return $i0;
    }
}

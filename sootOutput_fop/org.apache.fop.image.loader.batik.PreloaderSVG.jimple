public class org.apache.fop.image.loader.batik.PreloaderSVG extends org.apache.xmlgraphics.image.loader.impl.AbstractImagePreloader
{
    private static org.apache.commons.logging.Log log;
    private boolean batikAvailable;
    static java.lang.Class class$org$apache$fop$image$loader$batik$PreloaderSVG;

    public void <init>()
    {
        org.apache.fop.image.loader.batik.PreloaderSVG this;

        this := @this: org.apache.fop.image.loader.batik.PreloaderSVG;
        specialinvoke this.<org.apache.xmlgraphics.image.loader.impl.AbstractImagePreloader: void <init>()>();
        this.<org.apache.fop.image.loader.batik.PreloaderSVG: boolean batikAvailable> = 1;
        return;
    }

    public org.apache.xmlgraphics.image.loader.ImageInfo preloadImage(java.lang.String, javax.xml.transform.Source, org.apache.xmlgraphics.image.loader.ImageContext) throws java.io.IOException
    {
        org.apache.fop.image.loader.batik.PreloaderSVG this;
        java.lang.String uri;
        javax.xml.transform.Source src;
        org.apache.xmlgraphics.image.loader.ImageContext context;
        org.apache.xmlgraphics.image.loader.ImageInfo info;
        org.apache.fop.image.loader.batik.PreloaderSVG$Loader loader, $r0;
        java.lang.NoClassDefFoundError e, $r1;
        boolean $z0;
        null_type $n0;
        org.apache.commons.logging.Log $r2;

        this := @this: org.apache.fop.image.loader.batik.PreloaderSVG;
        uri := @parameter0: java.lang.String;
        src := @parameter1: javax.xml.transform.Source;
        context := @parameter2: org.apache.xmlgraphics.image.loader.ImageContext;
        info = null;
        $z0 = this.<org.apache.fop.image.loader.batik.PreloaderSVG: boolean batikAvailable>;
        if $z0 == 0 goto label5;

     label0:
        $r0 = new org.apache.fop.image.loader.batik.PreloaderSVG$Loader;
        specialinvoke $r0.<org.apache.fop.image.loader.batik.PreloaderSVG$Loader: void <init>(org.apache.fop.image.loader.batik.PreloaderSVG)>(this);
        loader = $r0;
        $z0 = staticinvoke <org.apache.fop.image.loader.batik.PreloaderSVG$Loader: boolean access$000(org.apache.fop.image.loader.batik.PreloaderSVG$Loader,javax.xml.transform.Source)>(loader, src);
        if $z0 != 0 goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        info = staticinvoke <org.apache.fop.image.loader.batik.PreloaderSVG$Loader: org.apache.xmlgraphics.image.loader.ImageInfo access$100(org.apache.fop.image.loader.batik.PreloaderSVG$Loader,java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)>(loader, uri, src, context);

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;
        e = $r1;
        this.<org.apache.fop.image.loader.batik.PreloaderSVG: boolean batikAvailable> = 0;
        $r2 = <org.apache.fop.image.loader.batik.PreloaderSVG: org.apache.commons.logging.Log log>;
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Batik not in class path", e);
        return null;

     label5:
        if info == null goto label6;

        staticinvoke <org.apache.xmlgraphics.image.loader.util.ImageUtil: void closeQuietly(javax.xml.transform.Source)>(src);

     label6:
        return info;

        catch java.lang.NoClassDefFoundError from label0 to label1 with label4;
        catch java.lang.NoClassDefFoundError from label2 to label3 with label4;
    }

    public static java.lang.String getParserName()
    {
        javax.xml.parsers.SAXParserFactory factory;
        java.lang.Exception e, $r4;
        javax.xml.parsers.SAXParser $r0;
        org.xml.sax.XMLReader $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

     label0:
        factory = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        $r0 = virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        e = $r4;
        return null;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private static double px2mpt(double, double)
    {
        double px, resolution, $d0;

        px := @parameter0: double;
        resolution := @parameter1: double;
        $d0 = px * 1000.0;
        $d0 = $d0 * 72.0;
        $d0 = $d0 / resolution;
        return $d0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static boolean access$202(org.apache.fop.image.loader.batik.PreloaderSVG, boolean)
    {
        org.apache.fop.image.loader.batik.PreloaderSVG x0;
        boolean x1;

        x0 := @parameter0: org.apache.fop.image.loader.batik.PreloaderSVG;
        x1 := @parameter1: boolean;
        x0.<org.apache.fop.image.loader.batik.PreloaderSVG: boolean batikAvailable> = x1;
        return x1;
    }

    static org.apache.commons.logging.Log access$300()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = <org.apache.fop.image.loader.batik.PreloaderSVG: org.apache.commons.logging.Log log>;
        return $r0;
    }

    static double access$400(double, double)
    {
        double x0, x1, $d0;

        x0 := @parameter0: double;
        x1 := @parameter1: double;
        $d0 = staticinvoke <org.apache.fop.image.loader.batik.PreloaderSVG: double px2mpt(double,double)>(x0, x1);
        return $d0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.image.loader.batik.PreloaderSVG: java.lang.Class class$org$apache$fop$image$loader$batik$PreloaderSVG>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.image.loader.batik.PreloaderSVG: java.lang.Class class$(java.lang.String)>("org.apache.fop.image.loader.batik.PreloaderSVG");
        <org.apache.fop.image.loader.batik.PreloaderSVG: java.lang.Class class$org$apache$fop$image$loader$batik$PreloaderSVG> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.image.loader.batik.PreloaderSVG: java.lang.Class class$org$apache$fop$image$loader$batik$PreloaderSVG>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.image.loader.batik.PreloaderSVG: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

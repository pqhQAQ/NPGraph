public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer
{
    private final org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib;
    public static final java.lang.String PAGE_WIDTH;
    public static final java.lang.String PAGE_HEIGHT;
    public static final java.lang.String LANDSCAPE;
    public static final java.lang.String MARGIN_TOP;
    public static final java.lang.String MARGIN_BOTTOM;
    public static final java.lang.String MARGIN_LEFT;
    public static final java.lang.String MARGIN_RIGHT;
    public static final java.lang.String HEADERY;
    public static final java.lang.String FOOTERY;
    public static final java.lang.String ITAP;
    public static final java.lang.String[] PAGE_ATTR;

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea, java.io.Writer, org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea parent;
        java.io.Writer w;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea;
        w := @parameter1: java.io.Writer;
        attrs := @parameter2: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(parent, w);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib> = attrs;
        return;
    }

    protected void writeRtfContent() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage this;
        java.lang.String[] $r0;
        java.lang.Object widthRaw, heightRaw;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r1, $r2;
        boolean $z0;
        java.lang.Integer $r3, $r4;
        int $i0, $i1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r0 = <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: java.lang.String[] PAGE_ATTR>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: void writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])>($r1, $r0);
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        if $r2 == null goto label0;

        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        widthRaw = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Object getValue(java.lang.String)>("paperw");
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        heightRaw = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Object getValue(java.lang.String)>("paperh");
        $z0 = widthRaw instanceof java.lang.Integer;
        if $z0 == 0 goto label0;

        $z0 = heightRaw instanceof java.lang.Integer;
        if $z0 == 0 goto label0;

        $r3 = (java.lang.Integer) widthRaw;
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        $r4 = (java.lang.Integer) heightRaw;
        $i1 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        if $i0 <= $i1 goto label0;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: void writeControlWord(java.lang.String)>("landscape");

     label0:
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getAttributes()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        return $r0;
    }

    protected boolean okToWriteRtf()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage;
        return 1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[10];
        $r0[0] = "paperw";
        $r0[1] = "paperh";
        $r0[2] = "landscape";
        $r0[3] = "margt";
        $r0[4] = "margb";
        $r0[5] = "margl";
        $r0[6] = "margr";
        $r0[7] = "headery";
        $r0[8] = "footery";
        $r0[9] = "itap";
        <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPage: java.lang.String[] PAGE_ATTR> = $r0;
        return;
    }
}

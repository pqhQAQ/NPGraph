public class org.apache.fop.image.loader.batik.ImageConverterWMF2G2D extends org.apache.xmlgraphics.image.loader.impl.AbstractImageConverter
{
    private static org.apache.commons.logging.Log log;
    static java.lang.Class class$org$apache$fop$image$loader$batik$ImageConverterWMF2G2D;

    public void <init>()
    {
        org.apache.fop.image.loader.batik.ImageConverterWMF2G2D this;

        this := @this: org.apache.fop.image.loader.batik.ImageConverterWMF2G2D;
        specialinvoke this.<org.apache.xmlgraphics.image.loader.impl.AbstractImageConverter: void <init>()>();
        return;
    }

    public org.apache.xmlgraphics.image.loader.Image convert(org.apache.xmlgraphics.image.loader.Image, java.util.Map)
    {
        org.apache.fop.image.loader.batik.ImageConverterWMF2G2D this;
        org.apache.xmlgraphics.image.loader.Image src;
        java.util.Map hints;
        org.apache.fop.image.loader.batik.ImageWMF wmf;
        org.apache.fop.image.loader.batik.ImageConverterWMF2G2D$Graphics2DImagePainterWMF painter, $r0;
        org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D g2dImage, $r1;
        org.apache.xmlgraphics.image.loader.ImageInfo $r2;

        this := @this: org.apache.fop.image.loader.batik.ImageConverterWMF2G2D;
        src := @parameter0: org.apache.xmlgraphics.image.loader.Image;
        hints := @parameter1: java.util.Map;
        virtualinvoke this.<org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: void checkSourceFlavor(org.apache.xmlgraphics.image.loader.Image)>(src);
        wmf = (org.apache.fop.image.loader.batik.ImageWMF) src;
        $r0 = new org.apache.fop.image.loader.batik.ImageConverterWMF2G2D$Graphics2DImagePainterWMF;
        specialinvoke $r0.<org.apache.fop.image.loader.batik.ImageConverterWMF2G2D$Graphics2DImagePainterWMF: void <init>(org.apache.fop.image.loader.batik.ImageWMF)>(wmf);
        painter = $r0;
        $r1 = new org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;
        $r2 = interfaceinvoke src.<org.apache.xmlgraphics.image.loader.Image: org.apache.xmlgraphics.image.loader.ImageInfo getInfo()>();
        specialinvoke $r1.<org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D: void <init>(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.java2d.Graphics2DImagePainter)>($r2, painter);
        g2dImage = $r1;
        return g2dImage;
    }

    public org.apache.xmlgraphics.image.loader.ImageFlavor getSourceFlavor()
    {
        org.apache.fop.image.loader.batik.ImageConverterWMF2G2D this;
        org.apache.xmlgraphics.image.loader.ImageFlavor $r0;

        this := @this: org.apache.fop.image.loader.batik.ImageConverterWMF2G2D;
        $r0 = <org.apache.fop.image.loader.batik.ImageWMF: org.apache.xmlgraphics.image.loader.ImageFlavor WMF_IMAGE>;
        return $r0;
    }

    public org.apache.xmlgraphics.image.loader.ImageFlavor getTargetFlavor()
    {
        org.apache.fop.image.loader.batik.ImageConverterWMF2G2D this;
        org.apache.xmlgraphics.image.loader.ImageFlavor $r0;

        this := @this: org.apache.fop.image.loader.batik.ImageConverterWMF2G2D;
        $r0 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor GRAPHICS2D>;
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static org.apache.commons.logging.Log access$000()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = <org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: org.apache.commons.logging.Log log>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: java.lang.Class class$org$apache$fop$image$loader$batik$ImageConverterWMF2G2D>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: java.lang.Class class$(java.lang.String)>("org.apache.fop.image.loader.batik.ImageConverterWMF2G2D");
        <org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: java.lang.Class class$org$apache$fop$image$loader$batik$ImageConverterWMF2G2D> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: java.lang.Class class$org$apache$fop$image$loader$batik$ImageConverterWMF2G2D>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

public class org.apache.fop.pdf.PDFFactory extends java.lang.Object
{
    private org.apache.fop.pdf.PDFDocument document;
    private org.apache.commons.logging.Log log;
    static java.lang.Class class$org$apache$fop$pdf$PDFFactory;

    public void <init>(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFDocument document;
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r2;

        this := @this: org.apache.fop.pdf.PDFFactory;
        document := @parameter0: org.apache.fop.pdf.PDFDocument;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = <org.apache.fop.pdf.PDFFactory: java.lang.Class class$org$apache$fop$pdf$PDFFactory>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.pdf.PDFFactory: java.lang.Class class$(java.lang.String)>("org.apache.fop.pdf.PDFFactory");
        <org.apache.fop.pdf.PDFFactory: java.lang.Class class$org$apache$fop$pdf$PDFFactory> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.pdf.PDFFactory: java.lang.Class class$org$apache$fop$pdf$PDFFactory>;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        this.<org.apache.fop.pdf.PDFFactory: org.apache.commons.logging.Log log> = $r2;
        this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument document> = document;
        return;
    }

    public final org.apache.fop.pdf.PDFDocument getDocument()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFDocument $r0;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument document>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFRoot makeRoot(org.apache.fop.pdf.PDFPages)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFPages pages;
        org.apache.fop.pdf.PDFRoot $r0, pdfRoot;
        org.apache.fop.pdf.PDFDocument $r1, $r2, $r3;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        pages := @parameter0: org.apache.fop.pdf.PDFPages;
        $r0 = new org.apache.fop.pdf.PDFRoot;
        $r1 = this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument document>;
        $i0 = $r1.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i1 = $i0 + 1;
        $r1.<org.apache.fop.pdf.PDFDocument: int objectcount> = $i1;
        specialinvoke $r0.<org.apache.fop.pdf.PDFRoot: void <init>(int,org.apache.fop.pdf.PDFPages)>($i1, pages);
        pdfRoot = $r0;
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke pdfRoot.<org.apache.fop.pdf.PDFRoot: void setDocument(org.apache.fop.pdf.PDFDocument)>($r2);
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>(pdfRoot);
        return pdfRoot;
    }

    public org.apache.fop.pdf.PDFPages makePages()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFPages $r0, pdfPages;
        org.apache.fop.pdf.PDFDocument $r1, $r2, $r3;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFPages;
        $r1 = this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument document>;
        $i0 = $r1.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i1 = $i0 + 1;
        $r1.<org.apache.fop.pdf.PDFDocument: int objectcount> = $i1;
        specialinvoke $r0.<org.apache.fop.pdf.PDFPages: void <init>(int)>($i1);
        pdfPages = $r0;
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke pdfPages.<org.apache.fop.pdf.PDFPages: void setDocument(org.apache.fop.pdf.PDFDocument)>($r2);
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>(pdfPages);
        return pdfPages;
    }

    public org.apache.fop.pdf.PDFResources makeResources()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResources $r0, pdfResources;
        org.apache.fop.pdf.PDFDocument $r1, $r2, $r3;
        int $i0, $i1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFResources;
        $r1 = this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument document>;
        $i0 = $r1.<org.apache.fop.pdf.PDFDocument: int objectcount>;
        $i1 = $i0 + 1;
        $r1.<org.apache.fop.pdf.PDFDocument: int objectcount> = $i1;
        specialinvoke $r0.<org.apache.fop.pdf.PDFResources: void <init>(int)>($i1);
        pdfResources = $r0;
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke pdfResources.<org.apache.fop.pdf.PDFResources: void setDocument(org.apache.fop.pdf.PDFDocument)>($r2);
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>(pdfResources);
        return pdfResources;
    }

    protected org.apache.fop.pdf.PDFInfo makeInfo(java.lang.String)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String prod;
        org.apache.fop.pdf.PDFInfo $r0, pdfInfo;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        prod := @parameter0: java.lang.String;
        $r0 = new org.apache.fop.pdf.PDFInfo;
        specialinvoke $r0.<org.apache.fop.pdf.PDFInfo: void <init>()>();
        pdfInfo = $r0;
        virtualinvoke pdfInfo.<org.apache.fop.pdf.PDFInfo: void setProducer(java.lang.String)>(prod);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(pdfInfo);
        return pdfInfo;
    }

    public org.apache.fop.pdf.PDFMetadata makeMetadata(org.apache.xmlgraphics.xmp.Metadata, boolean)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.xmlgraphics.xmp.Metadata meta;
        boolean readOnly;
        org.apache.fop.pdf.PDFMetadata $r0, pdfMetadata;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        meta := @parameter0: org.apache.xmlgraphics.xmp.Metadata;
        readOnly := @parameter1: boolean;
        $r0 = new org.apache.fop.pdf.PDFMetadata;
        specialinvoke $r0.<org.apache.fop.pdf.PDFMetadata: void <init>(org.apache.xmlgraphics.xmp.Metadata,boolean)>(meta, readOnly);
        pdfMetadata = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(pdfMetadata);
        return pdfMetadata;
    }

    public org.apache.fop.pdf.PDFOutputIntent makeOutputIntent()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFOutputIntent $r0, outputIntent;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFOutputIntent;
        specialinvoke $r0.<org.apache.fop.pdf.PDFOutputIntent: void <init>()>();
        outputIntent = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(outputIntent);
        return outputIntent;
    }

    public org.apache.fop.pdf.PDFPage makePage(org.apache.fop.pdf.PDFResources, int, int, int)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResources resources;
        int pageWidth, pageHeight, pageIndex;
        org.apache.fop.pdf.PDFPage $r0, page;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFPages $r2;

        this := @this: org.apache.fop.pdf.PDFFactory;
        resources := @parameter0: org.apache.fop.pdf.PDFResources;
        pageWidth := @parameter1: int;
        pageHeight := @parameter2: int;
        pageIndex := @parameter3: int;
        $r0 = new org.apache.fop.pdf.PDFPage;
        specialinvoke $r0.<org.apache.fop.pdf.PDFPage: void <init>(org.apache.fop.pdf.PDFResources,int,int,int)>(resources, pageWidth, pageHeight, pageIndex);
        page = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: void assignObjectNumber(org.apache.fop.pdf.PDFObject)>(page);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPages getPages()>();
        virtualinvoke $r2.<org.apache.fop.pdf.PDFPages: void addPage(org.apache.fop.pdf.PDFPage)>(page);
        return page;
    }

    public org.apache.fop.pdf.PDFPage makePage(org.apache.fop.pdf.PDFResources, int, int)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResources resources;
        int pageWidth, pageHeight;
        org.apache.fop.pdf.PDFPage $r0;

        this := @this: org.apache.fop.pdf.PDFFactory;
        resources := @parameter0: org.apache.fop.pdf.PDFResources;
        pageWidth := @parameter1: int;
        pageHeight := @parameter2: int;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFPage makePage(org.apache.fop.pdf.PDFResources,int,int,int)>(resources, pageWidth, pageHeight, -1);
        return $r0;
    }

    public org.apache.fop.pdf.PDFFunction makeFunction(int, java.util.List, java.util.List, java.util.List, int, int, java.util.List, java.util.List, java.lang.StringBuffer, java.util.List)
    {
        org.apache.fop.pdf.PDFFactory this;
        int theFunctionType, theBitsPerSample, theOrder;
        java.util.List theDomain, theRange, theSize, theEncode, theDecode, theFilter;
        java.lang.StringBuffer theFunctionDataStream;
        org.apache.fop.pdf.PDFFunction $r0, function, oldfunc;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theSize := @parameter3: java.util.List;
        theBitsPerSample := @parameter4: int;
        theOrder := @parameter5: int;
        theEncode := @parameter6: java.util.List;
        theDecode := @parameter7: java.util.List;
        theFunctionDataStream := @parameter8: java.lang.StringBuffer;
        theFilter := @parameter9: java.util.List;
        $r0 = new org.apache.fop.pdf.PDFFunction;
        specialinvoke $r0.<org.apache.fop.pdf.PDFFunction: void <init>(int,java.util.List,java.util.List,java.util.List,int,int,java.util.List,java.util.List,java.lang.StringBuffer,java.util.List)>(theFunctionType, theDomain, theRange, theSize, theBitsPerSample, theOrder, theEncode, theDecode, theFunctionDataStream, theFilter);
        function = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldfunc = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFunction findFunction(org.apache.fop.pdf.PDFFunction)>(function);
        if oldfunc != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(function);
        goto label1;

     label0:
        function = oldfunc;

     label1:
        return function;
    }

    public org.apache.fop.pdf.PDFFunction makeFunction(int, java.util.List, java.util.List, java.util.List, java.util.List, double)
    {
        org.apache.fop.pdf.PDFFactory this;
        int theFunctionType;
        java.util.List theDomain, theRange, theCZero, theCOne;
        double theInterpolationExponentN;
        org.apache.fop.pdf.PDFFunction $r0, function, oldfunc;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theCZero := @parameter3: java.util.List;
        theCOne := @parameter4: java.util.List;
        theInterpolationExponentN := @parameter5: double;
        $r0 = new org.apache.fop.pdf.PDFFunction;
        specialinvoke $r0.<org.apache.fop.pdf.PDFFunction: void <init>(int,java.util.List,java.util.List,java.util.List,java.util.List,double)>(theFunctionType, theDomain, theRange, theCZero, theCOne, theInterpolationExponentN);
        function = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldfunc = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFunction findFunction(org.apache.fop.pdf.PDFFunction)>(function);
        if oldfunc != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(function);
        goto label1;

     label0:
        function = oldfunc;

     label1:
        return function;
    }

    public org.apache.fop.pdf.PDFFunction makeFunction(int, java.util.List, java.util.List, java.util.List, java.util.List, java.util.List)
    {
        org.apache.fop.pdf.PDFFactory this;
        int theFunctionType;
        java.util.List theDomain, theRange, theFunctions, theBounds, theEncode;
        org.apache.fop.pdf.PDFFunction $r0, function, oldfunc;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theFunctions := @parameter3: java.util.List;
        theBounds := @parameter4: java.util.List;
        theEncode := @parameter5: java.util.List;
        $r0 = new org.apache.fop.pdf.PDFFunction;
        specialinvoke $r0.<org.apache.fop.pdf.PDFFunction: void <init>(int,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>(theFunctionType, theDomain, theRange, theFunctions, theBounds, theEncode);
        function = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldfunc = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFunction findFunction(org.apache.fop.pdf.PDFFunction)>(function);
        if oldfunc != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(function);
        goto label1;

     label0:
        function = oldfunc;

     label1:
        return function;
    }

    public org.apache.fop.pdf.PDFFunction makeFunction(int, int, java.util.List, java.util.List, java.lang.StringBuffer)
    {
        org.apache.fop.pdf.PDFFactory this;
        int theNumber, theFunctionType;
        java.util.List theDomain, theRange;
        java.lang.StringBuffer theFunctionDataStream;
        org.apache.fop.pdf.PDFFunction $r0, function, oldfunc;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        theNumber := @parameter0: int;
        theFunctionType := @parameter1: int;
        theDomain := @parameter2: java.util.List;
        theRange := @parameter3: java.util.List;
        theFunctionDataStream := @parameter4: java.lang.StringBuffer;
        $r0 = new org.apache.fop.pdf.PDFFunction;
        specialinvoke $r0.<org.apache.fop.pdf.PDFFunction: void <init>(int,java.util.List,java.util.List,java.lang.StringBuffer)>(theFunctionType, theDomain, theRange, theFunctionDataStream);
        function = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldfunc = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFunction findFunction(org.apache.fop.pdf.PDFFunction)>(function);
        if oldfunc != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(function);
        goto label1;

     label0:
        function = oldfunc;

     label1:
        return function;
    }

    public org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext, int, org.apache.fop.pdf.PDFDeviceColorSpace, java.util.List, java.util.List, boolean, java.util.List, java.util.List, org.apache.fop.pdf.PDFFunction)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        int theShadingType;
        org.apache.fop.pdf.PDFDeviceColorSpace theColorSpace;
        java.util.List theBackground, theBBox, theDomain, theMatrix;
        boolean theAntiAlias;
        org.apache.fop.pdf.PDFFunction theFunction;
        org.apache.fop.pdf.PDFShading $r0, shading, oldshad;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFResources $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        theShadingType := @parameter1: int;
        theColorSpace := @parameter2: org.apache.fop.pdf.PDFDeviceColorSpace;
        theBackground := @parameter3: java.util.List;
        theBBox := @parameter4: java.util.List;
        theAntiAlias := @parameter5: boolean;
        theDomain := @parameter6: java.util.List;
        theMatrix := @parameter7: java.util.List;
        theFunction := @parameter8: org.apache.fop.pdf.PDFFunction;
        $r0 = new org.apache.fop.pdf.PDFShading;
        specialinvoke $r0.<org.apache.fop.pdf.PDFShading: void <init>(int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,java.util.List,java.util.List,org.apache.fop.pdf.PDFFunction)>(theShadingType, theColorSpace, theBackground, theBBox, theAntiAlias, theDomain, theMatrix, theFunction);
        shading = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldshad = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFShading findShading(org.apache.fop.pdf.PDFShading)>(shading);
        if oldshad != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(shading);
        goto label1;

     label0:
        shading = oldshad;

     label1:
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);

     label3:
        return shading;
    }

    public org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext, int, org.apache.fop.pdf.PDFDeviceColorSpace, java.util.List, java.util.List, boolean, java.util.List, java.util.List, org.apache.fop.pdf.PDFFunction, java.util.List)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        int theShadingType;
        org.apache.fop.pdf.PDFDeviceColorSpace theColorSpace;
        java.util.List theBackground, theBBox, theCoords, theDomain, theExtend;
        boolean theAntiAlias;
        org.apache.fop.pdf.PDFFunction theFunction;
        org.apache.fop.pdf.PDFShading $r0, shading, oldshad;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFResources $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        theShadingType := @parameter1: int;
        theColorSpace := @parameter2: org.apache.fop.pdf.PDFDeviceColorSpace;
        theBackground := @parameter3: java.util.List;
        theBBox := @parameter4: java.util.List;
        theAntiAlias := @parameter5: boolean;
        theCoords := @parameter6: java.util.List;
        theDomain := @parameter7: java.util.List;
        theFunction := @parameter8: org.apache.fop.pdf.PDFFunction;
        theExtend := @parameter9: java.util.List;
        $r0 = new org.apache.fop.pdf.PDFShading;
        specialinvoke $r0.<org.apache.fop.pdf.PDFShading: void <init>(int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,java.util.List,java.util.List,org.apache.fop.pdf.PDFFunction,java.util.List)>(theShadingType, theColorSpace, theBackground, theBBox, theAntiAlias, theCoords, theDomain, theFunction, theExtend);
        shading = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldshad = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFShading findShading(org.apache.fop.pdf.PDFShading)>(shading);
        if oldshad != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(shading);
        goto label1;

     label0:
        shading = oldshad;

     label1:
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);

     label3:
        return shading;
    }

    public org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext, int, org.apache.fop.pdf.PDFDeviceColorSpace, java.util.List, java.util.List, boolean, int, int, int, java.util.List, org.apache.fop.pdf.PDFFunction)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        int theShadingType, theBitsPerCoordinate, theBitsPerComponent, theBitsPerFlag;
        org.apache.fop.pdf.PDFDeviceColorSpace theColorSpace;
        java.util.List theBackground, theBBox, theDecode;
        boolean theAntiAlias;
        org.apache.fop.pdf.PDFFunction theFunction;
        org.apache.fop.pdf.PDFShading $r0, shading, oldshad;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFResources $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        theShadingType := @parameter1: int;
        theColorSpace := @parameter2: org.apache.fop.pdf.PDFDeviceColorSpace;
        theBackground := @parameter3: java.util.List;
        theBBox := @parameter4: java.util.List;
        theAntiAlias := @parameter5: boolean;
        theBitsPerCoordinate := @parameter6: int;
        theBitsPerComponent := @parameter7: int;
        theBitsPerFlag := @parameter8: int;
        theDecode := @parameter9: java.util.List;
        theFunction := @parameter10: org.apache.fop.pdf.PDFFunction;
        $r0 = new org.apache.fop.pdf.PDFShading;
        specialinvoke $r0.<org.apache.fop.pdf.PDFShading: void <init>(int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,int,int,int,java.util.List,org.apache.fop.pdf.PDFFunction)>(theShadingType, theColorSpace, theBackground, theBBox, theAntiAlias, theBitsPerCoordinate, theBitsPerComponent, theBitsPerFlag, theDecode, theFunction);
        shading = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldshad = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFShading findShading(org.apache.fop.pdf.PDFShading)>(shading);
        if oldshad != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(shading);
        goto label1;

     label0:
        shading = oldshad;

     label1:
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);

     label3:
        return shading;
    }

    public org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext, int, org.apache.fop.pdf.PDFDeviceColorSpace, java.util.List, java.util.List, boolean, int, int, java.util.List, int, org.apache.fop.pdf.PDFFunction)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        int theShadingType, theBitsPerCoordinate, theBitsPerComponent, theVerticesPerRow;
        org.apache.fop.pdf.PDFDeviceColorSpace theColorSpace;
        java.util.List theBackground, theBBox, theDecode;
        boolean theAntiAlias;
        org.apache.fop.pdf.PDFFunction theFunction;
        org.apache.fop.pdf.PDFShading $r0, shading, oldshad;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFResources $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        theShadingType := @parameter1: int;
        theColorSpace := @parameter2: org.apache.fop.pdf.PDFDeviceColorSpace;
        theBackground := @parameter3: java.util.List;
        theBBox := @parameter4: java.util.List;
        theAntiAlias := @parameter5: boolean;
        theBitsPerCoordinate := @parameter6: int;
        theBitsPerComponent := @parameter7: int;
        theDecode := @parameter8: java.util.List;
        theVerticesPerRow := @parameter9: int;
        theFunction := @parameter10: org.apache.fop.pdf.PDFFunction;
        $r0 = new org.apache.fop.pdf.PDFShading;
        specialinvoke $r0.<org.apache.fop.pdf.PDFShading: void <init>(int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,int,int,java.util.List,int,org.apache.fop.pdf.PDFFunction)>(theShadingType, theColorSpace, theBackground, theBBox, theAntiAlias, theBitsPerCoordinate, theBitsPerComponent, theDecode, theVerticesPerRow, theFunction);
        shading = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldshad = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFShading findShading(org.apache.fop.pdf.PDFShading)>(shading);
        if oldshad != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(shading);
        goto label1;

     label0:
        shading = oldshad;

     label1:
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addShading(org.apache.fop.pdf.PDFShading)>(shading);

     label3:
        return shading;
    }

    public org.apache.fop.pdf.PDFPattern makePattern(org.apache.fop.pdf.PDFResourceContext, int, org.apache.fop.pdf.PDFResources, int, int, java.util.List, double, double, java.util.List, java.util.List, java.lang.StringBuffer)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        int thePatternType, thePaintType, theTilingType;
        org.apache.fop.pdf.PDFResources theResources, $r3;
        java.util.List theBBox, theMatrix, theXUID;
        double theXStep, theYStep;
        java.lang.StringBuffer thePatternDataStream;
        org.apache.fop.pdf.PDFPattern $r0, pattern, oldpatt;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        thePatternType := @parameter1: int;
        theResources := @parameter2: org.apache.fop.pdf.PDFResources;
        thePaintType := @parameter3: int;
        theTilingType := @parameter4: int;
        theBBox := @parameter5: java.util.List;
        theXStep := @parameter6: double;
        theYStep := @parameter7: double;
        theMatrix := @parameter8: java.util.List;
        theXUID := @parameter9: java.util.List;
        thePatternDataStream := @parameter10: java.lang.StringBuffer;
        $r0 = new org.apache.fop.pdf.PDFPattern;
        specialinvoke $r0.<org.apache.fop.pdf.PDFPattern: void <init>(org.apache.fop.pdf.PDFResources,int,int,int,java.util.List,double,double,java.util.List,java.util.List,java.lang.StringBuffer)>(theResources, 1, thePaintType, theTilingType, theBBox, theXStep, theYStep, theMatrix, theXUID, thePatternDataStream);
        pattern = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldpatt = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPattern findPattern(org.apache.fop.pdf.PDFPattern)>(pattern);
        if oldpatt != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(pattern);
        goto label1;

     label0:
        pattern = oldpatt;

     label1:
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addPattern(org.apache.fop.pdf.PDFPattern)>(pattern);
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addPattern(org.apache.fop.pdf.PDFPattern)>(pattern);

     label3:
        return pattern;
    }

    public org.apache.fop.pdf.PDFPattern makePattern(org.apache.fop.pdf.PDFResourceContext, int, org.apache.fop.pdf.PDFShading, java.util.List, java.lang.StringBuffer, java.util.List)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        int thePatternType;
        org.apache.fop.pdf.PDFShading theShading;
        java.util.List theXUID, theMatrix;
        java.lang.StringBuffer theExtGState;
        org.apache.fop.pdf.PDFPattern $r0, pattern, oldpatt;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFResources $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        thePatternType := @parameter1: int;
        theShading := @parameter2: org.apache.fop.pdf.PDFShading;
        theXUID := @parameter3: java.util.List;
        theExtGState := @parameter4: java.lang.StringBuffer;
        theMatrix := @parameter5: java.util.List;
        $r0 = new org.apache.fop.pdf.PDFPattern;
        specialinvoke $r0.<org.apache.fop.pdf.PDFPattern: void <init>(int,org.apache.fop.pdf.PDFShading,java.util.List,java.lang.StringBuffer,java.util.List)>(2, theShading, theXUID, theExtGState, theMatrix);
        pattern = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldpatt = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFPattern findPattern(org.apache.fop.pdf.PDFPattern)>(pattern);
        if oldpatt != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(pattern);
        goto label1;

     label0:
        pattern = oldpatt;

     label1:
        if res == null goto label2;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addPattern(org.apache.fop.pdf.PDFPattern)>(pattern);
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addPattern(org.apache.fop.pdf.PDFPattern)>(pattern);

     label3:
        return pattern;
    }

    public org.apache.fop.pdf.PDFPattern makeGradient(org.apache.fop.pdf.PDFResourceContext, boolean, org.apache.fop.pdf.PDFDeviceColorSpace, java.util.List, java.util.List, java.util.List, java.util.List)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        boolean radial;
        org.apache.fop.pdf.PDFDeviceColorSpace theColorspace, $r5;
        java.util.List theColors, theBounds, theCoords, theMatrix, theCzero, theCone;
        double interpolation;
        java.util.ArrayList theFunctions, newCoords, $r0;
        int lastPosition, currentPosition, $i0, $i1;
        org.apache.fop.pdf.PDFColor currentColor, nextColor;
        org.apache.fop.pdf.PDFFunction myfunc, myfunky;
        org.apache.fop.pdf.PDFShading myShad;
        org.apache.fop.pdf.PDFPattern myPattern;
        java.lang.Object $r1, $r6;
        org.apache.fop.pdf.PDFDocument $r2, $r3, $r4;
        java.lang.Double $r7;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        radial := @parameter1: boolean;
        theColorspace := @parameter2: org.apache.fop.pdf.PDFDeviceColorSpace;
        theColors := @parameter3: java.util.List;
        theBounds := @parameter4: java.util.List;
        theCoords := @parameter5: java.util.List;
        theMatrix := @parameter6: java.util.List;
        interpolation = 1.0;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        theFunctions = $r0;
        $i0 = interfaceinvoke theColors.<java.util.List: int size()>();
        lastPosition = $i0 - 1;
        currentPosition = 0;

     label0:
        if currentPosition >= lastPosition goto label3;

        $r1 = interfaceinvoke theColors.<java.util.List: java.lang.Object get(int)>(currentPosition);
        currentColor = (org.apache.fop.pdf.PDFColor) $r1;
        $i1 = currentPosition + 1;
        $r1 = interfaceinvoke theColors.<java.util.List: java.lang.Object get(int)>($i1);
        nextColor = (org.apache.fop.pdf.PDFColor) $r1;
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $i0 = virtualinvoke $r2.<org.apache.fop.pdf.PDFDocument: int getColorSpace()>();
        $i1 = virtualinvoke currentColor.<org.apache.fop.pdf.PDFColor: int getColorSpace()>();
        if $i0 == $i1 goto label1;

        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $i1 = virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: int getColorSpace()>();
        virtualinvoke currentColor.<org.apache.fop.pdf.PDFColor: void setColorSpace(int)>($i1);

     label1:
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $i0 = virtualinvoke $r2.<org.apache.fop.pdf.PDFDocument: int getColorSpace()>();
        $i1 = virtualinvoke nextColor.<org.apache.fop.pdf.PDFColor: int getColorSpace()>();
        if $i0 == $i1 goto label2;

        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $i1 = virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: int getColorSpace()>();
        virtualinvoke nextColor.<org.apache.fop.pdf.PDFColor: void setColorSpace(int)>($i1);

     label2:
        theCzero = virtualinvoke currentColor.<org.apache.fop.pdf.PDFColor: java.util.List getVector()>();
        theCone = virtualinvoke nextColor.<org.apache.fop.pdf.PDFColor: java.util.List getVector()>();
        myfunc = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFFunction makeFunction(int,java.util.List,java.util.List,java.util.List,java.util.List,double)>(2, null, null, theCzero, theCone, interpolation);
        interfaceinvoke theFunctions.<java.util.List: boolean add(java.lang.Object)>(myfunc);
        currentPosition = currentPosition + 1;
        goto label0;

     label3:
        myfunky = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFFunction makeFunction(int,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>(3, null, null, theFunctions, theBounds, null);
        if radial == 0 goto label5;

        $i0 = interfaceinvoke theCoords.<java.util.List: int size()>();
        if $i0 != 6 goto label4;

        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r5 = virtualinvoke $r4.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace getPDFColorSpace()>();
        myShad = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext,int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,java.util.List,java.util.List,org.apache.fop.pdf.PDFFunction,java.util.List)>(res, 3, $r5, null, null, 0, theCoords, null, myfunky, null);
        goto label6;

     label4:
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        newCoords = $r0;
        $r6 = interfaceinvoke theCoords.<java.util.List: java.lang.Object get(int)>(0);
        interfaceinvoke newCoords.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r6 = interfaceinvoke theCoords.<java.util.List: java.lang.Object get(int)>(1);
        interfaceinvoke newCoords.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r6 = interfaceinvoke theCoords.<java.util.List: java.lang.Object get(int)>(2);
        interfaceinvoke newCoords.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r6 = interfaceinvoke theCoords.<java.util.List: java.lang.Object get(int)>(0);
        interfaceinvoke newCoords.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r6 = interfaceinvoke theCoords.<java.util.List: java.lang.Object get(int)>(1);
        interfaceinvoke newCoords.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r7 = new java.lang.Double;
        specialinvoke $r7.<java.lang.Double: void <init>(double)>(0.0);
        interfaceinvoke newCoords.<java.util.List: boolean add(java.lang.Object)>($r7);
        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r5 = virtualinvoke $r4.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace getPDFColorSpace()>();
        myShad = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext,int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,java.util.List,java.util.List,org.apache.fop.pdf.PDFFunction,java.util.List)>(res, 3, $r5, null, null, 0, newCoords, null, myfunky, null);
        goto label6;

     label5:
        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r5 = virtualinvoke $r4.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDeviceColorSpace getPDFColorSpace()>();
        myShad = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFShading makeShading(org.apache.fop.pdf.PDFResourceContext,int,org.apache.fop.pdf.PDFDeviceColorSpace,java.util.List,java.util.List,boolean,java.util.List,java.util.List,org.apache.fop.pdf.PDFFunction,java.util.List)>(res, 2, $r5, null, null, 0, theCoords, null, myfunky, null);

     label6:
        myPattern = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFPattern makePattern(org.apache.fop.pdf.PDFResourceContext,int,org.apache.fop.pdf.PDFShading,java.util.List,java.lang.StringBuffer,java.util.List)>(res, 2, myShad, null, null, theMatrix);
        return myPattern;
    }

    protected org.apache.fop.pdf.PDFDestination getUniqueDestination(org.apache.fop.pdf.PDFDestination)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFDestination newdest, existing;
        org.apache.fop.pdf.PDFDocument $r0;

        this := @this: org.apache.fop.pdf.PDFFactory;
        newdest := @parameter0: org.apache.fop.pdf.PDFDestination;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        existing = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFDestination findDestination(org.apache.fop.pdf.PDFDestination)>(newdest);
        if existing == null goto label0;

        return existing;

     label0:
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: void addDestination(org.apache.fop.pdf.PDFDestination)>(newdest);
        return newdest;
    }

    public org.apache.fop.pdf.PDFDestination makeDestination(java.lang.String, java.lang.Object)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String idRef;
        java.lang.Object goToRef;
        org.apache.fop.pdf.PDFDestination $r0, destination;

        this := @this: org.apache.fop.pdf.PDFFactory;
        idRef := @parameter0: java.lang.String;
        goToRef := @parameter1: java.lang.Object;
        $r0 = new org.apache.fop.pdf.PDFDestination;
        specialinvoke $r0.<org.apache.fop.pdf.PDFDestination: void <init>(java.lang.String,java.lang.Object)>(idRef, goToRef);
        destination = $r0;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDestination getUniqueDestination(org.apache.fop.pdf.PDFDestination)>(destination);
        return $r0;
    }

    public org.apache.fop.pdf.PDFNames makeNames()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFNames $r0, names;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFNames;
        specialinvoke $r0.<org.apache.fop.pdf.PDFNames: void <init>()>();
        names = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(names);
        return names;
    }

    public org.apache.fop.pdf.PDFPageLabels makePageLabels()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFPageLabels $r0, pageLabels;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFPageLabels;
        specialinvoke $r0.<org.apache.fop.pdf.PDFPageLabels: void <init>()>();
        pageLabels = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: void assignObjectNumber(org.apache.fop.pdf.PDFObject)>(pageLabels);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>(pageLabels);
        return pageLabels;
    }

    public org.apache.fop.pdf.PDFDests makeDests(java.util.List)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.util.List destinationList;
        boolean deep, $z0;
        org.apache.fop.pdf.PDFDests dests, $r0;
        org.apache.fop.pdf.PDFArray kids, names, $r1, $r7;
        java.util.Iterator iter;
        org.apache.fop.pdf.PDFDestination dest;
        org.apache.fop.pdf.PDFNameTreeNode node, $r3, $r9;
        java.lang.Object $r2, $r8;
        org.apache.fop.pdf.PDFDocument $r4;
        java.lang.String $r6;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFFactory;
        destinationList := @parameter0: java.util.List;
        deep = 1;
        $r0 = new org.apache.fop.pdf.PDFDests;
        specialinvoke $r0.<org.apache.fop.pdf.PDFDests: void <init>()>();
        dests = $r0;
        $r1 = new org.apache.fop.pdf.PDFArray;
        specialinvoke $r1.<org.apache.fop.pdf.PDFArray: void <init>(org.apache.fop.pdf.PDFObject)>(dests);
        kids = $r1;
        iter = interfaceinvoke destinationList.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        dest = (org.apache.fop.pdf.PDFDestination) $r2;
        $r3 = new org.apache.fop.pdf.PDFNameTreeNode;
        specialinvoke $r3.<org.apache.fop.pdf.PDFNameTreeNode: void <init>()>();
        node = $r3;
        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r4.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(node);
        $r6 = virtualinvoke dest.<org.apache.fop.pdf.PDFDestination: java.lang.String getIDRef()>();
        virtualinvoke node.<org.apache.fop.pdf.PDFNameTreeNode: void setLowerLimit(java.lang.String)>($r6);
        $r6 = virtualinvoke dest.<org.apache.fop.pdf.PDFDestination: java.lang.String getIDRef()>();
        virtualinvoke node.<org.apache.fop.pdf.PDFNameTreeNode: void setUpperLimit(java.lang.String)>($r6);
        $r7 = new org.apache.fop.pdf.PDFArray;
        specialinvoke $r7.<org.apache.fop.pdf.PDFArray: void <init>(org.apache.fop.pdf.PDFObject)>(node);
        virtualinvoke node.<org.apache.fop.pdf.PDFNameTreeNode: void setNames(org.apache.fop.pdf.PDFArray)>($r7);
        names = virtualinvoke node.<org.apache.fop.pdf.PDFNameTreeNode: org.apache.fop.pdf.PDFArray getNames()>();
        virtualinvoke names.<org.apache.fop.pdf.PDFArray: void add(java.lang.Object)>(dest);
        virtualinvoke kids.<org.apache.fop.pdf.PDFArray: void add(java.lang.Object)>(node);
        goto label0;

     label1:
        $r8 = virtualinvoke kids.<org.apache.fop.pdf.PDFArray: java.lang.Object get(int)>(0);
        $r9 = (org.apache.fop.pdf.PDFNameTreeNode) $r8;
        $r6 = virtualinvoke $r9.<org.apache.fop.pdf.PDFNameTreeNode: java.lang.String getLowerLimit()>();
        virtualinvoke dests.<org.apache.fop.pdf.PDFDests: void setLowerLimit(java.lang.String)>($r6);
        $i0 = virtualinvoke kids.<org.apache.fop.pdf.PDFArray: int length()>();
        $i0 = $i0 - 1;
        $r8 = virtualinvoke kids.<org.apache.fop.pdf.PDFArray: java.lang.Object get(int)>($i0);
        $r9 = (org.apache.fop.pdf.PDFNameTreeNode) $r8;
        $r6 = virtualinvoke $r9.<org.apache.fop.pdf.PDFNameTreeNode: java.lang.String getUpperLimit()>();
        virtualinvoke dests.<org.apache.fop.pdf.PDFDests: void setUpperLimit(java.lang.String)>($r6);
        virtualinvoke dests.<org.apache.fop.pdf.PDFDests: void setKids(org.apache.fop.pdf.PDFArray)>(kids);
        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r4.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(dests);
        return dests;
    }

    public org.apache.fop.pdf.PDFNameTreeNode makeNameTreeNode()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFNameTreeNode $r0, node;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFNameTreeNode;
        specialinvoke $r0.<org.apache.fop.pdf.PDFNameTreeNode: void <init>()>();
        node = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(node);
        return node;
    }

    public org.apache.fop.pdf.PDFLink makeLink(java.awt.geom.Rectangle2D, org.apache.fop.pdf.PDFAction)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.awt.geom.Rectangle2D rect;
        org.apache.fop.pdf.PDFAction pdfAction;
        org.apache.fop.pdf.PDFLink link, $r0;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        rect := @parameter0: java.awt.geom.Rectangle2D;
        pdfAction := @parameter1: org.apache.fop.pdf.PDFAction;
        if rect == null goto label0;

        if pdfAction != null goto label1;

     label0:
        return null;

     label1:
        $r0 = new org.apache.fop.pdf.PDFLink;
        specialinvoke $r0.<org.apache.fop.pdf.PDFLink: void <init>(java.awt.geom.Rectangle2D)>(rect);
        link = $r0;
        virtualinvoke link.<org.apache.fop.pdf.PDFLink: void setAction(org.apache.fop.pdf.PDFAction)>(pdfAction);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(link);
        return link;
    }

    public org.apache.fop.pdf.PDFLink makeLink(java.awt.geom.Rectangle2D, java.lang.String, java.lang.String)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.awt.geom.Rectangle2D rect;
        java.lang.String page, dest, $r5;
        org.apache.fop.pdf.PDFLink $r0, link;
        org.apache.fop.pdf.PDFGoTo gt, $r3;
        org.apache.fop.pdf.PDFInternalLink internalLink, $r4;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        rect := @parameter0: java.awt.geom.Rectangle2D;
        page := @parameter1: java.lang.String;
        dest := @parameter2: java.lang.String;
        $r0 = new org.apache.fop.pdf.PDFLink;
        specialinvoke $r0.<org.apache.fop.pdf.PDFLink: void <init>(java.awt.geom.Rectangle2D)>(rect);
        link = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(link);
        $r3 = new org.apache.fop.pdf.PDFGoTo;
        specialinvoke $r3.<org.apache.fop.pdf.PDFGoTo: void <init>(java.lang.String)>(page);
        gt = $r3;
        virtualinvoke gt.<org.apache.fop.pdf.PDFGoTo: void setDestination(java.lang.String)>(dest);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>(gt);
        $r4 = new org.apache.fop.pdf.PDFInternalLink;
        $r5 = virtualinvoke gt.<org.apache.fop.pdf.PDFGoTo: java.lang.String referencePDF()>();
        specialinvoke $r4.<org.apache.fop.pdf.PDFInternalLink: void <init>(java.lang.String)>($r5);
        internalLink = $r4;
        virtualinvoke link.<org.apache.fop.pdf.PDFLink: void setAction(org.apache.fop.pdf.PDFAction)>(internalLink);
        return link;
    }

    public org.apache.fop.pdf.PDFLink makeLink(java.awt.geom.Rectangle2D, java.lang.String, int, float)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.awt.geom.Rectangle2D rect;
        java.lang.String destination, goToReference;
        int linkType;
        float yoffset;
        org.apache.fop.pdf.PDFLink $r0, link, oldlink;
        org.apache.fop.pdf.PDFInternalLink internalLink, $r2;
        org.apache.fop.pdf.PDFAction $r1;
        org.apache.fop.pdf.PDFDocument $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        rect := @parameter0: java.awt.geom.Rectangle2D;
        destination := @parameter1: java.lang.String;
        linkType := @parameter2: int;
        yoffset := @parameter3: float;
        $r0 = new org.apache.fop.pdf.PDFLink;
        specialinvoke $r0.<org.apache.fop.pdf.PDFLink: void <init>(java.awt.geom.Rectangle2D)>(rect);
        link = $r0;
        if linkType != 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFAction getExternalAction(java.lang.String)>(destination);
        virtualinvoke link.<org.apache.fop.pdf.PDFLink: void setAction(org.apache.fop.pdf.PDFAction)>($r1);
        goto label1;

     label0:
        goToReference = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: java.lang.String getGoToReference(java.lang.String,float)>(destination, yoffset);
        $r2 = new org.apache.fop.pdf.PDFInternalLink;
        specialinvoke $r2.<org.apache.fop.pdf.PDFInternalLink: void <init>(java.lang.String)>(goToReference);
        internalLink = $r2;
        virtualinvoke link.<org.apache.fop.pdf.PDFLink: void setAction(org.apache.fop.pdf.PDFAction)>(internalLink);

     label1:
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldlink = virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFLink findLink(org.apache.fop.pdf.PDFLink)>(link);
        if oldlink != null goto label2;

        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(link);
        goto label3;

     label2:
        link = oldlink;

     label3:
        return link;
    }

    public org.apache.fop.pdf.PDFAction getExternalAction(java.lang.String)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String target, targetLo, filename, dest, $r2;
        int index, page, $i0, $i1, $i2;
        boolean $z0;
        org.apache.fop.pdf.PDFUri $r0;
        org.apache.fop.pdf.PDFGoToRemote $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        target := @parameter0: java.lang.String;
        targetLo = virtualinvoke target.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke targetLo.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        if $z0 == 0 goto label0;

        $r0 = new org.apache.fop.pdf.PDFUri;
        specialinvoke $r0.<org.apache.fop.pdf.PDFUri: void <init>(java.lang.String)>(target);
        return $r0;

     label0:
        $z0 = virtualinvoke targetLo.<java.lang.String: boolean endsWith(java.lang.String)>(".pdf");
        if $z0 == 0 goto label1;

        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFGoToRemote getGoToPDFAction(java.lang.String,java.lang.String,int)>(target, null, -1);
        return $r1;

     label1:
        $i0 = virtualinvoke targetLo.<java.lang.String: int indexOf(java.lang.String)>(".pdf#page=");
        index = $i0;
        if $i0 <= 0 goto label2;

        $i1 = index + 4;
        filename = virtualinvoke target.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $i2 = index + 10;
        $r2 = virtualinvoke target.<java.lang.String: java.lang.String substring(int)>($i2);
        page = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFGoToRemote getGoToPDFAction(java.lang.String,java.lang.String,int)>(filename, null, page);
        return $r1;

     label2:
        $i0 = virtualinvoke targetLo.<java.lang.String: int indexOf(java.lang.String)>(".pdf#dest=");
        index = $i0;
        if $i0 <= 0 goto label3;

        $i1 = index + 4;
        filename = virtualinvoke target.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $i2 = index + 10;
        dest = virtualinvoke target.<java.lang.String: java.lang.String substring(int)>($i2);
        $r1 = specialinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFGoToRemote getGoToPDFAction(java.lang.String,java.lang.String,int)>(filename, dest, -1);
        return $r1;

     label3:
        $r0 = new org.apache.fop.pdf.PDFUri;
        specialinvoke $r0.<org.apache.fop.pdf.PDFUri: void <init>(java.lang.String)>(target);
        return $r0;
    }

    public java.lang.String getGoToReference(java.lang.String, float)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String pdfPageRef, $r2;
        float yoffset;
        java.awt.geom.Point2D$Float $r0;
        org.apache.fop.pdf.PDFGoTo $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        pdfPageRef := @parameter0: java.lang.String;
        yoffset := @parameter1: float;
        $r0 = new java.awt.geom.Point2D$Float;
        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>(float,float)>(0.0F, yoffset);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFGoTo getPDFGoTo(java.lang.String,java.awt.geom.Point2D)>(pdfPageRef, $r0);
        $r2 = virtualinvoke $r1.<org.apache.fop.pdf.PDFGoTo: java.lang.String referencePDF()>();
        return $r2;
    }

    public org.apache.fop.pdf.PDFGoTo getPDFGoTo(java.lang.String, java.awt.geom.Point2D)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String pdfPageRef;
        java.awt.geom.Point2D position;
        org.apache.fop.pdf.PDFGoTo gt, oldgt, $r2;
        org.apache.fop.pdf.PDFDocument $r0;
        org.apache.fop.pdf.PDFProfile $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        pdfPageRef := @parameter0: java.lang.String;
        position := @parameter1: java.awt.geom.Point2D;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile getProfile()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFProfile: void verifyActionAllowed()>();
        $r2 = new org.apache.fop.pdf.PDFGoTo;
        specialinvoke $r2.<org.apache.fop.pdf.PDFGoTo: void <init>(java.lang.String,java.awt.geom.Point2D)>(pdfPageRef, position);
        gt = $r2;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldgt = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFGoTo findGoTo(org.apache.fop.pdf.PDFGoTo)>(gt);
        if oldgt != null goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: void assignObjectNumber(org.apache.fop.pdf.PDFObject)>(gt);
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: void addTrailerObject(org.apache.fop.pdf.PDFObject)>(gt);
        goto label1;

     label0:
        gt = oldgt;

     label1:
        return gt;
    }

    private org.apache.fop.pdf.PDFGoToRemote getGoToPDFAction(java.lang.String, java.lang.String, int)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String file, dest;
        int page;
        org.apache.fop.pdf.PDFFileSpec fileSpec, oldspec, $r2;
        org.apache.fop.pdf.PDFGoToRemote remote, oldremote, $r4;
        org.apache.fop.pdf.PDFDocument $r0;
        org.apache.fop.pdf.PDFProfile $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        file := @parameter0: java.lang.String;
        dest := @parameter1: java.lang.String;
        page := @parameter2: int;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFProfile getProfile()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFProfile: void verifyActionAllowed()>();
        $r2 = new org.apache.fop.pdf.PDFFileSpec;
        specialinvoke $r2.<org.apache.fop.pdf.PDFFileSpec: void <init>(java.lang.String)>(file);
        fileSpec = $r2;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldspec = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFileSpec findFileSpec(org.apache.fop.pdf.PDFFileSpec)>(fileSpec);
        if oldspec != null goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(fileSpec);
        goto label1;

     label0:
        fileSpec = oldspec;

     label1:
        if dest != null goto label2;

        if page != -1 goto label2;

        $r4 = new org.apache.fop.pdf.PDFGoToRemote;
        specialinvoke $r4.<org.apache.fop.pdf.PDFGoToRemote: void <init>(org.apache.fop.pdf.PDFFileSpec)>(fileSpec);
        remote = $r4;
        goto label4;

     label2:
        if dest == null goto label3;

        $r4 = new org.apache.fop.pdf.PDFGoToRemote;
        specialinvoke $r4.<org.apache.fop.pdf.PDFGoToRemote: void <init>(org.apache.fop.pdf.PDFFileSpec,java.lang.String)>(fileSpec, dest);
        remote = $r4;
        goto label4;

     label3:
        $r4 = new org.apache.fop.pdf.PDFGoToRemote;
        specialinvoke $r4.<org.apache.fop.pdf.PDFGoToRemote: void <init>(org.apache.fop.pdf.PDFFileSpec,int)>(fileSpec, page);
        remote = $r4;

     label4:
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        oldremote = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFGoToRemote findGoToRemote(org.apache.fop.pdf.PDFGoToRemote)>(remote);
        if oldremote != null goto label5;

        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(remote);
        goto label6;

     label5:
        remote = oldremote;

     label6:
        return remote;
    }

    public org.apache.fop.pdf.PDFOutline makeOutline(org.apache.fop.pdf.PDFOutline, java.lang.String, java.lang.String, boolean)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFOutline parent, $r0, pdfOutline;
        java.lang.String label, actionRef;
        boolean showSubItems;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        parent := @parameter0: org.apache.fop.pdf.PDFOutline;
        label := @parameter1: java.lang.String;
        actionRef := @parameter2: java.lang.String;
        showSubItems := @parameter3: boolean;
        $r0 = new org.apache.fop.pdf.PDFOutline;
        specialinvoke $r0.<org.apache.fop.pdf.PDFOutline: void <init>(java.lang.String,java.lang.String,boolean)>(label, actionRef, showSubItems);
        pdfOutline = $r0;
        if parent == null goto label0;

        virtualinvoke parent.<org.apache.fop.pdf.PDFOutline: void addOutline(org.apache.fop.pdf.PDFOutline)>(pdfOutline);

     label0:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(pdfOutline);
        return pdfOutline;
    }

    public org.apache.fop.pdf.PDFOutline makeOutline(org.apache.fop.pdf.PDFOutline, java.lang.String, org.apache.fop.pdf.PDFAction, boolean)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFOutline parent, $r0;
        java.lang.String label, $r1;
        org.apache.fop.pdf.PDFAction pdfAction;
        boolean showSubItems;

        this := @this: org.apache.fop.pdf.PDFFactory;
        parent := @parameter0: org.apache.fop.pdf.PDFOutline;
        label := @parameter1: java.lang.String;
        pdfAction := @parameter2: org.apache.fop.pdf.PDFAction;
        showSubItems := @parameter3: boolean;
        if pdfAction != null goto label0;

        $r0 = null;
        goto label1;

     label0:
        $r1 = virtualinvoke pdfAction.<org.apache.fop.pdf.PDFAction: java.lang.String getAction()>();
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFOutline makeOutline(org.apache.fop.pdf.PDFOutline,java.lang.String,java.lang.String,boolean)>(parent, label, $r1, showSubItems);

     label1:
        return $r0;
    }

    public org.apache.fop.pdf.PDFOutline makeOutline(org.apache.fop.pdf.PDFOutline, java.lang.String, java.lang.String, float, boolean)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFOutline parent, $r0;
        java.lang.String label, destination, goToRef;
        float yoffset;
        boolean showSubItems;

        this := @this: org.apache.fop.pdf.PDFFactory;
        parent := @parameter0: org.apache.fop.pdf.PDFOutline;
        label := @parameter1: java.lang.String;
        destination := @parameter2: java.lang.String;
        yoffset := @parameter3: float;
        showSubItems := @parameter4: boolean;
        goToRef = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: java.lang.String getGoToReference(java.lang.String,float)>(destination, yoffset);
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFOutline makeOutline(org.apache.fop.pdf.PDFOutline,java.lang.String,java.lang.String,boolean)>(parent, label, goToRef, showSubItems);
        return $r0;
    }

    public org.apache.fop.pdf.PDFEncoding makeEncoding(java.lang.String)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String encodingName;
        org.apache.fop.pdf.PDFEncoding $r0, encoding;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        encodingName := @parameter0: java.lang.String;
        $r0 = new org.apache.fop.pdf.PDFEncoding;
        specialinvoke $r0.<org.apache.fop.pdf.PDFEncoding: void <init>(java.lang.String)>(encodingName);
        encoding = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(encoding);
        return encoding;
    }

    public org.apache.fop.pdf.PDFFont makeFont(java.lang.String, java.lang.String, java.lang.String, org.apache.fop.fonts.FontMetrics, org.apache.fop.fonts.FontDescriptor)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String fontname, basefont, encoding, wac, c, $r8, $r9, $r20, $r21;
        org.apache.fop.fonts.FontMetrics metrics;
        org.apache.fop.fonts.FontDescriptor descriptor;
        org.apache.fop.pdf.PDFFont preRegisteredfont, font, $r2;
        org.apache.fop.fonts.FontType $r0, fonttype, $r4;
        org.apache.fop.pdf.PDFFontDescriptor pdfdesc;
        org.apache.fop.fonts.CIDFont cidMetrics;
        org.apache.fop.pdf.PDFCIDSystemInfo sysInfo, $r7, $r16;
        org.apache.fop.pdf.PDFCIDFont cidFont, $r10;
        org.apache.fop.pdf.PDFToUnicodeCMap cmap, $r14;
        org.apache.fop.pdf.PDFFontNonBase14 nonBase14;
        org.apache.fop.fonts.SingleByteFont singleByteFont;
        int firstChar, lastChar, start, i, $i0;
        org.apache.fop.fonts.CodePointMapping mapping, winansi;
        org.apache.fop.pdf.PDFEncoding pdfEncoding, $r22;
        org.apache.fop.pdf.PDFEncoding$DifferencesBuilder builder;
        java.lang.String[] winansiNames, charNameMap;
        org.apache.fop.pdf.PDFDocument $r1;
        null_type font;
        boolean $z0;
        org.apache.fop.fonts.LazyFont $r5;
        org.apache.fop.fonts.Typeface $r6;
        org.apache.fop.fonts.CIDFontType $r11;
        org.apache.fop.pdf.PDFWArray $r12;
        org.apache.fop.pdf.PDFCIDFontDescriptor $r13;
        char[] $r15;
        org.apache.fop.pdf.PDFFontType0 $r17;
        int[] $r18;
        org.apache.fop.pdf.PDFArray $r19, $r24;

        this := @this: org.apache.fop.pdf.PDFFactory;
        fontname := @parameter0: java.lang.String;
        basefont := @parameter1: java.lang.String;
        encoding := @parameter2: java.lang.String;
        metrics := @parameter3: org.apache.fop.fonts.FontMetrics;
        descriptor := @parameter4: org.apache.fop.fonts.FontDescriptor;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        preRegisteredfont = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFont findFont(java.lang.String)>(fontname);
        if preRegisteredfont == null goto label0;

        return preRegisteredfont;

     label0:
        if descriptor != null goto label1;

        $r2 = new org.apache.fop.pdf.PDFFont;
        $r0 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType TYPE1>;
        specialinvoke $r2.<org.apache.fop.pdf.PDFFont: void <init>(java.lang.String,org.apache.fop.fonts.FontType,java.lang.String,java.lang.Object)>(fontname, $r0, basefont, encoding);
        font = $r2;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(font);
        return font;

     label1:
        fonttype = interfaceinvoke metrics.<org.apache.fop.fonts.FontMetrics: org.apache.fop.fonts.FontType getFontType()>();
        pdfdesc = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFFontDescriptor makeFontDescriptor(org.apache.fop.fonts.FontDescriptor)>(descriptor);
        font = null;
        font = staticinvoke <org.apache.fop.pdf.PDFFont: org.apache.fop.pdf.PDFFont createFont(java.lang.String,org.apache.fop.fonts.FontType,java.lang.String,java.lang.Object)>(fontname, fonttype, basefont, null);
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(font);
        $r4 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType TYPE0>;
        if fonttype != $r4 goto label4;

        virtualinvoke font.<org.apache.fop.pdf.PDFFont: void setEncoding(java.lang.String)>(encoding);
        $z0 = metrics instanceof org.apache.fop.fonts.LazyFont;
        if $z0 == 0 goto label2;

        $r5 = (org.apache.fop.fonts.LazyFont) metrics;
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.LazyFont: org.apache.fop.fonts.Typeface getRealFont()>();
        cidMetrics = (org.apache.fop.fonts.CIDFont) $r6;
        goto label3;

     label2:
        cidMetrics = (org.apache.fop.fonts.CIDFont) metrics;

     label3:
        $r7 = new org.apache.fop.pdf.PDFCIDSystemInfo;
        $r8 = virtualinvoke cidMetrics.<org.apache.fop.fonts.CIDFont: java.lang.String getRegistry()>();
        $r9 = virtualinvoke cidMetrics.<org.apache.fop.fonts.CIDFont: java.lang.String getOrdering()>();
        $i0 = virtualinvoke cidMetrics.<org.apache.fop.fonts.CIDFont: int getSupplement()>();
        specialinvoke $r7.<org.apache.fop.pdf.PDFCIDSystemInfo: void <init>(java.lang.String,java.lang.String,int)>($r8, $r9, $i0);
        sysInfo = $r7;
        $r10 = new org.apache.fop.pdf.PDFCIDFont;
        $r11 = virtualinvoke cidMetrics.<org.apache.fop.fonts.CIDFont: org.apache.fop.fonts.CIDFontType getCIDType()>();
        $i0 = virtualinvoke cidMetrics.<org.apache.fop.fonts.CIDFont: int getDefaultWidth()>();
        $r12 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFWArray getSubsetWidths(org.apache.fop.fonts.CIDFont)>(cidMetrics);
        $r13 = (org.apache.fop.pdf.PDFCIDFontDescriptor) pdfdesc;
        specialinvoke $r10.<org.apache.fop.pdf.PDFCIDFont: void <init>(java.lang.String,org.apache.fop.fonts.CIDFontType,int,org.apache.fop.pdf.PDFWArray,org.apache.fop.pdf.PDFCIDSystemInfo,org.apache.fop.pdf.PDFCIDFontDescriptor)>(basefont, $r11, $i0, $r12, sysInfo, $r13);
        cidFont = $r10;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(cidFont);
        $r14 = new org.apache.fop.pdf.PDFToUnicodeCMap;
        $r15 = virtualinvoke cidMetrics.<org.apache.fop.fonts.CIDFont: char[] getCharsUsed()>();
        $r16 = new org.apache.fop.pdf.PDFCIDSystemInfo;
        specialinvoke $r16.<org.apache.fop.pdf.PDFCIDSystemInfo: void <init>(java.lang.String,java.lang.String,int)>("Adobe", "Identity", 0);
        specialinvoke $r14.<org.apache.fop.pdf.PDFToUnicodeCMap: void <init>(char[],java.lang.String,org.apache.fop.pdf.PDFCIDSystemInfo)>($r15, "fop-ucs-H", $r16);
        cmap = $r14;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(cmap);
        $r17 = (org.apache.fop.pdf.PDFFontType0) font;
        virtualinvoke $r17.<org.apache.fop.pdf.PDFFontType0: void setCMAP(org.apache.fop.pdf.PDFCMap)>(cmap);
        $r17 = (org.apache.fop.pdf.PDFFontType0) font;
        virtualinvoke $r17.<org.apache.fop.pdf.PDFFontType0: void setDescendantFonts(org.apache.fop.pdf.PDFCIDFont)>(cidFont);
        goto label13;

     label4:
        nonBase14 = (org.apache.fop.pdf.PDFFontNonBase14) font;
        virtualinvoke nonBase14.<org.apache.fop.pdf.PDFFontNonBase14: void setDescriptor(org.apache.fop.pdf.PDFFontDescriptor)>(pdfdesc);
        $z0 = metrics instanceof org.apache.fop.fonts.LazyFont;
        if $z0 == 0 goto label5;

        $r5 = (org.apache.fop.fonts.LazyFont) metrics;
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.LazyFont: org.apache.fop.fonts.Typeface getRealFont()>();
        singleByteFont = (org.apache.fop.fonts.SingleByteFont) $r6;
        goto label6;

     label5:
        singleByteFont = (org.apache.fop.fonts.SingleByteFont) metrics;

     label6:
        firstChar = virtualinvoke singleByteFont.<org.apache.fop.fonts.SingleByteFont: int getFirstChar()>();
        lastChar = virtualinvoke singleByteFont.<org.apache.fop.fonts.SingleByteFont: int getLastChar()>();
        $r18 = interfaceinvoke metrics.<org.apache.fop.fonts.FontMetrics: int[] getWidths()>();
        $r19 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFArray makeArray(int[])>($r18);
        virtualinvoke nonBase14.<org.apache.fop.pdf.PDFFontNonBase14: void setWidthMetrics(int,int,org.apache.fop.pdf.PDFArray)>(firstChar, lastChar, $r19);
        mapping = virtualinvoke singleByteFont.<org.apache.fop.fonts.SingleByteFont: org.apache.fop.fonts.CodePointMapping getCodePointMapping()>();
        $z0 = virtualinvoke singleByteFont.<org.apache.fop.fonts.SingleByteFont: boolean isSymbolicFont()>();
        if $z0 == 0 goto label7;

        goto label13;

     label7:
        $r20 = virtualinvoke mapping.<org.apache.fop.fonts.CodePointMapping: java.lang.String getName()>();
        $z0 = staticinvoke <org.apache.fop.pdf.PDFEncoding: boolean isPredefinedEncoding(java.lang.String)>($r20);
        if $z0 == 0 goto label8;

        $r21 = virtualinvoke mapping.<org.apache.fop.fonts.CodePointMapping: java.lang.String getName()>();
        virtualinvoke font.<org.apache.fop.pdf.PDFFont: void setEncoding(java.lang.String)>($r21);
        goto label13;

     label8:
        winansi = staticinvoke <org.apache.fop.fonts.CodePointMapping: org.apache.fop.fonts.CodePointMapping getMapping(java.lang.String)>("WinAnsiEncoding");
        $r22 = new org.apache.fop.pdf.PDFEncoding;
        $r8 = virtualinvoke winansi.<org.apache.fop.fonts.CodePointMapping: java.lang.String getName()>();
        specialinvoke $r22.<org.apache.fop.pdf.PDFEncoding: void <init>(java.lang.String)>($r8);
        pdfEncoding = $r22;
        builder = virtualinvoke pdfEncoding.<org.apache.fop.pdf.PDFEncoding: org.apache.fop.pdf.PDFEncoding$DifferencesBuilder createDifferencesBuilder()>();
        start = -1;
        winansiNames = virtualinvoke winansi.<org.apache.fop.fonts.CodePointMapping: java.lang.String[] getCharNameMap()>();
        charNameMap = virtualinvoke mapping.<org.apache.fop.fonts.CodePointMapping: java.lang.String[] getCharNameMap()>();
        i = 0;

     label9:
        if i >= 256 goto label12;

        wac = winansiNames[i];
        c = charNameMap[i];
        $z0 = virtualinvoke wac.<java.lang.String: boolean equals(java.lang.Object)>(c);
        if $z0 != 0 goto label11;

        if start == i goto label10;

        virtualinvoke builder.<org.apache.fop.pdf.PDFEncoding$DifferencesBuilder: org.apache.fop.pdf.PDFEncoding$DifferencesBuilder addDifference(int)>(i);
        start = i;

     label10:
        virtualinvoke builder.<org.apache.fop.pdf.PDFEncoding$DifferencesBuilder: org.apache.fop.pdf.PDFEncoding$DifferencesBuilder addName(java.lang.String)>(c);
        start = start + 1;

     label11:
        i = i + 1;
        goto label9;

     label12:
        $r24 = virtualinvoke builder.<org.apache.fop.pdf.PDFEncoding$DifferencesBuilder: org.apache.fop.pdf.PDFArray toPDFArray()>();
        virtualinvoke pdfEncoding.<org.apache.fop.pdf.PDFEncoding: void setDifferences(org.apache.fop.pdf.PDFArray)>($r24);
        virtualinvoke font.<org.apache.fop.pdf.PDFFont: void setEncoding(org.apache.fop.pdf.PDFEncoding)>(pdfEncoding);

     label13:
        return font;
    }

    public org.apache.fop.pdf.PDFWArray getSubsetWidths(org.apache.fop.fonts.CIDFont)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.fonts.CIDFont cidFont;
        org.apache.fop.pdf.PDFWArray $r0, warray;
        int[] tmpWidth, $r4;
        int i, nwx, $i0, $i1, $i2;
        java.lang.Integer nw, $r2;
        java.util.Map $r1;
        java.lang.Object $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        cidFont := @parameter0: org.apache.fop.fonts.CIDFont;
        $r0 = new org.apache.fop.pdf.PDFWArray;
        specialinvoke $r0.<org.apache.fop.pdf.PDFWArray: void <init>()>();
        warray = $r0;
        $i0 = cidFont.<org.apache.fop.fonts.CIDFont: int usedGlyphsCount>;
        tmpWidth = newarray (int)[$i0];
        i = 0;

     label0:
        $i1 = cidFont.<org.apache.fop.fonts.CIDFont: int usedGlyphsCount>;
        if i >= $i1 goto label3;

        $r1 = cidFont.<org.apache.fop.fonts.CIDFont: java.util.Map usedGlyphsIndex>;
        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i);
        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);
        nw = (java.lang.Integer) $r3;
        if nw != null goto label1;

        $i0 = 0;
        goto label2;

     label1:
        $i0 = virtualinvoke nw.<java.lang.Integer: int intValue()>();

     label2:
        nwx = $i0;
        $r4 = cidFont.<org.apache.fop.fonts.CIDFont: int[] width>;
        $i2 = $r4[nwx];
        tmpWidth[i] = $i2;
        i = i + 1;
        goto label0;

     label3:
        virtualinvoke warray.<org.apache.fop.pdf.PDFWArray: void addEntry(int,int[])>(0, tmpWidth);
        return warray;
    }

    public org.apache.fop.pdf.PDFFontDescriptor makeFontDescriptor(org.apache.fop.fonts.FontDescriptor)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.fonts.FontDescriptor desc;
        null_type descriptor;
        org.apache.fop.fonts.FontType $r0, $r1;
        org.apache.fop.pdf.AbstractPDFStream stream;
        org.apache.fop.fonts.CustomFont font;
        org.apache.fop.fonts.CIDFont cidFont;
        org.apache.fop.pdf.PDFCIDFontDescriptor $r2;
        java.lang.String $r3;
        int[] $r4, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.fop.pdf.PDFFontDescriptor descriptor, $r5;
        org.apache.fop.pdf.PDFRectangle $r6;
        org.apache.fop.pdf.PDFDocument $r8;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFFactory;
        desc := @parameter0: org.apache.fop.fonts.FontDescriptor;
        descriptor = null;
        $r1 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: org.apache.fop.fonts.FontType getFontType()>();
        $r0 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType TYPE0>;
        if $r1 != $r0 goto label0;

        $r2 = new org.apache.fop.pdf.PDFCIDFontDescriptor;
        $r3 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: java.lang.String getEmbedFontName()>();
        $r4 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int[] getFontBBox()>();
        $i0 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getCapHeight()>();
        $i1 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getFlags()>();
        $i2 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getItalicAngle()>();
        $i3 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getStemV()>();
        specialinvoke $r2.<org.apache.fop.pdf.PDFCIDFontDescriptor: void <init>(java.lang.String,int[],int,int,int,int,java.lang.String)>($r3, $r4, $i0, $i1, $i2, $i3, null);
        descriptor = $r2;
        goto label1;

     label0:
        $r5 = new org.apache.fop.pdf.PDFFontDescriptor;
        $r3 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: java.lang.String getEmbedFontName()>();
        $i4 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getAscender()>();
        $i0 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getDescender()>();
        $i1 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getCapHeight()>();
        $i2 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getFlags()>();
        $r6 = new org.apache.fop.pdf.PDFRectangle;
        $r7 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int[] getFontBBox()>();
        specialinvoke $r6.<org.apache.fop.pdf.PDFRectangle: void <init>(int[])>($r7);
        $i5 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getItalicAngle()>();
        $i6 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: int getStemV()>();
        specialinvoke $r5.<org.apache.fop.pdf.PDFFontDescriptor: void <init>(java.lang.String,int,int,int,int,org.apache.fop.pdf.PDFRectangle,int,int)>($r3, $i4, $i0, $i1, $i2, $r6, $i5, $i6);
        descriptor = $r5;

     label1:
        $r8 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r8.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(descriptor);
        $z0 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: boolean isEmbeddable()>();
        if $z0 == 0 goto label3;

        stream = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.AbstractPDFStream makeFontFile(org.apache.fop.fonts.FontDescriptor)>(desc);
        if stream == null goto label2;

        $r0 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: org.apache.fop.fonts.FontType getFontType()>();
        virtualinvoke descriptor.<org.apache.fop.pdf.PDFFontDescriptor: void setFontFile(org.apache.fop.fonts.FontType,org.apache.fop.pdf.AbstractPDFStream)>($r0, stream);
        $r8 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r8.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(stream);

     label2:
        font = specialinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.fonts.CustomFont getCustomFont(org.apache.fop.fonts.FontDescriptor)>(desc);
        $z0 = font instanceof org.apache.fop.fonts.CIDFont;
        if $z0 == 0 goto label3;

        cidFont = (org.apache.fop.fonts.CIDFont) font;
        specialinvoke this.<org.apache.fop.pdf.PDFFactory: void buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor,org.apache.fop.fonts.CIDFont)>(descriptor, cidFont);

     label3:
        return descriptor;
    }

    private void buildCIDSet(org.apache.fop.pdf.PDFFontDescriptor, org.apache.fop.fonts.CIDFont)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFFontDescriptor descriptor;
        org.apache.fop.fonts.CIDFont cidFont;
        java.util.BitSet $r0, cidSubset;
        java.util.Iterator iter;
        java.lang.Integer cid;
        org.apache.fop.pdf.PDFStream cidSet;
        org.apache.commons.io.output.ByteArrayOutputStream baout, $r4;
        int value, i, c, shift, $i0, $i1;
        boolean b, $z0;
        java.io.IOException ioe, $r6;
        java.util.Map $r1;
        java.util.Set $r2;
        java.lang.Object $r3;
        byte[] $r5;
        org.apache.commons.logging.Log $r7;
        java.lang.StringBuffer $r8;
        java.lang.String $r9, $r10;

        this := @this: org.apache.fop.pdf.PDFFactory;
        descriptor := @parameter0: org.apache.fop.pdf.PDFFontDescriptor;
        cidFont := @parameter1: org.apache.fop.fonts.CIDFont;
        $r0 = new java.util.BitSet;
        specialinvoke $r0.<java.util.BitSet: void <init>()>();
        cidSubset = $r0;
        $r1 = cidFont.<org.apache.fop.fonts.CIDFont: java.util.Map usedGlyphs>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();
        iter = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        cid = (java.lang.Integer) $r3;
        $i0 = virtualinvoke cid.<java.lang.Integer: int intValue()>();
        virtualinvoke cidSubset.<java.util.BitSet: void set(int)>($i0);
        goto label0;

     label1:
        cidSet = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFStream makeStream(java.lang.String,boolean)>(null, 1);
        $r4 = new org.apache.commons.io.output.ByteArrayOutputStream;
        $i1 = virtualinvoke cidSubset.<java.util.BitSet: int length()>();
        $i1 = $i1 / 8;
        $i1 = $i1 + 1;
        specialinvoke $r4.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>($i1);
        baout = $r4;
        value = 0;
        i = 0;
        c = virtualinvoke cidSubset.<java.util.BitSet: int length()>();

     label2:
        if i >= c goto label5;

        shift = i % 8;
        b = virtualinvoke cidSubset.<java.util.BitSet: boolean get(int)>(i);
        if b == 0 goto label3;

        $i1 = 7 - shift;
        $i0 = 1 << $i1;
        value = value | $i0;

     label3:
        if shift != 7 goto label4;

        virtualinvoke baout.<org.apache.commons.io.output.ByteArrayOutputStream: void write(int)>(value);
        value = 0;

     label4:
        i = i + 1;
        goto label2;

     label5:
        virtualinvoke baout.<org.apache.commons.io.output.ByteArrayOutputStream: void write(int)>(value);

     label6:
        $r5 = virtualinvoke baout.<org.apache.commons.io.output.ByteArrayOutputStream: byte[] toByteArray()>();
        virtualinvoke cidSet.<org.apache.fop.pdf.PDFStream: void setData(byte[])>($r5);
        virtualinvoke descriptor.<org.apache.fop.pdf.PDFFontDescriptor: void setCIDSet(org.apache.fop.pdf.AbstractPDFStream)>(cidSet);

     label7:
        goto label9;

     label8:
        $r6 := @caughtexception;
        ioe = $r6;
        $r7 = this.<org.apache.fop.pdf.PDFFactory: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to write CIDSet [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(cidFont);
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");
        $r9 = virtualinvoke cidFont.<org.apache.fop.fonts.CIDFont: java.lang.String getEmbedFontName()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r10, ioe);

     label9:
        return;

        catch java.io.IOException from label6 to label7 with label8;
    }

    public org.apache.fop.pdf.AbstractPDFStream makeFontFile(org.apache.fop.fonts.FontDescriptor)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.fonts.FontDescriptor desc;
        org.apache.fop.fonts.FontType $r0, $r2, $r4;
        java.lang.StringBuffer $r1, $r24;
        org.apache.fop.fonts.CustomFont font;
        java.io.InputStream in, $r10;
        javax.xml.transform.Source source;
        java.net.MalformedURLException e, $r12;
        org.apache.fop.fonts.MultiByteFont mbfont;
        org.apache.fop.fonts.truetype.FontFileReader reader, $r15;
        org.apache.fop.fonts.truetype.TTFSubSetFile subset, $r16;
        byte[] subsetFont, file;
        org.apache.fop.pdf.AbstractPDFStream embeddedFont, l6;
        org.apache.fop.fonts.type1.PFBParser parser, $r19;
        org.apache.fop.fonts.type1.PFBData pfb;
        java.lang.Throwable l10, $r21;
        java.io.IOException ioe, $r22;
        java.lang.IllegalArgumentException $r3;
        java.lang.String $r5, $r6, $r9, $r25;
        javax.xml.transform.stream.StreamSource $r7;
        java.lang.Class $r8;
        null_type $n0;
        boolean $z0;
        java.net.URL $r11;
        java.io.FileNotFoundException $r13;
        java.io.BufferedInputStream $r14;
        java.util.Map $r17;
        org.apache.fop.pdf.PDFTTFStream $r18;
        int $i0;
        org.apache.fop.pdf.PDFT1Stream $r20;
        org.apache.commons.logging.Log $r23;
        org.apache.fop.pdf.PDFStream $r26;

        this := @this: org.apache.fop.pdf.PDFFactory;
        desc := @parameter0: org.apache.fop.fonts.FontDescriptor;
        $r2 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: org.apache.fop.fonts.FontType getFontType()>();
        $r0 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType OTHER>;
        if $r2 != $r0 goto label0;

        $r3 = new java.lang.IllegalArgumentException;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Trying to embed unsupported font type: ");
        $r4 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: org.apache.fop.fonts.FontType getFontType()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);
        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        font = specialinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.fonts.CustomFont getCustomFont(org.apache.fop.fonts.FontDescriptor)>(desc);
        in = null;

     label1:
        source = virtualinvoke font.<org.apache.fop.fonts.CustomFont: javax.xml.transform.Source getEmbedFileSource()>();
        if source != null goto label2;

        $r6 = virtualinvoke font.<org.apache.fop.fonts.CustomFont: java.lang.String getEmbedResourceName()>();
        if $r6 == null goto label2;

        $r7 = new javax.xml.transform.stream.StreamSource;
        $r8 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();
        $r9 = virtualinvoke font.<org.apache.fop.fonts.CustomFont: java.lang.String getEmbedResourceName()>();
        $r10 = virtualinvoke $r8.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r9);
        specialinvoke $r7.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>($r10);
        source = $r7;

     label2:
        if source != null goto label4;

        $n0 = null;

     label3:
        return $n0;

     label4:
        $z0 = source instanceof javax.xml.transform.stream.StreamSource;
        if $z0 == 0 goto label5;

        $r7 = (javax.xml.transform.stream.StreamSource) source;
        in = virtualinvoke $r7.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

     label5:
        if in != null goto label9;

        $r6 = interfaceinvoke source.<javax.xml.transform.Source: java.lang.String getSystemId()>();
        if $r6 == null goto label9;

     label6:
        $r11 = new java.net.URL;
        $r5 = interfaceinvoke source.<javax.xml.transform.Source: java.lang.String getSystemId()>();
        specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r5);
        in = virtualinvoke $r11.<java.net.URL: java.io.InputStream openStream()>();

     label7:
        goto label9;

     label8:
        $r12 := @caughtexception;
        e = $r12;
        $r13 = new java.io.FileNotFoundException;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File not found. URL could not be resolved: ");
        $r9 = virtualinvoke e.<java.net.MalformedURLException: java.lang.String getMessage()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r13.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r5);

     label9:
        if in != null goto label11;

        $n0 = null;

     label10:
        return $n0;

     label11:
        $z0 = in instanceof java.io.BufferedInputStream;
        if $z0 != 0 goto label12;

        $r14 = new java.io.BufferedInputStream;
        specialinvoke $r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(in);
        in = $r14;

     label12:
        if in != null goto label14;

        $n0 = null;

     label13:
        return $n0;

     label14:
        $r2 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: org.apache.fop.fonts.FontType getFontType()>();
        $r0 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType TYPE0>;
        if $r2 != $r0 goto label15;

        mbfont = (org.apache.fop.fonts.MultiByteFont) font;
        $r15 = new org.apache.fop.fonts.truetype.FontFileReader;
        specialinvoke $r15.<org.apache.fop.fonts.truetype.FontFileReader: void <init>(java.io.InputStream)>(in);
        reader = $r15;
        $r16 = new org.apache.fop.fonts.truetype.TTFSubSetFile;
        specialinvoke $r16.<org.apache.fop.fonts.truetype.TTFSubSetFile: void <init>()>();
        subset = $r16;
        $r5 = virtualinvoke mbfont.<org.apache.fop.fonts.MultiByteFont: java.lang.String getTTCName()>();
        $r17 = virtualinvoke mbfont.<org.apache.fop.fonts.MultiByteFont: java.util.Map getUsedGlyphs()>();
        subsetFont = virtualinvoke subset.<org.apache.fop.fonts.truetype.TTFSubSetFile: byte[] readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,java.util.Map)>(reader, $r5, $r17);
        $r18 = new org.apache.fop.pdf.PDFTTFStream;
        $i0 = lengthof subsetFont;
        specialinvoke $r18.<org.apache.fop.pdf.PDFTTFStream: void <init>(int)>($i0);
        embeddedFont = $r18;
        $r18 = (org.apache.fop.pdf.PDFTTFStream) embeddedFont;
        $i0 = lengthof subsetFont;
        virtualinvoke $r18.<org.apache.fop.pdf.PDFTTFStream: void setData(byte[],int)>(subsetFont, $i0);
        goto label17;

     label15:
        $r2 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: org.apache.fop.fonts.FontType getFontType()>();
        $r0 = <org.apache.fop.fonts.FontType: org.apache.fop.fonts.FontType TYPE1>;
        if $r2 != $r0 goto label16;

        $r19 = new org.apache.fop.fonts.type1.PFBParser;
        specialinvoke $r19.<org.apache.fop.fonts.type1.PFBParser: void <init>()>();
        parser = $r19;
        pfb = virtualinvoke parser.<org.apache.fop.fonts.type1.PFBParser: org.apache.fop.fonts.type1.PFBData parsePFB(java.io.InputStream)>(in);
        $r20 = new org.apache.fop.pdf.PDFT1Stream;
        specialinvoke $r20.<org.apache.fop.pdf.PDFT1Stream: void <init>()>();
        embeddedFont = $r20;
        $r20 = (org.apache.fop.pdf.PDFT1Stream) embeddedFont;
        virtualinvoke $r20.<org.apache.fop.pdf.PDFT1Stream: void setData(org.apache.fop.fonts.type1.PFBData)>(pfb);
        goto label17;

     label16:
        file = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(in);
        $r18 = new org.apache.fop.pdf.PDFTTFStream;
        $i0 = lengthof file;
        specialinvoke $r18.<org.apache.fop.pdf.PDFTTFStream: void <init>(int)>($i0);
        embeddedFont = $r18;
        $r18 = (org.apache.fop.pdf.PDFTTFStream) embeddedFont;
        $i0 = lengthof file;
        virtualinvoke $r18.<org.apache.fop.pdf.PDFTTFStream: void setData(byte[],int)>(file, $i0);

     label17:
        l6 = embeddedFont;

     label18:
        virtualinvoke in.<java.io.InputStream: void close()>();

     label19:
        return l6;

     label20:
        $r21 := @caughtexception;

     label21:
        l10 = $r21;

     label22:
        virtualinvoke in.<java.io.InputStream: void close()>();
        throw l10;

     label23:
        $r22 := @caughtexception;
        ioe = $r22;
        $r23 = this.<org.apache.fop.pdf.PDFFactory: org.apache.commons.logging.Log log>;
        $r24 = new java.lang.StringBuffer;
        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();
        $r24 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to embed font [");
        $r24 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(desc);
        $r24 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] ");
        $r5 = interfaceinvoke desc.<org.apache.fop.fonts.FontDescriptor: java.lang.String getEmbedFontName()>();
        $r24 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r23.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r25, ioe);
        $r26 = (org.apache.fop.pdf.PDFStream) null;
        return $r26;

        catch java.net.MalformedURLException from label6 to label7 with label8;
        catch java.lang.Throwable from label14 to label18 with label20;
        catch java.lang.Throwable from label21 to label22 with label20;
        catch java.io.IOException from label1 to label3 with label23;
        catch java.io.IOException from label4 to label10 with label23;
        catch java.io.IOException from label11 to label13 with label23;
        catch java.io.IOException from label14 to label19 with label23;
        catch java.io.IOException from label21 to label23 with label23;
    }

    private org.apache.fop.fonts.CustomFont getCustomFont(org.apache.fop.fonts.FontDescriptor)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.fonts.FontDescriptor desc;
        org.apache.fop.fonts.Typeface tempFont;
        java.lang.StringBuffer $r0;
        boolean $z0;
        org.apache.fop.fonts.LazyFont $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Class $r3;
        java.lang.String $r4, $r5;
        org.apache.fop.fonts.CustomFont $r6;

        this := @this: org.apache.fop.pdf.PDFFactory;
        desc := @parameter0: org.apache.fop.fonts.FontDescriptor;
        $z0 = desc instanceof org.apache.fop.fonts.LazyFont;
        if $z0 == 0 goto label0;

        $r1 = (org.apache.fop.fonts.LazyFont) desc;
        tempFont = virtualinvoke $r1.<org.apache.fop.fonts.LazyFont: org.apache.fop.fonts.Typeface getRealFont()>();
        goto label1;

     label0:
        tempFont = (org.apache.fop.fonts.Typeface) desc;

     label1:
        $z0 = tempFont instanceof org.apache.fop.fonts.CustomFont;
        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FontDescriptor must be instance of CustomFont, but is a ");
        $r3 = virtualinvoke desc.<java.lang.Object: java.lang.Class getClass()>();
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r2;

     label2:
        $r6 = (org.apache.fop.fonts.CustomFont) tempFont;
        return $r6;
    }

    public org.apache.fop.pdf.PDFStream makeStream(java.lang.String, boolean)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.lang.String type;
        boolean add;
        org.apache.fop.pdf.PDFStream $r0, obj;
        org.apache.fop.pdf.PDFDocument $r1, $r4;
        org.apache.fop.pdf.PDFFilterList $r2;
        java.util.Map $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        type := @parameter0: java.lang.String;
        add := @parameter1: boolean;
        $r0 = new org.apache.fop.pdf.PDFStream;
        specialinvoke $r0.<org.apache.fop.pdf.PDFStream: void <init>()>();
        obj = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke obj.<org.apache.fop.pdf.PDFStream: void setDocument(org.apache.fop.pdf.PDFDocument)>($r1);
        $r2 = virtualinvoke obj.<org.apache.fop.pdf.PDFStream: org.apache.fop.pdf.PDFFilterList getFilterList()>();
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: java.util.Map getFilterMap()>();
        virtualinvoke $r2.<org.apache.fop.pdf.PDFFilterList: void addDefaultFilters(java.util.Map,java.lang.String)>($r3, type);
        if add == 0 goto label0;

        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r4.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(obj);

     label0:
        return obj;
    }

    public org.apache.fop.pdf.PDFICCStream makePDFICCStream()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFICCStream $r0, iccStream;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFICCStream;
        specialinvoke $r0.<org.apache.fop.pdf.PDFICCStream: void <init>()>();
        iccStream = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(iccStream);
        return iccStream;
    }

    public org.apache.fop.pdf.PDFICCBasedColorSpace makeICCBasedColorSpace(org.apache.fop.pdf.PDFResourceContext, java.lang.String, org.apache.fop.pdf.PDFICCStream)
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFResourceContext res;
        java.lang.String explicitName;
        org.apache.fop.pdf.PDFICCStream iccStream;
        org.apache.fop.pdf.PDFICCBasedColorSpace $r0, cs;
        org.apache.fop.pdf.PDFDocument $r1;
        org.apache.fop.pdf.PDFResources $r3;

        this := @this: org.apache.fop.pdf.PDFFactory;
        res := @parameter0: org.apache.fop.pdf.PDFResourceContext;
        explicitName := @parameter1: java.lang.String;
        iccStream := @parameter2: org.apache.fop.pdf.PDFICCStream;
        $r0 = new org.apache.fop.pdf.PDFICCBasedColorSpace;
        specialinvoke $r0.<org.apache.fop.pdf.PDFICCBasedColorSpace: void <init>(java.lang.String,org.apache.fop.pdf.PDFICCStream)>(explicitName, iccStream);
        cs = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(cs);
        if res == null goto label0;

        $r3 = virtualinvoke res.<org.apache.fop.pdf.PDFResourceContext: org.apache.fop.pdf.PDFResources getPDFResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addColorSpace(org.apache.fop.pdf.PDFICCBasedColorSpace)>(cs);
        goto label1;

     label0:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r3 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFResources getResources()>();
        virtualinvoke $r3.<org.apache.fop.pdf.PDFResources: void addColorSpace(org.apache.fop.pdf.PDFICCBasedColorSpace)>(cs);

     label1:
        return cs;
    }

    public org.apache.fop.pdf.PDFArray makeArray(int[])
    {
        org.apache.fop.pdf.PDFFactory this;
        int[] values;
        org.apache.fop.pdf.PDFArray $r0, array;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        values := @parameter0: int[];
        $r0 = new org.apache.fop.pdf.PDFArray;
        specialinvoke $r0.<org.apache.fop.pdf.PDFArray: void <init>(org.apache.fop.pdf.PDFObject,int[])>(null, values);
        array = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(array);
        return array;
    }

    public org.apache.fop.pdf.PDFGState makeGState(java.util.Map, org.apache.fop.pdf.PDFGState)
    {
        org.apache.fop.pdf.PDFFactory this;
        java.util.Map settings;
        org.apache.fop.pdf.PDFGState current, $r0, wanted, existing, gstate, $r1;
        org.apache.fop.pdf.PDFDocument $r2;

        this := @this: org.apache.fop.pdf.PDFFactory;
        settings := @parameter0: java.util.Map;
        current := @parameter1: org.apache.fop.pdf.PDFGState;
        $r0 = new org.apache.fop.pdf.PDFGState;
        specialinvoke $r0.<org.apache.fop.pdf.PDFGState: void <init>()>();
        wanted = $r0;
        $r1 = <org.apache.fop.pdf.PDFGState: org.apache.fop.pdf.PDFGState DEFAULT>;
        virtualinvoke wanted.<org.apache.fop.pdf.PDFGState: void addValues(org.apache.fop.pdf.PDFGState)>($r1);
        virtualinvoke wanted.<org.apache.fop.pdf.PDFGState: void addValues(java.util.Map)>(settings);
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        existing = virtualinvoke $r2.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFGState findGState(org.apache.fop.pdf.PDFGState,org.apache.fop.pdf.PDFGState)>(wanted, current);
        if existing == null goto label0;

        return existing;

     label0:
        $r0 = new org.apache.fop.pdf.PDFGState;
        specialinvoke $r0.<org.apache.fop.pdf.PDFGState: void <init>()>();
        gstate = $r0;
        virtualinvoke gstate.<org.apache.fop.pdf.PDFGState: void addValues(java.util.Map)>(settings);
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r2.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFObject registerObject(org.apache.fop.pdf.PDFObject)>(gstate);
        return gstate;
    }

    public org.apache.fop.pdf.PDFAnnotList makeAnnotList()
    {
        org.apache.fop.pdf.PDFFactory this;
        org.apache.fop.pdf.PDFAnnotList $r0, obj;
        org.apache.fop.pdf.PDFDocument $r1;

        this := @this: org.apache.fop.pdf.PDFFactory;
        $r0 = new org.apache.fop.pdf.PDFAnnotList;
        specialinvoke $r0.<org.apache.fop.pdf.PDFAnnotList: void <init>()>();
        obj = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: void assignObjectNumber(org.apache.fop.pdf.PDFObject)>(obj);
        return obj;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

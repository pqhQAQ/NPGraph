public class org.apache.fop.layoutmgr.inline.CharacterLayoutManager extends org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager
{
    private org.apache.fop.fo.flow.Character fobj;
    private org.apache.fop.traits.MinOptMax letterSpaceIPD;
    private int hyphIPD;
    private org.apache.fop.fonts.Font font;
    private org.apache.fop.fo.properties.CommonBorderPaddingBackground borderProps;

    public void <init>(org.apache.fop.fo.flow.Character)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        org.apache.fop.fo.flow.Character node;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        node := @parameter0: org.apache.fop.fo.flow.Character;
        specialinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void <init>(org.apache.fop.fo.FObj)>(node);
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground borderProps> = null;
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj> = node;
        return;
    }

    public void initialize()
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        org.apache.fop.fonts.FontInfo fi;
        org.apache.fop.fonts.FontTriplet[] fontkeys;
        org.apache.fop.traits.SpaceVal ls;
        org.apache.fop.area.inline.TextArea chArea;
        org.apache.fop.fo.flow.Character $r0, $r4, $r10;
        org.apache.fop.fo.FOEventHandler $r1;
        org.apache.fop.fo.properties.CommonFont $r2, $r5;
        org.apache.fop.fonts.FontTriplet $r3;
        org.apache.fop.datatypes.Length $r6;
        int $i0, $i1;
        org.apache.fop.fonts.Font $r7, $r12;
        org.apache.fop.fo.properties.Property $r8;
        org.apache.fop.traits.MinOptMax $r9;
        org.apache.fop.fo.properties.CommonHyphenation $r11;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r13;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        fi = virtualinvoke $r1.<org.apache.fop.fo.FOEventHandler: org.apache.fop.fonts.FontInfo getFontInfo()>();
        $r0 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r2 = virtualinvoke $r0.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.properties.CommonFont getCommonFont()>();
        fontkeys = virtualinvoke $r2.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fonts.FontTriplet[] getFontState(org.apache.fop.fonts.FontInfo)>(fi);
        $r3 = fontkeys[0];
        $r4 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.properties.CommonFont getCommonFont()>();
        $r6 = $r5.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize>;
        $i0 = interfaceinvoke $r6.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(this);
        $r7 = virtualinvoke fi.<org.apache.fop.fonts.FontInfo: org.apache.fop.fonts.Font getFontInstance(org.apache.fop.fonts.FontTriplet,int)>($r3, $i0);
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font> = $r7;
        $r0 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r8 = virtualinvoke $r0.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.properties.Property getLetterSpacing()>();
        ls = staticinvoke <org.apache.fop.traits.SpaceVal: org.apache.fop.traits.SpaceVal makeLetterSpacing(org.apache.fop.fo.properties.Property)>($r8);
        $r9 = virtualinvoke ls.<org.apache.fop.traits.SpaceVal: org.apache.fop.traits.MinOptMax getSpace()>();
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD> = $r9;
        $r10 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r11 = virtualinvoke $r10.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.properties.CommonHyphenation getCommonHyphenation()>();
        $r12 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r11.<org.apache.fop.fo.properties.CommonHyphenation: int getHyphIPD(org.apache.fop.fonts.Font)>($r12);
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: int hyphIPD> = $i1;
        $r10 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r13 = virtualinvoke $r10.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()>();
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground borderProps> = $r13;
        $r13 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground borderProps>;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void setCommonBorderPaddingBackground(org.apache.fop.fo.properties.CommonBorderPaddingBackground)>($r13);
        $r10 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        chArea = specialinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.TextArea getCharacterInlineArea(org.apache.fop.fo.flow.Character)>($r10);
        $r7 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r7.<org.apache.fop.fonts.Font: int getAscender()>();
        virtualinvoke chArea.<org.apache.fop.area.inline.TextArea: void setBaselineOffset(int)>($i1);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void setCurrentArea(org.apache.fop.area.inline.InlineArea)>(chArea);
        return;
    }

    private org.apache.fop.area.inline.TextArea getCharacterInlineArea(org.apache.fop.fo.flow.Character)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        org.apache.fop.fo.flow.Character node, $r2;
        org.apache.fop.area.inline.TextArea $r0, text;
        char ch;
        boolean $z0, $z1;
        java.lang.String $r1;
        org.apache.fop.fo.properties.CommonTextDecoration $r3;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        node := @parameter0: org.apache.fop.fo.flow.Character;
        $r0 = new org.apache.fop.area.inline.TextArea;
        specialinvoke $r0.<org.apache.fop.area.inline.TextArea: void <init>()>();
        text = $r0;
        ch = virtualinvoke node.<org.apache.fop.fo.flow.Character: char getCharacter()>();
        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isAnySpace(char)>(ch);
        if $z0 == 0 goto label0;

        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isZeroWidthSpace(char)>(ch);
        if $z0 != 0 goto label1;

        $z1 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isAdjustableSpace(char)>(ch);
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void addSpace(char,int,boolean)>(ch, 0, $z1);
        goto label1;

     label0:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(ch);
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void addWord(java.lang.String,int)>($r1, 0);

     label1:
        $r1 = virtualinvoke node.<org.apache.fop.fo.flow.Character: java.lang.String getId()>();
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void setProducerID(org.apache.fop.area.Area,java.lang.String)>(text, $r1);
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.flow.Character: org.apache.fop.fo.properties.CommonTextDecoration getTextDecoration()>();
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addTextDecoration(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonTextDecoration)>(text, $r3);
        return text;
    }

    public java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext, int)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        int alignment, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.apache.fop.layoutmgr.InlineKnuthSequence seq, $r1;
        org.apache.fop.traits.MinOptMax ipd, $r3, $r22, $r25;
        java.util.LinkedList returnList, $r32;
        org.apache.fop.area.inline.InlineArea $r0, $r2;
        org.apache.fop.fonts.Font $r4, $r6, $r11, $r12;
        org.apache.fop.fo.flow.Character $r5, $r8, $r13, $r15, $r16, $r18;
        char $c0;
        java.lang.Integer $r7;
        java.awt.Color $r9;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r10, $r19, $r21, $r27;
        org.apache.fop.datatypes.Length $r14, $r17;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r20, $r24, $r26;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r23;
        org.apache.fop.layoutmgr.LeafPosition $r28;
        org.apache.fop.layoutmgr.Position $r29;
        org.apache.fop.layoutmgr.KnuthPenalty $r30;
        org.apache.fop.layoutmgr.KnuthGlue $r31;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter1: int;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea get(org.apache.fop.layoutmgr.LayoutContext)>(context);
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea> = $r0;
        $r1 = new org.apache.fop.layoutmgr.InlineKnuthSequence;
        specialinvoke $r1.<org.apache.fop.layoutmgr.InlineKnuthSequence: void <init>()>();
        seq = $r1;
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        if $r2 != null goto label0;

        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void setFinished(boolean)>(1);
        return null;

     label0:
        $r3 = new org.apache.fop.traits.MinOptMax;
        $r4 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $c0 = virtualinvoke $r5.<org.apache.fop.fo.flow.Character: char getCharacter()>();
        $i1 = virtualinvoke $r4.<org.apache.fop.fonts.Font: int getCharWidth(char)>($c0);
        specialinvoke $r3.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i1);
        ipd = $r3;
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        $i2 = ipd.<org.apache.fop.traits.MinOptMax: int opt>;
        virtualinvoke $r2.<org.apache.fop.area.inline.InlineArea: void setIPD(int)>($i2);
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        $r6 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $i2 = virtualinvoke $r6.<org.apache.fop.fonts.Font: int getAscender()>();
        $r4 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r4.<org.apache.fop.fonts.Font: int getDescender()>();
        $i2 = $i2 - $i1;
        virtualinvoke $r2.<org.apache.fop.area.inline.InlineArea: void setBPD(int)>($i2);
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        $r6 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addFontTraits(org.apache.fop.area.Area,org.apache.fop.fonts.Font)>($r2, $r6);
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        $r7 = <org.apache.fop.area.Trait: java.lang.Integer COLOR>;
        $r8 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r9 = virtualinvoke $r8.<org.apache.fop.fo.flow.Character: java.awt.Color getColor()>();
        virtualinvoke $r2.<org.apache.fop.area.inline.InlineArea: void addTrait(java.lang.Object,java.lang.Object)>($r7, $r9);
        $r10 = new org.apache.fop.layoutmgr.inline.AlignmentContext;
        $r11 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $r12 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fonts.Font font>;
        $i3 = virtualinvoke $r12.<org.apache.fop.fonts.Font: int getFontSize()>();
        $r13 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r14 = virtualinvoke $r13.<org.apache.fop.fo.flow.Character: org.apache.fop.datatypes.Length getAlignmentAdjust()>();
        $r15 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $i4 = virtualinvoke $r15.<org.apache.fop.fo.flow.Character: int getAlignmentBaseline()>();
        $r16 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r17 = virtualinvoke $r16.<org.apache.fop.fo.flow.Character: org.apache.fop.datatypes.Length getBaselineShift()>();
        $r18 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $i5 = virtualinvoke $r18.<org.apache.fop.fo.flow.Character: int getDominantBaseline()>();
        $r19 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext getAlignmentContext()>();
        specialinvoke $r10.<org.apache.fop.layoutmgr.inline.AlignmentContext: void <init>(org.apache.fop.fonts.Font,int,org.apache.fop.datatypes.Length,int,org.apache.fop.datatypes.Length,int,org.apache.fop.layoutmgr.inline.AlignmentContext)>($r11, $i3, $r14, $i4, $r17, $i5, $r19);
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = $r10;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void addKnuthElementsForBorderPaddingStart(java.util.List)>(seq);
        $r20 = new org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo;
        $r21 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        specialinvoke $r20.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager,short,org.apache.fop.traits.MinOptMax,boolean,org.apache.fop.layoutmgr.inline.AlignmentContext)>(this, 0, ipd, 0, $r21);
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo> = $r20;
        $r3 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i6 = $r3.<org.apache.fop.traits.MinOptMax: int min>;
        $r22 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i2 = $r22.<org.apache.fop.traits.MinOptMax: int max>;
        if $i6 != $i2 goto label1;

        $r23 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r24 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r25 = $r24.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i7 = $r25.<org.apache.fop.traits.MinOptMax: int opt>;
        $r26 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r27 = $r26.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r28 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r28.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, 0);
        $r29 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r28);
        specialinvoke $r23.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i7, $r27, $r29, 0);
        virtualinvoke seq.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r23);
        goto label2;

     label1:
        $r23 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r24 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r25 = $r24.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i7 = $r25.<org.apache.fop.traits.MinOptMax: int opt>;
        $r26 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r27 = $r26.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r28 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r28.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, 0);
        $r29 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r28);
        specialinvoke $r23.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i7, $r27, $r29, 0);
        virtualinvoke seq.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r23);
        $r30 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r28 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r28.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r30.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r28, 1);
        virtualinvoke seq.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r30);
        $r31 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r28 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r28.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r31.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r28, 1);
        virtualinvoke seq.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r31);
        $r23 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r28 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r28.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r29 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r28);
        specialinvoke $r23.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r29, 1);
        virtualinvoke seq.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r23);

     label2:
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void addKnuthElementsForBorderPaddingEnd(java.util.List)>(seq);
        $r32 = new java.util.LinkedList;
        specialinvoke $r32.<java.util.LinkedList: void <init>()>();
        returnList = $r32;
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>(seq);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void setFinished(boolean)>(1);
        return returnList;
    }

    public void getWordChars(java.lang.StringBuffer, org.apache.fop.layoutmgr.Position)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        java.lang.StringBuffer sbChars;
        org.apache.fop.layoutmgr.Position bp;
        org.apache.fop.area.inline.InlineArea $r0;
        org.apache.fop.area.inline.TextArea $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        sbChars := @parameter0: java.lang.StringBuffer;
        bp := @parameter1: org.apache.fop.layoutmgr.Position;
        $r0 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        $r1 = (org.apache.fop.area.inline.TextArea) $r0;
        $r2 = virtualinvoke $r1.<org.apache.fop.area.inline.TextArea: java.lang.String getText()>();
        virtualinvoke sbChars.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        return;
    }

    public void hyphenate(org.apache.fop.layoutmgr.Position, org.apache.fop.layoutmgr.inline.HyphContext)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        org.apache.fop.layoutmgr.Position pos;
        org.apache.fop.layoutmgr.inline.HyphContext hc;
        int $i0;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r0;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        pos := @parameter0: org.apache.fop.layoutmgr.Position;
        hc := @parameter1: org.apache.fop.layoutmgr.inline.HyphContext;
        $i0 = virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: int getNextHyphPoint()>();
        if $i0 != 1 goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r0.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: boolean bHyphenated> = 1;
        this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: boolean isSomethingChanged> = 1;

     label0:
        virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: void updateOffset(int)>(1);
        return;
    }

    public boolean applyChanges(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        java.util.List oldList;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        oldList := @parameter0: java.util.List;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void setFinished(boolean)>(0);
        $z0 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: boolean isSomethingChanged>;
        if $z0 == 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public java.util.LinkedList getChangedKnuthElements(java.util.List, int)
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        java.util.List oldList;
        int alignment, $i0, $i1, $i3, $i5, $i6, $i9;
        java.util.LinkedList returnList, $r1;
        org.apache.fop.layoutmgr.LeafPosition $r0;
        boolean $z0;
        org.apache.fop.traits.MinOptMax $r2, $r3, $r7, $r12, $r14, $r16;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r4, $r6, $r8, $r15;
        short $s2, $s4, $s7, $s8;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r5;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r9;
        org.apache.fop.layoutmgr.Position $r10;
        org.apache.fop.layoutmgr.KnuthPenalty $r11;
        org.apache.fop.layoutmgr.KnuthGlue $r13;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        oldList := @parameter0: java.util.List;
        alignment := @parameter1: int;
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: boolean isFinished()>();
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r1 = new java.util.LinkedList;
        specialinvoke $r1.<java.util.LinkedList: void <init>()>();
        returnList = $r1;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void addKnuthElementsForBorderPaddingStart(java.util.List)>(returnList);
        $r2 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i0 = $r2.<org.apache.fop.traits.MinOptMax: int min>;
        $r3 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i1 = $r3.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 == $i1 goto label1;

        $r4 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $s2 = $r4.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: short iLScount>;
        if $s2 != 0 goto label2;

     label1:
        $r5 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r6 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r7 = $r6.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i3 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $r8 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r9 = $r8.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, 0);
        $r10 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r5.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i3, $r9, $r10, 0);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r4 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $z0 = $r4.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: boolean bHyphenated>;
        if $z0 == 0 goto label3;

        $r11 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $i3 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: int hyphIPD>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r11.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>($i3, 50, 1, $r0, 0);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);
        goto label3;

     label2:
        $r5 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r6 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r7 = $r6.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i3 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $r8 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $s4 = $r8.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: short iLScount>;
        $r12 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i5 = $r12.<org.apache.fop.traits.MinOptMax: int opt>;
        $i6 = $s4 * $i5;
        $i3 = $i3 - $i6;
        $r8 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r9 = $r8.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, 0);
        $r10 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r5.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i3, $r9, $r10, 0);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r11 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r11.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);
        $r13 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r6 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $s7 = $r6.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: short iLScount>;
        $r14 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i6 = $r14.<org.apache.fop.traits.MinOptMax: int opt>;
        $i3 = $s7 * $i6;
        $r8 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $s4 = $r8.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: short iLScount>;
        $r12 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i5 = $r12.<org.apache.fop.traits.MinOptMax: int max>;
        $i6 = $s4 * $i5;
        $r12 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i5 = $r12.<org.apache.fop.traits.MinOptMax: int opt>;
        $i6 = $i6 - $i5;
        $r15 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $s8 = $r15.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: short iLScount>;
        $r16 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i9 = $r16.<org.apache.fop.traits.MinOptMax: int opt>;
        $i5 = $s8 * $i9;
        $r16 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i9 = $r16.<org.apache.fop.traits.MinOptMax: int min>;
        $i5 = $i5 - $i9;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r13.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i3, $i6, $i5, $r0, 1);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r13);
        $r5 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r10 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r5.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r10, 1);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r4 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $z0 = $r4.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: boolean bHyphenated>;
        if $z0 == 0 goto label3;

        $r11 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $i3 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: int hyphIPD>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r11.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>($i3, 50, 1, $r0, 0);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r11);

     label3:
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void addKnuthElementsForBorderPaddingEnd(java.util.List)>(returnList);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: void setFinished(boolean)>(1);
        return returnList;
    }

    protected void addId()
    {
        org.apache.fop.layoutmgr.inline.CharacterLayoutManager this;
        org.apache.fop.layoutmgr.PageSequenceLayoutManager $r0;
        org.apache.fop.fo.flow.Character $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.layoutmgr.inline.CharacterLayoutManager;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.layoutmgr.PageSequenceLayoutManager getPSLM()>();
        $r1 = this.<org.apache.fop.layoutmgr.inline.CharacterLayoutManager: org.apache.fop.fo.flow.Character fobj>;
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.flow.Character: java.lang.String getId()>();
        virtualinvoke $r0.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void addIDToPage(java.lang.String)>($r2);
        return;
    }
}

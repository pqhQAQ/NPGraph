public class org.apache.fop.layoutmgr.LMiter extends java.lang.Object implements java.util.ListIterator
{
    protected java.util.List listLMs;
    protected int curPos;
    private org.apache.fop.layoutmgr.LayoutManager lp;

    public void <init>(org.apache.fop.layoutmgr.LayoutManager)
    {
        org.apache.fop.layoutmgr.LMiter this;
        org.apache.fop.layoutmgr.LayoutManager lp;
        java.util.List $r0;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        lp := @parameter0: org.apache.fop.layoutmgr.LayoutManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.LMiter: int curPos> = 0;
        this.<org.apache.fop.layoutmgr.LMiter: org.apache.fop.layoutmgr.LayoutManager lp> = lp;
        $r0 = interfaceinvoke lp.<org.apache.fop.layoutmgr.LayoutManager: java.util.List getChildLMs()>();
        this.<org.apache.fop.layoutmgr.LMiter: java.util.List listLMs> = $r0;
        return;
    }

    public boolean hasNext()
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0, $i1;
        java.util.List $r0;
        boolean $z0;
        org.apache.fop.layoutmgr.LayoutManager $r1;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $r0 = this.<org.apache.fop.layoutmgr.LMiter: java.util.List listLMs>;
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.LMiter: org.apache.fop.layoutmgr.LayoutManager lp>;
        $i1 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $z0 = interfaceinvoke $r1.<org.apache.fop.layoutmgr.LayoutManager: boolean createNextChildLMs(int)>($i1);

     label1:
        return $z0;
    }

    public boolean hasPrevious()
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        if $i0 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.lang.Object previous() throws java.util.NoSuchElementException
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0, $i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        java.util.NoSuchElementException $r3;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        if $i0 <= 0 goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.LMiter: java.util.List listLMs>;
        $i1 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $i2 = $i1 - 1;
        this.<org.apache.fop.layoutmgr.LMiter: int curPos> = $i2;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);
        return $r2;

     label0:
        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        throw $r3;
    }

    public java.lang.Object next() throws java.util.NoSuchElementException
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0, $i1, $i2, $i3;
        java.util.List $r0, $r1;
        java.lang.Object $r3;
        java.util.NoSuchElementException $r4;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i1 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $r0 = this.<org.apache.fop.layoutmgr.LMiter: java.util.List listLMs>;
        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i1 >= $i2 goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.LMiter: java.util.List listLMs>;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $i3 = $i0 + 1;
        this.<org.apache.fop.layoutmgr.LMiter: int curPos> = $i3;
        $r3 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);
        return $r3;

     label0:
        $r4 = new java.util.NoSuchElementException;
        specialinvoke $r4.<java.util.NoSuchElementException: void <init>()>();
        throw $r4;
    }

    public void remove() throws java.util.NoSuchElementException
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0, $i1, $i2;
        java.util.List $r1;
        java.util.NoSuchElementException $r3;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        if $i0 <= 0 goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.LMiter: java.util.List listLMs>;
        $i1 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $i2 = $i1 - 1;
        this.<org.apache.fop.layoutmgr.LMiter: int curPos> = $i2;
        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i2);
        goto label1;

     label0:
        $r3 = new java.util.NoSuchElementException;
        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();
        throw $r3;

     label1:
        return;
    }

    public void add(java.lang.Object) throws java.lang.UnsupportedOperationException
    {
        org.apache.fop.layoutmgr.LMiter this;
        java.lang.Object o;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        o := @parameter0: java.lang.Object;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("LMiter doesn\'t support add");
        throw $r0;
    }

    public void set(java.lang.Object) throws java.lang.UnsupportedOperationException
    {
        org.apache.fop.layoutmgr.LMiter this;
        java.lang.Object o;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        o := @parameter0: java.lang.Object;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("LMiter doesn\'t support set");
        throw $r0;
    }

    public int nextIndex()
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        return $i0;
    }

    public int previousIndex()
    {
        org.apache.fop.layoutmgr.LMiter this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LMiter;
        $i0 = this.<org.apache.fop.layoutmgr.LMiter: int curPos>;
        $i0 = $i0 - 1;
        return $i0;
    }
}

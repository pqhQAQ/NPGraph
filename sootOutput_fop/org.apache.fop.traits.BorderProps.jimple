public class org.apache.fop.traits.BorderProps extends java.lang.Object implements java.io.Serializable
{
    public static final int SEPARATE;
    public static final int COLLAPSE_INNER;
    public static final int COLLAPSE_OUTER;
    public int style;
    public java.awt.Color color;
    public int width;
    public int mode;

    public void <init>(int, int, java.awt.Color, int)
    {
        org.apache.fop.traits.BorderProps this;
        int style, width, mode;
        java.awt.Color color;

        this := @this: org.apache.fop.traits.BorderProps;
        style := @parameter0: int;
        width := @parameter1: int;
        color := @parameter2: java.awt.Color;
        mode := @parameter3: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.traits.BorderProps: int style> = style;
        this.<org.apache.fop.traits.BorderProps: int width> = width;
        this.<org.apache.fop.traits.BorderProps: java.awt.Color color> = color;
        this.<org.apache.fop.traits.BorderProps: int mode> = mode;
        return;
    }

    public void <init>(java.lang.String, int, java.awt.Color, int)
    {
        org.apache.fop.traits.BorderProps this;
        java.lang.String style;
        int width, mode, $i0;
        java.awt.Color color;

        this := @this: org.apache.fop.traits.BorderProps;
        style := @parameter0: java.lang.String;
        width := @parameter1: int;
        color := @parameter2: java.awt.Color;
        mode := @parameter3: int;
        $i0 = staticinvoke <org.apache.fop.traits.BorderProps: int getConstantForStyle(java.lang.String)>(style);
        specialinvoke this.<org.apache.fop.traits.BorderProps: void <init>(int,int,java.awt.Color,int)>($i0, width, color, mode);
        return;
    }

    public static int getClippedWidth(org.apache.fop.traits.BorderProps)
    {
        org.apache.fop.traits.BorderProps bp;
        int $i0;

        bp := @parameter0: org.apache.fop.traits.BorderProps;
        if bp == null goto label0;

        $i0 = bp.<org.apache.fop.traits.BorderProps: int mode>;
        if $i0 == 0 goto label0;

        $i0 = bp.<org.apache.fop.traits.BorderProps: int width>;
        $i0 = $i0 / 2;
        return $i0;

     label0:
        return 0;
    }

    private java.lang.String getStyleString()
    {
        org.apache.fop.traits.BorderProps this;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.traits.BorderProps;
        $i0 = this.<org.apache.fop.traits.BorderProps: int style>;
        lookupswitch($i0)
        {
            case 31: goto label3;
            case 36: goto label2;
            case 37: goto label5;
            case 55: goto label6;
            case 57: goto label1;
            case 67: goto label8;
            case 95: goto label0;
            case 101: goto label9;
            case 119: goto label7;
            case 133: goto label4;
            default: goto label10;
        };

     label0:
        return "none";

     label1:
        return "hidden";

     label2:
        return "dotted";

     label3:
        return "dashed";

     label4:
        return "solid";

     label5:
        return "double";

     label6:
        return "groove";

     label7:
        return "ridge";

     label8:
        return "inset";

     label9:
        return "outset";

     label10:
        $r1 = new java.lang.IllegalStateException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal border style: ");
        $i1 = this.<org.apache.fop.traits.BorderProps: int style>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r2);
        throw $r1;
    }

    private static int getConstantForStyle(java.lang.String)
    {
        java.lang.String style, $r0, $r3;
        java.lang.StringBuffer $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        style := @parameter0: java.lang.String;
        $r0 = "none";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label0;

        return 95;

     label0:
        $r0 = "hidden";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label1;

        return 57;

     label1:
        $r0 = "dotted";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label2;

        return 36;

     label2:
        $r0 = "dashed";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label3;

        return 31;

     label3:
        $r0 = "solid";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label4;

        return 133;

     label4:
        $r0 = "double";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label5;

        return 37;

     label5:
        $r0 = "groove";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label6;

        return 55;

     label6:
        $r0 = "ridge";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label7;

        return 119;

     label7:
        $r0 = "inset";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label8;

        return 67;

     label8:
        $r0 = "outset";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(style);
        if $z0 == 0 goto label9;

        return 101;

     label9:
        $r2 = new java.lang.IllegalStateException;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal border style: ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(style);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r2;
    }

    public int hashCode()
    {
        org.apache.fop.traits.BorderProps this;
        java.lang.String $r0;
        int $i0;

        this := @this: org.apache.fop.traits.BorderProps;
        $r0 = virtualinvoke this.<org.apache.fop.traits.BorderProps: java.lang.String toString()>();
        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();
        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.traits.BorderProps this, other;
        java.lang.Object obj;
        boolean $z0;
        int $i0, $i1;
        java.awt.Color $r0, $r1;

        this := @this: org.apache.fop.traits.BorderProps;
        obj := @parameter0: java.lang.Object;
        if obj != null goto label0;

        return 0;

     label0:
        if obj != this goto label1;

        return 1;

     label1:
        $z0 = obj instanceof org.apache.fop.traits.BorderProps;
        if $z0 == 0 goto label4;

        other = (org.apache.fop.traits.BorderProps) obj;
        $i0 = this.<org.apache.fop.traits.BorderProps: int style>;
        $i1 = other.<org.apache.fop.traits.BorderProps: int style>;
        if $i0 != $i1 goto label2;

        $r0 = this.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        $r1 = other.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        $z0 = virtualinvoke $r0.<java.awt.Color: boolean equals(java.lang.Object)>($r1);
        if $z0 == 0 goto label2;

        $i0 = this.<org.apache.fop.traits.BorderProps: int width>;
        $i1 = other.<org.apache.fop.traits.BorderProps: int width>;
        if $i0 != $i1 goto label2;

        $i0 = this.<org.apache.fop.traits.BorderProps: int mode>;
        $i1 = other.<org.apache.fop.traits.BorderProps: int mode>;
        if $i0 != $i1 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        return 0;
    }

    public static org.apache.fop.traits.BorderProps valueOf(org.apache.fop.apps.FOUserAgent, java.lang.String)
    {
        org.apache.fop.apps.FOUserAgent foUserAgent;
        java.lang.String s, style, color, ms, s, $r1, $r4;
        java.util.StringTokenizer st, $r0;
        int width, $i0;
        byte mode;
        java.awt.Color c;
        org.apache.fop.fo.expr.PropertyException e, $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        org.apache.fop.traits.BorderProps $r5;

        foUserAgent := @parameter0: org.apache.fop.apps.FOUserAgent;
        s := @parameter1: java.lang.String;
        $z0 = virtualinvoke s.<java.lang.String: boolean startsWith(java.lang.String)>("(");
        if $z0 == 0 goto label5;

        $z0 = virtualinvoke s.<java.lang.String: boolean endsWith(java.lang.String)>(")");
        if $z0 == 0 goto label5;

        $i0 = virtualinvoke s.<java.lang.String: int length()>();
        $i0 = $i0 - 1;
        s = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);
        $r0 = new java.util.StringTokenizer;
        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(s, ",");
        st = $r0;
        style = virtualinvoke st.<java.util.StringTokenizer: java.lang.String nextToken()>();
        color = virtualinvoke st.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r1 = virtualinvoke st.<java.util.StringTokenizer: java.lang.String nextToken()>();
        width = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);
        mode = 0;
        $z0 = virtualinvoke st.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z0 == 0 goto label1;

        ms = virtualinvoke st.<java.util.StringTokenizer: java.lang.String nextToken()>();
        $r1 = "collapse-inner";
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(ms);
        if $z0 == 0 goto label0;

        mode = 1;
        goto label1;

     label0:
        $r1 = "collapse-outer";
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(ms);
        if $z0 == 0 goto label1;

        mode = 2;

     label1:
        c = staticinvoke <org.apache.fop.util.ColorUtil: java.awt.Color parseColorString(org.apache.fop.apps.FOUserAgent,java.lang.String)>(foUserAgent, color);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;
        e = $r2;
        $r3 = new java.lang.IllegalArgumentException;
        $r4 = virtualinvoke e.<org.apache.fop.fo.expr.PropertyException: java.lang.String getMessage()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label4:
        $r5 = new org.apache.fop.traits.BorderProps;
        specialinvoke $r5.<org.apache.fop.traits.BorderProps: void <init>(java.lang.String,int,java.awt.Color,int)>(style, width, c, mode);
        return $r5;

     label5:
        $r3 = new java.lang.IllegalArgumentException;
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("BorderProps must be surrounded by parentheses");
        throw $r3;

        catch org.apache.fop.fo.expr.PropertyException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.apache.fop.traits.BorderProps this;
        java.lang.StringBuffer $r0, sbuf;
        java.lang.String $r1, $r3;
        java.awt.Color $r2;
        int $i0, $i1;

        this := @this: org.apache.fop.traits.BorderProps;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sbuf = $r0;
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);
        $r1 = specialinvoke this.<org.apache.fop.traits.BorderProps: java.lang.String getStyleString()>();
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);
        $r2 = this.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        $r1 = staticinvoke <org.apache.fop.util.ColorUtil: java.lang.String colorToString(java.awt.Color)>($r2);
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);
        $i0 = this.<org.apache.fop.traits.BorderProps: int width>;
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $i1 = this.<org.apache.fop.traits.BorderProps: int mode>;
        if $i1 == 0 goto label1;

        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);
        $i1 = this.<org.apache.fop.traits.BorderProps: int mode>;
        if $i1 != 1 goto label0;

        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("collapse-inner");
        goto label1;

     label0:
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("collapse-outer");

     label1:
        virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);
        $r3 = virtualinvoke sbuf.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }
}

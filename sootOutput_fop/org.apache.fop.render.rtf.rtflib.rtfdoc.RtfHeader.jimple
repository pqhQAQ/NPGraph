class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer
{
    private final java.lang.String charset;
    private final java.util.Map userProperties;

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile, java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile f;
        java.io.Writer w;
        java.util.HashMap $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFontTable $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfGenerator $r2;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        f := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        w := @parameter1: java.io.Writer;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(f, w);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.lang.String charset> = "ansi";
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.util.Map userProperties> = $r0;
        $r1 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFontTable;
        specialinvoke $r1.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFontTable: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader,java.io.Writer)>(this, w);
        $r2 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfGenerator;
        specialinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfGenerator: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader,java.io.Writer)>(this, w);
        return;
    }

    protected void writeRtfContent() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfColorTable $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTemplate $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStyleSheetTable $r2;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeControlWord(java.lang.String)>("ansi");
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeUserProperties()>();
        $r0 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfColorTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfColorTable getInstance()>();
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfColorTable: void writeColors(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)>(this);
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void writeRtfContent()>();
        $r1 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTemplate: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTemplate getInstance()>();
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTemplate: void writeTemplate(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)>(this);
        $r2 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStyleSheetTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStyleSheetTable getInstance()>();
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStyleSheetTable: void writeStyleSheet(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader)>(this);
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeFootnoteProperties()>();
        return;
    }

    private void writeUserProperties() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader this;
        java.util.Iterator it;
        java.util.Map$Entry entry;
        java.util.Map $r0;
        int $i0;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2, $r5;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter $r3;
        java.io.Writer $r4;
        java.lang.String $r6;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.util.Map userProperties>;
        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();
        if $i0 <= 0 goto label2;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeGroupMark(boolean)>(1);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeStarControlWord(java.lang.String)>("userprops");
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.util.Map userProperties>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();
        it = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        entry = (java.util.Map$Entry) $r2;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeGroupMark(boolean)>(1);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeControlWord(java.lang.String)>("propname");
        $r3 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter getInstance()>();
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.io.Writer writer>;
        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter: void writeRtfString(java.io.Writer,java.lang.String)>($r4, $r6);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeGroupMark(boolean)>(0);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeControlWord(java.lang.String)>("proptype30");
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeGroupMark(boolean)>(1);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeControlWord(java.lang.String)>("staticval");
        $r3 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter getInstance()>();
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.io.Writer writer>;
        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();
        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter: void writeRtfString(java.io.Writer,java.lang.String)>($r4, $r6);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeGroupMark(boolean)>(0);
        goto label0;

     label1:
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeGroupMark(boolean)>(0);

     label2:
        return;
    }

    void write(java.lang.String) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader this;
        java.lang.String toWrite;
        java.io.Writer $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        toWrite := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.io.Writer writer>;
        virtualinvoke $r0.<java.io.Writer: void write(java.lang.String)>(toWrite);
        return;
    }

    void writeRtfString(java.lang.String) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader this;
        java.lang.String toWrite;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter $r0;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        toWrite := @parameter0: java.lang.String;
        $r0 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter getInstance()>();
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: java.io.Writer writer>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfStringConverter: void writeRtfString(java.io.Writer,java.lang.String)>($r1, toWrite);
        return;
    }

    private void writeFootnoteProperties() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void newLine()>();
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeControlWord(java.lang.String)>("fet0");
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void writeControlWord(java.lang.String)>("ftnbj");
        return;
    }
}

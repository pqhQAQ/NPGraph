public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer
{
    static final int DEFAULT_IDNUM;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo parentITableColumnsInfo;
    private final java.util.List cells;
    private int maxRowIndex;

    void <init>(java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        java.io.Writer w;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        w := @parameter0: java.io.Writer;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(null, w);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo parentITableColumnsInfo> = null;
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.util.List cells> = $r0;
        return;
    }

    int addTable(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable, int, int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable tbl;
        int rowIndex, xOffset, $i0, $i1;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r2;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        tbl := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        rowIndex := @parameter1: int;
        xOffset := @parameter2: int;
        $r0 = virtualinvoke tbl.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.util.List getChildren()>();
        it = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        e = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r1;
        $z0 = e instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        if $z0 == 0 goto label1;

        $r2 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow) e;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: void addRow(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow,int,int)>($r2, rowIndex, xOffset);
        rowIndex = rowIndex + 1;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: int maxRowIndex>;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(rowIndex, $i0);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: int maxRowIndex> = $i1;

     label1:
        goto label0;

     label2:
        return rowIndex;
    }

    private void addRow(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow, int, int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row;
        int rowIndex, xOffset, $i0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell c;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell $r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        row := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        rowIndex := @parameter1: int;
        xOffset := @parameter2: int;
        $r1 = virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: java.util.List getChildren()>();
        it = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        e = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r2;
        $z0 = e instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        if $z0 == 0 goto label1;

        c = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell) e;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.util.List cells>;
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell,int,int)>(c, rowIndex, xOffset);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);
        $i0 = virtualinvoke c.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int getCellWidth()>();
        xOffset = xOffset + $i0;

     label1:
        goto label0;

     label2:
        return;
    }

    org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell createExtraCell(int, int, int, org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        int rowIndex, xOffset, cellWidth;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes parentCellAttributes;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell $r0, c;
        java.io.Writer $r1;
        java.util.List $r2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell $r3;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        rowIndex := @parameter0: int;
        xOffset := @parameter1: int;
        cellWidth := @parameter2: int;
        parentCellAttributes := @parameter3: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow,java.io.Writer,int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,int)>(null, $r1, cellWidth, parentCellAttributes, 0);
        c = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.util.List cells>;
        $r3 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell;
        specialinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell,int,int)>(c, rowIndex, xOffset);
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);
        return c;
    }

    protected void writeRtfContent() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        java.util.LinkedList rowCells, $r2;
        int rowIndex, $i0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell pc;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.util.List cells>;
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);
        rowCells = null;
        rowIndex = -1;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.util.List cells>;
        it = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        pc = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell) $r1;
        $i0 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: int access$000(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        if $i0 == rowIndex goto label2;

        if rowCells == null goto label1;

        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: void writeRow(java.util.List)>(rowCells);

     label1:
        rowIndex = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: int access$000(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        $r2 = new java.util.LinkedList;
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        rowCells = $r2;

     label2:
        interfaceinvoke rowCells.<java.util.List: boolean add(java.lang.Object)>(pc);
        goto label0;

     label3:
        if rowCells == null goto label4;

        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: void writeRow(java.util.List)>(rowCells);

     label4:
        return;
    }

    private void writeRow(java.util.List) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        java.util.List cells;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row, $r0;
        int cellIndex, i, $i0, $i1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo parentITableColumnsInfo;
        float xOffset, xOffsetOfLastPositionedCell, $f0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell pc;
        boolean $z0;
        java.io.Writer $r1;
        java.lang.Object $r2;
        byte $b2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell $r3, $r6;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r4;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        cells := @parameter0: java.util.List;
        $z0 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: boolean allCellsEmpty(java.util.List)>(cells);
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable,java.io.Writer,int)>(null, $r1, 0);
        row = $r0;
        cellIndex = 0;
        parentITableColumnsInfo = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo getParentITableColumnsInfo()>();
        interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectFirstColumn()>();
        xOffset = 0.0F;
        xOffsetOfLastPositionedCell = 0.0F;
        it = interfaceinvoke cells.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        pc = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell) $r2;
        if cellIndex != 0 goto label3;

        $i0 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: int access$100(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        if $i0 <= 0 goto label3;

        i = 0;

     label2:
        $i1 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: int access$100(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        $f0 = (float) $i1;
        $b2 = xOffset cmpg $f0;
        if $b2 >= 0 goto label3;

        $i1 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: int getNumberOfColumns()>();
        if i >= $i1 goto label3;

        $f0 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: float getColumnWidth()>();
        xOffset = xOffset + $f0;
        $f0 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: float getColumnWidth()>();
        $i1 = (int) $f0;
        $r3 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell access$200(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        $r4 = $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell newTableCellMergedVertically(int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($i1, $r4);
        interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectNextColumn()>();
        i = i + 1;
        goto label2;

     label3:
        $r6 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell access$200(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void addChild(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement)>($r6);
        $i0 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: int access$100(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        $r6 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell access$200(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        $i1 = virtualinvoke $r6.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int getCellWidth()>();
        $i0 = $i0 + $i1;
        xOffsetOfLastPositionedCell = (float) $i0;
        cellIndex = cellIndex + 1;
        goto label1;

     label4:
        $i0 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: int getColumnIndex()>();
        $i1 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: int getNumberOfColumns()>();
        $i1 = $i1 - 1;
        if $i0 >= $i1 goto label6;

        interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectNextColumn()>();

     label5:
        $i0 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: int getColumnIndex()>();
        $i1 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: int getNumberOfColumns()>();
        if $i0 >= $i1 goto label6;

        $f0 = interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: float getColumnWidth()>();
        $i1 = (int) $f0;
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell newTableCellMergedVertically(int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($i1, $r4);
        interfaceinvoke parentITableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectNextColumn()>();
        goto label5;

     label6:
        virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void writeRtf()>();
        return;
    }

    private static boolean allCellsEmpty(java.util.List)
    {
        java.util.List cells;
        boolean empty, $z0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell pc;
        java.lang.Object $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell $r1;

        cells := @parameter0: java.util.List;
        empty = 1;
        it = interfaceinvoke cells.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r0 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        pc = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell) $r0;
        $r1 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell access$200(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet$PositionedCell)>(pc);
        $z0 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean containsText()>();
        if $z0 == 0 goto label1;

        empty = 0;
        goto label2;

     label1:
        goto label0;

     label2:
        return empty;
    }

    public boolean isEmpty()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        return 0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo getParentITableColumnsInfo()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo parentITableColumnsInfo>;
        return $r0;
    }

    public void setParentITableColumnsInfo(org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo parentITableColumnsInfo;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet;
        parentITableColumnsInfo := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExtraRowSet: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo parentITableColumnsInfo> = parentITableColumnsInfo;
        return;
    }
}

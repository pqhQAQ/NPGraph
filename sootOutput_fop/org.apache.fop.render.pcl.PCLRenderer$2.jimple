class org.apache.fop.render.pcl.PCLRenderer$2 extends java.lang.Object implements org.apache.xmlgraphics.java2d.Graphics2DImagePainter
{
    private final int val$xoffset;
    private final int val$yoffset;
    private final java.awt.geom.Rectangle2D$Float val$effBorderRect;
    private final org.apache.fop.traits.BorderProps val$bpsBefore;
    private final org.apache.fop.traits.BorderProps val$bpsEnd;
    private final org.apache.fop.traits.BorderProps val$bpsAfter;
    private final org.apache.fop.traits.BorderProps val$bpsStart;
    private final java.awt.Rectangle val$paintRect;
    private final org.apache.fop.render.pcl.PCLRenderer this$0;

    void <init>(org.apache.fop.render.pcl.PCLRenderer, int, int, java.awt.geom.Rectangle2D$Float, org.apache.fop.traits.BorderProps, org.apache.fop.traits.BorderProps, org.apache.fop.traits.BorderProps, org.apache.fop.traits.BorderProps, java.awt.Rectangle)
    {
        org.apache.fop.render.pcl.PCLRenderer$2 this;
        org.apache.fop.render.pcl.PCLRenderer this$0;
        int l2, l3;
        java.awt.geom.Rectangle2D$Float l4;
        org.apache.fop.traits.BorderProps l5, l6, l7, l8;
        java.awt.Rectangle l9;

        this := @this: org.apache.fop.render.pcl.PCLRenderer$2;
        this$0 := @parameter0: org.apache.fop.render.pcl.PCLRenderer;
        l2 := @parameter1: int;
        l3 := @parameter2: int;
        l4 := @parameter3: java.awt.geom.Rectangle2D$Float;
        l5 := @parameter4: org.apache.fop.traits.BorderProps;
        l6 := @parameter5: org.apache.fop.traits.BorderProps;
        l7 := @parameter6: org.apache.fop.traits.BorderProps;
        l8 := @parameter7: org.apache.fop.traits.BorderProps;
        l9 := @parameter8: java.awt.Rectangle;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0> = this$0;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: int val$xoffset> = l2;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: int val$yoffset> = l3;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.geom.Rectangle2D$Float val$effBorderRect> = l4;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore> = l5;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd> = l6;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter> = l7;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart> = l8;
        this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.Rectangle val$paintRect> = l9;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void paint(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.apache.fop.render.pcl.PCLRenderer$2 this;
        java.awt.Graphics2D g2d, g;
        java.awt.geom.Rectangle2D area;
        float startx, starty, width, height, sx1, sx2, ex1, ex2, outery, clipy, innery, sx1a, ex1a, sy1, sy2, ey1, ey2, outerx, clipx, innerx, sy1a, ey1a, $f0, $f1, $f2, $f3, $f4;
        boolean[] b, slant, $r1, $r2;
        float[] bw, clipw, $r4, $r5;
        java.awt.geom.Rectangle2D$Float lineRect, $r0;
        int $i0, $i1, $i3, $i4;
        byte $b2;
        org.apache.fop.traits.BorderProps $r3, $r6, $r12;
        boolean $z0, $z1;
        java.awt.Graphics $r7;
        org.apache.fop.render.pcl.PCLRenderer $r8, $r9;
        java.awt.geom.GeneralPath $r10;
        java.awt.Color $r13;

        this := @this: org.apache.fop.render.pcl.PCLRenderer$2;
        g2d := @parameter0: java.awt.Graphics2D;
        area := @parameter1: java.awt.geom.Rectangle2D;
        $i0 = this.<org.apache.fop.render.pcl.PCLRenderer$2: int val$xoffset>;
        $i1 = this.<org.apache.fop.render.pcl.PCLRenderer$2: int val$yoffset>;
        virtualinvoke g2d.<java.awt.Graphics2D: void translate(int,int)>($i0, $i1);
        virtualinvoke g2d.<java.awt.Graphics2D: void scale(double,double)>(1000.0, 1000.0);
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.geom.Rectangle2D$Float val$effBorderRect>;
        startx = $r0.<java.awt.geom.Rectangle2D$Float: float x>;
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.geom.Rectangle2D$Float val$effBorderRect>;
        starty = $r0.<java.awt.geom.Rectangle2D$Float: float y>;
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.geom.Rectangle2D$Float val$effBorderRect>;
        width = $r0.<java.awt.geom.Rectangle2D$Float: float width>;
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.geom.Rectangle2D$Float val$effBorderRect>;
        height = $r0.<java.awt.geom.Rectangle2D$Float: float height>;
        $r1 = newarray (boolean)[4];
        $r2 = $r1;
        $b2 = 0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        if $r3 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        $r2[$b2] = $z0;
        $r2 = $r1;
        $b2 = 1;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        if $r3 == null goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r2[$b2] = $z0;
        $r2 = $r1;
        $b2 = 2;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        if $r3 == null goto label4;

        $z0 = 1;
        goto label5;

     label4:
        $z0 = 0;

     label5:
        $r2[$b2] = $z0;
        $r2 = $r1;
        $b2 = 3;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        if $r3 == null goto label6;

        $z0 = 1;
        goto label7;

     label6:
        $z0 = 0;

     label7:
        $r2[$b2] = $z0;
        b = $r1;
        $z1 = b[0];
        if $z1 != 0 goto label8;

        $z1 = b[1];
        if $z1 != 0 goto label8;

        $z1 = b[2];
        if $z1 != 0 goto label8;

        $z1 = b[3];
        if $z1 != 0 goto label8;

        return;

     label8:
        $r4 = newarray (float)[4];
        $r5 = $r4;
        $b2 = 0;
        $z0 = b[0];
        if $z0 == 0 goto label9;

        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int width>;
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        goto label10;

     label9:
        $f0 = 0.0F;

     label10:
        $r5[$b2] = $f0;
        $r5 = $r4;
        $b2 = 1;
        $z0 = b[1];
        if $z0 == 0 goto label11;

        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int width>;
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        goto label12;

     label11:
        $f0 = 0.0F;

     label12:
        $r5[$b2] = $f0;
        $r5 = $r4;
        $b2 = 2;
        $z0 = b[2];
        if $z0 == 0 goto label13;

        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int width>;
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        goto label14;

     label13:
        $f0 = 0.0F;

     label14:
        $r5[$b2] = $f0;
        $r5 = $r4;
        $b2 = 3;
        $z0 = b[3];
        if $z0 == 0 goto label15;

        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int width>;
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        goto label16;

     label15:
        $f0 = 0.0F;

     label16:
        $r5[$b2] = $f0;
        bw = $r4;
        $r4 = newarray (float)[4];
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $i3 = staticinvoke <org.apache.fop.traits.BorderProps: int getClippedWidth(org.apache.fop.traits.BorderProps)>($r3);
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        $r4[0] = $f0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $i3 = staticinvoke <org.apache.fop.traits.BorderProps: int getClippedWidth(org.apache.fop.traits.BorderProps)>($r3);
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        $r4[1] = $f0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $i3 = staticinvoke <org.apache.fop.traits.BorderProps: int getClippedWidth(org.apache.fop.traits.BorderProps)>($r3);
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        $r4[2] = $f0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $i3 = staticinvoke <org.apache.fop.traits.BorderProps: int getClippedWidth(org.apache.fop.traits.BorderProps)>($r3);
        $f0 = (float) $i3;
        $f0 = $f0 / 1000.0F;
        $r4[3] = $f0;
        clipw = $r4;
        $f1 = clipw[0];
        starty = starty + $f1;
        $f1 = clipw[0];
        height = height - $f1;
        $f1 = clipw[2];
        height = height - $f1;
        $f1 = clipw[3];
        startx = startx + $f1;
        $f1 = clipw[3];
        width = width - $f1;
        $f1 = clipw[1];
        width = width - $f1;
        $r1 = newarray (boolean)[4];
        $r2 = $r1;
        $b2 = 0;
        $z0 = b[3];
        if $z0 == 0 goto label17;

        $z0 = b[0];
        if $z0 == 0 goto label17;

        $z0 = 1;
        goto label18;

     label17:
        $z0 = 0;

     label18:
        $r2[$b2] = $z0;
        $r2 = $r1;
        $b2 = 1;
        $z0 = b[0];
        if $z0 == 0 goto label19;

        $z0 = b[1];
        if $z0 == 0 goto label19;

        $z0 = 1;
        goto label20;

     label19:
        $z0 = 0;

     label20:
        $r2[$b2] = $z0;
        $r2 = $r1;
        $b2 = 2;
        $z0 = b[1];
        if $z0 == 0 goto label21;

        $z0 = b[2];
        if $z0 == 0 goto label21;

        $z0 = 1;
        goto label22;

     label21:
        $z0 = 0;

     label22:
        $r2[$b2] = $z0;
        $r2 = $r1;
        $b2 = 3;
        $z0 = b[2];
        if $z0 == 0 goto label23;

        $z0 = b[3];
        if $z0 == 0 goto label23;

        $z0 = 1;
        goto label24;

     label23:
        $z0 = 0;

     label24:
        $r2[$b2] = $z0;
        slant = $r1;
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        if $r6 == null goto label32;

        sx1 = startx;
        $z1 = slant[0];
        if $z1 == 0 goto label25;

        $f1 = bw[3];
        $f2 = sx1 + $f1;
        $f1 = clipw[3];
        $f2 = $f2 - $f1;
        goto label26;

     label25:
        $f2 = sx1;

     label26:
        sx2 = $f2;
        ex1 = startx + width;
        $z1 = slant[1];
        if $z1 == 0 goto label27;

        $f1 = bw[1];
        $f2 = ex1 - $f1;
        $f1 = clipw[1];
        $f2 = $f2 + $f1;
        goto label28;

     label27:
        $f2 = ex1;

     label28:
        ex2 = $f2;
        $f1 = clipw[0];
        outery = starty - $f1;
        $f1 = clipw[0];
        clipy = outery + $f1;
        $f1 = bw[0];
        innery = outery + $f1;
        $r7 = virtualinvoke g2d.<java.awt.Graphics2D: java.awt.Graphics create()>();
        g = (java.awt.Graphics2D) $r7;
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void moveTo(float,float)>(sx1, clipy);
        sx1a = sx1;
        ex1a = ex1;
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label31;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        if $r6 == null goto label29;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label29;

        $f1 = clipw[3];
        sx1a = sx1a - $f1;

     label29:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        if $r6 == null goto label30;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label30;

        $f1 = clipw[1];
        ex1a = ex1a + $f1;

     label30:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(sx1a, outery);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(ex1a, outery);

     label31:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(ex1, clipy);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(ex2, innery);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(sx2, innery);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void closePath()>();
        $r9 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        $r10 = staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$100(org.apache.fop.render.pcl.PCLRenderer)>($r9);
        virtualinvoke g.<java.awt.Graphics2D: void clip(java.awt.Shape)>($r10);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$102(org.apache.fop.render.pcl.PCLRenderer,java.awt.geom.GeneralPath)>($r8, null);
        $r0 = new java.awt.geom.Rectangle2D$Float;
        $f3 = ex1a - sx1a;
        $f4 = innery - outery;
        specialinvoke $r0.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(sx1a, outery, $f3, $f4);
        lineRect = $r0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int style>;
        $r12 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $r13 = $r12.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        staticinvoke <org.apache.fop.render.java2d.Java2DRenderer: void drawBorderLine(java.awt.geom.Rectangle2D$Float,boolean,boolean,int,java.awt.Color,java.awt.Graphics2D)>(lineRect, 1, 1, $i3, $r13, g);

     label32:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        if $r6 == null goto label40;

        sy1 = starty;
        $z1 = slant[1];
        if $z1 == 0 goto label33;

        $f1 = bw[0];
        $f2 = sy1 + $f1;
        $f1 = clipw[0];
        $f2 = $f2 - $f1;
        goto label34;

     label33:
        $f2 = sy1;

     label34:
        sy2 = $f2;
        ey1 = starty + height;
        $z1 = slant[2];
        if $z1 == 0 goto label35;

        $f1 = bw[2];
        $f2 = ey1 - $f1;
        $f1 = clipw[2];
        $f2 = $f2 + $f1;
        goto label36;

     label35:
        $f2 = ey1;

     label36:
        ey2 = $f2;
        $f2 = startx + width;
        $f1 = clipw[1];
        outerx = $f2 + $f1;
        $f1 = clipw[1];
        clipx = outerx - $f1;
        $f1 = bw[1];
        innerx = outerx - $f1;
        $r7 = virtualinvoke g2d.<java.awt.Graphics2D: java.awt.Graphics create()>();
        g = (java.awt.Graphics2D) $r7;
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void moveTo(float,float)>(clipx, sy1);
        sy1a = sy1;
        ey1a = ey1;
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label39;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        if $r6 == null goto label37;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label37;

        $f1 = clipw[0];
        sy1a = sy1a - $f1;

     label37:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        if $r6 == null goto label38;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label38;

        $f1 = clipw[2];
        ey1a = ey1a + $f1;

     label38:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(outerx, sy1a);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(outerx, ey1a);

     label39:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(clipx, ey1);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(innerx, ey2);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(innerx, sy2);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void closePath()>();
        $r9 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        $r10 = staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$100(org.apache.fop.render.pcl.PCLRenderer)>($r9);
        virtualinvoke g.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r10);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$102(org.apache.fop.render.pcl.PCLRenderer,java.awt.geom.GeneralPath)>($r8, null);
        $r0 = new java.awt.geom.Rectangle2D$Float;
        $f3 = outerx - innerx;
        $f4 = ey1a - sy1a;
        specialinvoke $r0.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(innerx, sy1a, $f3, $f4);
        lineRect = $r0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int style>;
        $r12 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $r13 = $r12.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        staticinvoke <org.apache.fop.render.java2d.Java2DRenderer: void drawBorderLine(java.awt.geom.Rectangle2D$Float,boolean,boolean,int,java.awt.Color,java.awt.Graphics2D)>(lineRect, 0, 0, $i3, $r13, g);

     label40:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        if $r6 == null goto label48;

        sx1 = startx;
        $z1 = slant[3];
        if $z1 == 0 goto label41;

        $f1 = bw[3];
        $f2 = sx1 + $f1;
        $f1 = clipw[3];
        $f2 = $f2 - $f1;
        goto label42;

     label41:
        $f2 = sx1;

     label42:
        sx2 = $f2;
        ex1 = startx + width;
        $z1 = slant[2];
        if $z1 == 0 goto label43;

        $f1 = bw[1];
        $f2 = ex1 - $f1;
        $f1 = clipw[1];
        $f2 = $f2 + $f1;
        goto label44;

     label43:
        $f2 = ex1;

     label44:
        ex2 = $f2;
        $f2 = starty + height;
        $f1 = clipw[2];
        outery = $f2 + $f1;
        $f1 = clipw[2];
        clipy = outery - $f1;
        $f1 = bw[2];
        innery = outery - $f1;
        $r7 = virtualinvoke g2d.<java.awt.Graphics2D: java.awt.Graphics create()>();
        g = (java.awt.Graphics2D) $r7;
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void moveTo(float,float)>(ex1, clipy);
        sx1a = sx1;
        ex1a = ex1;
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label47;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        if $r6 == null goto label45;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label45;

        $f1 = clipw[3];
        sx1a = sx1a - $f1;

     label45:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        if $r6 == null goto label46;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsEnd>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label46;

        $f1 = clipw[1];
        ex1a = ex1a + $f1;

     label46:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(ex1a, outery);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(sx1a, outery);

     label47:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(sx1, clipy);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(sx2, innery);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(ex2, innery);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void closePath()>();
        $r9 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        $r10 = staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$100(org.apache.fop.render.pcl.PCLRenderer)>($r9);
        virtualinvoke g.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r10);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$102(org.apache.fop.render.pcl.PCLRenderer,java.awt.geom.GeneralPath)>($r8, null);
        $r0 = new java.awt.geom.Rectangle2D$Float;
        $f3 = ex1a - sx1a;
        $f4 = outery - innery;
        specialinvoke $r0.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(sx1a, innery, $f3, $f4);
        lineRect = $r0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int style>;
        $r12 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $r13 = $r12.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        staticinvoke <org.apache.fop.render.java2d.Java2DRenderer: void drawBorderLine(java.awt.geom.Rectangle2D$Float,boolean,boolean,int,java.awt.Color,java.awt.Graphics2D)>(lineRect, 1, 0, $i3, $r13, g);

     label48:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        if $r6 == null goto label56;

        sy1 = starty;
        $z1 = slant[0];
        if $z1 == 0 goto label49;

        $f1 = bw[0];
        $f2 = sy1 + $f1;
        $f1 = clipw[0];
        $f2 = $f2 - $f1;
        goto label50;

     label49:
        $f2 = sy1;

     label50:
        sy2 = $f2;
        ey1 = sy1 + height;
        $z1 = slant[3];
        if $z1 == 0 goto label51;

        $f1 = bw[2];
        $f2 = ey1 - $f1;
        $f1 = clipw[2];
        $f2 = $f2 + $f1;
        goto label52;

     label51:
        $f2 = ey1;

     label52:
        ey2 = $f2;
        $f1 = clipw[3];
        outerx = startx - $f1;
        $f1 = clipw[3];
        clipx = outerx + $f1;
        $f1 = bw[3];
        innerx = outerx + $f1;
        $r7 = virtualinvoke g2d.<java.awt.Graphics2D: java.awt.Graphics create()>();
        g = (java.awt.Graphics2D) $r7;
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void moveTo(float,float)>(clipx, ey1);
        sy1a = sy1;
        ey1a = ey1;
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label55;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        if $r6 == null goto label53;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsBefore>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label53;

        $f1 = clipw[0];
        sy1a = sy1a - $f1;

     label53:
        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        if $r6 == null goto label54;

        $r6 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsAfter>;
        $i4 = $r6.<org.apache.fop.traits.BorderProps: int mode>;
        if $i4 != 2 goto label54;

        $f1 = clipw[2];
        ey1a = ey1a + $f1;

     label54:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(outerx, ey1a);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(outerx, sy1a);

     label55:
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(clipx, sy1);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(innerx, sy2);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void lineTo(float,float)>(innerx, ey2);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        virtualinvoke $r8.<org.apache.fop.render.pcl.PCLRenderer: void closePath()>();
        $r9 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        $r10 = staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$100(org.apache.fop.render.pcl.PCLRenderer)>($r9);
        virtualinvoke g.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r10);
        $r8 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.render.pcl.PCLRenderer this$0>;
        staticinvoke <org.apache.fop.render.pcl.PCLRenderer: java.awt.geom.GeneralPath access$102(org.apache.fop.render.pcl.PCLRenderer,java.awt.geom.GeneralPath)>($r8, null);
        $r0 = new java.awt.geom.Rectangle2D$Float;
        $f3 = innerx - outerx;
        $f4 = ey1a - sy1a;
        specialinvoke $r0.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(outerx, sy1a, $f3, $f4);
        lineRect = $r0;
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $i3 = $r3.<org.apache.fop.traits.BorderProps: int style>;
        $r12 = this.<org.apache.fop.render.pcl.PCLRenderer$2: org.apache.fop.traits.BorderProps val$bpsStart>;
        $r13 = $r12.<org.apache.fop.traits.BorderProps: java.awt.Color color>;
        staticinvoke <org.apache.fop.render.java2d.Java2DRenderer: void drawBorderLine(java.awt.geom.Rectangle2D$Float,boolean,boolean,int,java.awt.Color,java.awt.Graphics2D)>(lineRect, 0, 0, $i3, $r13, g);

     label56:
        return;
    }

    public java.awt.Dimension getImageSize()
    {
        org.apache.fop.render.pcl.PCLRenderer$2 this;
        java.awt.Rectangle $r0;
        java.awt.Dimension $r1;

        this := @this: org.apache.fop.render.pcl.PCLRenderer$2;
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$2: java.awt.Rectangle val$paintRect>;
        $r1 = virtualinvoke $r0.<java.awt.Rectangle: java.awt.Dimension getSize()>();
        return $r1;
    }
}

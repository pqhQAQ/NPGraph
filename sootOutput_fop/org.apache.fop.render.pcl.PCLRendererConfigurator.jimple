public class org.apache.fop.render.pcl.PCLRendererConfigurator extends org.apache.fop.render.PrintRendererConfigurator
{

    public void <init>(org.apache.fop.apps.FOUserAgent)
    {
        org.apache.fop.render.pcl.PCLRendererConfigurator this;
        org.apache.fop.apps.FOUserAgent userAgent;

        this := @this: org.apache.fop.render.pcl.PCLRendererConfigurator;
        userAgent := @parameter0: org.apache.fop.apps.FOUserAgent;
        specialinvoke this.<org.apache.fop.render.PrintRendererConfigurator: void <init>(org.apache.fop.apps.FOUserAgent)>(userAgent);
        return;
    }

    public void configure(org.apache.fop.render.Renderer) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.render.pcl.PCLRendererConfigurator this;
        org.apache.fop.render.Renderer renderer;
        org.apache.avalon.framework.configuration.Configuration cfg, $r1, $r5;
        org.apache.fop.render.pcl.PCLRenderer pclRenderer;
        java.lang.String rendering, textRendering, $r2, $r4;
        java.lang.StringBuffer $r0;
        boolean $z0, $z1;
        org.apache.fop.apps.FOPException $r3;

        this := @this: org.apache.fop.render.pcl.PCLRendererConfigurator;
        renderer := @parameter0: org.apache.fop.render.Renderer;
        cfg = specialinvoke this.<org.apache.fop.render.PrintRendererConfigurator: org.apache.avalon.framework.configuration.Configuration getRendererConfig(org.apache.fop.render.Renderer)>(renderer);
        if cfg == null goto label6;

        pclRenderer = (org.apache.fop.render.pcl.PCLRenderer) renderer;
        $r1 = interfaceinvoke cfg.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("rendering");
        rendering = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getValue(java.lang.String)>(null);
        $r2 = "quality";
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(rendering);
        if $z0 == 0 goto label0;

        virtualinvoke pclRenderer.<org.apache.fop.render.pcl.PCLRenderer: void setQualityBeforeSpeed(boolean)>(1);
        goto label2;

     label0:
        $r2 = "speed";
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(rendering);
        if $z0 == 0 goto label1;

        virtualinvoke pclRenderer.<org.apache.fop.render.pcl.PCLRenderer: void setQualityBeforeSpeed(boolean)>(0);
        goto label2;

     label1:
        if rendering == null goto label2;

        $r3 = new org.apache.fop.apps.FOPException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Valid values for \'rendering\' are \'quality\' and \'speed\'. Value found: ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(rendering);
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<org.apache.fop.apps.FOPException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label2:
        $r1 = interfaceinvoke cfg.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("text-rendering");
        textRendering = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getValue(java.lang.String)>(null);
        $r2 = "bitmap";
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(textRendering);
        if $z0 == 0 goto label3;

        virtualinvoke pclRenderer.<org.apache.fop.render.pcl.PCLRenderer: void setAllTextAsBitmaps(boolean)>(1);
        goto label5;

     label3:
        $r2 = "auto";
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(textRendering);
        if $z0 == 0 goto label4;

        virtualinvoke pclRenderer.<org.apache.fop.render.pcl.PCLRenderer: void setAllTextAsBitmaps(boolean)>(0);
        goto label5;

     label4:
        if textRendering == null goto label5;

        $r3 = new org.apache.fop.apps.FOPException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Valid values for \'text-rendering\' are \'auto\' and \'bitmap\'. Value found: ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(textRendering);
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<org.apache.fop.apps.FOPException: void <init>(java.lang.String)>($r4);
        throw $r3;

     label5:
        $r5 = interfaceinvoke cfg.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("disable-pjl");
        $z1 = interfaceinvoke $r5.<org.apache.avalon.framework.configuration.Configuration: boolean getValueAsBoolean(boolean)>(0);
        virtualinvoke pclRenderer.<org.apache.fop.render.pcl.PCLRenderer: void setPJLDisabled(boolean)>($z1);

     label6:
        specialinvoke this.<org.apache.fop.render.PrintRendererConfigurator: void configure(org.apache.fop.render.Renderer)>(renderer);
        return;
    }
}

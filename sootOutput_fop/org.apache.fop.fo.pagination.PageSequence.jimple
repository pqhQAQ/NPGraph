public class org.apache.fop.fo.pagination.PageSequence extends org.apache.fop.fo.pagination.AbstractPageSequence
{
    private java.lang.String country;
    private java.lang.String language;
    private java.lang.String masterReference;
    private java.util.Map flowMap;
    private org.apache.fop.fo.pagination.SimplePageMaster simplePageMaster;
    private org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster;
    private org.apache.fop.fo.pagination.Title titleFO;
    private org.apache.fop.fo.pagination.Flow mainFlow;

    public void <init>(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.FONode parent;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        parent := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.pagination.AbstractPageSequence: void <init>(org.apache.fop.fo.FONode)>(parent);
        this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow> = null;
        return;
    }

    public void bind(org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.PropertyList pList;
        org.apache.fop.fo.properties.Property $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        pList := @parameter0: org.apache.fop.fo.PropertyList;
        specialinvoke this.<org.apache.fop.fo.pagination.AbstractPageSequence: void bind(org.apache.fop.fo.PropertyList)>(pList);
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(75);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String country> = $r1;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(121);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String language> = $r1;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(141);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference> = $r1;
        $r2 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference>;
        if $r2 == null goto label0;

        $r2 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference>;
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label1;

     label0:
        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void missingPropertyError(java.lang.String)>("master-reference");

     label1:
        return;
    }

    protected void startOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.util.HashMap $r0;
        org.apache.fop.fo.pagination.Root $r1;
        org.apache.fop.fo.pagination.LayoutMasterSet $r2;
        java.lang.String $r3, $r10;
        org.apache.fop.fo.pagination.SimplePageMaster $r4, $r5;
        org.apache.fop.fo.pagination.PageSequenceMaster $r6, $r7;
        org.apache.fop.fo.ValidationException $r8;
        java.lang.StringBuffer $r9;
        org.xml.sax.Locator $r11;
        org.apache.fop.fo.FOEventHandler $r12;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        specialinvoke this.<org.apache.fop.fo.pagination.AbstractPageSequence: void startOfNode()>();
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap> = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.pagination.Root: org.apache.fop.fo.pagination.LayoutMasterSet getLayoutMasterSet()>();
        $r3 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference>;
        $r4 = virtualinvoke $r2.<org.apache.fop.fo.pagination.LayoutMasterSet: org.apache.fop.fo.pagination.SimplePageMaster getSimplePageMaster(java.lang.String)>($r3);
        this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.SimplePageMaster simplePageMaster> = $r4;
        $r5 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.SimplePageMaster simplePageMaster>;
        if $r5 != null goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.pagination.Root: org.apache.fop.fo.pagination.LayoutMasterSet getLayoutMasterSet()>();
        $r3 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference>;
        $r6 = virtualinvoke $r2.<org.apache.fop.fo.pagination.LayoutMasterSet: org.apache.fop.fo.pagination.PageSequenceMaster getPageSequenceMaster(java.lang.String)>($r3);
        this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster> = $r6;
        $r7 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        if $r7 != null goto label0;

        $r8 = new org.apache.fop.fo.ValidationException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("master-reference \'");
        $r10 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference>;
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' for fo:page-sequence matches no simple-page-master or page-sequence-master");
        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        $r11 = this.<org.apache.fop.fo.pagination.PageSequence: org.xml.sax.Locator locator>;
        specialinvoke $r8.<org.apache.fop.fo.ValidationException: void <init>(java.lang.String,org.xml.sax.Locator)>($r3, $r11);
        throw $r8;

     label0:
        $r12 = virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        virtualinvoke $r12.<org.apache.fop.fo.FOEventHandler: void startPageSequence(org.apache.fop.fo.pagination.PageSequence)>(this);
        return;
    }

    protected void endOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.Flow $r0;
        org.apache.fop.fo.FOEventHandler $r1;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow>;
        if $r0 != null goto label0;

        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void missingChildElementError(java.lang.String)>("(title?,static-content*,flow)");

     label0:
        $r1 = virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        virtualinvoke $r1.<org.apache.fop.fo.FOEventHandler: void endPageSequence(org.apache.fop.fo.pagination.PageSequence)>(this);
        return;
    }

    protected void validateChildNode(org.xml.sax.Locator, java.lang.String, java.lang.String) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.xml.sax.Locator loc;
        java.lang.String nsURI, localName, $r0;
        boolean $z0;
        org.apache.fop.fo.pagination.Title $r1;
        java.util.Map $r2;
        int $i0;
        org.apache.fop.fo.pagination.Flow $r3;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        loc := @parameter0: org.xml.sax.Locator;
        nsURI := @parameter1: java.lang.String;
        localName := @parameter2: java.lang.String;
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label5;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("title");
        if $z0 == 0 goto label2;

        $r1 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Title titleFO>;
        if $r1 == null goto label0;

        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:title");
        goto label6;

     label0:
        $r2 = this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap>;
        $i0 = interfaceinvoke $r2.<java.util.Map: int size()>();
        if $i0 <= 0 goto label1;

        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:title", "fo:static-content");
        goto label6;

     label1:
        $r3 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow>;
        if $r3 == null goto label6;

        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:title", "fo:flow");
        goto label6;

     label2:
        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("static-content");
        if $z0 == 0 goto label3;

        $r3 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow>;
        if $r3 == null goto label6;

        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:static-content", "fo:flow");
        goto label6;

     label3:
        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("flow");
        if $z0 == 0 goto label4;

        $r3 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow>;
        if $r3 == null goto label6;

        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:flow");
        goto label6;

     label4:
        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);
        goto label6;

     label5:
        virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);

     label6:
        return;
    }

    public void addChildNode(org.apache.fop.fo.FONode) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.FONode child;
        int childId;
        java.lang.String flowName;
        org.apache.fop.fo.pagination.Title $r0;
        org.apache.fop.fo.pagination.Flow $r1;
        org.apache.fop.fo.pagination.StaticContent $r2, $r3;
        java.util.Map $r4;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        child := @parameter0: org.apache.fop.fo.FONode;
        childId = virtualinvoke child.<org.apache.fop.fo.FONode: int getNameId()>();
        if childId != 55 goto label0;

        $r0 = (org.apache.fop.fo.pagination.Title) child;
        this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Title titleFO> = $r0;
        goto label2;

     label0:
        if childId != 11 goto label1;

        $r1 = (org.apache.fop.fo.pagination.Flow) child;
        this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow> = $r1;
        $r1 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow>;
        specialinvoke this.<org.apache.fop.fo.pagination.PageSequence: void addFlow(org.apache.fop.fo.pagination.Flow)>($r1);
        goto label2;

     label1:
        if childId != 45 goto label2;

        $r2 = (org.apache.fop.fo.pagination.StaticContent) child;
        specialinvoke this.<org.apache.fop.fo.pagination.PageSequence: void addFlow(org.apache.fop.fo.pagination.Flow)>($r2);
        $r3 = (org.apache.fop.fo.pagination.StaticContent) child;
        flowName = virtualinvoke $r3.<org.apache.fop.fo.pagination.StaticContent: java.lang.String getFlowName()>();
        $r4 = this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap>;
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(flowName, child);

     label2:
        return;
    }

    private void addFlow(org.apache.fop.fo.pagination.Flow) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.Flow flow;
        java.lang.String flowName, $r2;
        java.lang.StringBuffer $r0;
        boolean $z0;
        org.apache.fop.fo.ValidationException $r1;
        org.xml.sax.Locator $r3;
        org.apache.fop.fo.pagination.Root $r4;
        org.apache.fop.fo.pagination.LayoutMasterSet $r5;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        flow := @parameter0: org.apache.fop.fo.pagination.Flow;
        flowName = virtualinvoke flow.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $z0 = virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: boolean hasFlowName(java.lang.String)>(flowName);
        if $z0 == 0 goto label0;

        $r1 = new org.apache.fop.fo.ValidationException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("duplicate flow-name \"");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(flowName);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" found within fo:page-sequence");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $r3 = virtualinvoke flow.<org.apache.fop.fo.pagination.Flow: org.xml.sax.Locator getLocator()>();
        specialinvoke $r1.<org.apache.fop.fo.ValidationException: void <init>(java.lang.String,org.xml.sax.Locator)>($r2, $r3);
        throw $r1;

     label0:
        $r4 = virtualinvoke this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.pagination.Root: org.apache.fop.fo.pagination.LayoutMasterSet getLayoutMasterSet()>();
        $z0 = virtualinvoke $r5.<org.apache.fop.fo.pagination.LayoutMasterSet: boolean regionNameExists(java.lang.String)>(flowName);
        if $z0 != 0 goto label1;

        $z0 = virtualinvoke flowName.<java.lang.String: boolean equals(java.lang.Object)>("xsl-before-float-separator");
        if $z0 != 0 goto label1;

        $z0 = virtualinvoke flowName.<java.lang.String: boolean equals(java.lang.Object)>("xsl-footnote-separator");
        if $z0 != 0 goto label1;

        $r1 = new org.apache.fop.fo.ValidationException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("flow-name \"");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(flowName);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" could not be mapped to a region-name in the layout-master-set");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $r3 = virtualinvoke flow.<org.apache.fop.fo.pagination.Flow: org.xml.sax.Locator getLocator()>();
        specialinvoke $r1.<org.apache.fop.fo.ValidationException: void <init>(java.lang.String,org.xml.sax.Locator)>($r2, $r3);
        throw $r1;

     label1:
        return;
    }

    public org.apache.fop.fo.pagination.StaticContent getStaticContent(java.lang.String)
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.lang.String name;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.apache.fop.fo.pagination.StaticContent $r2;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        name := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        $r2 = (org.apache.fop.fo.pagination.StaticContent) $r1;
        return $r2;
    }

    public org.apache.fop.fo.pagination.Title getTitleFO()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.Title $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Title titleFO>;
        return $r0;
    }

    public org.apache.fop.fo.pagination.Flow getMainFlow()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.Flow $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow>;
        return $r0;
    }

    public boolean hasFlowName(java.lang.String)
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.lang.String flowName;
        java.util.Map $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        flowName := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap>;
        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>(flowName);
        return $z0;
    }

    public java.util.Map getFlowMap()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.util.Map $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap>;
        return $r0;
    }

    public org.apache.fop.fo.pagination.SimplePageMaster getNextSimplePageMaster(int, boolean, boolean, boolean, boolean) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.PageSequence this;
        int page, $i0;
        boolean isFirstPage, isLastPage, isOnlyPage, isBlank, isOddPage, $z0;
        org.apache.fop.fo.pagination.PageSequenceMaster $r0;
        org.apache.fop.fo.pagination.SimplePageMaster $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        page := @parameter0: int;
        isFirstPage := @parameter1: boolean;
        isLastPage := @parameter2: boolean;
        isOnlyPage := @parameter3: boolean;
        isBlank := @parameter4: boolean;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        if $r0 != null goto label0;

        $r1 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.SimplePageMaster simplePageMaster>;
        return $r1;

     label0:
        $i0 = page % 2;
        if $i0 != 1 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        isOddPage = $z0;
        $r2 = <org.apache.fop.fo.pagination.PageSequence: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label3;

        $r2 = <org.apache.fop.fo.pagination.PageSequence: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("getNextSimplePageMaster(page=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(page);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" isOdd=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(isOddPage);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" isFirst=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(isFirstPage);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" isLast=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(isLastPage);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" isOnly=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(isOnlyPage);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" isBlank=");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(isBlank);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label3:
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.pagination.PageSequenceMaster: org.apache.fop.fo.pagination.SimplePageMaster getNextSimplePageMaster(boolean,boolean,boolean,boolean,boolean)>(isOddPage, isFirstPage, isLastPage, isOnlyPage, isBlank);
        return $r1;
    }

    public boolean goToPreviousSimplePageMaster()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.PageSequenceMaster $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        if $r0 != null goto label0;

        return 1;

     label0:
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.pagination.PageSequenceMaster: boolean goToPreviousSimplePageMaster()>();
        return $z0;
    }

    public boolean hasPagePositionLast()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.PageSequenceMaster $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        if $r0 != null goto label0;

        return 0;

     label0:
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.pagination.PageSequenceMaster: boolean hasPagePositionLast()>();
        return $z0;
    }

    public boolean hasPagePositionOnly()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        org.apache.fop.fo.pagination.PageSequenceMaster $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        if $r0 != null goto label0;

        return 0;

     label0:
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.pagination.PageSequenceMaster: boolean hasPagePositionOnly()>();
        return $z0;
    }

    public java.lang.String getMasterReference()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String masterReference>;
        return $r0;
    }

    public java.lang.String getLocalName()
    {
        org.apache.fop.fo.pagination.PageSequence this;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        return "page-sequence";
    }

    public int getNameId()
    {
        org.apache.fop.fo.pagination.PageSequence this;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        return 32;
    }

    public java.lang.String getCountry()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String country>;
        return $r0;
    }

    public java.lang.String getLanguage()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.lang.String language>;
        return $r0;
    }

    public void releasePageSequence()
    {
        org.apache.fop.fo.pagination.PageSequence this;
        java.util.Map $r0;

        this := @this: org.apache.fop.fo.pagination.PageSequence;
        this.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow mainFlow> = null;
        $r0 = this.<org.apache.fop.fo.pagination.PageSequence: java.util.Map flowMap>;
        interfaceinvoke $r0.<java.util.Map: void clear()>();
        return;
    }
}

public final class org.apache.fop.fo.properties.FixedLength extends org.apache.fop.fo.properties.LengthProperty
{
    public static final java.lang.String PICA;
    public static final java.lang.String POINT;
    public static final java.lang.String MM;
    public static final java.lang.String CM;
    public static final java.lang.String INCH;
    public static final java.lang.String MPT;
    private static final org.apache.fop.fo.properties.PropertyCache cache;
    public static final org.apache.fop.fo.properties.FixedLength ZERO_FIXED_LENGTH;
    private int millipoints;

    private void <init>(double, java.lang.String, float)
    {
        org.apache.fop.fo.properties.FixedLength this;
        double numUnits;
        java.lang.String units;
        float res;
        int $i0;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        numUnits := @parameter0: double;
        units := @parameter1: java.lang.String;
        res := @parameter2: float;
        specialinvoke this.<org.apache.fop.fo.properties.LengthProperty: void <init>()>();
        $i0 = staticinvoke <org.apache.fop.fo.properties.FixedLength: int convert(double,java.lang.String,float)>(numUnits, units, res);
        this.<org.apache.fop.fo.properties.FixedLength: int millipoints> = $i0;
        return;
    }

    public static org.apache.fop.fo.properties.FixedLength getInstance(double, java.lang.String, float)
    {
        double numUnits;
        java.lang.String units;
        float sourceResolution;
        org.apache.fop.fo.properties.FixedLength $r0, $r1;
        byte $b0;
        org.apache.fop.fo.properties.PropertyCache $r2;
        org.apache.fop.fo.properties.Property $r3;

        numUnits := @parameter0: double;
        units := @parameter1: java.lang.String;
        sourceResolution := @parameter2: float;
        $b0 = numUnits cmpl 0.0;
        if $b0 != 0 goto label0;

        $r1 = <org.apache.fop.fo.properties.FixedLength: org.apache.fop.fo.properties.FixedLength ZERO_FIXED_LENGTH>;
        return $r1;

     label0:
        $r2 = <org.apache.fop.fo.properties.FixedLength: org.apache.fop.fo.properties.PropertyCache cache>;
        $r0 = new org.apache.fop.fo.properties.FixedLength;
        specialinvoke $r0.<org.apache.fop.fo.properties.FixedLength: void <init>(double,java.lang.String,float)>(numUnits, units, sourceResolution);
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.Property fetch(org.apache.fop.fo.properties.Property)>($r0);
        $r1 = (org.apache.fop.fo.properties.FixedLength) $r3;
        return $r1;
    }

    public static org.apache.fop.fo.properties.FixedLength getInstance(double, java.lang.String)
    {
        double numUnits;
        java.lang.String units;
        org.apache.fop.fo.properties.FixedLength $r0;

        numUnits := @parameter0: double;
        units := @parameter1: java.lang.String;
        $r0 = staticinvoke <org.apache.fop.fo.properties.FixedLength: org.apache.fop.fo.properties.FixedLength getInstance(double,java.lang.String,float)>(numUnits, units, 1.0F);
        return $r0;
    }

    public static org.apache.fop.fo.properties.FixedLength getInstance(double)
    {
        double numUnits;
        org.apache.fop.fo.properties.FixedLength $r0;

        numUnits := @parameter0: double;
        $r0 = staticinvoke <org.apache.fop.fo.properties.FixedLength: org.apache.fop.fo.properties.FixedLength getInstance(double,java.lang.String,float)>(numUnits, "mpt", 1.0F);
        return $r0;
    }

    private static int convert(double, java.lang.String, float)
    {
        double dvalue, $d0;
        java.lang.String unit, $r0, $r3;
        float res, $f0;
        boolean $z0;
        org.apache.commons.logging.Log $r1;
        java.lang.StringBuffer $r2;
        int $i0;

        dvalue := @parameter0: double;
        unit := @parameter1: java.lang.String;
        res := @parameter2: float;
        $r0 = "px";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 == 0 goto label0;

        $f0 = res * 1000.0F;
        $d0 = (double) $f0;
        dvalue = dvalue * $d0;
        goto label6;

     label0:
        $r0 = "in";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 == 0 goto label1;

        dvalue = dvalue * 72000.0;
        goto label6;

     label1:
        $r0 = "cm";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 == 0 goto label2;

        dvalue = dvalue * 28346.4567;
        goto label6;

     label2:
        $r0 = "mm";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 == 0 goto label3;

        dvalue = dvalue * 2834.64567;
        goto label6;

     label3:
        $r0 = "pt";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 == 0 goto label4;

        dvalue = dvalue * 1000.0;
        goto label6;

     label4:
        $r0 = "pc";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 == 0 goto label5;

        dvalue = dvalue * 12000.0;
        goto label6;

     label5:
        $r0 = "mpt";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(unit);
        if $z0 != 0 goto label6;

        dvalue = 0.0;
        $r1 = <org.apache.fop.fo.properties.FixedLength: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown length unit \'");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(unit);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);

     label6:
        $i0 = (int) dvalue;
        return $i0;
    }

    public int getValue()
    {
        org.apache.fop.fo.properties.FixedLength this;
        int $i0;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        $i0 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        return $i0;
    }

    public int getValue(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.FixedLength this;
        org.apache.fop.datatypes.PercentBaseContext context;
        int $i0;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        $i0 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        return $i0;
    }

    public double getNumericValue()
    {
        org.apache.fop.fo.properties.FixedLength this;
        int $i0;
        double $d0;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        $i0 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        $d0 = (double) $i0;
        return $d0;
    }

    public double getNumericValue(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.FixedLength this;
        org.apache.fop.datatypes.PercentBaseContext context;
        int $i0;
        double $d0;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        $i0 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        $d0 = (double) $i0;
        return $d0;
    }

    public boolean isAbsolute()
    {
        org.apache.fop.fo.properties.FixedLength this;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        return 1;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.properties.FixedLength this;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r1;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $i0 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mpt");
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.fo.properties.FixedLength this, $r0;
        java.lang.Object obj;
        boolean $z0;
        int $i0, $i1;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        obj := @parameter0: java.lang.Object;
        if this != obj goto label0;

        return 1;

     label0:
        $z0 = obj instanceof org.apache.fop.fo.properties.FixedLength;
        if $z0 == 0 goto label3;

        $r0 = (org.apache.fop.fo.properties.FixedLength) obj;
        $i0 = $r0.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        $i1 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        if $i0 != $i1 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.fop.fo.properties.FixedLength this;
        int $i0;

        this := @this: org.apache.fop.fo.properties.FixedLength;
        $i0 = this.<org.apache.fop.fo.properties.FixedLength: int millipoints>;
        return $i0;
    }

    static void <clinit>()
    {
        org.apache.fop.fo.properties.PropertyCache $r0;
        org.apache.fop.fo.properties.FixedLength $r1;

        $r0 = new org.apache.fop.fo.properties.PropertyCache;
        specialinvoke $r0.<org.apache.fop.fo.properties.PropertyCache: void <init>()>();
        <org.apache.fop.fo.properties.FixedLength: org.apache.fop.fo.properties.PropertyCache cache> = $r0;
        $r1 = new org.apache.fop.fo.properties.FixedLength;
        specialinvoke $r1.<org.apache.fop.fo.properties.FixedLength: void <init>(double,java.lang.String,float)>(0.0, "mpt", 1.0F);
        <org.apache.fop.fo.properties.FixedLength: org.apache.fop.fo.properties.FixedLength ZERO_FIXED_LENGTH> = $r1;
        return;
    }
}

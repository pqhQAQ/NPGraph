public class org.apache.fop.layoutmgr.table.ColumnSetup extends java.lang.Object
{
    private static org.apache.commons.logging.Log log;
    private org.apache.fop.fo.flow.table.Table table;
    private java.util.List columns;
    private java.util.List colWidths;
    private int maxColIndexReferenced;
    static java.lang.Class class$org$apache$fop$layoutmgr$table$ColumnSetup;

    public void <init>(org.apache.fop.fo.flow.table.Table)
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        org.apache.fop.fo.flow.table.Table table;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        table := @parameter0: org.apache.fop.fo.flow.table.Table;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns> = $r0;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths> = $r0;
        this.<org.apache.fop.layoutmgr.table.ColumnSetup: int maxColIndexReferenced> = 0;
        this.<org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.fop.fo.flow.table.Table table> = table;
        specialinvoke this.<org.apache.fop.layoutmgr.table.ColumnSetup: void prepareColumns()>();
        specialinvoke this.<org.apache.fop.layoutmgr.table.ColumnSetup: void initializeColumnWidths()>();
        return;
    }

    private void prepareColumns()
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        java.util.List rawCols, $r2, $r3;
        boolean colnum, $z0;
        java.util.ListIterator iter, ppIter;
        org.apache.fop.fo.flow.table.TableColumn col;
        int i, pos, colnum, $i0;
        org.apache.fop.fo.flow.table.Table $r0;
        java.lang.Object $r1;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.fop.fo.flow.table.Table table>;
        rawCols = virtualinvoke $r0.<org.apache.fop.fo.flow.table.Table: java.util.List getColumns()>();
        if rawCols == null goto label9;

        colnum = 1;
        iter = interfaceinvoke rawCols.<java.util.List: java.util.ListIterator listIterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r1 = interfaceinvoke iter.<java.util.ListIterator: java.lang.Object next()>();
        col = (org.apache.fop.fo.flow.table.TableColumn) $r1;
        if col != null goto label1;

        goto label0;

     label1:
        colnum = virtualinvoke col.<org.apache.fop.fo.flow.table.TableColumn: int getColumnNumber()>();
        i = 0;

     label2:
        $i0 = virtualinvoke col.<org.apache.fop.fo.flow.table.TableColumn: int getNumberColumnsRepeated()>();
        if i >= $i0 goto label5;

     label3:
        $r2 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        if colnum <= $i0 goto label4;

        $r3 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(null);
        goto label3;

     label4:
        $r3 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $i0 = colnum - 1;
        interfaceinvoke $r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, col);
        colnum = colnum + 1;
        i = i + 1;
        goto label2;

     label5:
        goto label0;

     label6:
        pos = 1;
        $r3 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        ppIter = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator()>();

     label7:
        $z0 = interfaceinvoke ppIter.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r1 = interfaceinvoke ppIter.<java.util.ListIterator: java.lang.Object next()>();
        col = (org.apache.fop.fo.flow.table.TableColumn) $r1;
        if col != null goto label8;

        $r4 = <org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Found a gap in the table-columns at position ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(pos);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r6);

     label8:
        pos = pos + 1;
        goto label7;

     label9:
        return;
    }

    public org.apache.fop.fo.flow.table.TableColumn getColumn(int)
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        int index, size, $i0;
        java.util.List $r0;
        org.apache.fop.fo.flow.table.TableColumn $r1;
        boolean $z0;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;
        org.apache.fop.fo.flow.table.Table $r5, $r6;
        java.lang.Object $r7;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        index := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        size = interfaceinvoke $r0.<java.util.List: int size()>();
        if index <= size goto label2;

        $i0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: int maxColIndexReferenced>;
        if index <= $i0 goto label1;

        this.<org.apache.fop.layoutmgr.table.ColumnSetup: int maxColIndexReferenced> = index;
        if size != 1 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.fop.fo.flow.table.TableColumn getColumn(int)>(1);
        $z0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.TableColumn: boolean isImplicitColumn()>();
        if $z0 != 0 goto label1;

     label0:
        $r2 = <org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("There are fewer table-columns than are needed. Column ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(index);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" was accessed, but only ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(size);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" columns have been defined. The last defined column will be reused.");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r5 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.fop.fo.flow.table.Table table>;
        $r4 = staticinvoke <org.apache.fop.fo.FONode: java.lang.String decorateWithContextInfo(java.lang.String,org.apache.fop.fo.FONode)>($r4, $r5);
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r4);
        $r6 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.fop.fo.flow.table.Table table>;
        $z0 = virtualinvoke $r6.<org.apache.fop.fo.flow.table.Table: boolean isAutoLayout()>();
        if $z0 != 0 goto label1;

        $r2 = <org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.commons.logging.Log log>;
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Please note that according XSL-FO 1.0 (7.26.9) says that the \'column-width\' property must be specified for every column, unless the automatic table layout is used.");

     label1:
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $i0 = size - 1;
        $r7 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);
        $r1 = (org.apache.fop.fo.flow.table.TableColumn) $r7;
        return $r1;

     label2:
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $i0 = index - 1;
        $r7 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);
        $r1 = (org.apache.fop.fo.flow.table.TableColumn) $r7;
        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        java.util.List $r0;
        java.lang.String $r1;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();
        return $r1;
    }

    public int getColumnCount()
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        int $i0, $i1;
        java.util.List $r0, $r1;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        $i0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: int maxColIndexReferenced>;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 <= $i1 goto label0;

        $i0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: int maxColIndexReferenced>;
        return $i0;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();
        return $i0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        java.util.List $r0;
        java.util.Iterator $r1;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();
        return $r1;
    }

    private void initializeColumnWidths()
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        int i;
        org.apache.fop.fo.flow.table.TableColumn col;
        org.apache.fop.datatypes.Length colWidth;
        java.util.List $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        i = interfaceinvoke $r0.<java.util.List: int size()>();

     label0:
        i = i + -1;
        if i < 0 goto label1;

        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i);
        if $r1 == null goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List columns>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i);
        col = (org.apache.fop.fo.flow.table.TableColumn) $r1;
        colWidth = virtualinvoke col.<org.apache.fop.fo.flow.table.TableColumn: org.apache.fop.datatypes.Length getColumnWidth()>();
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>(0, colWidth);
        goto label0;

     label1:
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>(0, null);
        return;
    }

    protected double computeTableUnit(org.apache.fop.layoutmgr.table.TableLayoutManager)
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        org.apache.fop.layoutmgr.table.TableLayoutManager tlm;
        int $i0;
        float $f0;
        double $d0;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        tlm := @parameter0: org.apache.fop.layoutmgr.table.TableLayoutManager;
        $i0 = virtualinvoke tlm.<org.apache.fop.layoutmgr.table.TableLayoutManager: int getContentAreaIPD()>();
        $f0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.ColumnSetup: float computeTableUnit(org.apache.fop.datatypes.PercentBaseContext,int)>(tlm, $i0);
        $d0 = (double) $f0;
        return $d0;
    }

    public float computeTableUnit(org.apache.fop.datatypes.PercentBaseContext, int)
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        org.apache.fop.datatypes.PercentBaseContext percentBaseContext;
        int contentAreaIPD, sumCols, $i0, $i2;
        float factors, unit, $f0;
        java.util.Iterator i;
        org.apache.fop.datatypes.Length colWidth;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;
        double $d0, $d1;
        org.apache.fop.fo.properties.TableColLength $r2;
        byte $b1;
        org.apache.commons.logging.Log $r3;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        percentBaseContext := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        contentAreaIPD := @parameter1: int;
        sumCols = 0;
        factors = 0.0F;
        unit = 0.0F;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        i = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        colWidth = (org.apache.fop.datatypes.Length) $r1;
        if colWidth == null goto label1;

        $i0 = interfaceinvoke colWidth.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(percentBaseContext);
        sumCols = sumCols + $i0;
        $z0 = colWidth instanceof org.apache.fop.fo.properties.TableColLength;
        if $z0 == 0 goto label1;

        $d0 = (double) factors;
        $r2 = (org.apache.fop.fo.properties.TableColLength) colWidth;
        $d1 = virtualinvoke $r2.<org.apache.fop.fo.properties.TableColLength: double getTableUnits()>();
        $d0 = $d0 + $d1;
        factors = (float) $d0;

     label1:
        goto label0;

     label2:
        $b1 = factors cmpl 0.0F;
        if $b1 <= 0 goto label4;

        if sumCols >= contentAreaIPD goto label3;

        $i2 = contentAreaIPD - sumCols;
        $f0 = (float) $i2;
        unit = $f0 / factors;
        goto label4;

     label3:
        $r3 = <org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.commons.logging.Log log>;
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("No space remaining to distribute over columns.");

     label4:
        return unit;
    }

    public int getXOffset(int, org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        int col, xoffset, i, effCol, $i0, $i1;
        org.apache.fop.datatypes.PercentBaseContext context;
        java.util.List $r0, $r1;
        java.lang.Object $r2, $r3;
        org.apache.fop.datatypes.Length $r4;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        col := @parameter0: int;
        context := @parameter1: org.apache.fop.datatypes.PercentBaseContext;
        xoffset = 0;
        i = col;

     label0:
        i = i + -1;
        if i < 0 goto label4;

        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if i >= $i0 goto label1;

        effCol = i;
        goto label2;

     label1:
        $r1 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        effCol = $i1 - 1;

     label2:
        $r1 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(effCol);
        if $r2 == null goto label3;

        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(effCol);
        $r4 = (org.apache.fop.datatypes.Length) $r3;
        $i0 = interfaceinvoke $r4.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        xoffset = xoffset + $i0;

     label3:
        goto label0;

     label4:
        return xoffset;
    }

    public int getSumOfColumnWidths(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.layoutmgr.table.ColumnSetup this;
        org.apache.fop.datatypes.PercentBaseContext context;
        int sum, i, c, effIndex, $i0, $i1;
        java.util.List $r0, $r1;
        java.lang.Object $r2, $r3;
        org.apache.fop.datatypes.Length $r4;

        this := @this: org.apache.fop.layoutmgr.table.ColumnSetup;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        sum = 0;
        i = 1;
        c = virtualinvoke this.<org.apache.fop.layoutmgr.table.ColumnSetup: int getColumnCount()>();

     label0:
        if i > c goto label3;

        effIndex = i;
        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if i < $i0 goto label1;

        $r1 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        effIndex = $i1 - 1;

     label1:
        $r1 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(effIndex);
        if $r2 == null goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.table.ColumnSetup: java.util.List colWidths>;
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(effIndex);
        $r4 = (org.apache.fop.datatypes.Length) $r3;
        $i0 = interfaceinvoke $r4.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        sum = sum + $i0;

     label2:
        i = i + 1;
        goto label0;

     label3:
        return sum;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.table.ColumnSetup: java.lang.Class class$org$apache$fop$layoutmgr$table$ColumnSetup>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.table.ColumnSetup: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.table.ColumnSetup");
        <org.apache.fop.layoutmgr.table.ColumnSetup: java.lang.Class class$org$apache$fop$layoutmgr$table$ColumnSetup> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.table.ColumnSetup: java.lang.Class class$org$apache$fop$layoutmgr$table$ColumnSetup>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.table.ColumnSetup: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

class org.apache.fop.fo.flow.Character$FOCharIterator extends org.apache.fop.fo.CharIterator
{
    private boolean bFirst;
    private org.apache.fop.fo.flow.Character foChar;
    private final org.apache.fop.fo.flow.Character this$0;

    void <init>(org.apache.fop.fo.flow.Character, org.apache.fop.fo.flow.Character)
    {
        org.apache.fop.fo.flow.Character$FOCharIterator this;
        org.apache.fop.fo.flow.Character l1, foChar;

        this := @this: org.apache.fop.fo.flow.Character$FOCharIterator;
        l1 := @parameter0: org.apache.fop.fo.flow.Character;
        foChar := @parameter1: org.apache.fop.fo.flow.Character;
        this.<org.apache.fop.fo.flow.Character$FOCharIterator: org.apache.fop.fo.flow.Character this$0> = l1;
        specialinvoke this.<org.apache.fop.fo.CharIterator: void <init>()>();
        this.<org.apache.fop.fo.flow.Character$FOCharIterator: boolean bFirst> = 1;
        this.<org.apache.fop.fo.flow.Character$FOCharIterator: org.apache.fop.fo.flow.Character foChar> = foChar;
        return;
    }

    public boolean hasNext()
    {
        org.apache.fop.fo.flow.Character$FOCharIterator this;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.Character$FOCharIterator;
        $z0 = this.<org.apache.fop.fo.flow.Character$FOCharIterator: boolean bFirst>;
        return $z0;
    }

    public char nextChar()
    {
        org.apache.fop.fo.flow.Character$FOCharIterator this;
        boolean $z0;
        org.apache.fop.fo.flow.Character $r0;
        char $c0;
        java.util.NoSuchElementException $r1;

        this := @this: org.apache.fop.fo.flow.Character$FOCharIterator;
        $z0 = this.<org.apache.fop.fo.flow.Character$FOCharIterator: boolean bFirst>;
        if $z0 == 0 goto label0;

        this.<org.apache.fop.fo.flow.Character$FOCharIterator: boolean bFirst> = 0;
        $r0 = this.<org.apache.fop.fo.flow.Character$FOCharIterator: org.apache.fop.fo.flow.Character foChar>;
        $c0 = staticinvoke <org.apache.fop.fo.flow.Character: char access$000(org.apache.fop.fo.flow.Character)>($r0);
        return $c0;

     label0:
        $r1 = new java.util.NoSuchElementException;
        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();
        throw $r1;
    }

    public void remove()
    {
        org.apache.fop.fo.flow.Character$FOCharIterator this;
        org.apache.fop.fo.flow.Character $r0, $r2;
        org.apache.fop.fo.FONode $r1;

        this := @this: org.apache.fop.fo.flow.Character$FOCharIterator;
        $r0 = this.<org.apache.fop.fo.flow.Character$FOCharIterator: org.apache.fop.fo.flow.Character foChar>;
        $r1 = staticinvoke <org.apache.fop.fo.flow.Character: org.apache.fop.fo.FONode access$100(org.apache.fop.fo.flow.Character)>($r0);
        $r2 = this.<org.apache.fop.fo.flow.Character$FOCharIterator: org.apache.fop.fo.flow.Character foChar>;
        virtualinvoke $r1.<org.apache.fop.fo.FONode: void removeChild(org.apache.fop.fo.FONode)>($r2);
        return;
    }

    public void replaceChar(char)
    {
        org.apache.fop.fo.flow.Character$FOCharIterator this;
        char c;
        org.apache.fop.fo.flow.Character $r0;

        this := @this: org.apache.fop.fo.flow.Character$FOCharIterator;
        c := @parameter0: char;
        $r0 = this.<org.apache.fop.fo.flow.Character$FOCharIterator: org.apache.fop.fo.flow.Character foChar>;
        staticinvoke <org.apache.fop.fo.flow.Character: char access$002(org.apache.fop.fo.flow.Character,char)>($r0, c);
        return;
    }
}

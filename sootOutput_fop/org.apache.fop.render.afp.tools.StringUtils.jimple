public class org.apache.fop.render.afp.tools.StringUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.fop.render.afp.tools.StringUtils this;

        this := @this: org.apache.fop.render.afp.tools.StringUtils;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String lpad(java.lang.String, char, int)
    {
        java.lang.String input, $r0;
        char padding;
        int length, numChars, i, $i0, $i1;
        java.lang.StringBuffer result, $r1;

        input := @parameter0: java.lang.String;
        padding := @parameter1: char;
        length := @parameter2: int;
        if input != null goto label0;

        $r0 = new java.lang.String;
        specialinvoke $r0.<java.lang.String: void <init>()>();
        input = $r0;

     label0:
        $i0 = virtualinvoke input.<java.lang.String: int length()>();
        if $i0 < length goto label1;

        return input;

     label1:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        result = $r1;
        $i1 = virtualinvoke input.<java.lang.String: int length()>();
        numChars = length - $i1;
        i = 0;

     label2:
        if i >= numChars goto label3;

        virtualinvoke result.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(padding);
        i = i + 1;
        goto label2;

     label3:
        virtualinvoke result.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(input);
        $r0 = virtualinvoke result.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r0;
    }

    public static java.lang.String rpad(java.lang.String, char, int)
    {
        java.lang.String input, $r0;
        char padding;
        int length, numChars, i, $i0, $i1;
        java.lang.StringBuffer result, $r1;

        input := @parameter0: java.lang.String;
        padding := @parameter1: char;
        length := @parameter2: int;
        if input != null goto label0;

        $r0 = new java.lang.String;
        specialinvoke $r0.<java.lang.String: void <init>()>();
        input = $r0;

     label0:
        $i0 = virtualinvoke input.<java.lang.String: int length()>();
        if $i0 < length goto label1;

        return input;

     label1:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(input);
        result = $r1;
        $i1 = virtualinvoke input.<java.lang.String: int length()>();
        numChars = length - $i1;
        i = 0;

     label2:
        if i >= numChars goto label3;

        virtualinvoke result.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(padding);
        i = i + 1;
        goto label2;

     label3:
        $r0 = virtualinvoke result.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r0;
    }
}

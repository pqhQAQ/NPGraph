public class org.apache.fop.fonts.truetype.TTFFile extends java.lang.Object
{
    static final byte NTABS;
    static final int NMACGLYPHS;
    static final int MAX_CHAR_CODE;
    static final int ENC_BUF_SIZE;
    public static final boolean TRACE_ENABLED;
    private java.lang.String encoding;
    private short firstChar;
    private boolean isEmbeddable;
    private boolean hasSerifs;
    protected java.util.Map dirTabs;
    private java.util.Map kerningTab;
    private java.util.Map ansiKerningTab;
    private java.util.List cmaps;
    private java.util.List unicodeMapping;
    private int upem;
    private int nhmtx;
    private int postFormat;
    private int locaFormat;
    protected long lastLoca;
    private int numberOfGlyphs;
    private int nmGlyphs;
    protected org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab;
    private int[] mtxEncoded;
    private java.lang.String postScriptName;
    private java.lang.String fullName;
    private java.lang.String notice;
    private java.util.Set familyNames;
    private java.lang.String subFamilyName;
    private long italicAngle;
    private long isFixedPitch;
    private int fontBBox1;
    private int fontBBox2;
    private int fontBBox3;
    private int fontBBox4;
    private int capHeight;
    private int os2CapHeight;
    private int underlinePosition;
    private int underlineThickness;
    private int xHeight;
    private int os2xHeight;
    private int ascender;
    private int descender;
    private int hheaAscender;
    private int hheaDescender;
    private int os2Ascender;
    private int os2Descender;
    private int usWeightClass;
    private short lastChar;
    private int[] ansiWidth;
    private java.util.Map ansiIndex;
    private java.util.Map glyphToUnicodeMap;
    private java.util.Map unicodeToGlyphMap;
    private org.apache.fop.fonts.truetype.TTFDirTabEntry currentDirTab;
    private boolean isCFF;
    protected org.apache.commons.logging.Log log;
    static java.lang.Class class$org$apache$fop$fonts$truetype$TTFFile;

    public void <init>()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.util.HashSet $r0;
        java.util.HashMap $r1;
        java.lang.Class $r3;
        org.apache.commons.logging.Log $r4;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String encoding> = "WinAnsiEncoding";
        this.<org.apache.fop.fonts.truetype.TTFFile: short firstChar> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: boolean isEmbeddable> = 1;
        this.<org.apache.fop.fonts.truetype.TTFFile: boolean hasSerifs> = 1;
        this.<org.apache.fop.fonts.truetype.TTFFile: long lastLoca> = 0L;
        this.<org.apache.fop.fonts.truetype.TTFFile: int[] mtxEncoded> = null;
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName> = "";
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName> = "";
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String notice> = "";
        $r0 = new java.util.HashSet;
        specialinvoke $r0.<java.util.HashSet: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Set familyNames> = $r0;
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String subFamilyName> = "";
        this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle> = 0L;
        this.<org.apache.fop.fonts.truetype.TTFFile: long isFixedPitch> = 0L;
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox1> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox2> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox3> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox4> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2CapHeight> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int underlinePosition> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int underlineThickness> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2xHeight> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int ascender> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int descender> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: int usWeightClass> = 0;
        this.<org.apache.fop.fonts.truetype.TTFFile: short lastChar> = 0;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map glyphToUnicodeMap> = $r1;
        $r1 = new java.util.HashMap;
        specialinvoke $r1.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map unicodeToGlyphMap> = $r1;
        $r3 = <org.apache.fop.fonts.truetype.TTFFile: java.lang.Class class$org$apache$fop$fonts$truetype$TTFFile>;
        if $r3 != null goto label0;

        $r3 = staticinvoke <org.apache.fop.fonts.truetype.TTFFile: java.lang.Class class$(java.lang.String)>("org.apache.fop.fonts.truetype.TTFFile");
        <org.apache.fop.fonts.truetype.TTFFile: java.lang.Class class$org$apache$fop$fonts$truetype$TTFFile> = $r3;
        goto label1;

     label0:
        $r3 = <org.apache.fop.fonts.truetype.TTFFile: java.lang.Class class$org$apache$fop$fonts$truetype$TTFFile>;

     label1:
        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);
        this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log> = $r4;
        return;
    }

    boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader, java.lang.String, long) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        java.lang.String name, $r4;
        long offset, $l0;
        org.apache.fop.fonts.truetype.TTFDirTabEntry dt;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        name := @parameter1: java.lang.String;
        offset := @parameter2: long;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        dt = (org.apache.fop.fonts.truetype.TTFDirTabEntry) $r1;
        if dt != null goto label0;

        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Dirtab ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(name);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found.");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r4);
        return 0;

     label0:
        $l0 = virtualinvoke dt.<org.apache.fop.fonts.truetype.TTFDirTabEntry: long getOffset()>();
        $l0 = $l0 + offset;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l0);
        this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFDirTabEntry currentDirTab> = dt;
        return 1;
    }

    public int convertTTFUnit2PDFUnit(int)
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int n, 'ret', $i0, $i1, $i4;
        long rest1, storrest, ledd2, $l3;
        byte $b2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        n := @parameter0: int;
        if n >= 0 goto label2;

        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        $i1 = n % $i0;
        rest1 = (long) $i1;
        storrest = 1000L * rest1;
        $b2 = storrest cmp 0L;
        if $b2 == 0 goto label0;

        $l3 = rest1 / storrest;
        goto label1;

     label0:
        $l3 = 0L;

     label1:
        ledd2 = $l3;
        $i1 = -1000 * n;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        $i1 = $i1 / $i0;
        $i0 = (int) ledd2;
        $i1 = $i1 - $i0;
        'ret' = neg $i1;
        goto label3;

     label2:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        $i1 = n / $i0;
        $i1 = $i1 * 1000;
        $i4 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        $i0 = n % $i4;
        $i0 = $i0 * 1000;
        $i4 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        $i0 = $i0 / $i4;
        'ret' = $i1 + $i0;

     label3:
        return 'ret';
    }

    private boolean readCMAP(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        java.util.ArrayList $r0;
        int mtxPtr, numCMap, i, cmapPID, cmapEID, cmapFormat, cmapSegCountX2, cmapSearchRange, cmapEntrySelector, cmapRangeShift, glyphIdArrayOffset, j, glyphOffset, glyphIdx, $i1, $i2, $i3, $i6;
        long cmapUniOffset, cmapOffset, $l7;
        int[] cmapEndCounts, cmapStartCounts, cmapDeltas, cmapRangeOffsets, $r12;
        java.util.List v, $r5;
        java.util.ListIterator e;
        java.lang.Integer aIdx, $r9;
        boolean $z0;
        org.apache.commons.logging.Log $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3, $r15;
        byte $b0;
        short $s4, $s5;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r4, $r7, $r13;
        org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping $r6;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r8, $r14;
        java.util.Map $r10;
        java.lang.Object $r11;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List unicodeMapping> = $r0;
        mtxPtr = 0;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "cmap", 2L);
        numCMap = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapUniOffset = 0L;
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(numCMap);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cmap tables");
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label0:
        i = 0;

     label1:
        if i >= numCMap goto label4;

        cmapPID = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapEID = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapOffset = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Platform ID: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapPID);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Encoding: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapEID);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label2:
        if cmapPID != 3 goto label3;

        if cmapEID != 1 goto label3;

        cmapUniOffset = cmapOffset;

     label3:
        i = i + 1;
        goto label1;

     label4:
        $b0 = cmapUniOffset cmp 0L;
        if $b0 > 0 goto label5;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void fatal(java.lang.Object)>("Unsupported TrueType font: Unicode cmap table not present. Aborting");
        return 0;

     label5:
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "cmap", cmapUniOffset);
        cmapFormat = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label6;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CMAP format: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapFormat);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label6:
        if cmapFormat != 4 goto label33;

        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(2L);
        cmapSegCountX2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapSearchRange = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapEntrySelector = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapRangeShift = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label7;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("segCountX2   : ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapSegCountX2);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("searchRange  : ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapSearchRange);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("entrySelector: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapEntrySelector);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("rangeShift   : ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(cmapRangeShift);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label7:
        $i1 = cmapSegCountX2 / 2;
        cmapEndCounts = newarray (int)[$i1];
        $i1 = cmapSegCountX2 / 2;
        cmapStartCounts = newarray (int)[$i1];
        $i1 = cmapSegCountX2 / 2;
        cmapDeltas = newarray (int)[$i1];
        $i1 = cmapSegCountX2 / 2;
        cmapRangeOffsets = newarray (int)[$i1];
        i = 0;

     label8:
        $i2 = cmapSegCountX2 / 2;
        if i >= $i2 goto label9;

        $i3 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapEndCounts[i] = $i3;
        i = i + 1;
        goto label8;

     label9:
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(2L);
        i = 0;

     label10:
        $i2 = cmapSegCountX2 / 2;
        if i >= $i2 goto label11;

        $i3 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapStartCounts[i] = $i3;
        i = i + 1;
        goto label10;

     label11:
        i = 0;

     label12:
        $i2 = cmapSegCountX2 / 2;
        if i >= $i2 goto label13;

        $s4 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        cmapDeltas[i] = $s4;
        i = i + 1;
        goto label12;

     label13:
        i = 0;

     label14:
        $i2 = cmapSegCountX2 / 2;
        if i >= $i2 goto label15;

        $i3 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        cmapRangeOffsets[i] = $i3;
        i = i + 1;
        goto label14;

     label15:
        glyphIdArrayOffset = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int getCurrentPos()>();
        i = 0;

     label16:
        $i2 = lengthof cmapStartCounts;
        if i >= $i2 goto label33;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label17;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");
        $i3 = cmapStartCounts[i];
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");
        $i3 = cmapEndCounts[i];
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label17:
        j = cmapStartCounts[i];

     label18:
        $i2 = cmapEndCounts[i];
        if j > $i2 goto label32;

        if j >= 256 goto label19;

        $s5 = this.<org.apache.fop.fonts.truetype.TTFFile: short lastChar>;
        if j <= $s5 goto label19;

        $s5 = (short) j;
        this.<org.apache.fop.fonts.truetype.TTFFile: short lastChar> = $s5;

     label19:
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = lengthof $r4;
        if mtxPtr >= $i2 goto label31;

        $i1 = cmapRangeOffsets[i];
        if $i1 == 0 goto label24;

        if j == 65535 goto label24;

        $i2 = cmapRangeOffsets[i];
        $i2 = $i2 / 2;
        $i6 = cmapStartCounts[i];
        $i3 = j - $i6;
        $i2 = $i2 + $i3;
        $i2 = $i2 + i;
        $i3 = cmapSegCountX2 / 2;
        $i2 = $i2 - $i3;
        $i2 = $i2 * 2;
        glyphOffset = glyphIdArrayOffset + $i2;
        $l7 = (long) glyphOffset;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l7);
        $i1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i2 = cmapDeltas[i];
        $i1 = $i1 + $i2;
        glyphIdx = $i1 & 65535;
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List unicodeMapping>;
        $r6 = new org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping;
        specialinvoke $r6.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: void <init>(org.apache.fop.fonts.truetype.TTFFile,int,int)>(this, glyphIdx, j);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[glyphIdx];
        $r5 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        $r9 = new java.lang.Integer;
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(j);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);
        $r10 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiIndex>;
        $r9 = new java.lang.Integer;
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(j);
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);
        v = (java.util.List) $r11;
        if v == null goto label22;

        e = interfaceinvoke v.<java.util.List: java.util.ListIterator listIterator()>();

     label20:
        $z0 = interfaceinvoke e.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label22;

        $r11 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>();
        aIdx = (java.lang.Integer) $r11;
        $r12 = this.<org.apache.fop.fonts.truetype.TTFFile: int[] ansiWidth>;
        $i2 = virtualinvoke aIdx.<java.lang.Integer: int intValue()>();
        $r13 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r14 = $r13[glyphIdx];
        $i3 = virtualinvoke $r14.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getWx()>();
        $r12[$i2] = $i3;
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label21;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Added width ");
        $r13 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r14 = $r13[glyphIdx];
        $i3 = virtualinvoke $r14.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getWx()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" uni: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(j);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ansi: ");
        $i3 = virtualinvoke aIdx.<java.lang.Integer: int intValue()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label21:
        goto label20;

     label22:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label23;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Idx: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(glyphIdx);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Delta: ");
        $i3 = cmapDeltas[i];
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Unicode: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(j);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" name: ");
        $r13 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r14 = $r13[glyphIdx];
        $r15 = virtualinvoke $r14.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String getName()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label23:
        goto label30;

     label24:
        $i2 = cmapDeltas[i];
        $i1 = j + $i2;
        glyphIdx = $i1 & 65535;
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = lengthof $r4;
        if glyphIdx >= $i2 goto label25;

        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[glyphIdx];
        $r5 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        $r9 = new java.lang.Integer;
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(j);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);
        goto label26;

     label25:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Glyph ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(glyphIdx);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" out of range: ");
        $r13 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i3 = lengthof $r13;
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label26:
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List unicodeMapping>;
        $r6 = new org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping;
        specialinvoke $r6.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: void <init>(org.apache.fop.fonts.truetype.TTFFile,int,int)>(this, glyphIdx, j);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = lengthof $r4;
        if glyphIdx >= $i2 goto label27;

        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[glyphIdx];
        $r5 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        $r9 = new java.lang.Integer;
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(j);
        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r9);
        goto label28;

     label27:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Glyph ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(glyphIdx);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" out of range: ");
        $r13 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i3 = lengthof $r13;
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label28:
        $r10 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiIndex>;
        $r9 = new java.lang.Integer;
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(j);
        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);
        v = (java.util.List) $r11;
        if v == null goto label30;

        e = interfaceinvoke v.<java.util.List: java.util.ListIterator listIterator()>();

     label29:
        $z0 = interfaceinvoke e.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label30;

        $r11 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>();
        aIdx = (java.lang.Integer) $r11;
        $r12 = this.<org.apache.fop.fonts.truetype.TTFFile: int[] ansiWidth>;
        $i2 = virtualinvoke aIdx.<java.lang.Integer: int intValue()>();
        $r13 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r14 = $r13[glyphIdx];
        $i3 = virtualinvoke $r14.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getWx()>();
        $r12[$i2] = $i3;
        goto label29;

     label30:
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = lengthof $r4;
        if glyphIdx >= $i2 goto label31;

        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[glyphIdx];
        $r5 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();
        if $i1 >= 2 goto label31;

        mtxPtr = mtxPtr + 1;

     label31:
        j = j + 1;
        goto label18;

     label32:
        i = i + 1;
        goto label16;

     label33:
        return 1;
    }

    private void printMaxMin()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int min, max, i, $i0, $i1;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r0, $r1;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r2;
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuffer $r4;
        java.lang.String $r5;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        min = 255;
        max = 0;
        i = 0;

     label0:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i0 = lengthof $r0;
        if i >= $i0 goto label3;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r1[i];
        $i1 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();
        if $i1 >= min goto label1;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r1[i];
        min = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();

     label1:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r1[i];
        $i1 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();
        if $i1 <= max goto label2;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r1[i];
        max = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();

     label2:
        i = i + 1;
        goto label0;

     label3:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Min: ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(min);
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r5);
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Max: ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(max);
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r5);
        return;
    }

    public void readFont(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $r0 = (java.lang.String) null;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String)>(in, $r0);
        return;
    }

    private void initAnsiWidths()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int i, $i0, $i1;
        java.lang.Integer ansi, uni, $r6;
        java.util.List v;
        int[] $r0, $r1;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r2;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r3;
        java.util.HashMap $r4;
        char[] $r5, $r7;
        char $c2;
        java.util.Map $r8;
        java.lang.Object $r9;
        java.util.ArrayList $r10;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = newarray (int)[256];
        this.<org.apache.fop.fonts.truetype.TTFFile: int[] ansiWidth> = $r0;
        i = 0;

     label0:
        if i >= 256 goto label1;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: int[] ansiWidth>;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r3 = $r2[0];
        $i0 = virtualinvoke $r3.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getWx()>();
        $r1[i] = $i0;
        i = i + 1;
        goto label0;

     label1:
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiIndex> = $r4;
        i = 32;

     label2:
        $r5 = <org.apache.xmlgraphics.fonts.Glyphs: char[] WINANSI_ENCODING>;
        $i1 = lengthof $r5;
        if i >= $i1 goto label4;

        $r6 = new java.lang.Integer;
        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(i);
        ansi = $r6;
        $r6 = new java.lang.Integer;
        $r7 = <org.apache.xmlgraphics.fonts.Glyphs: char[] WINANSI_ENCODING>;
        $c2 = $r7[i];
        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($c2);
        uni = $r6;
        $r8 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiIndex>;
        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(uni);
        v = (java.util.List) $r9;
        if v != null goto label3;

        $r10 = new java.util.ArrayList;
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();
        v = $r10;
        $r8 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiIndex>;
        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(uni, v);

     label3:
        interfaceinvoke v.<java.util.List: boolean add(java.lang.Object)>(ansi);
        i = i + 1;
        goto label2;

     label4:
        return;
    }

    public boolean readFont(org.apache.fop.fonts.truetype.FontFileReader, java.lang.String) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        java.lang.String name, $r3, $r6;
        boolean valid, $z0;
        java.lang.IllegalArgumentException $r0;
        java.io.IOException $r1;
        java.lang.StringBuffer $r2, $r5;
        org.apache.commons.logging.Log $r4;
        int $i0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        name := @parameter1: java.lang.String;
        $z0 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean checkTTC(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String)>(in, name);
        if $z0 != 0 goto label1;

        if name != null goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("For TrueType collection you must specify which font to select (-ttcname)");
        throw $r0;

     label0:
        $r1 = new java.io.IOException;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Name does not exist in the TrueType collection: ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(name);
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r3);
        throw $r1;

     label1:
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readDirTabs(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readFontHeader(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void getNumGlyphs(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Number of glyphs in font: ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int numberOfGlyphs>;
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

     label2:
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readHorizontalHeader(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readHorizontalMetrics(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void initAnsiWidths()>();
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readPostScript(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readOS2(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void determineAscDesc()>();
        $z0 = this.<org.apache.fop.fonts.truetype.TTFFile: boolean isCFF>;
        if $z0 != 0 goto label3;

        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readIndexToLocation(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readGlyf(org.apache.fop.fonts.truetype.FontFileReader)>(in);

     label3:
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readName(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean readPCLT(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        valid = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean readCMAP(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        if valid != 0 goto label4;

        return 0;

     label4:
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void createCMaps()>();
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readKerning(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void guessVerticalMetricsFromGlyphBBox()>();
        return 1;
    }

    private void createCMaps()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.util.ArrayList $r0;
        org.apache.fop.fonts.truetype.TTFCmapEntry tce, $r1;
        java.util.ListIterator e;
        org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping um, lastMapping;
        java.util.List $r2;
        java.lang.Object $r3;
        int $i0, $i1;
        boolean $z0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List cmaps> = $r0;
        $r1 = new org.apache.fop.fonts.truetype.TTFCmapEntry;
        specialinvoke $r1.<org.apache.fop.fonts.truetype.TTFCmapEntry: void <init>()>();
        tce = $r1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List unicodeMapping>;
        e = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator()>();
        $r3 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>();
        um = (org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping) $r3;
        lastMapping = um;
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getUnicodeIndex()>();
        virtualinvoke tce.<org.apache.fop.fonts.truetype.TTFCmapEntry: void setUnicodeStart(int)>($i0);
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getGlyphIndex()>();
        virtualinvoke tce.<org.apache.fop.fonts.truetype.TTFCmapEntry: void setGlyphStartIndex(int)>($i0);

     label0:
        $z0 = interfaceinvoke e.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>();
        um = (org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping) $r3;
        $i1 = virtualinvoke lastMapping.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getUnicodeIndex()>();
        $i1 = $i1 + 1;
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getUnicodeIndex()>();
        if $i1 != $i0 goto label1;

        $i1 = virtualinvoke lastMapping.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getGlyphIndex()>();
        $i1 = $i1 + 1;
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getGlyphIndex()>();
        if $i1 == $i0 goto label2;

     label1:
        $i0 = virtualinvoke lastMapping.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getUnicodeIndex()>();
        virtualinvoke tce.<org.apache.fop.fonts.truetype.TTFCmapEntry: void setUnicodeEnd(int)>($i0);
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List cmaps>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(tce);
        $r1 = new org.apache.fop.fonts.truetype.TTFCmapEntry;
        specialinvoke $r1.<org.apache.fop.fonts.truetype.TTFCmapEntry: void <init>()>();
        tce = $r1;
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getUnicodeIndex()>();
        virtualinvoke tce.<org.apache.fop.fonts.truetype.TTFCmapEntry: void setUnicodeStart(int)>($i0);
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getGlyphIndex()>();
        virtualinvoke tce.<org.apache.fop.fonts.truetype.TTFCmapEntry: void setGlyphStartIndex(int)>($i0);

     label2:
        lastMapping = um;
        goto label0;

     label3:
        $i0 = virtualinvoke um.<org.apache.fop.fonts.truetype.TTFFile$UnicodeMapping: int getUnicodeIndex()>();
        virtualinvoke tce.<org.apache.fop.fonts.truetype.TTFCmapEntry: void setUnicodeEnd(int)>($i0);
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List cmaps>;
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(tce);
        return;
    }

    public java.lang.String getPostScriptName()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.lang.String $r0;
        int $i0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName>;
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        if $i0 != 0 goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String getFullName()>();
        $r0 = staticinvoke <org.apache.fop.fonts.FontUtil: java.lang.String stripWhiteSpace(java.lang.String)>($r0);
        return $r0;

     label0:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName>;
        return $r0;
    }

    public java.util.Set getFamilyNames()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.util.Set $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Set familyNames>;
        return $r0;
    }

    public java.lang.String getSubFamilyName()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String subFamilyName>;
        return $r0;
    }

    public java.lang.String getFullName()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName>;
        return $r0;
    }

    public java.lang.String getCharSetName()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String encoding>;
        return $r0;
    }

    public int getCapHeight()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int $i0, $i1;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        return $i1;
    }

    public int getXHeight()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int $i0, $i1;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        return $i1;
    }

    public int getFlags()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        byte flags, $b1;
        long $l0;
        boolean $z0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        flags = 32;
        $l0 = this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle>;
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label0;

        flags = flags | 64;

     label0:
        $l0 = this.<org.apache.fop.fonts.truetype.TTFFile: long isFixedPitch>;
        $b1 = $l0 cmp 0L;
        if $b1 == 0 goto label1;

        flags = flags | 2;

     label1:
        $z0 = this.<org.apache.fop.fonts.truetype.TTFFile: boolean hasSerifs>;
        if $z0 == 0 goto label2;

        flags = flags | 1;

     label2:
        return flags;
    }

    public int getWeightClass()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int $i0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int usWeightClass>;
        return $i0;
    }

    public java.lang.String getStemV()
    {
        org.apache.fop.fonts.truetype.TTFFile this;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        return "0";
    }

    public java.lang.String getItalicAngle()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.lang.String ia;
        long $l0;
        int $i1;
        short $s2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $l0 = this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle>;
        $l0 = $l0 / 65536L;
        $i1 = (int) $l0;
        $s2 = (short) $i1;
        ia = staticinvoke <java.lang.Short: java.lang.String toString(short)>($s2);
        return ia;
    }

    public int[] getFontBBox()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int[] fbb;
        int $i0, $i1;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        fbb = newarray (int)[4];
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox1>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        fbb[0] = $i1;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox2>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        fbb[1] = $i1;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox3>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        fbb[2] = $i1;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox4>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        fbb[3] = $i1;
        return fbb;
    }

    public int getLowerCaseAscent()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int $i0, $i1;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int ascender>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        return $i1;
    }

    public int getLowerCaseDescent()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int $i0, $i1;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int descender>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        return $i1;
    }

    public short getLastChar()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        short $s0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $s0 = this.<org.apache.fop.fonts.truetype.TTFFile: short lastChar>;
        return $s0;
    }

    public short getFirstChar()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        short $s0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $s0 = this.<org.apache.fop.fonts.truetype.TTFFile: short firstChar>;
        return $s0;
    }

    public int[] getWidths()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int[] wx;
        int i, $i0, $i1, $i2, $i3;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r0, $r1;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i0 = lengthof $r0;
        wx = newarray (int)[$i0];
        i = 0;

     label0:
        $i1 = lengthof wx;
        if i >= $i1 goto label1;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r1[i];
        $i2 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getWx()>();
        $i3 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i2);
        wx[i] = $i3;
        i = i + 1;
        goto label0;

     label1:
        return wx;
    }

    public int getCharWidth(int)
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int idx, $i0, $i1;
        int[] $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        idx := @parameter0: int;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: int[] ansiWidth>;
        $i0 = $r0[idx];
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        return $i1;
    }

    public java.util.Map getKerning()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.util.Map $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map kerningTab>;
        return $r0;
    }

    public java.util.Map getAnsiKerning()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.util.Map $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiKerningTab>;
        return $r0;
    }

    public boolean isEmbeddable()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        boolean $z0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $z0 = this.<org.apache.fop.fonts.truetype.TTFFile: boolean isEmbeddable>;
        return $z0;
    }

    public boolean isCFF()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        boolean $z0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $z0 = this.<org.apache.fop.fonts.truetype.TTFFile: boolean isCFF>;
        return $z0;
    }

    protected void readDirTabs(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int sfntVersion, ntabs, i;
        org.apache.fop.fonts.truetype.TTFDirTabEntry[] pd;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, $r3;
        java.util.HashMap $r4;
        org.apache.fop.fonts.truetype.TTFDirTabEntry $r5, $r7;
        java.util.Map $r6, $r9;
        java.util.Set $r10;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        sfntVersion = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFLong()>();
        lookupswitch(sfntVersion)
        {
            case 65536: goto label0;
            case 1330926671: goto label1;
            case 1953658213: goto label2;
            case 1954115633: goto label3;
            default: goto label4;
        };

     label0:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("sfnt version: OpenType 1.0");
        goto label5;

     label1:
        this.<org.apache.fop.fonts.truetype.TTFFile: boolean isCFF> = 1;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("sfnt version: OpenType with CFF data");
        goto label5;

     label2:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("sfnt version: Apple TrueType");
        goto label5;

     label3:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("sfnt version: Apple Type 1 housed in sfnt wrapper");
        goto label5;

     label4:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown sfnt version: ");
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(sfntVersion);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label5:
        ntabs = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(6L);
        $r4 = new java.util.HashMap;
        specialinvoke $r4.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs> = $r4;
        pd = newarray (org.apache.fop.fonts.truetype.TTFDirTabEntry)[ntabs];
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reading ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(ntabs);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" dir tables");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        i = 0;

     label6:
        if i >= ntabs goto label7;

        $r5 = new org.apache.fop.fonts.truetype.TTFDirTabEntry;
        specialinvoke $r5.<org.apache.fop.fonts.truetype.TTFDirTabEntry: void <init>()>();
        pd[i] = $r5;
        $r6 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r7 = pd[i];
        $r3 = virtualinvoke $r7.<org.apache.fop.fonts.truetype.TTFDirTabEntry: java.lang.String read(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        $r5 = pd[i];
        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);
        i = i + 1;
        goto label6;

     label7:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dir tables: ");
        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        return;
    }

    protected void readFontHeader(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int $i0, $i1;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        short $s2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "head", 18L);
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int upem> = $i0;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("unit per em: ");
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(16L);
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox1> = $s2;
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox2> = $s2;
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox3> = $s2;
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox4> = $s2;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(6L);
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int locaFormat> = $s2;
        return;
    }

    protected void getNumGlyphs(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int $i0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "maxp", 4L);
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int numberOfGlyphs> = $i0;
        return;
    }

    protected void readHorizontalHeader(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        short $s0;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        int $i1, $i2, $i3;
        java.lang.String $r2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "hhea", 4L);
        $s0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender> = $s0;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hhea.Ascender: ");
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);
        $s0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender> = $s0;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("hhea.Descender: ");
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(26L);
        $i3 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx> = $i3;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Number of horizontal metrics: ");
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);
        return;
    }

    protected void readHorizontalMetrics(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int mtxSize, i, lastWidth, $i0, $i1;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r0, $r1;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r2, $r3;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "hmtx", 0L);
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int numberOfGlyphs>;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx>;
        mtxSize = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);
        $r0 = newarray (org.apache.fop.fonts.truetype.TTFMtxEntry)[mtxSize];
        this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab> = $r0;
        i = 0;

     label0:
        if i >= mtxSize goto label1;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = new org.apache.fop.fonts.truetype.TTFMtxEntry;
        specialinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: void <init>()>();
        $r1[i] = $r2;
        i = i + 1;
        goto label0;

     label1:
        i = 0;

     label2:
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx>;
        if i >= $i1 goto label3;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r3 = $r1[i];
        $i1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke $r3.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setWx(int)>($i1);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r3 = $r1[i];
        $i1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke $r3.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setLsb(int)>($i1);
        i = i + 1;
        goto label2;

     label3:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx>;
        if $i0 >= mtxSize goto label5;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx>;
        $i1 = $i1 - 1;
        $r3 = $r1[$i1];
        lastWidth = virtualinvoke $r3.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getWx()>();
        i = this.<org.apache.fop.fonts.truetype.TTFFile: int nhmtx>;

     label4:
        if i >= mtxSize goto label5;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r3 = $r1[i];
        virtualinvoke $r3.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setWx(int)>(lastWidth);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r3 = $r1[i];
        $i1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke $r3.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setLsb(int)>($i1);
        i = i + 1;
        goto label4;

     label5:
        return;
    }

    private final void readPostScript(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int i, numGlyphStrings, l, k, $i0, $i3, $i4, $i5;
        java.lang.String[] psGlyphsBuffer, $r4;
        boolean $z0;
        long $l1;
        short $s2;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, $r3;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r5, $r7;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r6, $r8;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "post", 0L);
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFLong()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int postFormat> = $i0;
        $l1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle> = $l1;
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int underlinePosition> = $s2;
        $s2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int underlineThickness> = $s2;
        $l1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: long isFixedPitch> = $l1;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(16L);
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PostScript format: 0x");
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int postFormat>;
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i3);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $i4 = this.<org.apache.fop.fonts.truetype.TTFFile: int postFormat>;
        lookupswitch($i4)
        {
            case 65536: goto label0;
            case 131072: goto label3;
            case 196608: goto label16;
            default: goto label17;
        };

     label0:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("PostScript format 1");
        i = 0;

     label1:
        $r4 = <org.apache.xmlgraphics.fonts.Glyphs: java.lang.String[] MAC_GLYPH_NAMES>;
        $i0 = lengthof $r4;
        if i >= $i0 goto label2;

        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $r4 = <org.apache.xmlgraphics.fonts.Glyphs: java.lang.String[] MAC_GLYPH_NAMES>;
        $r3 = $r4[i];
        virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setName(java.lang.String)>($r3);
        i = i + 1;
        goto label1;

     label2:
        goto label18;

     label3:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("PostScript format 2");
        numGlyphStrings = 0;
        l = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        i = 0;

     label4:
        if i >= l goto label7;

        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setIndex(int)>($i0);
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $i4 = virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();
        if $i4 <= 257 goto label5;

        numGlyphStrings = numGlyphStrings + 1;

     label5:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label6;

        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("PostScript index: ");
        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[i];
        $r2 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String getIndexAsString()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label6:
        i = i + 1;
        goto label4;

     label7:
        psGlyphsBuffer = newarray (java.lang.String)[numGlyphStrings];
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label8;

        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Reading ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(numGlyphStrings);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" glyphnames, that are not in the standard Macintosh set. Total number of glyphs=");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(l);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);

     label8:
        i = 0;

     label9:
        $i0 = lengthof psGlyphsBuffer;
        if i >= $i0 goto label10;

        $i5 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUByte()>();
        $r2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: java.lang.String readTTFString(int)>($i5);
        psGlyphsBuffer[i] = $r2;
        i = i + 1;
        goto label9;

     label10:
        i = 0;

     label11:
        if i >= l goto label15;

        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $i4 = virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();
        if $i4 >= 258 goto label12;

        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $r4 = <org.apache.xmlgraphics.fonts.Glyphs: java.lang.String[] MAC_GLYPH_NAMES>;
        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[i];
        $i3 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();
        $r3 = $r4[$i3];
        virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setName(java.lang.String)>($r3);
        goto label14;

     label12:
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $z0 = virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: boolean isIndexReserved()>();
        if $z0 != 0 goto label14;

        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $i4 = virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: int getIndex()>();
        k = $i4 - 258;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label13;

        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(k);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" i=");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" mtx=");
        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i3 = lengthof $r7;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ps=");
        $i3 = lengthof psGlyphsBuffer;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r3);

     label13:
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r6 = $r5[i];
        $r3 = psGlyphsBuffer[k];
        virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setName(java.lang.String)>($r3);

     label14:
        i = i + 1;
        goto label11;

     label15:
        goto label18;

     label16:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("PostScript format 3");
        goto label18;

     label17:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown PostScript format: ");
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int postFormat>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);

     label18:
        return;
    }

    private final void readOS2(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int fsType, $i0, $i2, $i3, v;
        short v, $s1;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("OS/2");
        if $r1 == null goto label2;

        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "OS/2", 4L);
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int usWeightClass> = $i0;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(2L);
        fsType = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        if fsType != 2 goto label0;

        this.<org.apache.fop.fonts.truetype.TTFFile: boolean isEmbeddable> = 0;
        goto label1;

     label0:
        this.<org.apache.fop.fonts.truetype.TTFFile: boolean isEmbeddable> = 1;

     label1:
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(22L);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(10L);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(16L);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(4L);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(6L);
        $s1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender> = $s1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sTypoAscender: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i3);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        $s1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender> = $s1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sTypoDescender: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender>;
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i3);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        v = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sTypoLineGap: ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(v);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        v = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("usWinAscent: ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(v);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(v);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        v = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("usWinDescent: ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(v);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(v);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(8L);
        $s1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2xHeight> = $s1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sxHeight: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2xHeight>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        $s1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int os2CapHeight> = $s1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("sCapHeight: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2CapHeight>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        goto label3;

     label2:
        this.<org.apache.fop.fonts.truetype.TTFFile: boolean isEmbeddable> = 1;

     label3:
        return;
    }

    protected final void readIndexToLocation(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int i, $i0;
        boolean $z0;
        java.io.IOException $r0;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r1;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r2;
        long $l1;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $z0 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "loca", 0L);
        if $z0 != 0 goto label0;

        $r0 = new java.io.IOException;
        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>("\'loca\' table not found, happens when the font file doesn\'t contain TrueType outlines (trying to read an OpenType CFF font maybe?)");
        throw $r0;

     label0:
        i = 0;

     label1:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int numberOfGlyphs>;
        if i >= $i0 goto label4;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r1[i];
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int locaFormat>;
        if $i0 != 1 goto label2;

        $l1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        goto label3;

     label2:
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i0 = $i0 << 1;
        $l1 = (long) $i0;

     label3:
        virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setOffset(long)>($l1);
        i = i + 1;
        goto label1;

     label4:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int locaFormat>;
        if $i0 != 1 goto label5;

        $l1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        goto label6;

     label5:
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i0 = $i0 << 1;
        $l1 = (long) $i0;

     label6:
        this.<org.apache.fop.fonts.truetype.TTFFile: long lastLoca> = $l1;
        return;
    }

    private final void readGlyf(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        org.apache.fop.fonts.truetype.TTFDirTabEntry dirTab, $r13;
        int i, bbox0, $i0, $i2, $i8;
        int[] bbox, $r9, $r12;
        long n, $l1, $l3, $l5, $l6;
        java.util.Map $r0;
        java.lang.Object $r1;
        java.io.IOException $r2;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r3, $r5, $r7, $r10;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r4, $r6, $r8, $r11;
        byte $b4;
        short $s7;
        org.apache.commons.logging.Log $r14;
        boolean $z0;
        java.lang.String $r15;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("glyf");
        dirTab = (org.apache.fop.fonts.truetype.TTFDirTabEntry) $r1;
        if dirTab != null goto label0;

        $r2 = new java.io.IOException;
        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("glyf table not found, cannot continue");
        throw $r2;

     label0:
        i = 0;

     label1:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int numberOfGlyphs>;
        $i0 = $i0 - 1;
        if i >= $i0 goto label4;

        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[i];
        $l1 = virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: long getOffset()>();
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = i + 1;
        $r6 = $r5[$i2];
        $l3 = virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: long getOffset()>();
        $b4 = $l1 cmp $l3;
        if $b4 == 0 goto label2;

        $l5 = virtualinvoke dirTab.<org.apache.fop.fonts.truetype.TTFDirTabEntry: long getOffset()>();
        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[i];
        $l6 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: long getOffset()>();
        $l5 = $l5 + $l6;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l5);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(2L);
        $r9 = newarray (int)[4];
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[0] = $s7;
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[1] = $s7;
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[2] = $s7;
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[3] = $s7;
        bbox = $r9;
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[i];
        virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setBoundingBox(int[])>(bbox);
        goto label3;

     label2:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[i];
        $r10 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r11 = $r10[0];
        $r12 = virtualinvoke $r11.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setBoundingBox(int[])>($r12);

     label3:
        i = i + 1;
        goto label1;

     label4:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("glyf");
        $r13 = (org.apache.fop.fonts.truetype.TTFDirTabEntry) $r1;
        n = virtualinvoke $r13.<org.apache.fop.fonts.truetype.TTFDirTabEntry: long getOffset()>();
        i = 0;

     label5:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int numberOfGlyphs>;
        if i >= $i0 goto label10;

        $i8 = i + 1;
        $r10 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i0 = lengthof $r10;
        if $i8 >= $i0 goto label6;

        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[i];
        $l1 = virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: long getOffset()>();
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = i + 1;
        $r6 = $r5[$i2];
        $l3 = virtualinvoke $r6.<org.apache.fop.fonts.truetype.TTFMtxEntry: long getOffset()>();
        $b4 = $l1 cmp $l3;
        if $b4 == 0 goto label7;

     label6:
        $r7 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r8 = $r7[i];
        $l6 = virtualinvoke $r8.<org.apache.fop.fonts.truetype.TTFMtxEntry: long getOffset()>();
        $l5 = n + $l6;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l5);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(2L);
        $r9 = newarray (int)[4];
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[0] = $s7;
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[1] = $s7;
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[2] = $s7;
        $s7 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        $r9[3] = $s7;
        bbox = $r9;
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[i];
        virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setBoundingBox(int[])>(bbox);
        goto label8;

     label7:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[0];
        $r9 = virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        bbox0 = $r9[0];
        $r9 = newarray (int)[4];
        $r9[0] = bbox0;
        $r9[1] = bbox0;
        $r9[2] = bbox0;
        $r9[3] = bbox0;
        bbox = $r9;
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r4 = $r3[i];
        virtualinvoke $r4.<org.apache.fop.fonts.truetype.TTFMtxEntry: void setBoundingBox(int[])>(bbox);

     label8:
        $r14 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label9;

        $r14 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r10 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r11 = $r10[i];
        $r15 = virtualinvoke $r11.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String toString(org.apache.fop.fonts.truetype.TTFFile)>(this);
        interfaceinvoke $r14.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r15);

     label9:
        i = i + 1;
        goto label5;

     label10:
        return;
    }

    private final void readName(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        int i, n, j, platformID, encodingID, languageID, k, l, $i0, $i2, $i3;
        java.lang.String txt, $r2, $r3;
        boolean $z0;
        long $l1;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.util.Set $r4;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "name", 2L);
        i = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int getCurrentPos()>();
        n = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i0 = $i0 + i;
        j = $i0 - 2;
        i = i + 4;

     label0:
        $i0 = n;
        n = n + -1;
        if $i0 <= 0 goto label10;

        $l1 = (long) i;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l1);
        platformID = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        encodingID = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        languageID = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        k = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        l = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        if platformID == 1 goto label1;

        if platformID != 3 goto label9;

     label1:
        if encodingID == 0 goto label2;

        if encodingID != 1 goto label9;

     label2:
        $i2 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i3 = j + $i2;
        $l1 = (long) $i3;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l1);
        txt = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: java.lang.String readTTFString(int)>(l);
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label3;

        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(platformID);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(encodingID);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(languageID);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(k);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(txt);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);

     label3:
        tableswitch(k)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label6;
            case 3: goto label9;
            case 4: goto label7;
            case 5: goto label9;
            case 6: goto label8;
            case 7: goto label9;
            case 8: goto label9;
            case 9: goto label9;
            case 10: goto label9;
            case 11: goto label9;
            case 12: goto label9;
            case 13: goto label9;
            case 14: goto label9;
            case 15: goto label9;
            case 16: goto label5;
            default: goto label9;
        };

     label4:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String notice>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 != 0 goto label9;

        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String notice> = txt;
        goto label9;

     label5:
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Set familyNames>;
        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(txt);
        goto label9;

     label6:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String subFamilyName>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 != 0 goto label9;

        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String subFamilyName> = txt;
        goto label9;

     label7:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 != 0 goto label9;

        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName> = txt;
        goto label9;

     label8:
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName>;
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();
        if $i0 != 0 goto label9;

        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName> = txt;
        goto label9;

     label9:
        i = i + 12;
        goto label0;

     label10:
        return;
    }

    private final boolean readPCLT(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        org.apache.fop.fonts.truetype.TTFDirTabEntry dirTab;
        int serifStyle, $i1, $i2, $i3;
        java.util.Map $r0;
        java.lang.Object $r1;
        long $l0;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("PCLT");
        dirTab = (org.apache.fop.fonts.truetype.TTFDirTabEntry) $r1;
        if dirTab == null goto label2;

        $l0 = virtualinvoke dirTab.<org.apache.fop.fonts.truetype.TTFDirTabEntry: long getOffset()>();
        $l0 = $l0 + 4L;
        $l0 = $l0 + 4L;
        $l0 = $l0 + 2L;
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l0);
        $i1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight> = $i1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xHeight from PCLT: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i3);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(4L);
        $i1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight> = $i1;
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("capHeight from PCLT: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i3);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(34L);
        serifStyle = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUByte()>();
        serifStyle = serifStyle >> 6;
        serifStyle = serifStyle & 3;
        if serifStyle != 1 goto label0;

        this.<org.apache.fop.fonts.truetype.TTFFile: boolean hasSerifs> = 0;
        goto label1;

     label0:
        this.<org.apache.fop.fonts.truetype.TTFFile: boolean hasSerifs> = 1;

     label1:
        return 1;

     label2:
        return 0;
    }

    private void determineAscDesc()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int hheaBoxHeight, os2BoxHeight, $i0, $i1, $i2, $i3;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender>;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender>;
        hheaBoxHeight = $i0 - $i1;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender>;
        os2BoxHeight = $i0 - $i1;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        if $i0 <= 0 goto label0;

        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        if os2BoxHeight > $i1 goto label0;

        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int ascender> = $i1;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int descender> = $i1;
        goto label3;

     label0:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender>;
        if $i0 <= 0 goto label1;

        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        if hheaBoxHeight > $i1 goto label1;

        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int ascender> = $i1;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int descender> = $i1;
        goto label3;

     label1:
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        if $i0 <= 0 goto label2;

        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Ascender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int ascender> = $i1;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2Descender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int descender> = $i1;
        goto label3;

     label2:
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaAscender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int ascender> = $i1;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int hheaDescender>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int descender> = $i1;

     label3:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Font box height: ");
        $i2 = this.<org.apache.fop.fonts.truetype.TTFFile: int ascender>;
        $i3 = this.<org.apache.fop.fonts.truetype.TTFFile: int descender>;
        $i2 = $i2 - $i3;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int ascender>;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int descender>;
        $i0 = $i0 - $i1;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        if $i0 <= $i1 goto label4;

        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Ascender and descender together are larger than the em box. This could lead to a wrong baseline placement in Apache FOP.");

     label4:
        return;
    }

    private void guessVerticalMetricsFromGlyphBBox()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int localCapHeight, localXHeight, localAscender, localDescender, i, $i0, $i1, $i2;
        java.util.List unicodeIndex;
        char ch;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r0, $r4;
        java.lang.String $r1, $r3;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r2, $r5;
        boolean $z0;
        int[] $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8;
        org.apache.commons.logging.Log $r9;
        java.lang.StringBuffer $r10;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        localCapHeight = 0;
        localXHeight = 0;
        localAscender = 0;
        localDescender = 0;
        i = 0;

     label0:
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i0 = lengthof $r0;
        if i >= $i0 goto label9;

        $r1 = "H";
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r0[i];
        $r3 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String getName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label1;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localCapHeight = $r6[3];
        goto label8;

     label1:
        $r1 = "x";
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r0[i];
        $r3 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String getName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label2;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localXHeight = $r6[3];
        goto label8;

     label2:
        $r1 = "d";
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r0[i];
        $r3 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String getName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label3;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localAscender = $r6[3];
        goto label8;

     label3:
        $r1 = "p";
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r2 = $r0[i];
        $r3 = virtualinvoke $r2.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.lang.String getName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label4;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localDescender = $r6[1];
        goto label8;

     label4:
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        unicodeIndex = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        $i1 = interfaceinvoke unicodeIndex.<java.util.List: int size()>();
        if $i1 <= 0 goto label8;

        $r7 = interfaceinvoke unicodeIndex.<java.util.List: java.lang.Object get(int)>(0);
        $r8 = (java.lang.Integer) $r7;
        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
        ch = (char) $i1;
        if ch != 72 goto label5;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localCapHeight = $r6[3];
        goto label8;

     label5:
        if ch != 120 goto label6;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localXHeight = $r6[3];
        goto label8;

     label6:
        if ch != 100 goto label7;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localAscender = $r6[3];
        goto label8;

     label7:
        if ch != 112 goto label8;

        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $r5 = $r4[i];
        $r6 = virtualinvoke $r5.<org.apache.fop.fonts.truetype.TTFMtxEntry: int[] getBoundingBox()>();
        localDescender = $r6[1];

     label8:
        i = i + 1;
        goto label0;

     label9:
        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ascender from glyph \'d\': ");
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(localAscender);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(localAscender);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Descender from glyph \'p\': ");
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(localDescender);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(localDescender);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int ascender>;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int descender>;
        $i1 = $i1 - $i0;
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int upem>;
        if $i1 <= $i0 goto label10;

        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Replacing specified ascender/descender with derived values to get values which fit in the em box.");
        this.<org.apache.fop.fonts.truetype.TTFFile: int ascender> = localAscender;
        this.<org.apache.fop.fonts.truetype.TTFFile: int descender> = localDescender;

     label10:
        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xHeight from glyph \'x\': ");
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(localXHeight);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(localXHeight);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CapHeight from glyph \'H\': ");
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(localCapHeight);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i2 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(localCapHeight);
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);
        $r3 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        if $i1 != 0 goto label12;

        this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight> = localCapHeight;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        if $i1 != 0 goto label11;

        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2CapHeight>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight> = $i0;

     label11:
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        if $i1 != 0 goto label12;

        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("capHeight value could not be determined. The font may not work as expected.");

     label12:
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        if $i1 != 0 goto label14;

        this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight> = localXHeight;
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        if $i1 != 0 goto label13;

        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int os2xHeight>;
        this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight> = $i0;

     label13:
        $i1 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        if $i1 != 0 goto label14;

        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("xHeight value could not be determined. The font may not work as expected.");

     label14:
        return;
    }

    private final void readKerning(org.apache.fop.fonts.truetype.FontFileReader) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        java.util.HashMap $r0, akpx, $r6;
        org.apache.fop.fonts.truetype.TTFDirTabEntry dirTab;
        int n, k, i, j, u, $i0, $i1, $i2;
        short kpx;
        java.lang.Integer iObj, u2, unicodeKey1, cidKey1, unicodeKey2, cidKey2, kern, unicodeKey, $r7, $r12;
        java.util.Map adjTab, ckpx, $r1;
        java.util.Iterator ae, aee;
        java.util.ListIterator uniMap;
        java.lang.Integer[] ansiKeys;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuffer $r4;
        java.lang.String $r5;
        java.util.Set $r8;
        org.apache.fop.fonts.truetype.TTFMtxEntry[] $r9;
        org.apache.fop.fonts.truetype.TTFMtxEntry $r10;
        java.util.List $r11;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map kerningTab> = $r0;
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiKerningTab> = $r0;
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map dirTabs>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("kern");
        dirTab = (org.apache.fop.fonts.truetype.TTFDirTabEntry) $r2;
        if dirTab == null goto label22;

        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: boolean seekTab(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String,long)>(in, "kern", 2L);
        n = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();

     label0:
        if n <= 0 goto label10;

        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(4L);
        k = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        $i0 = k & 1;
        if $i0 == 0 goto label1;

        $i0 = k & 2;
        if $i0 != 0 goto label1;

        $i0 = k & 4;
        if $i0 == 0 goto label2;

     label1:
        return;

     label2:
        $i0 = k >> 8;
        if $i0 == 0 goto label3;

        goto label9;

     label3:
        k = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(6L);

     label4:
        $i0 = k;
        k = k + -1;
        if $i0 <= 0 goto label9;

        i = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        j = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: int readTTFUShort()>();
        kpx = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: short readTTFShort()>();
        if kpx == 0 goto label8;

        iObj = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.Integer glyphToUnicode(int)>(i);
        u2 = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.Integer glyphToUnicode(int)>(j);
        if iObj != null goto label5;

        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ignoring kerning pair because no Unicode index was found for the first glyph ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);
        goto label8;

     label5:
        if u2 != null goto label6;

        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ignoring kerning pair because Unicode index was found for the second glyph ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);
        goto label8;

     label6:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map kerningTab>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(iObj);
        adjTab = (java.util.Map) $r2;
        if adjTab != null goto label7;

        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        adjTab = $r6;

     label7:
        $r7 = new java.lang.Integer;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>(kpx);
        specialinvoke $r7.<java.lang.Integer: void <init>(int)>($i1);
        interfaceinvoke adjTab.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(u2, $r7);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map kerningTab>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(iObj, adjTab);

     label8:
        goto label4;

     label9:
        n = n + -1;
        goto label0;

     label10:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map kerningTab>;
        $r8 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();
        ae = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke ae.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label22;

        $r2 = interfaceinvoke ae.<java.util.Iterator: java.lang.Object next()>();
        unicodeKey1 = (java.lang.Integer) $r2;
        $i2 = virtualinvoke unicodeKey1.<java.lang.Integer: int intValue()>();
        cidKey1 = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.Integer unicodeToGlyph(int)>($i2);
        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        akpx = $r6;
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map kerningTab>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(unicodeKey1);
        ckpx = (java.util.Map) $r2;
        $r8 = interfaceinvoke ckpx.<java.util.Map: java.util.Set keySet()>();
        aee = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z0 = interfaceinvoke aee.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label17;

        $r2 = interfaceinvoke aee.<java.util.Iterator: java.lang.Object next()>();
        unicodeKey2 = (java.lang.Integer) $r2;
        $i2 = virtualinvoke unicodeKey2.<java.lang.Integer: int intValue()>();
        cidKey2 = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.Integer unicodeToGlyph(int)>($i2);
        $r2 = interfaceinvoke ckpx.<java.util.Map: java.lang.Object get(java.lang.Object)>(unicodeKey2);
        kern = (java.lang.Integer) $r2;
        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = virtualinvoke cidKey2.<java.lang.Integer: int intValue()>();
        $r10 = $r9[$i2];
        $r11 = virtualinvoke $r10.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        uniMap = interfaceinvoke $r11.<java.util.List: java.util.ListIterator listIterator()>();

     label13:
        $z0 = interfaceinvoke uniMap.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label16;

        $r2 = interfaceinvoke uniMap.<java.util.Iterator: java.lang.Object next()>();
        unicodeKey = (java.lang.Integer) $r2;
        $i2 = virtualinvoke unicodeKey.<java.lang.Integer: int intValue()>();
        ansiKeys = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.Integer[] unicodeToWinAnsi(int)>($i2);
        u = 0;

     label14:
        $i2 = lengthof ansiKeys;
        if u >= $i2 goto label15;

        $r12 = ansiKeys[u];
        interfaceinvoke akpx.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, kern);
        u = u + 1;
        goto label14;

     label15:
        goto label13;

     label16:
        goto label12;

     label17:
        $i0 = interfaceinvoke akpx.<java.util.Map: int size()>();
        if $i0 <= 0 goto label21;

        $r9 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.fop.fonts.truetype.TTFMtxEntry[] mtxTab>;
        $i2 = virtualinvoke cidKey1.<java.lang.Integer: int intValue()>();
        $r10 = $r9[$i2];
        $r11 = virtualinvoke $r10.<org.apache.fop.fonts.truetype.TTFMtxEntry: java.util.List getUnicodeIndex()>();
        uniMap = interfaceinvoke $r11.<java.util.List: java.util.ListIterator listIterator()>();

     label18:
        $z0 = interfaceinvoke uniMap.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label21;

        $r2 = interfaceinvoke uniMap.<java.util.Iterator: java.lang.Object next()>();
        unicodeKey = (java.lang.Integer) $r2;
        $i2 = virtualinvoke unicodeKey.<java.lang.Integer: int intValue()>();
        ansiKeys = specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.Integer[] unicodeToWinAnsi(int)>($i2);
        u = 0;

     label19:
        $i2 = lengthof ansiKeys;
        if u >= $i2 goto label20;

        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map ansiKerningTab>;
        $r12 = ansiKeys[u];
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, akpx);
        u = u + 1;
        goto label19;

     label20:
        goto label18;

     label21:
        goto label11;

     label22:
        return;
    }

    public java.util.List getCMaps()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.util.List $r0;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.List cmaps>;
        return $r0;
    }

    protected final boolean checkTTC(org.apache.fop.fonts.truetype.FontFileReader, java.lang.String) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        org.apache.fop.fonts.truetype.FontFileReader in;
        java.lang.String name, tag, $r0, $r3, $r4;
        int numDirectories, i;
        long[] dirOffsets;
        boolean found, $z0;
        long dirTabOffset, $l0, $l1, $l2;
        org.apache.commons.logging.Log $r1;
        java.lang.StringBuffer $r2;
        java.util.Set $r5;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        in := @parameter0: org.apache.fop.fonts.truetype.FontFileReader;
        name := @parameter1: java.lang.String;
        tag = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: java.lang.String readTTFString(int)>(4);
        $r0 = "ttcf";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(tag);
        if $z0 == 0 goto label6;

        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void skip(long)>(4L);
        $l0 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        numDirectories = (int) $l0;
        dirOffsets = newarray (long)[numDirectories];
        i = 0;

     label0:
        if i >= numDirectories goto label1;

        $l1 = virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: long readTTFULong()>();
        dirOffsets[i] = $l1;
        i = i + 1;
        goto label0;

     label1:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("This is a TrueType collection file with ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(numDirectories);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" fonts");
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r3);
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Containing the following fonts: ");
        found = 0;
        dirTabOffset = 0L;
        i = 0;

     label2:
        if i >= numDirectories goto label5;

        $l2 = dirOffsets[i];
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>($l2);
        virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readDirTabs(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        specialinvoke this.<org.apache.fop.fonts.truetype.TTFFile: void readName(org.apache.fop.fonts.truetype.FontFileReader)>(in);
        $r0 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName>;
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(name);
        if $z0 == 0 goto label3;

        found = 1;
        dirTabOffset = dirOffsets[i];
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName>;
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <-- selected");
        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r3);
        goto label4;

     label3:
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: org.apache.commons.logging.Log log>;
        $r3 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName>;
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r3);

     label4:
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String notice> = "";
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName> = "";
        $r5 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Set familyNames>;
        interfaceinvoke $r5.<java.util.Set: void clear()>();
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName> = "";
        this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String subFamilyName> = "";
        i = i + 1;
        goto label2;

     label5:
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>(dirTabOffset);
        return found;

     label6:
        virtualinvoke in.<org.apache.fop.fonts.truetype.FontFileReader: void seekSet(long)>(0L);
        return 1;
    }

    private java.lang.Integer[] unicodeToWinAnsi(int)
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int unicode, i, $i0;
        java.util.ArrayList $r0, 'ret';
        char[] $r1;
        char $c1;
        java.lang.Integer $r2;
        java.lang.Integer[] $r3, $r5;
        java.lang.Object[] $r4;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        unicode := @parameter0: int;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        'ret' = $r0;
        i = 32;

     label0:
        $r1 = <org.apache.xmlgraphics.fonts.Glyphs: char[] WINANSI_ENCODING>;
        $i0 = lengthof $r1;
        if i >= $i0 goto label2;

        $r1 = <org.apache.xmlgraphics.fonts.Glyphs: char[] WINANSI_ENCODING>;
        $c1 = $r1[i];
        if unicode != $c1 goto label1;

        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i);
        interfaceinvoke 'ret'.<java.util.List: boolean add(java.lang.Object)>($r2);

     label1:
        i = i + 1;
        goto label0;

     label2:
        $r3 = newarray (java.lang.Integer)[0];
        $r4 = interfaceinvoke 'ret'.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);
        $r5 = (java.lang.Integer[]) $r4;
        $r5 = (java.lang.Integer[]) $r5;
        return $r5;
    }

    public void printStuff()
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        java.io.PrintStream $r0;
        java.lang.StringBuffer $r1;
        int italic, $i0, $i1;
        java.lang.String $r2, $r3;
        java.util.Set $r4;
        long $l2, $l3;
        short $s4;
        byte $b5;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Font name:   ");
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String postScriptName>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Full name:   ");
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String fullName>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Family name: ");
        $r4 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Set familyNames>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Subfamily name: ");
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String subFamilyName>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Notice:      ");
        $r2 = this.<org.apache.fop.fonts.truetype.TTFFile: java.lang.String notice>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xHeight:     ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int xHeight>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("capheight:   ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int capHeight>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $l2 = this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle>;
        $l2 = $l2 >> 16;
        italic = (int) $l2;
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Italic:      ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(italic);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ItalicAngle: ");
        $l3 = this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle>;
        $l3 = $l3 / 65536L;
        $i1 = (int) $l3;
        $s4 = (short) $i1;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($s4);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r3);
        $l2 = this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle>;
        $l2 = $l2 % 65536L;
        $b5 = $l2 cmp 0L;
        if $b5 <= 0 goto label0;

        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");
        $l3 = this.<org.apache.fop.fonts.truetype.TTFFile: long italicAngle>;
        $l3 = $l3 % 65536L;
        $l3 = $l3 * 1000L;
        $i1 = (int) $l3;
        $s4 = (short) $i1;
        $i1 = $s4 / 65536;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>($r3);

     label0:
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println()>();
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ascender:    ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int ascender>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Descender:   ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int descender>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("FontBBox:    [");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox1>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox2>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox3>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i0 = this.<org.apache.fop.fonts.truetype.TTFFile: int fontBBox4>;
        $i1 = virtualinvoke this.<org.apache.fop.fonts.truetype.TTFFile: int convertTTFUnit2PDFUnit(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r3);
        return;
    }

    private java.lang.Integer glyphToUnicode(int) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int glyphIndex;
        java.lang.Integer $r0, $r3;
        java.util.Map $r1;
        java.lang.Object $r2;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        glyphIndex := @parameter0: int;
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map glyphToUnicodeMap>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(glyphIndex);
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);
        $r3 = (java.lang.Integer) $r2;
        return $r3;
    }

    private java.lang.Integer unicodeToGlyph(int) throws java.io.IOException
    {
        org.apache.fop.fonts.truetype.TTFFile this;
        int unicodeIndex;
        java.lang.Integer $r0, result;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.io.IOException $r3;
        java.lang.StringBuffer $r4;
        java.lang.String $r5;

        this := @this: org.apache.fop.fonts.truetype.TTFFile;
        unicodeIndex := @parameter0: int;
        $r1 = this.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map unicodeToGlyphMap>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(unicodeIndex);
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);
        result = (java.lang.Integer) $r2;
        if result != null goto label0;

        $r3 = new java.io.IOException;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Glyph index not found for unicode value ");
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(unicodeIndex);
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r5);
        throw $r3;

     label0:
        return result;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        org.apache.fop.fonts.truetype.TTFFile $r0, ttfFile;
        org.apache.fop.fonts.truetype.FontFileReader reader, $r1;
        java.lang.String name, $r2, $r6;
        java.io.IOException ioe, $r3;
        int $i0;
        java.io.PrintStream $r4, $r7;
        java.lang.StringBuffer $r5;

        args := @parameter0: java.lang.String[];

     label0:
        $r0 = new org.apache.fop.fonts.truetype.TTFFile;
        specialinvoke $r0.<org.apache.fop.fonts.truetype.TTFFile: void <init>()>();
        ttfFile = $r0;
        $r1 = new org.apache.fop.fonts.truetype.FontFileReader;
        $r2 = args[0];
        specialinvoke $r1.<org.apache.fop.fonts.truetype.FontFileReader: void <init>(java.lang.String)>($r2);
        reader = $r1;
        name = null;
        $i0 = lengthof args;
        if $i0 < 2 goto label1;

        name = args[1];

     label1:
        virtualinvoke ttfFile.<org.apache.fop.fonts.truetype.TTFFile: boolean readFont(org.apache.fop.fonts.truetype.FontFileReader,java.lang.String)>(reader, name);
        virtualinvoke ttfFile.<org.apache.fop.fonts.truetype.TTFFile: void printStuff()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <java.lang.System: java.io.PrintStream err>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Problem reading font: ");
        $r2 = virtualinvoke ioe.<java.io.IOException: java.lang.String toString()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r6);
        $r7 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke ioe.<java.io.IOException: void printStackTrace(java.io.PrintStream)>($r7);

     label4:
        return;

        catch java.io.IOException from label0 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static java.util.Map access$000(org.apache.fop.fonts.truetype.TTFFile)
    {
        org.apache.fop.fonts.truetype.TTFFile x0;
        java.util.Map $r0;

        x0 := @parameter0: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = x0.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map glyphToUnicodeMap>;
        return $r0;
    }

    static java.util.Map access$100(org.apache.fop.fonts.truetype.TTFFile)
    {
        org.apache.fop.fonts.truetype.TTFFile x0;
        java.util.Map $r0;

        x0 := @parameter0: org.apache.fop.fonts.truetype.TTFFile;
        $r0 = x0.<org.apache.fop.fonts.truetype.TTFFile: java.util.Map unicodeToGlyphMap>;
        return $r0;
    }
}

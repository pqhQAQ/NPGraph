public class org.apache.fop.layoutmgr.LayoutManagerMapping$InlineContainerLayoutManagerMaker extends org.apache.fop.layoutmgr.LayoutManagerMapping$Maker
{

    public void <init>()
    {
        org.apache.fop.layoutmgr.LayoutManagerMapping$InlineContainerLayoutManagerMaker this;

        this := @this: org.apache.fop.layoutmgr.LayoutManagerMapping$InlineContainerLayoutManagerMaker;
        specialinvoke this.<org.apache.fop.layoutmgr.LayoutManagerMapping$Maker: void <init>()>();
        return;
    }

    public void make(org.apache.fop.fo.FONode, java.util.List)
    {
        org.apache.fop.layoutmgr.LayoutManagerMapping$InlineContainerLayoutManagerMaker this;
        org.apache.fop.fo.FONode node;
        java.util.List lms;
        java.util.ArrayList $r0, childList;
        org.apache.fop.layoutmgr.inline.ICLayoutManager $r1;
        org.apache.fop.fo.flow.InlineContainer $r2;

        this := @this: org.apache.fop.layoutmgr.LayoutManagerMapping$InlineContainerLayoutManagerMaker;
        node := @parameter0: org.apache.fop.fo.FONode;
        lms := @parameter1: java.util.List;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        childList = $r0;
        specialinvoke this.<org.apache.fop.layoutmgr.LayoutManagerMapping$Maker: void make(org.apache.fop.fo.FONode,java.util.List)>(node, childList);
        $r1 = new org.apache.fop.layoutmgr.inline.ICLayoutManager;
        $r2 = (org.apache.fop.fo.flow.InlineContainer) node;
        specialinvoke $r1.<org.apache.fop.layoutmgr.inline.ICLayoutManager: void <init>(org.apache.fop.fo.flow.InlineContainer,java.util.List)>($r2, childList);
        interfaceinvoke lms.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }
}

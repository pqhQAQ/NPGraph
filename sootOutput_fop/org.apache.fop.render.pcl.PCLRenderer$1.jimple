class org.apache.fop.render.pcl.PCLRenderer$1 extends java.lang.Object implements org.apache.xmlgraphics.java2d.Graphics2DImagePainter
{
    private final org.apache.fop.render.java2d.FontMetricsMapper val$mapper;
    private final org.apache.fop.fonts.Font val$font;
    private final int val$baseline;
    private final int val$additionalBPD;
    private final java.awt.Color val$col;
    private final org.apache.fop.area.inline.TextArea val$text;
    private final int val$fontsize;
    private final java.awt.Rectangle val$paintRect;
    private final org.apache.fop.render.pcl.PCLRenderer this$0;

    void <init>(org.apache.fop.render.pcl.PCLRenderer, org.apache.fop.render.java2d.FontMetricsMapper, org.apache.fop.fonts.Font, int, int, java.awt.Color, org.apache.fop.area.inline.TextArea, int, java.awt.Rectangle)
    {
        org.apache.fop.render.pcl.PCLRenderer$1 this;
        org.apache.fop.render.pcl.PCLRenderer this$0;
        org.apache.fop.render.java2d.FontMetricsMapper l2;
        org.apache.fop.fonts.Font l3;
        int l4, l5, l8;
        java.awt.Color l6;
        org.apache.fop.area.inline.TextArea l7;
        java.awt.Rectangle l9;

        this := @this: org.apache.fop.render.pcl.PCLRenderer$1;
        this$0 := @parameter0: org.apache.fop.render.pcl.PCLRenderer;
        l2 := @parameter1: org.apache.fop.render.java2d.FontMetricsMapper;
        l3 := @parameter2: org.apache.fop.fonts.Font;
        l4 := @parameter3: int;
        l5 := @parameter4: int;
        l6 := @parameter5: java.awt.Color;
        l7 := @parameter6: org.apache.fop.area.inline.TextArea;
        l8 := @parameter7: int;
        l9 := @parameter8: java.awt.Rectangle;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.render.pcl.PCLRenderer this$0> = this$0;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.render.java2d.FontMetricsMapper val$mapper> = l2;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.fonts.Font val$font> = l3;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: int val$baseline> = l4;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: int val$additionalBPD> = l5;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: java.awt.Color val$col> = l6;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.area.inline.TextArea val$text> = l7;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: int val$fontsize> = l8;
        this.<org.apache.fop.render.pcl.PCLRenderer$1: java.awt.Rectangle val$paintRect> = l9;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void paint(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.apache.fop.render.pcl.PCLRenderer$1 this;
        java.awt.Graphics2D g2d;
        java.awt.geom.Rectangle2D area;
        org.apache.fop.render.java2d.FontMetricsMapper $r0;
        org.apache.fop.fonts.Font $r1;
        int $i0, $i1;
        java.awt.Font $r2;
        java.awt.Color $r3;
        org.apache.fop.area.inline.TextArea $r4, $r5;

        this := @this: org.apache.fop.render.pcl.PCLRenderer$1;
        g2d := @parameter0: java.awt.Graphics2D;
        area := @parameter1: java.awt.geom.Rectangle2D;
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.render.java2d.FontMetricsMapper val$mapper>;
        $r1 = this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.fonts.Font val$font>;
        $i0 = virtualinvoke $r1.<org.apache.fop.fonts.Font: int getFontSize()>();
        $r2 = interfaceinvoke $r0.<org.apache.fop.render.java2d.FontMetricsMapper: java.awt.Font getFont(int)>($i0);
        virtualinvoke g2d.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r2);
        $i0 = this.<org.apache.fop.render.pcl.PCLRenderer$1: int val$baseline>;
        $i1 = this.<org.apache.fop.render.pcl.PCLRenderer$1: int val$additionalBPD>;
        $i0 = $i0 + $i1;
        virtualinvoke g2d.<java.awt.Graphics2D: void translate(int,int)>(0, $i0);
        virtualinvoke g2d.<java.awt.Graphics2D: void scale(double,double)>(1000.0, 1000.0);
        $r3 = this.<org.apache.fop.render.pcl.PCLRenderer$1: java.awt.Color val$col>;
        virtualinvoke g2d.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r3);
        $r4 = this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.area.inline.TextArea val$text>;
        $r1 = this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.fonts.Font val$font>;
        staticinvoke <org.apache.fop.render.java2d.Java2DRenderer: void renderText(org.apache.fop.area.inline.TextArea,java.awt.Graphics2D,org.apache.fop.fonts.Font)>($r4, g2d, $r1);
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.render.java2d.FontMetricsMapper val$mapper>;
        $i0 = this.<org.apache.fop.render.pcl.PCLRenderer$1: int val$fontsize>;
        $r5 = this.<org.apache.fop.render.pcl.PCLRenderer$1: org.apache.fop.area.inline.TextArea val$text>;
        staticinvoke <org.apache.fop.render.pcl.PCLRenderer: void access$000(java.awt.Graphics2D,org.apache.fop.fonts.FontMetrics,int,org.apache.fop.area.inline.InlineArea,int,int)>(g2d, $r0, $i0, $r5, 0, 0);
        return;
    }

    public java.awt.Dimension getImageSize()
    {
        org.apache.fop.render.pcl.PCLRenderer$1 this;
        java.awt.Rectangle $r0;
        java.awt.Dimension $r1;

        this := @this: org.apache.fop.render.pcl.PCLRenderer$1;
        $r0 = this.<org.apache.fop.render.pcl.PCLRenderer$1: java.awt.Rectangle val$paintRect>;
        $r1 = virtualinvoke $r0.<java.awt.Rectangle: java.awt.Dimension getSize()>();
        return $r1;
    }
}

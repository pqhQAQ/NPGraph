public class org.apache.fop.pdf.PDFICCBasedColorSpace extends org.apache.fop.pdf.PDFObject implements org.apache.fop.pdf.PDFColorSpace
{
    private org.apache.fop.pdf.PDFICCStream iccStream;
    private java.lang.String explicitName;
    static java.lang.Class class$org$apache$fop$pdf$PDFDocument;

    public void <init>(java.lang.String, org.apache.fop.pdf.PDFICCStream)
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        java.lang.String explicitName;
        org.apache.fop.pdf.PDFICCStream iccStream;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        explicitName := @parameter0: java.lang.String;
        iccStream := @parameter1: org.apache.fop.pdf.PDFICCStream;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        this.<org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.String explicitName> = explicitName;
        this.<org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream iccStream> = iccStream;
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFICCStream)
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        org.apache.fop.pdf.PDFICCStream iccStream;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        iccStream := @parameter0: org.apache.fop.pdf.PDFICCStream;
        specialinvoke this.<org.apache.fop.pdf.PDFICCBasedColorSpace: void <init>(java.lang.String,org.apache.fop.pdf.PDFICCStream)>(null, iccStream);
        return;
    }

    public org.apache.fop.pdf.PDFICCStream getICCStream()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        org.apache.fop.pdf.PDFICCStream $r0;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $r0 = this.<org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream iccStream>;
        return $r0;
    }

    public int getNumComponents()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        org.apache.fop.pdf.PDFICCStream $r0;
        java.awt.color.ICC_Profile $r1;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $r0 = this.<org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream iccStream>;
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFICCStream: java.awt.color.ICC_Profile getICCProfile()>();
        $i0 = virtualinvoke $r1.<java.awt.color.ICC_Profile: int getNumComponents()>();
        return $i0;
    }

    public java.lang.String getName()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        java.lang.String $r0;
        java.lang.StringBuffer $r1;
        org.apache.fop.pdf.PDFICCStream $r2;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $r0 = this.<org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.String explicitName>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.String explicitName>;
        return $r0;

     label0:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ICC");
        $r2 = this.<org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream iccStream>;
        $i0 = virtualinvoke $r2.<org.apache.fop.pdf.PDFICCStream: int getObjectNumber()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r0;
    }

    public boolean isDeviceColorSpace()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        return 0;
    }

    public boolean isRGBColorSpace()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFICCBasedColorSpace: int getNumComponents()>();
        if $i0 != 3 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isCMYKColorSpace()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFICCBasedColorSpace: int getNumComponents()>();
        if $i0 != 4 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isGrayColorSpace()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFICCBasedColorSpace: int getNumComponents()>();
        if $i0 != 1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    protected java.lang.String toPDFString()
    {
        org.apache.fop.pdf.PDFICCBasedColorSpace this;
        java.lang.StringBuffer $r0, sb;
        java.lang.String $r1, $r3;
        org.apache.fop.pdf.PDFICCStream $r2;

        this := @this: org.apache.fop.pdf.PDFICCBasedColorSpace;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(64);
        sb = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.String getObjectID()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/ICCBased ");
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream getICCStream()>();
        $r1 = virtualinvoke $r2.<org.apache.fop.pdf.PDFICCStream: java.lang.String referencePDF()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nendobj\n");
        $r3 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }

    public static org.apache.fop.pdf.PDFICCBasedColorSpace setupsRGBAsDefaultRGBColorSpace(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFDocument pdfDoc;
        org.apache.fop.pdf.PDFICCStream sRGBProfile;
        org.apache.fop.pdf.PDFFactory $r0;
        org.apache.fop.pdf.PDFICCBasedColorSpace $r1;

        pdfDoc := @parameter0: org.apache.fop.pdf.PDFDocument;
        sRGBProfile = staticinvoke <org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)>(pdfDoc);
        $r0 = virtualinvoke pdfDoc.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFICCBasedColorSpace makeICCBasedColorSpace(org.apache.fop.pdf.PDFResourceContext,java.lang.String,org.apache.fop.pdf.PDFICCStream)>(null, "DefaultRGB", sRGBProfile);
        return $r1;
    }

    public static org.apache.fop.pdf.PDFICCBasedColorSpace setupsRGBColorSpace(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFDocument pdfDoc;
        org.apache.fop.pdf.PDFICCStream sRGBProfile;
        org.apache.fop.pdf.PDFFactory $r0;
        org.apache.fop.pdf.PDFICCBasedColorSpace $r1;

        pdfDoc := @parameter0: org.apache.fop.pdf.PDFDocument;
        sRGBProfile = staticinvoke <org.apache.fop.pdf.PDFICCBasedColorSpace: org.apache.fop.pdf.PDFICCStream setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)>(pdfDoc);
        $r0 = virtualinvoke pdfDoc.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFICCBasedColorSpace makeICCBasedColorSpace(org.apache.fop.pdf.PDFResourceContext,java.lang.String,org.apache.fop.pdf.PDFICCStream)>(null, null, sRGBProfile);
        return $r1;
    }

    public static org.apache.fop.pdf.PDFICCStream setupsRGBColorProfile(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFDocument pdfDoc;
        org.apache.fop.pdf.PDFICCStream sRGBProfile;
        java.io.InputStream in;
        java.awt.color.ICC_Profile profile;
        java.io.IOException ioe, $r3;
        java.lang.StringBuffer $r0;
        java.lang.Throwable l5, $r7;
        org.apache.fop.pdf.PDFFactory $r1;
        java.lang.Class $r2;
        java.lang.RuntimeException $r4;
        java.lang.String $r5, $r6;

        pdfDoc := @parameter0: org.apache.fop.pdf.PDFDocument;
        $r1 = virtualinvoke pdfDoc.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFFactory getFactory()>();
        sRGBProfile = virtualinvoke $r1.<org.apache.fop.pdf.PDFFactory: org.apache.fop.pdf.PDFICCStream makePDFICCStream()>();
        $r2 = <org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.Class class$org$apache$fop$pdf$PDFDocument>;
        if $r2 != null goto label0;

        $r2 = staticinvoke <org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.Class class$(java.lang.String)>("org.apache.fop.pdf.PDFDocument");
        <org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.Class class$org$apache$fop$pdf$PDFDocument> = $r2;
        goto label1;

     label0:
        $r2 = <org.apache.fop.pdf.PDFICCBasedColorSpace: java.lang.Class class$org$apache$fop$pdf$PDFDocument>;

     label1:
        in = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("sRGB Color Space Profile.icm");
        if in == null goto label9;

     label2:
        profile = staticinvoke <java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.io.InputStream)>(in);

     label3:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(in);
        goto label8;

     label4:
        $r3 := @caughtexception;

     label5:
        ioe = $r3;
        $r4 = new java.lang.RuntimeException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected IOException loading the sRGB profile: ");
        $r5 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r4;

     label6:
        $r7 := @caughtexception;
        l5 = $r7;

     label7:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(in);
        throw l5;

     label8:
        goto label10;

     label9:
        profile = staticinvoke <java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(int)>(1000);

     label10:
        virtualinvoke sRGBProfile.<org.apache.fop.pdf.PDFICCStream: void setColorSpace(java.awt.color.ICC_Profile,org.apache.fop.pdf.PDFDeviceColorSpace)>(profile, null);
        return sRGBProfile;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

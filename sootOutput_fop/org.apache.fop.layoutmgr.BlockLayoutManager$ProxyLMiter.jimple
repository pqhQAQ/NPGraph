public class org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter extends org.apache.fop.layoutmgr.LMiter
{
    private final org.apache.fop.layoutmgr.BlockLayoutManager this$0;

    public void <init>(org.apache.fop.layoutmgr.BlockLayoutManager)
    {
        org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter this;
        org.apache.fop.layoutmgr.BlockLayoutManager this$0;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter;
        this$0 := @parameter0: org.apache.fop.layoutmgr.BlockLayoutManager;
        this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: org.apache.fop.layoutmgr.BlockLayoutManager this$0> = this$0;
        specialinvoke this.<org.apache.fop.layoutmgr.LMiter: void <init>(org.apache.fop.layoutmgr.LayoutManager)>(this$0);
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>(10);
        this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: java.util.List listLMs> = $r0;
        return;
    }

    public boolean hasNext()
    {
        org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter this;
        int $i0, $i1;
        java.util.List $r0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter;
        $i0 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: int curPos>;
        $r0 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: java.util.List listLMs>;
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 >= $i1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $i1 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: int curPos>;
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: boolean createNextChildLMs(int)>($i1);

     label1:
        return $z0;
    }

    protected boolean createNextChildLMs(int)
    {
        org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter this;
        int pos, $i0, $i1;
        java.util.List newLMs, $r1, $r2, $r3;
        org.apache.fop.layoutmgr.BlockLayoutManager $r0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter;
        pos := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: org.apache.fop.layoutmgr.BlockLayoutManager this$0>;
        $i0 = pos + 1;
        $r1 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: java.util.List listLMs>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        $i0 = $i0 - $i1;
        newLMs = virtualinvoke $r0.<org.apache.fop.layoutmgr.BlockLayoutManager: java.util.List createChildLMs(int)>($i0);
        if newLMs == null goto label0;

        $r2 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: java.util.List listLMs>;
        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(newLMs);

     label0:
        $r3 = this.<org.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter: java.util.List listLMs>;
        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();
        if pos >= $i0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}

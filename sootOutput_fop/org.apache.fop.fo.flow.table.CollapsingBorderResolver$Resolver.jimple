abstract class org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver extends java.lang.Object
{
    protected org.apache.fop.fo.flow.table.TableBody tablePart;
    protected boolean firstInPart;
    static final boolean $assertionsDisabled;
    private final org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0;

    private void <init>(org.apache.fop.fo.flow.table.CollapsingBorderResolver)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver l1;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        l1 := @parameter0: org.apache.fop.fo.flow.table.CollapsingBorderResolver;
        this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0> = l1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    void resolveBordersFirstRowInTable(java.util.List, boolean, boolean, boolean)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List row;
        boolean withLeadingTrailing, withNonLeadingTrailing, withRest, $z0;
        int i, $i0;
        org.apache.fop.fo.flow.table.TableColumn column;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver $r0;
        java.lang.AssertionError $r1;
        org.apache.fop.fo.flow.table.Table $r2;
        java.lang.Object $r3;
        org.apache.fop.fo.flow.table.GridUnit $r4;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        row := @parameter0: java.util.List;
        withLeadingTrailing := @parameter1: boolean;
        withNonLeadingTrailing := @parameter2: boolean;
        withRest := @parameter3: boolean;
        $z0 = <org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: boolean $assertionsDisabled>;
        if $z0 != 0 goto label0;

        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $z0 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: boolean access$100(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r0);
        if $z0 != 0 goto label0;

        $r1 = new java.lang.AssertionError;
        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();
        throw $r1;

     label0:
        i = 0;

     label1:
        $i0 = interfaceinvoke row.<java.util.List: int size()>();
        if i >= $i0 goto label2;

        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r2 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: org.apache.fop.fo.flow.table.Table access$200(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r0);
        column = virtualinvoke $r2.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableColumn getColumn(int)>(i);
        $r3 = interfaceinvoke row.<java.util.List: java.lang.Object get(int)>(i);
        $r4 = (org.apache.fop.fo.flow.table.GridUnit) $r3;
        virtualinvoke $r4.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj,boolean,boolean,boolean)>(0, column, withLeadingTrailing, withNonLeadingTrailing, withRest);
        i = i + 1;
        goto label1;

     label2:
        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: boolean access$102(org.apache.fop.fo.flow.table.CollapsingBorderResolver,boolean)>($r0, 0);
        return;
    }

    void resolveBordersBetweenRows(java.util.List, java.util.List)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List rowBefore, rowAfter;
        boolean $z0;
        int i, $i0, $i1;
        org.apache.fop.fo.flow.table.GridUnit gu, beforeGU;
        java.lang.AssertionError $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        rowBefore := @parameter0: java.util.List;
        rowAfter := @parameter1: java.util.List;
        $z0 = <org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: boolean $assertionsDisabled>;
        if $z0 != 0 goto label1;

        if rowBefore == null goto label0;

        if rowAfter != null goto label1;

     label0:
        $r0 = new java.lang.AssertionError;
        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
        throw $r0;

     label1:
        i = 0;

     label2:
        $i0 = interfaceinvoke rowAfter.<java.util.List: int size()>();
        if i >= $i0 goto label4;

        $r1 = interfaceinvoke rowAfter.<java.util.List: java.lang.Object get(int)>(i);
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        $i1 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: int getRowSpanIndex()>();
        if $i1 != 0 goto label3;

        $r1 = interfaceinvoke rowBefore.<java.util.List: java.lang.Object get(int)>(i);
        beforeGU = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void resolveBorder(org.apache.fop.fo.flow.table.GridUnit,int)>(beforeGU, 0);

     label3:
        i = i + 1;
        goto label2;

     label4:
        return;
    }

    void resolveBordersLastRowInPart(java.util.List, boolean, boolean, boolean)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List row;
        boolean withLeadingTrailing, withNonLeadingTrailing, withRest;
        int i, $i0;
        java.lang.Object $r0;
        org.apache.fop.fo.flow.table.GridUnit $r1;
        org.apache.fop.fo.flow.table.TableBody $r2;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        row := @parameter0: java.util.List;
        withLeadingTrailing := @parameter1: boolean;
        withNonLeadingTrailing := @parameter2: boolean;
        withRest := @parameter3: boolean;
        i = 0;

     label0:
        $i0 = interfaceinvoke row.<java.util.List: int size()>();
        if i >= $i0 goto label1;

        $r0 = interfaceinvoke row.<java.util.List: java.lang.Object get(int)>(i);
        $r1 = (org.apache.fop.fo.flow.table.GridUnit) $r0;
        $r2 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.TableBody tablePart>;
        virtualinvoke $r1.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj,boolean,boolean,boolean)>(1, $r2, withLeadingTrailing, withNonLeadingTrailing, withRest);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    void resolveBordersLastRowInTable(java.util.List, boolean, boolean, boolean)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List row;
        boolean withLeadingTrailing, withNonLeadingTrailing, withRest;
        int i, $i0;
        org.apache.fop.fo.flow.table.TableColumn column;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver $r0;
        org.apache.fop.fo.flow.table.Table $r1;
        java.lang.Object $r2;
        org.apache.fop.fo.flow.table.GridUnit $r3;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        row := @parameter0: java.util.List;
        withLeadingTrailing := @parameter1: boolean;
        withNonLeadingTrailing := @parameter2: boolean;
        withRest := @parameter3: boolean;
        i = 0;

     label0:
        $i0 = interfaceinvoke row.<java.util.List: int size()>();
        if i >= $i0 goto label1;

        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r1 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: org.apache.fop.fo.flow.table.Table access$200(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r0);
        column = virtualinvoke $r1.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableColumn getColumn(int)>(i);
        $r2 = interfaceinvoke row.<java.util.List: java.lang.Object get(int)>(i);
        $r3 = (org.apache.fop.fo.flow.table.GridUnit) $r2;
        virtualinvoke $r3.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj,boolean,boolean,boolean)>(1, column, withLeadingTrailing, withNonLeadingTrailing, withRest);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    void integrateLeadingBorders(java.util.List)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List row, $r4;
        int i, $i0;
        org.apache.fop.fo.flow.table.GridUnit gu;
        org.apache.fop.fo.flow.table.ConditionalBorder border;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver $r0, $r3;
        org.apache.fop.fo.flow.table.Table $r1;
        java.lang.Object $r2;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        row := @parameter0: java.util.List;
        i = 0;

     label0:
        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r1 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: org.apache.fop.fo.flow.table.Table access$200(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.Table: int getNumberOfColumns()>();
        if i >= $i0 goto label1;

        $r2 = interfaceinvoke row.<java.util.List: java.lang.Object get(int)>(i);
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r2;
        $r3 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r4 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.util.List access$300(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r3);
        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i);
        border = (org.apache.fop.fo.flow.table.ConditionalBorder) $r2;
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateCompetingBorder(int,org.apache.fop.fo.flow.table.ConditionalBorder,boolean,boolean,boolean)>(0, border, 1, 0, 1);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    void integrateTrailingBorders(java.util.List)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List row, $r4;
        int i, $i0;
        org.apache.fop.fo.flow.table.GridUnit gu;
        org.apache.fop.fo.flow.table.ConditionalBorder border;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver $r0, $r3;
        org.apache.fop.fo.flow.table.Table $r1;
        java.lang.Object $r2;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        row := @parameter0: java.util.List;
        i = 0;

     label0:
        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r1 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: org.apache.fop.fo.flow.table.Table access$200(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.Table: int getNumberOfColumns()>();
        if i >= $i0 goto label1;

        $r2 = interfaceinvoke row.<java.util.List: java.lang.Object get(int)>(i);
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r2;
        $r3 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r4 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.util.List access$400(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r3);
        $r2 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i);
        border = (org.apache.fop.fo.flow.table.ConditionalBorder) $r2;
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateCompetingBorder(int,org.apache.fop.fo.flow.table.ConditionalBorder,boolean,boolean,boolean)>(1, border, 1, 0, 1);
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    void startPart(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        org.apache.fop.fo.flow.table.TableBody part;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        part := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.TableBody tablePart> = part;
        this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: boolean firstInPart> = 1;
        return;
    }

    void endRow(java.util.List, org.apache.fop.fo.flow.table.TableCellContainer)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        java.util.List row, $r5;
        org.apache.fop.fo.flow.table.TableCellContainer container;
        org.apache.fop.fo.flow.table.TableRow tableRow;
        java.util.Iterator iter, guIter, colIter;
        org.apache.fop.fo.flow.table.GridUnit gu, nextGU, $r1;
        boolean first, last, $z0;
        int i, $i0, $i1;
        org.apache.fop.fo.flow.table.TableColumn col, nextCol;
        java.lang.Object $r0;
        org.apache.fop.fo.flow.table.TableBody $r2;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver $r3;
        org.apache.fop.fo.flow.table.Table $r4;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        row := @parameter0: java.util.List;
        container := @parameter1: org.apache.fop.fo.flow.table.TableCellContainer;
        $z0 = container instanceof org.apache.fop.fo.flow.table.TableRow;
        if $z0 == 0 goto label3;

        tableRow = (org.apache.fop.fo.flow.table.TableRow) container;
        iter = interfaceinvoke row.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r0 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r0;
        $i0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: int getRowSpanIndex()>();
        if $i0 != 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        first = $z0;
        last = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isLastGridUnitRowSpan()>();
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj,boolean,boolean,boolean)>(0, tableRow, first, first, 1);
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj,boolean,boolean,boolean)>(1, tableRow, last, last, 1);
        goto label0;

     label3:
        $z0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: boolean firstInPart>;
        if $z0 == 0 goto label6;

        i = 0;

     label4:
        $i1 = interfaceinvoke row.<java.util.List: int size()>();
        if i >= $i1 goto label5;

        $r0 = interfaceinvoke row.<java.util.List: java.lang.Object get(int)>(i);
        $r1 = (org.apache.fop.fo.flow.table.GridUnit) $r0;
        $r2 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.TableBody tablePart>;
        virtualinvoke $r1.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj,boolean,boolean,boolean)>(0, $r2, 1, 1, 1);
        i = i + 1;
        goto label4;

     label5:
        this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: boolean firstInPart> = 0;

     label6:
        guIter = interfaceinvoke row.<java.util.List: java.util.Iterator iterator()>();
        $r0 = interfaceinvoke guIter.<java.util.Iterator: java.lang.Object next()>();
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r0;
        $r3 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r4 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: org.apache.fop.fo.flow.table.Table access$200(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r3);
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.flow.table.Table: java.util.List getColumns()>();
        colIter = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();
        $r0 = interfaceinvoke colIter.<java.util.Iterator: java.lang.Object next()>();
        col = (org.apache.fop.fo.flow.table.TableColumn) $r0;
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj)>(2, col);
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj)>(2, container);

     label7:
        $z0 = interfaceinvoke guIter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label9;

        $r0 = interfaceinvoke guIter.<java.util.Iterator: java.lang.Object next()>();
        nextGU = (org.apache.fop.fo.flow.table.GridUnit) $r0;
        $r0 = interfaceinvoke colIter.<java.util.Iterator: java.lang.Object next()>();
        nextCol = (org.apache.fop.fo.flow.table.TableColumn) $r0;
        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isLastGridUnitColSpan()>();
        if $z0 == 0 goto label8;

        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj)>(3, col);
        virtualinvoke nextGU.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj)>(2, nextCol);
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void resolveBorder(org.apache.fop.fo.flow.table.GridUnit,int)>(nextGU, 3);

     label8:
        gu = nextGU;
        col = nextCol;
        goto label7;

     label9:
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj)>(3, col);
        virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: void integrateBorderSegment(int,org.apache.fop.fo.flow.table.TableFObj)>(3, container);
        return;
    }

    void endPart()
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        $r0 = this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: org.apache.fop.fo.flow.table.CollapsingBorderResolver this$0>;
        $r1 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.util.List access$500(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>($r0);
        virtualinvoke this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: void resolveBordersLastRowInPart(java.util.List,boolean,boolean,boolean)>($r1, 1, 1, 1);
        return;
    }

    abstract void endTable();

    void <init>(org.apache.fop.fo.flow.table.CollapsingBorderResolver, org.apache.fop.fo.flow.table.CollapsingBorderResolver$1)
    {
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver this;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver x0;
        org.apache.fop.fo.flow.table.CollapsingBorderResolver$1 x1;

        this := @this: org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver;
        x0 := @parameter0: org.apache.fop.fo.flow.table.CollapsingBorderResolver;
        x1 := @parameter1: org.apache.fop.fo.flow.table.CollapsingBorderResolver$1;
        specialinvoke this.<org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: void <init>(org.apache.fop.fo.flow.table.CollapsingBorderResolver)>(x0);
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.lang.Class class$org$apache$fop$fo$flow$table$CollapsingBorderResolver>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.lang.Class class$(java.lang.String)>("org.apache.fop.fo.flow.table.CollapsingBorderResolver");
        <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.lang.Class class$org$apache$fop$fo$flow$table$CollapsingBorderResolver> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.fo.flow.table.CollapsingBorderResolver: java.lang.Class class$org$apache$fop$fo$flow$table$CollapsingBorderResolver>;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        <org.apache.fop.fo.flow.table.CollapsingBorderResolver$Resolver: boolean $assertionsDisabled> = $z0;
        return;
    }
}

final class org.apache.fop.render.ps.ResourceHandler$3 extends org.apache.xmlgraphics.ps.FormGenerator
{
    private final java.awt.geom.Dimension2D val$dimensions;

    void <init>(java.lang.String, java.lang.String, java.awt.geom.Dimension2D, java.awt.geom.Dimension2D)
    {
        org.apache.fop.render.ps.ResourceHandler$3 this;
        java.lang.String x0, x1;
        java.awt.geom.Dimension2D x2, l4;

        this := @this: org.apache.fop.render.ps.ResourceHandler$3;
        x0 := @parameter0: java.lang.String;
        x1 := @parameter1: java.lang.String;
        x2 := @parameter2: java.awt.geom.Dimension2D;
        l4 := @parameter3: java.awt.geom.Dimension2D;
        this.<org.apache.fop.render.ps.ResourceHandler$3: java.awt.geom.Dimension2D val$dimensions> = l4;
        specialinvoke this.<org.apache.xmlgraphics.ps.FormGenerator: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D)>(x0, x1, x2);
        return;
    }

    protected void generatePaintProc(org.apache.xmlgraphics.ps.PSGenerator) throws java.io.IOException
    {
        org.apache.fop.render.ps.ResourceHandler$3 this;
        org.apache.xmlgraphics.ps.PSGenerator gen;
        java.lang.String w, h, $r2;
        java.awt.geom.Dimension2D $r0;
        double $d0;
        java.lang.StringBuffer $r1;

        this := @this: org.apache.fop.render.ps.ResourceHandler$3;
        gen := @parameter0: org.apache.xmlgraphics.ps.PSGenerator;
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("0 setgray");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("0 setlinewidth");
        $r0 = this.<org.apache.fop.render.ps.ResourceHandler$3: java.awt.geom.Dimension2D val$dimensions>;
        $d0 = virtualinvoke $r0.<java.awt.geom.Dimension2D: double getWidth()>();
        w = virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: java.lang.String formatDouble(double)>($d0);
        $r0 = this.<org.apache.fop.render.ps.ResourceHandler$3: java.awt.geom.Dimension2D val$dimensions>;
        $d0 = virtualinvoke $r0.<java.awt.geom.Dimension2D: double getHeight()>();
        h = virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: java.lang.String formatDouble(double)>($d0);
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(w);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(h);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" scale");
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>($r2);
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("0 0 1 1 rectstroke");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("newpath");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("0 0 moveto");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("1 1 lineto");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("stroke");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("newpath");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("0 1 moveto");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("1 0 lineto");
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void writeln(java.lang.String)>("stroke");
        return;
    }
}

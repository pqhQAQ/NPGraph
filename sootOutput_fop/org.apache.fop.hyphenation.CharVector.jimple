public class org.apache.fop.hyphenation.CharVector extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final int DEFAULT_BLOCK_SIZE;
    private int blockSize;
    private char[] array;
    private int n;

    public void <init>()
    {
        org.apache.fop.hyphenation.CharVector this;

        this := @this: org.apache.fop.hyphenation.CharVector;
        specialinvoke this.<org.apache.fop.hyphenation.CharVector: void <init>(int)>(2048);
        return;
    }

    public void <init>(int)
    {
        org.apache.fop.hyphenation.CharVector this;
        int capacity, $i0;
        char[] $r0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        capacity := @parameter0: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        if capacity <= 0 goto label0;

        this.<org.apache.fop.hyphenation.CharVector: int blockSize> = capacity;
        goto label1;

     label0:
        this.<org.apache.fop.hyphenation.CharVector: int blockSize> = 2048;

     label1:
        $i0 = this.<org.apache.fop.hyphenation.CharVector: int blockSize>;
        $r0 = newarray (char)[$i0];
        this.<org.apache.fop.hyphenation.CharVector: char[] array> = $r0;
        this.<org.apache.fop.hyphenation.CharVector: int n> = 0;
        return;
    }

    public void <init>(char[])
    {
        org.apache.fop.hyphenation.CharVector this;
        char[] a;
        int $i0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        a := @parameter0: char[];
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.hyphenation.CharVector: int blockSize> = 2048;
        this.<org.apache.fop.hyphenation.CharVector: char[] array> = a;
        $i0 = lengthof a;
        this.<org.apache.fop.hyphenation.CharVector: int n> = $i0;
        return;
    }

    public void <init>(char[], int)
    {
        org.apache.fop.hyphenation.CharVector this;
        char[] a;
        int capacity, $i0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        a := @parameter0: char[];
        capacity := @parameter1: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        if capacity <= 0 goto label0;

        this.<org.apache.fop.hyphenation.CharVector: int blockSize> = capacity;
        goto label1;

     label0:
        this.<org.apache.fop.hyphenation.CharVector: int blockSize> = 2048;

     label1:
        this.<org.apache.fop.hyphenation.CharVector: char[] array> = a;
        $i0 = lengthof a;
        this.<org.apache.fop.hyphenation.CharVector: int n> = $i0;
        return;
    }

    public void clear()
    {
        org.apache.fop.hyphenation.CharVector this;

        this := @this: org.apache.fop.hyphenation.CharVector;
        this.<org.apache.fop.hyphenation.CharVector: int n> = 0;
        return;
    }

    public java.lang.Object clone()
    {
        org.apache.fop.hyphenation.CharVector this, $r0, cv;
        char[] $r1;
        java.lang.Object $r2;
        int $i0, $i1;

        this := @this: org.apache.fop.hyphenation.CharVector;
        $r0 = new org.apache.fop.hyphenation.CharVector;
        $r1 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();
        $r1 = (char[]) $r2;
        $r1 = (char[]) $r1;
        $i0 = this.<org.apache.fop.hyphenation.CharVector: int blockSize>;
        specialinvoke $r0.<org.apache.fop.hyphenation.CharVector: void <init>(char[],int)>($r1, $i0);
        cv = $r0;
        $i1 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        cv.<org.apache.fop.hyphenation.CharVector: int n> = $i1;
        return cv;
    }

    public char[] getArray()
    {
        org.apache.fop.hyphenation.CharVector this;
        char[] $r0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        return $r0;
    }

    public int length()
    {
        org.apache.fop.hyphenation.CharVector this;
        int $i0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        $i0 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        return $i0;
    }

    public int capacity()
    {
        org.apache.fop.hyphenation.CharVector this;
        char[] $r0;
        int $i0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        $i0 = lengthof $r0;
        return $i0;
    }

    public void put(int, char)
    {
        org.apache.fop.hyphenation.CharVector this;
        int index;
        char val;
        char[] $r0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        index := @parameter0: int;
        val := @parameter1: char;
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        $r0[index] = val;
        return;
    }

    public char get(int)
    {
        org.apache.fop.hyphenation.CharVector this;
        int index;
        char[] $r0;
        char $c0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        index := @parameter0: int;
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        $c0 = $r0[index];
        return $c0;
    }

    public int alloc(int)
    {
        org.apache.fop.hyphenation.CharVector this;
        int size, index, len, $i0, $i1;
        char[] aux, $r0;

        this := @this: org.apache.fop.hyphenation.CharVector;
        size := @parameter0: int;
        index = this.<org.apache.fop.hyphenation.CharVector: int n>;
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        len = lengthof $r0;
        $i0 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        $i0 = $i0 + size;
        if $i0 < len goto label0;

        $i1 = this.<org.apache.fop.hyphenation.CharVector: int blockSize>;
        $i0 = len + $i1;
        aux = newarray (char)[$i0];
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, aux, 0, len);
        this.<org.apache.fop.hyphenation.CharVector: char[] array> = aux;

     label0:
        $i1 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        $i1 = $i1 + size;
        this.<org.apache.fop.hyphenation.CharVector: int n> = $i1;
        return index;
    }

    public void trimToSize()
    {
        org.apache.fop.hyphenation.CharVector this;
        char[] aux, $r0, $r1;
        int $i0, $i1, $i2;

        this := @this: org.apache.fop.hyphenation.CharVector;
        $i0 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        $r0 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        $i1 = lengthof $r0;
        if $i0 >= $i1 goto label0;

        $i0 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        aux = newarray (char)[$i0];
        $r1 = this.<org.apache.fop.hyphenation.CharVector: char[] array>;
        $i2 = this.<org.apache.fop.hyphenation.CharVector: int n>;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, aux, 0, $i2);
        this.<org.apache.fop.hyphenation.CharVector: char[] array> = aux;

     label0:
        return;
    }
}

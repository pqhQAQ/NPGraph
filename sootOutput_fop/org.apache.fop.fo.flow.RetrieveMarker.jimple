public class org.apache.fop.fo.flow.RetrieveMarker extends org.apache.fop.fo.FObjMixed
{
    private java.lang.String retrieveClassName;
    private int retrievePosition;
    private int retrieveBoundary;
    private org.apache.fop.fo.PropertyList propertyList;

    public void <init>(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.apache.fop.fo.FONode parent;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        parent := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void <init>(org.apache.fop.fo.FONode)>(parent);
        return;
    }

    public void bind(org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.apache.fop.fo.PropertyList pList, $r4;
        int $i0, $i1;
        org.xml.sax.Locator $r0;
        org.apache.fop.fo.properties.Property $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        pList := @parameter0: org.apache.fop.fo.PropertyList;
        $i0 = virtualinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: int findAncestor(int)>(45);
        if $i0 >= 0 goto label0;

        $r0 = this.<org.apache.fop.fo.flow.RetrieveMarker: org.xml.sax.Locator locator>;
        virtualinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String,java.lang.String)>($r0, "http://www.w3.org/1999/XSL/Format", "retrieve-marker", "An fo:retrieve-marker is permitted only as the  descendant of an fo:static-content.");

     label0:
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(186);
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        this.<org.apache.fop.fo.flow.RetrieveMarker: java.lang.String retrieveClassName> = $r2;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(187);
        $i1 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.RetrieveMarker: int retrievePosition> = $i1;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(185);
        $i1 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.RetrieveMarker: int retrieveBoundary> = $i1;
        $r3 = this.<org.apache.fop.fo.flow.RetrieveMarker: java.lang.String retrieveClassName>;
        if $r3 == null goto label1;

        $r3 = this.<org.apache.fop.fo.flow.RetrieveMarker: java.lang.String retrieveClassName>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label2;

     label1:
        virtualinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void missingPropertyError(java.lang.String)>("retrieve-class-name");

     label2:
        $r4 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.PropertyList getParentPropertyList()>();
        this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.PropertyList propertyList> = $r4;
        return;
    }

    protected void validateChildNode(org.xml.sax.Locator, java.lang.String, java.lang.String) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.xml.sax.Locator loc;
        java.lang.String nsURI, localName;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        loc := @parameter0: org.xml.sax.Locator;
        nsURI := @parameter1: java.lang.String;
        localName := @parameter2: java.lang.String;
        virtualinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);
        return;
    }

    public java.lang.String getRetrieveClassName()
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        $r0 = this.<org.apache.fop.fo.flow.RetrieveMarker: java.lang.String retrieveClassName>;
        return $r0;
    }

    public int getRetrievePosition()
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        $i0 = this.<org.apache.fop.fo.flow.RetrieveMarker: int retrievePosition>;
        return $i0;
    }

    public int getRetrieveBoundary()
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        $i0 = this.<org.apache.fop.fo.flow.RetrieveMarker: int retrieveBoundary>;
        return $i0;
    }

    private org.apache.fop.fo.PropertyList createPropertyListFor(org.apache.fop.fo.FObj, org.apache.fop.fo.PropertyList)
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.apache.fop.fo.FObj fo;
        org.apache.fop.fo.PropertyList parent, $r2;
        org.apache.fop.fo.FOEventHandler $r0;
        org.apache.fop.fo.PropertyListMaker $r1;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        fo := @parameter0: org.apache.fop.fo.FObj;
        parent := @parameter1: org.apache.fop.fo.PropertyList;
        $r0 = virtualinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.FOEventHandler: org.apache.fop.fo.PropertyListMaker getPropertyListMaker()>();
        $r2 = interfaceinvoke $r1.<org.apache.fop.fo.PropertyListMaker: org.apache.fop.fo.PropertyList make(org.apache.fop.fo.FObj,org.apache.fop.fo.PropertyList)>(fo, parent);
        return $r2;
    }

    private void cloneSingleNode(org.apache.fop.fo.FONode, org.apache.fop.fo.FONode, org.apache.fop.fo.flow.Marker, org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.apache.fop.fo.FONode child, newParent, newChild;
        org.apache.fop.fo.flow.Marker marker;
        org.apache.fop.fo.PropertyList parentPropertyList, newPropertyList;
        org.apache.fop.fo.flow.Marker$MarkerPropertyList pList;
        org.apache.fop.fo.flow.table.Table t;
        org.apache.fop.fo.FOText ft;
        boolean $z0;
        org.apache.fop.fo.FObj $r0;
        java.lang.String $r1;
        org.xml.sax.Locator $r2;
        org.apache.fop.fo.flow.table.TableFObj $r3;
        int $i0;
        java.util.List $r4;
        java.util.ListIterator $r5;
        org.apache.fop.fo.flow.table.TableBody $r6;
        org.apache.fop.fo.FONode$FONodeIterator $r7;
        org.apache.fop.fo.FObjMixed $r8;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        child := @parameter0: org.apache.fop.fo.FONode;
        newParent := @parameter1: org.apache.fop.fo.FONode;
        marker := @parameter2: org.apache.fop.fo.flow.Marker;
        parentPropertyList := @parameter3: org.apache.fop.fo.PropertyList;
        if child == null goto label5;

        newChild = virtualinvoke child.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode clone(org.apache.fop.fo.FONode,boolean)>(newParent, 1);
        $z0 = child instanceof org.apache.fop.fo.FObj;
        if $z0 == 0 goto label3;

        $r0 = (org.apache.fop.fo.FObj) newChild;
        newPropertyList = specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.PropertyList createPropertyListFor(org.apache.fop.fo.FObj,org.apache.fop.fo.PropertyList)>($r0, parentPropertyList);
        pList = virtualinvoke marker.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.flow.Marker$MarkerPropertyList getPropertyListFor(org.apache.fop.fo.FONode)>(child);
        $r1 = virtualinvoke child.<org.apache.fop.fo.FONode: java.lang.String getLocalName()>();
        $r2 = virtualinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: org.xml.sax.Locator getLocator()>();
        virtualinvoke newChild.<org.apache.fop.fo.FONode: void processNode(java.lang.String,org.xml.sax.Locator,org.xml.sax.Attributes,org.apache.fop.fo.PropertyList)>($r1, $r2, pList, newPropertyList);
        $z0 = newChild instanceof org.apache.fop.fo.flow.table.TableFObj;
        if $z0 == 0 goto label0;

        $r3 = (org.apache.fop.fo.flow.table.TableFObj) newChild;
        virtualinvoke $r3.<org.apache.fop.fo.flow.table.TableFObj: void startOfNode()>();

     label0:
        $r0 = (org.apache.fop.fo.FObj) newParent;
        staticinvoke <org.apache.fop.fo.flow.RetrieveMarker: void addChildTo(org.apache.fop.fo.FONode,org.apache.fop.fo.FObj)>(newChild, $r0);
        $i0 = virtualinvoke newChild.<org.apache.fop.fo.FONode: int getNameId()>();
        if $i0 != 46 goto label1;

        t = (org.apache.fop.fo.flow.table.Table) child;
        $r4 = virtualinvoke t.<org.apache.fop.fo.flow.table.Table: java.util.List getColumns()>();
        $r5 = interfaceinvoke $r4.<java.util.List: java.util.ListIterator listIterator()>();
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneSubtree(java.util.Iterator,org.apache.fop.fo.FONode,org.apache.fop.fo.flow.Marker,org.apache.fop.fo.PropertyList)>($r5, newChild, marker, newPropertyList);
        $r6 = virtualinvoke t.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableHeader()>();
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneSingleNode(org.apache.fop.fo.FONode,org.apache.fop.fo.FONode,org.apache.fop.fo.flow.Marker,org.apache.fop.fo.PropertyList)>($r6, newChild, marker, newPropertyList);
        $r6 = virtualinvoke t.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableFooter()>();
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneSingleNode(org.apache.fop.fo.FONode,org.apache.fop.fo.FONode,org.apache.fop.fo.flow.Marker,org.apache.fop.fo.PropertyList)>($r6, newChild, marker, newPropertyList);

     label1:
        $r7 = virtualinvoke child.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneSubtree(java.util.Iterator,org.apache.fop.fo.FONode,org.apache.fop.fo.flow.Marker,org.apache.fop.fo.PropertyList)>($r7, newChild, marker, newPropertyList);
        $z0 = newChild instanceof org.apache.fop.fo.flow.table.TableFObj;
        if $z0 == 0 goto label2;

        $r3 = (org.apache.fop.fo.flow.table.TableFObj) newChild;
        virtualinvoke $r3.<org.apache.fop.fo.flow.table.TableFObj: void endOfNode()>();

     label2:
        goto label4;

     label3:
        $z0 = child instanceof org.apache.fop.fo.FOText;
        if $z0 == 0 goto label4;

        ft = (org.apache.fop.fo.FOText) newChild;
        virtualinvoke ft.<org.apache.fop.fo.FOText: void bind(org.apache.fop.fo.PropertyList)>(parentPropertyList);
        $r0 = (org.apache.fop.fo.FObj) newParent;
        staticinvoke <org.apache.fop.fo.flow.RetrieveMarker: void addChildTo(org.apache.fop.fo.FONode,org.apache.fop.fo.FObj)>(newChild, $r0);

     label4:
        $z0 = newChild instanceof org.apache.fop.fo.FObjMixed;
        if $z0 == 0 goto label5;

        $r8 = (org.apache.fop.fo.FObjMixed) newChild;
        staticinvoke <org.apache.fop.fo.flow.RetrieveMarker: void handleWhiteSpaceFor(org.apache.fop.fo.FObjMixed)>($r8);

     label5:
        return;
    }

    private void cloneSubtree(java.util.Iterator, org.apache.fop.fo.FONode, org.apache.fop.fo.flow.Marker, org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        java.util.Iterator parentIter;
        org.apache.fop.fo.FONode newParent, child;
        org.apache.fop.fo.flow.Marker marker;
        org.apache.fop.fo.PropertyList parentPropertyList;
        boolean $z0;
        java.lang.Object $r0;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        parentIter := @parameter0: java.util.Iterator;
        newParent := @parameter1: org.apache.fop.fo.FONode;
        marker := @parameter2: org.apache.fop.fo.flow.Marker;
        parentPropertyList := @parameter3: org.apache.fop.fo.PropertyList;
        if parentIter == null goto label1;

     label0:
        $z0 = interfaceinvoke parentIter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r0 = interfaceinvoke parentIter.<java.util.Iterator: java.lang.Object next()>();
        child = (org.apache.fop.fo.FONode) $r0;
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneSingleNode(org.apache.fop.fo.FONode,org.apache.fop.fo.FONode,org.apache.fop.fo.flow.Marker,org.apache.fop.fo.PropertyList)>(child, newParent, marker, parentPropertyList);
        goto label0;

     label1:
        return;
    }

    private void cloneFromMarker(org.apache.fop.fo.flow.Marker) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.apache.fop.fo.flow.Marker marker;
        org.apache.fop.fo.FONode $r0;
        org.apache.fop.fo.FONode$FONodeIterator $r1;
        org.apache.fop.fo.PropertyList $r2;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        marker := @parameter0: org.apache.fop.fo.flow.Marker;
        $r0 = this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.FONode firstChild>;
        if $r0 == null goto label0;

        this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.FONode currentTextNode> = null;
        this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.FONode firstChild> = null;

     label0:
        $r1 = virtualinvoke marker.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();
        $r2 = this.<org.apache.fop.fo.flow.RetrieveMarker: org.apache.fop.fo.PropertyList propertyList>;
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneSubtree(java.util.Iterator,org.apache.fop.fo.FONode,org.apache.fop.fo.flow.Marker,org.apache.fop.fo.PropertyList)>($r1, this, marker, $r2);
        staticinvoke <org.apache.fop.fo.flow.RetrieveMarker: void handleWhiteSpaceFor(org.apache.fop.fo.FObjMixed)>(this);
        return;
    }

    public void bindMarker(org.apache.fop.fo.flow.Marker)
    {
        org.apache.fop.fo.flow.RetrieveMarker this;
        org.apache.fop.fo.flow.Marker marker;
        org.apache.fop.apps.FOPException exc, $r1;
        org.apache.fop.fo.FONode$FONodeIterator $r0;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        marker := @parameter0: org.apache.fop.fo.flow.Marker;
        $r0 = virtualinvoke marker.<org.apache.fop.fo.flow.Marker: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();
        if $r0 == null goto label3;

     label0:
        specialinvoke this.<org.apache.fop.fo.flow.RetrieveMarker: void cloneFromMarker(org.apache.fop.fo.flow.Marker)>(marker);

     label1:
        goto label4;

     label2:
        $r1 := @caughtexception;
        exc = $r1;
        $r2 = <org.apache.fop.fo.flow.RetrieveMarker: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("fo:retrieve-marker unable to clone subtree of fo:marker (marker-class-name=");
        $r4 = virtualinvoke marker.<org.apache.fop.fo.flow.Marker: java.lang.String getMarkerClassName()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r5, exc);
        return;

     label3:
        $r2 = <org.apache.fop.fo.flow.RetrieveMarker: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label4;

        $r2 = <org.apache.fop.fo.flow.RetrieveMarker: org.apache.commons.logging.Log log>;
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Empty marker retrieved...");

     label4:
        return;

        catch org.apache.fop.apps.FOPException from label0 to label1 with label2;
    }

    public java.lang.String getLocalName()
    {
        org.apache.fop.fo.flow.RetrieveMarker this;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        return "retrieve-marker";
    }

    public int getNameId()
    {
        org.apache.fop.fo.flow.RetrieveMarker this;

        this := @this: org.apache.fop.fo.flow.RetrieveMarker;
        return 41;
    }
}

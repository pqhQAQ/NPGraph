public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter extends java.lang.Object
{
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes commonAttributes;
    private int spaceBefore;
    private int spaceAfter;
    private boolean updatingSpaceBefore;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceBeforeCandidate;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceAfterCandidate;

    public void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes, int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        int previousSpace, $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        previousSpace := @parameter1: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes commonAttributes> = attrs;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: boolean updatingSpaceBefore> = 1;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceBeforeCandidate> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceAfterCandidate> = null;
        $i0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int split(java.lang.String)>("sb");
        $i0 = $i0 + previousSpace;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceBefore> = $i0;
        $i0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int split(java.lang.String)>("sa");
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceAfter> = $i0;
        return;
    }

    public int split(java.lang.String)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        java.lang.String key;
        java.lang.Integer i, $r2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;
        java.lang.Object $r1;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        key := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes commonAttributes>;
        $r1 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Object getValue(java.lang.String)>(key);
        i = (java.lang.Integer) $r1;
        if i != null goto label0;

        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(0);
        i = $r2;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes commonAttributes>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes unset(java.lang.String)>(key);
        $i0 = virtualinvoke i.<java.lang.Integer: int intValue()>();
        return $i0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getCommonAttributes()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes commonAttributes>;
        return $r0;
    }

    public int getSpaceBefore()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceBefore>;
        return $i0;
    }

    public void setSpaceBeforeCandidate(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes candidate;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        candidate := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        $z0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: boolean updatingSpaceBefore>;
        if $z0 == 0 goto label0;

        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceBeforeCandidate> = candidate;

     label0:
        return;
    }

    public void setSpaceAfterCandidate(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes candidate;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        candidate := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceAfterCandidate> = candidate;
        return;
    }

    public boolean isBeforeCadidateSet()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceBeforeCandidate>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isAfterCadidateSet()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceAfterCandidate>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void stopUpdatingSpaceBefore()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: boolean updatingSpaceBefore> = 0;
        return;
    }

    public int flush()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter this;
        int accumulatingSpace, $i0;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        accumulatingSpace = 0;
        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: boolean isBeforeCadidateSet()>();
        if $z0 != 0 goto label0;

        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceBefore>;
        accumulatingSpace = accumulatingSpace + $i0;
        goto label1;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceBeforeCandidate>;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceBefore>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void addIntegerValue(int,java.lang.String)>($i0, "sb");

     label1:
        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: boolean isAfterCadidateSet()>();
        if $z0 != 0 goto label2;

        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceAfter>;
        accumulatingSpace = accumulatingSpace + $i0;
        goto label3;

     label2:
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes spaceAfterCandidate>;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int spaceAfter>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void addIntegerValue(int,java.lang.String)>($i0, "sa");

     label3:
        return accumulatingSpace;
    }
}

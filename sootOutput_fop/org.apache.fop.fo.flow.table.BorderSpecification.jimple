public class org.apache.fop.fo.flow.table.BorderSpecification extends java.lang.Object
{
    private static org.apache.fop.fo.flow.table.BorderSpecification defaultBorder;
    private org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo borderInfo;
    private int holder;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$apache$fop$fo$flow$table$BorderSpecification;

    public void <init>(org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo, int)
    {
        org.apache.fop.fo.flow.table.BorderSpecification this;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo borderInfo;
        int holder;

        this := @this: org.apache.fop.fo.flow.table.BorderSpecification;
        borderInfo := @parameter0: org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo;
        holder := @parameter1: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.fo.flow.table.BorderSpecification: org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo borderInfo> = borderInfo;
        this.<org.apache.fop.fo.flow.table.BorderSpecification: int holder> = holder;
        return;
    }

    static synchronized org.apache.fop.fo.flow.table.BorderSpecification getDefaultBorder()
    {
        org.apache.fop.fo.flow.table.BorderSpecification $r0;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo $r1;

        $r0 = <org.apache.fop.fo.flow.table.BorderSpecification: org.apache.fop.fo.flow.table.BorderSpecification defaultBorder>;
        if $r0 != null goto label0;

        $r0 = new org.apache.fop.fo.flow.table.BorderSpecification;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonBorderPaddingBackground: org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo getDefaultBorderInfo()>();
        specialinvoke $r0.<org.apache.fop.fo.flow.table.BorderSpecification: void <init>(org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo,int)>($r1, 50);
        <org.apache.fop.fo.flow.table.BorderSpecification: org.apache.fop.fo.flow.table.BorderSpecification defaultBorder> = $r0;

     label0:
        $r0 = <org.apache.fop.fo.flow.table.BorderSpecification: org.apache.fop.fo.flow.table.BorderSpecification defaultBorder>;
        return $r0;
    }

    public org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo getBorderInfo()
    {
        org.apache.fop.fo.flow.table.BorderSpecification this;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo $r0;

        this := @this: org.apache.fop.fo.flow.table.BorderSpecification;
        $r0 = this.<org.apache.fop.fo.flow.table.BorderSpecification: org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo borderInfo>;
        return $r0;
    }

    public int getHolder()
    {
        org.apache.fop.fo.flow.table.BorderSpecification this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.table.BorderSpecification;
        $i0 = this.<org.apache.fop.fo.flow.table.BorderSpecification: int holder>;
        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.flow.table.BorderSpecification this;
        java.lang.String holderName, $r3;
        int $i0;
        boolean $z0;
        java.lang.AssertionError $r0;
        java.lang.StringBuffer $r1;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo $r2;

        this := @this: org.apache.fop.fo.flow.table.BorderSpecification;
        holderName = "";
        $i0 = this.<org.apache.fop.fo.flow.table.BorderSpecification: int holder>;
        tableswitch($i0)
        {
            case 46: goto label0;
            case 47: goto label7;
            case 48: goto label4;
            case 49: goto label7;
            case 50: goto label6;
            case 51: goto label1;
            case 52: goto label3;
            case 53: goto label2;
            case 54: goto label5;
            default: goto label7;
        };

     label0:
        holderName = "table";
        goto label8;

     label1:
        holderName = "table-column";
        goto label8;

     label2:
        holderName = "table-header";
        goto label8;

     label3:
        holderName = "table-footer";
        goto label8;

     label4:
        holderName = "table-body";
        goto label8;

     label5:
        holderName = "table-row";
        goto label8;

     label6:
        holderName = "table-cell";
        goto label8;

     label7:
        $z0 = <org.apache.fop.fo.flow.table.BorderSpecification: boolean $assertionsDisabled>;
        if $z0 != 0 goto label8;

        $r0 = new java.lang.AssertionError;
        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();
        throw $r0;

     label8:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{");
        $r2 = this.<org.apache.fop.fo.flow.table.BorderSpecification: org.apache.fop.fo.properties.CommonBorderPaddingBackground$BorderInfo borderInfo>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(holderName);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;

        $r0 = <org.apache.fop.fo.flow.table.BorderSpecification: java.lang.Class class$org$apache$fop$fo$flow$table$BorderSpecification>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.fo.flow.table.BorderSpecification: java.lang.Class class$(java.lang.String)>("org.apache.fop.fo.flow.table.BorderSpecification");
        <org.apache.fop.fo.flow.table.BorderSpecification: java.lang.Class class$org$apache$fop$fo$flow$table$BorderSpecification> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.fo.flow.table.BorderSpecification: java.lang.Class class$org$apache$fop$fo$flow$table$BorderSpecification>;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();
        if $z0 != 0 goto label2;

        $z0 = 1;
        goto label3;

     label2:
        $z0 = 0;

     label3:
        <org.apache.fop.fo.flow.table.BorderSpecification: boolean $assertionsDisabled> = $z0;
        return;
    }
}

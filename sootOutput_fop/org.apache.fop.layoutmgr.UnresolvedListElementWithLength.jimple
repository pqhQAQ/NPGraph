public abstract class org.apache.fop.layoutmgr.UnresolvedListElementWithLength extends org.apache.fop.layoutmgr.UnresolvedListElement
{
    protected static org.apache.commons.logging.Log log;
    private org.apache.fop.traits.MinOptMax length;
    private boolean conditional;
    private org.apache.fop.layoutmgr.RelSide side;
    private boolean isFirst;
    private boolean isLast;
    static java.lang.Class class$org$apache$fop$layoutmgr$UnresolvedListElementWithLength;

    public void <init>(org.apache.fop.layoutmgr.Position, org.apache.fop.traits.MinOptMax, org.apache.fop.layoutmgr.RelSide, boolean, boolean, boolean)
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        org.apache.fop.layoutmgr.Position position;
        org.apache.fop.traits.MinOptMax length;
        org.apache.fop.layoutmgr.RelSide side;
        boolean conditional, isFirst, isLast;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        position := @parameter0: org.apache.fop.layoutmgr.Position;
        length := @parameter1: org.apache.fop.traits.MinOptMax;
        side := @parameter2: org.apache.fop.layoutmgr.RelSide;
        conditional := @parameter3: boolean;
        isFirst := @parameter4: boolean;
        isLast := @parameter5: boolean;
        specialinvoke this.<org.apache.fop.layoutmgr.UnresolvedListElement: void <init>(org.apache.fop.layoutmgr.Position)>(position);
        this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.fop.traits.MinOptMax length> = length;
        this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.fop.layoutmgr.RelSide side> = side;
        this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean conditional> = conditional;
        this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isFirst> = isFirst;
        this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isLast> = isLast;
        return;
    }

    public boolean isConditional()
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $z0 = this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean conditional>;
        return $z0;
    }

    public org.apache.fop.traits.MinOptMax getLength()
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $r0 = this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.fop.traits.MinOptMax length>;
        return $r0;
    }

    public org.apache.fop.layoutmgr.RelSide getSide()
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        org.apache.fop.layoutmgr.RelSide $r0;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $r0 = this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.fop.layoutmgr.RelSide side>;
        return $r0;
    }

    public boolean isFirst()
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $z0 = this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isFirst>;
        return $z0;
    }

    public boolean isLast()
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $z0 = this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isLast>;
        return $z0;
    }

    public abstract void notifyLayoutManager(org.apache.fop.traits.MinOptMax);

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength this;
        java.lang.StringBuffer $r0, sb;
        org.apache.fop.layoutmgr.RelSide $r1;
        java.lang.String $r2, $r4;
        org.apache.fop.traits.MinOptMax $r3;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.fop.layoutmgr.RelSide getSide()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.layoutmgr.RelSide: java.lang.String getName()>();
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");
        $r3 = this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.fop.traits.MinOptMax length>;
        $r2 = virtualinvoke $r3.<org.apache.fop.traits.MinOptMax: java.lang.String toString()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isConditional()>();
        if $z0 == 0 goto label0;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[discard]");
        goto label1;

     label0:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[RETAIN]");

     label1:
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isFirst()>();
        if $z0 == 0 goto label2;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[first]");

     label2:
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.UnresolvedListElementWithLength: boolean isLast()>();
        if $z0 == 0 goto label3;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[last]");

     label3:
        $r4 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.UnresolvedListElementWithLength: java.lang.Class class$org$apache$fop$layoutmgr$UnresolvedListElementWithLength>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.UnresolvedListElementWithLength: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.UnresolvedListElementWithLength");
        <org.apache.fop.layoutmgr.UnresolvedListElementWithLength: java.lang.Class class$org$apache$fop$layoutmgr$UnresolvedListElementWithLength> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.UnresolvedListElementWithLength: java.lang.Class class$org$apache$fop$layoutmgr$UnresolvedListElementWithLength>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.UnresolvedListElementWithLength: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

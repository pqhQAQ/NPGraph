public class org.apache.fop.pdf.PDFWArray extends java.lang.Object
{
    private java.util.List entries;

    public void <init>()
    {
        org.apache.fop.pdf.PDFWArray this;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.pdf.PDFWArray;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFWArray: java.util.List entries> = $r0;
        return;
    }

    public void <init>(int[])
    {
        org.apache.fop.pdf.PDFWArray this;
        int[] metrics;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.pdf.PDFWArray;
        metrics := @parameter0: int[];
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.pdf.PDFWArray: java.util.List entries> = $r0;
        virtualinvoke this.<org.apache.fop.pdf.PDFWArray: void addEntry(int,int[])>(0, metrics);
        return;
    }

    public void addEntry(int, int[])
    {
        org.apache.fop.pdf.PDFWArray this;
        int start;
        int[] metrics;
        org.apache.fop.pdf.PDFWArray$Entry $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.pdf.PDFWArray;
        start := @parameter0: int;
        metrics := @parameter1: int[];
        $r1 = this.<org.apache.fop.pdf.PDFWArray: java.util.List entries>;
        $r0 = new org.apache.fop.pdf.PDFWArray$Entry;
        specialinvoke $r0.<org.apache.fop.pdf.PDFWArray$Entry: void <init>(int,int[])>(start, metrics);
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);
        return;
    }

    public void addEntry(int, int, int)
    {
        org.apache.fop.pdf.PDFWArray this;
        int first, last, width;
        java.util.List $r0;
        int[] $r1;

        this := @this: org.apache.fop.pdf.PDFWArray;
        first := @parameter0: int;
        last := @parameter1: int;
        width := @parameter2: int;
        $r0 = this.<org.apache.fop.pdf.PDFWArray: java.util.List entries>;
        $r1 = newarray (int)[3];
        $r1[0] = first;
        $r1[1] = last;
        $r1[2] = width;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    public void addEntry(int, int, int, int, int)
    {
        org.apache.fop.pdf.PDFWArray this;
        int first, last, width, posX, posY;
        java.util.List $r0;
        int[] $r1;

        this := @this: org.apache.fop.pdf.PDFWArray;
        first := @parameter0: int;
        last := @parameter1: int;
        width := @parameter2: int;
        posX := @parameter3: int;
        posY := @parameter4: int;
        $r0 = this.<org.apache.fop.pdf.PDFWArray: java.util.List entries>;
        $r1 = newarray (int)[5];
        $r1[0] = first;
        $r1[1] = last;
        $r1[2] = width;
        $r1[3] = posX;
        $r1[4] = posY;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);
        return;
    }

    public byte[] toPDF()
    {
        org.apache.fop.pdf.PDFWArray this;
        java.lang.String $r0;
        byte[] $r1;

        this := @this: org.apache.fop.pdf.PDFWArray;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFWArray: java.lang.String toPDFString()>();
        $r1 = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>($r0);
        return $r1;
    }

    public java.lang.String toPDFString()
    {
        org.apache.fop.pdf.PDFWArray this;
        java.lang.StringBuffer $r0, p;
        int len, i, j, $i0;
        java.lang.Object entry;
        int[] line, $r2;
        java.util.List $r1;
        boolean $z0;
        org.apache.fop.pdf.PDFWArray$Entry $r3;
        java.lang.String $r4;

        this := @this: org.apache.fop.pdf.PDFWArray;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        p = $r0;
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ ");
        $r1 = this.<org.apache.fop.pdf.PDFWArray: java.util.List entries>;
        len = interfaceinvoke $r1.<java.util.List: int size()>();
        i = 0;

     label0:
        if i >= len goto label5;

        $r1 = this.<org.apache.fop.pdf.PDFWArray: java.util.List entries>;
        entry = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i);
        $z0 = entry instanceof int[];
        if $z0 == 0 goto label3;

        $r2 = (int[]) entry;
        line = (int[]) $r2;
        j = 0;

     label1:
        $i0 = lengthof line;
        if j >= $i0 goto label2;

        $i0 = line[j];
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        j = j + 1;
        goto label1;

     label2:
        goto label4;

     label3:
        $r3 = (org.apache.fop.pdf.PDFWArray$Entry) entry;
        virtualinvoke $r3.<org.apache.fop.pdf.PDFWArray$Entry: void fillInPDF(java.lang.StringBuffer)>(p);

     label4:
        i = i + 1;
        goto label0;

     label5:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r4 = virtualinvoke p.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }
}

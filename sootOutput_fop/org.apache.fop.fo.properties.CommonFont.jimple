public final class org.apache.fop.fo.properties.CommonFont extends java.lang.Object
{
    private static final org.apache.fop.fo.properties.PropertyCache cache;
    private final org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont;
    public final org.apache.fop.datatypes.Length fontSize;
    public final org.apache.fop.datatypes.Numeric fontSizeAdjust;

    private void <init>(org.apache.fop.fo.properties.CommonFont$CachedCommonFont, org.apache.fop.datatypes.Length, org.apache.fop.datatypes.Numeric)
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont ccf;
        org.apache.fop.datatypes.Length fontSize;
        org.apache.fop.datatypes.Numeric fontSizeAdjust;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        ccf := @parameter0: org.apache.fop.fo.properties.CommonFont$CachedCommonFont;
        fontSize := @parameter1: org.apache.fop.datatypes.Length;
        fontSizeAdjust := @parameter2: org.apache.fop.datatypes.Numeric;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont> = ccf;
        this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize> = fontSize;
        this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Numeric fontSizeAdjust> = fontSizeAdjust;
        return;
    }

    public static org.apache.fop.fo.properties.CommonFont getInstance(org.apache.fop.fo.PropertyList) throws org.apache.fop.fo.expr.PropertyException
    {
        org.apache.fop.fo.PropertyList pList;
        org.apache.fop.fo.properties.FontFamilyProperty fontFamily;
        org.apache.fop.fo.properties.EnumProperty fontSelectionStrategy, fontStretch, fontStyle, fontVariant, fontWeight;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont;
        org.apache.fop.datatypes.Numeric fontSizeAdjust;
        org.apache.fop.datatypes.Length fontSize;
        org.apache.fop.fo.properties.CommonFont cf, $r1;
        org.apache.fop.fo.properties.Property $r0;
        boolean $z0;
        org.apache.fop.fo.properties.PropertyCache $r2;

        pList := @parameter0: org.apache.fop.fo.PropertyList;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(92);
        fontFamily = (org.apache.fop.fo.properties.FontFamilyProperty) $r0;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(93);
        fontSelectionStrategy = (org.apache.fop.fo.properties.EnumProperty) $r0;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(96);
        fontStretch = (org.apache.fop.fo.properties.EnumProperty) $r0;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(97);
        fontStyle = (org.apache.fop.fo.properties.EnumProperty) $r0;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(98);
        fontVariant = (org.apache.fop.fo.properties.EnumProperty) $r0;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(99);
        fontWeight = (org.apache.fop.fo.properties.EnumProperty) $r0;
        cachedCommonFont = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont access$000(org.apache.fop.fo.properties.FontFamilyProperty,org.apache.fop.fo.properties.EnumProperty,org.apache.fop.fo.properties.EnumProperty,org.apache.fop.fo.properties.EnumProperty,org.apache.fop.fo.properties.EnumProperty,org.apache.fop.fo.properties.EnumProperty)>(fontFamily, fontSelectionStrategy, fontStretch, fontStyle, fontVariant, fontWeight);
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(95);
        fontSizeAdjust = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(94);
        fontSize = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $r1 = new org.apache.fop.fo.properties.CommonFont;
        specialinvoke $r1.<org.apache.fop.fo.properties.CommonFont: void <init>(org.apache.fop.fo.properties.CommonFont$CachedCommonFont,org.apache.fop.datatypes.Length,org.apache.fop.datatypes.Numeric)>(cachedCommonFont, fontSize, fontSizeAdjust);
        cf = $r1;
        $z0 = interfaceinvoke fontSize.<org.apache.fop.datatypes.Length: boolean isAbsolute()>();
        if $z0 == 0 goto label0;

        $z0 = interfaceinvoke fontSizeAdjust.<org.apache.fop.datatypes.Numeric: boolean isAbsolute()>();
        if $z0 == 0 goto label0;

        $r2 = <org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.PropertyCache cache>;
        $r1 = virtualinvoke $r2.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.CommonFont fetch(org.apache.fop.fo.properties.CommonFont)>(cf);
        return $r1;

     label0:
        return cf;
    }

    public java.lang.String getFirstFontFamily()
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        java.lang.String $r1;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: java.lang.String access$100(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        return $r1;
    }

    public int getFontSelectionStrategy()
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        org.apache.fop.fo.properties.EnumProperty $r1;
        int $i0;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$200(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        return $i0;
    }

    public int getFontStretch()
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        org.apache.fop.fo.properties.EnumProperty $r1;
        int $i0;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$300(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        return $i0;
    }

    public int getFontStyle()
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        org.apache.fop.fo.properties.EnumProperty $r1;
        int $i0;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$400(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        return $i0;
    }

    public int getFontVariant()
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        org.apache.fop.fo.properties.EnumProperty $r1;
        int $i0;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$500(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        return $i0;
    }

    public int getFontWeight()
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        org.apache.fop.fo.properties.EnumProperty $r1;
        int $i0;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$600(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        return $i0;
    }

    public org.apache.fop.fonts.FontTriplet[] getFontState(org.apache.fop.fonts.FontInfo)
    {
        org.apache.fop.fo.properties.CommonFont this;
        org.apache.fop.fonts.FontInfo fontInfo;
        short font_weight;
        java.lang.String style;
        org.apache.fop.fonts.FontTriplet[] triplets;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0, $r2;
        org.apache.fop.fo.properties.EnumProperty $r1;
        int $i0;
        java.lang.String[] $r3;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        fontInfo := @parameter0: org.apache.fop.fonts.FontInfo;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$600(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        tableswitch($i0)
        {
            case 169: goto label0;
            case 170: goto label1;
            case 171: goto label2;
            case 172: goto label3;
            case 173: goto label4;
            case 174: goto label5;
            case 175: goto label6;
            case 176: goto label7;
            case 177: goto label8;
            default: goto label9;
        };

     label0:
        font_weight = 100;
        goto label10;

     label1:
        font_weight = 200;
        goto label10;

     label2:
        font_weight = 300;
        goto label10;

     label3:
        font_weight = 400;
        goto label10;

     label4:
        font_weight = 500;
        goto label10;

     label5:
        font_weight = 600;
        goto label10;

     label6:
        font_weight = 700;
        goto label10;

     label7:
        font_weight = 800;
        goto label10;

     label8:
        font_weight = 900;
        goto label10;

     label9:
        font_weight = 400;

     label10:
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: org.apache.fop.fo.properties.EnumProperty access$400(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r0);
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.EnumProperty: int getEnum()>();
        tableswitch($i0)
        {
            case 164: goto label11;
            case 165: goto label12;
            case 166: goto label13;
            default: goto label14;
        };

     label11:
        style = "italic";
        goto label15;

     label12:
        style = "oblique";
        goto label15;

     label13:
        style = "backslant";
        goto label15;

     label14:
        style = "normal";

     label15:
        $r2 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r3 = staticinvoke <org.apache.fop.fo.properties.CommonFont$CachedCommonFont: java.lang.String[] access$700(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)>($r2);
        triplets = virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: org.apache.fop.fonts.FontTriplet[] fontLookup(java.lang.String[],java.lang.String,int)>($r3, style, font_weight);
        return triplets;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.fo.properties.CommonFont this, cf;
        java.lang.Object o;
        boolean $z0;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0, $r1;
        org.apache.fop.datatypes.Length $r2, $r3;
        org.apache.fop.datatypes.Numeric $r4, $r5;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        o := @parameter0: java.lang.Object;
        if this != o goto label0;

        return 1;

     label0:
        $z0 = o instanceof org.apache.fop.fo.properties.CommonFont;
        if $z0 == 0 goto label3;

        cf = (org.apache.fop.fo.properties.CommonFont) o;
        $r0 = cf.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $r1 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        if $r0 != $r1 goto label1;

        $r2 = cf.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize>;
        $r3 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize>;
        if $r2 != $r3 goto label1;

        $r4 = cf.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Numeric fontSizeAdjust>;
        $r5 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Numeric fontSizeAdjust>;
        if $r4 != $r5 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.apache.fop.fo.properties.CommonFont this;
        byte hash;
        int $i0, $i1, hash;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont $r0;
        org.apache.fop.datatypes.Length $r1;
        org.apache.fop.datatypes.Numeric $r2;

        this := @this: org.apache.fop.fo.properties.CommonFont;
        hash = 17;
        $i0 = 37 * hash;
        $r0 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.CommonFont$CachedCommonFont cachedCommonFont>;
        $i1 = virtualinvoke $r0.<org.apache.fop.fo.properties.CommonFont$CachedCommonFont: int hashCode()>();
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r1 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize>;
        $i1 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();
        hash = $i0 + $i1;
        $i0 = 37 * hash;
        $r2 = this.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Numeric fontSizeAdjust>;
        $i1 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();
        hash = $i0 + $i1;
        return hash;
    }

    static void <clinit>()
    {
        org.apache.fop.fo.properties.PropertyCache $r0;

        $r0 = new org.apache.fop.fo.properties.PropertyCache;
        specialinvoke $r0.<org.apache.fop.fo.properties.PropertyCache: void <init>()>();
        <org.apache.fop.fo.properties.CommonFont: org.apache.fop.fo.properties.PropertyCache cache> = $r0;
        return;
    }
}

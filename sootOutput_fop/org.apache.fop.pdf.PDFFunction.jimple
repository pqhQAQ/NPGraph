public class org.apache.fop.pdf.PDFFunction extends org.apache.fop.pdf.PDFObject
{
    protected int functionType;
    protected java.util.List domain;
    protected java.util.List range;
    protected java.util.List size;
    protected int bitsPerSample;
    protected int order;
    protected java.util.List encode;
    protected java.util.List decode;
    protected java.lang.StringBuffer functionDataStream;
    protected java.util.List filter;
    protected java.util.List cZero;
    protected java.util.List cOne;
    protected double interpolationExponentN;
    protected java.util.List functions;
    protected java.util.List bounds;

    public void <init>(int, java.util.List, java.util.List, java.util.List, int, int, java.util.List, java.util.List, java.lang.StringBuffer, java.util.List)
    {
        org.apache.fop.pdf.PDFFunction this;
        int theFunctionType, theBitsPerSample, theOrder;
        java.util.List theDomain, theRange, theSize, theEncode, theDecode, theFilter;
        java.lang.StringBuffer theFunctionDataStream;

        this := @this: org.apache.fop.pdf.PDFFunction;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theSize := @parameter3: java.util.List;
        theBitsPerSample := @parameter4: int;
        theOrder := @parameter5: int;
        theEncode := @parameter6: java.util.List;
        theDecode := @parameter7: java.util.List;
        theFunctionDataStream := @parameter8: java.lang.StringBuffer;
        theFilter := @parameter9: java.util.List;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List size> = null;
        this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample> = 1;
        this.<org.apache.fop.pdf.PDFFunction: int order> = 1;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List encode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List decode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List filter> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne> = null;
        this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN> = 1.0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List functions> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds> = null;
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List size> = theSize;
        this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample> = theBitsPerSample;
        this.<org.apache.fop.pdf.PDFFunction: int order> = theOrder;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List encode> = theEncode;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List decode> = theDecode;
        this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream> = theFunctionDataStream;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List filter> = theFilter;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = theDomain;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = theRange;
        return;
    }

    public void <init>(int, java.util.List, java.util.List, java.util.List, java.util.List, double)
    {
        org.apache.fop.pdf.PDFFunction this;
        int theFunctionType;
        java.util.List theDomain, theRange, theCZero, theCOne;
        double theInterpolationExponentN;

        this := @this: org.apache.fop.pdf.PDFFunction;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theCZero := @parameter3: java.util.List;
        theCOne := @parameter4: java.util.List;
        theInterpolationExponentN := @parameter5: double;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List size> = null;
        this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample> = 1;
        this.<org.apache.fop.pdf.PDFFunction: int order> = 1;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List encode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List decode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List filter> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne> = null;
        this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN> = 1.0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List functions> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds> = null;
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 2;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero> = theCZero;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne> = theCOne;
        this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN> = theInterpolationExponentN;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = theDomain;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = theRange;
        return;
    }

    public void <init>(int, java.util.List, java.util.List, java.util.List, java.util.List, java.util.List)
    {
        org.apache.fop.pdf.PDFFunction this;
        int theFunctionType;
        java.util.List theDomain, theRange, theFunctions, theBounds, theEncode;

        this := @this: org.apache.fop.pdf.PDFFunction;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theFunctions := @parameter3: java.util.List;
        theBounds := @parameter4: java.util.List;
        theEncode := @parameter5: java.util.List;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List size> = null;
        this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample> = 1;
        this.<org.apache.fop.pdf.PDFFunction: int order> = 1;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List encode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List decode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List filter> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne> = null;
        this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN> = 1.0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List functions> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds> = null;
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 3;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List functions> = theFunctions;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds> = theBounds;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List encode> = theEncode;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = theDomain;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = theRange;
        return;
    }

    public void <init>(int, java.util.List, java.util.List, java.lang.StringBuffer)
    {
        org.apache.fop.pdf.PDFFunction this;
        int theFunctionType;
        java.util.List theDomain, theRange;
        java.lang.StringBuffer theFunctionDataStream;

        this := @this: org.apache.fop.pdf.PDFFunction;
        theFunctionType := @parameter0: int;
        theDomain := @parameter1: java.util.List;
        theRange := @parameter2: java.util.List;
        theFunctionDataStream := @parameter3: java.lang.StringBuffer;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List size> = null;
        this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample> = 1;
        this.<org.apache.fop.pdf.PDFFunction: int order> = 1;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List encode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List decode> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List filter> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne> = null;
        this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN> = 1.0;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List functions> = null;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds> = null;
        this.<org.apache.fop.pdf.PDFFunction: int functionType> = 4;
        this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream> = theFunctionDataStream;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List domain> = theDomain;
        this.<org.apache.fop.pdf.PDFFunction: java.util.List range> = theRange;
        return;
    }

    public byte[] toPDF()
    {
        org.apache.fop.pdf.PDFFunction this, $r9;
        boolean vectorSize, tempInt;
        int numberOfFunctions, $i0, $i1, vectorSize, tempInt;
        java.lang.StringBuffer p, $r0, $r1, $r8;
        java.lang.String functionsFraction, $r2, $r3, $r11;
        java.util.List $r4, $r5;
        java.lang.Object $r6;
        java.lang.Double $r7, $r10;
        double $d0, $d1;
        null_type functionsFraction;
        byte[] $r12;

        this := @this: org.apache.fop.pdf.PDFFunction;
        vectorSize = 0;
        numberOfFunctions = 0;
        tempInt = 0;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(256);
        p = $r0;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFFunction: java.lang.String getObjectID()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<< \n/FunctionType ");
        $i0 = this.<org.apache.fop.pdf.PDFFunction: int functionType>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $i1 = this.<org.apache.fop.pdf.PDFFunction: int functionType>;
        if $i1 != 0 goto label27;

        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        if $r4 == null goto label2;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label0:
        if tempInt >= vectorSize goto label1;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label0;

     label1:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        goto label3;

     label2:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ 0 1 ] \n");

     label3:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        if $r4 == null goto label6;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Size [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label4:
        if tempInt >= vectorSize goto label5;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label4;

     label5:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label6:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        if $r4 == null goto label9;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Encode [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label7:
        if tempInt >= vectorSize goto label8;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label7;

     label8:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        goto label12;

     label9:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Encode [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label10:
        if tempInt >= vectorSize goto label11;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0 1 ");
        tempInt = tempInt + 1;
        goto label10;

     label11:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label12:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/BitsPerSample ");
        $i0 = this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $i1 = this.<org.apache.fop.pdf.PDFFunction: int order>;
        if $i1 == 1 goto label13;

        $i1 = this.<org.apache.fop.pdf.PDFFunction: int order>;
        if $i1 != 3 goto label14;

     label13:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n/Order ");
        $i0 = this.<org.apache.fop.pdf.PDFFunction: int order>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label14:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        if $r4 == null goto label17;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Range [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label15:
        if tempInt >= vectorSize goto label16;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label15;

     label16:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label17:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        if $r4 == null goto label20;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Decode [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label18:
        if tempInt >= vectorSize goto label19;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label18;

     label19:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label20:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        if $r0 == null goto label21;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Length ");
        $r8 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        $i0 = virtualinvoke $r8.<java.lang.StringBuffer: int length()>();
        $i0 = $i0 + 1;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label21:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        if $r4 == null goto label25;

        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Filter ");
        if vectorSize != 1 goto label22;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);
        $r2 = (java.lang.String) $r6;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        goto label25;

     label22:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[ ");
        tempInt = 0;

     label23:
        if tempInt >= vectorSize goto label24;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);
        $r2 = (java.lang.String) $r6;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label23;

     label24:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label25:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">> \n");
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        if $r0 == null goto label26;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("stream\n");
        $r8 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nendstream\n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label26:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endobj\n");
        goto label73;

     label27:
        $i1 = this.<org.apache.fop.pdf.PDFFunction: int functionType>;
        if $i1 != 2 goto label41;

        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        if $r4 == null goto label30;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label28:
        if tempInt >= vectorSize goto label29;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label28;

     label29:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        goto label31;

     label30:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ 0 1 ] \n");

     label31:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        if $r4 == null goto label34;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Range [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label32:
        if tempInt >= vectorSize goto label33;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label32;

     label33:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label34:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        if $r4 == null goto label37;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/C0 [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label35:
        if tempInt >= vectorSize goto label36;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label35;

     label36:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label37:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        if $r4 == null goto label40;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/C1 [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label38:
        if tempInt >= vectorSize goto label39;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label38;

     label39:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label40:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/N ");
        $r7 = new java.lang.Double;
        $d0 = this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN>;
        specialinvoke $r7.<java.lang.Double: void <init>(double)>($d0);
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">> \nendobj\n");
        goto label73;

     label41:
        $i1 = this.<org.apache.fop.pdf.PDFFunction: int functionType>;
        if $i1 != 3 goto label63;

        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        if $r4 == null goto label44;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label42:
        if tempInt >= vectorSize goto label43;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label42;

     label43:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        goto label45;

     label44:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ 0 1 ] \n");

     label45:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        if $r4 == null goto label48;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Range [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label46:
        if tempInt >= vectorSize goto label47;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label46;

     label47:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label48:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        if $r4 == null goto label51;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Functions [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        numberOfFunctions = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label49:
        if tempInt >= numberOfFunctions goto label50;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r9 = (org.apache.fop.pdf.PDFFunction) $r6;
        $r2 = virtualinvoke $r9.<org.apache.fop.pdf.PDFFunction: java.lang.String referencePDF()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label49;

     label50:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label51:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        if $r4 == null goto label54;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Encode [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label52:
        if tempInt >= vectorSize goto label53;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label52;

     label53:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        goto label57;

     label54:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Encode [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label55:
        if tempInt >= vectorSize goto label56;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0 1 ");
        tempInt = tempInt + 1;
        goto label55;

     label56:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label57:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Bounds [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        if $r4 == null goto label59;

        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label58:
        if tempInt >= vectorSize goto label62;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label58;

     label59:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        if $r4 == null goto label62;

        $r10 = new java.lang.Double;
        $d0 = (double) numberOfFunctions;
        $d1 = 1.0 / $d0;
        specialinvoke $r10.<java.lang.Double: void <init>(double)>($d1);
        functionsFraction = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r10);
        tempInt = 0;

     label60:
        $i1 = tempInt + 1;
        if $i1 >= numberOfFunctions goto label61;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(functionsFraction);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label60;

     label61:
        functionsFraction = null;

     label62:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">> \nendobj\n");
        goto label73;

     label63:
        $i1 = this.<org.apache.fop.pdf.PDFFunction: int functionType>;
        if $i1 != 4 goto label73;

        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        if $r4 == null goto label66;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label64:
        if tempInt >= vectorSize goto label65;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label64;

     label65:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");
        goto label67;

     label66:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Domain [ 0 1 ] \n");

     label67:
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        if $r4 == null goto label70;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Range [ ");
        $r4 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        vectorSize = interfaceinvoke $r4.<java.util.List: int size()>();
        tempInt = 0;

     label68:
        if tempInt >= vectorSize goto label69;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r5 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(tempInt);
        $r7 = (java.lang.Double) $r6;
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(java.lang.Double)>($r7);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        tempInt = tempInt + 1;
        goto label68;

     label69:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n");

     label70:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        if $r0 == null goto label71;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Length ");
        $r8 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        $i0 = virtualinvoke $r8.<java.lang.StringBuffer: int length()>();
        $i0 = $i0 + 1;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label71:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">> \n");
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        if $r0 == null goto label72;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("stream\n{ ");
        $r8 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" } \nendstream\n");
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label72:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endobj\n");

     label73:
        $r11 = virtualinvoke p.<java.lang.StringBuffer: java.lang.String toString()>();
        $r12 = staticinvoke <org.apache.fop.pdf.PDFFunction: byte[] encode(java.lang.String)>($r11);
        return $r12;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.pdf.PDFFunction this, func;
        java.lang.Object obj;
        boolean $z0;
        int $i0, $i1;
        double $d0, $d1;
        byte $b2;
        java.util.List $r0, $r1;
        java.lang.StringBuffer $r2, $r3;

        this := @this: org.apache.fop.pdf.PDFFunction;
        obj := @parameter0: java.lang.Object;
        if obj != null goto label0;

        return 0;

     label0:
        if obj != this goto label1;

        return 1;

     label1:
        $z0 = obj instanceof org.apache.fop.pdf.PDFFunction;
        if $z0 != 0 goto label2;

        return 0;

     label2:
        func = (org.apache.fop.pdf.PDFFunction) obj;
        $i0 = this.<org.apache.fop.pdf.PDFFunction: int functionType>;
        $i1 = func.<org.apache.fop.pdf.PDFFunction: int functionType>;
        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $i0 = this.<org.apache.fop.pdf.PDFFunction: int bitsPerSample>;
        $i1 = func.<org.apache.fop.pdf.PDFFunction: int bitsPerSample>;
        if $i0 == $i1 goto label4;

        return 0;

     label4:
        $i0 = this.<org.apache.fop.pdf.PDFFunction: int order>;
        $i1 = func.<org.apache.fop.pdf.PDFFunction: int order>;
        if $i0 == $i1 goto label5;

        return 0;

     label5:
        $d0 = this.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN>;
        $d1 = func.<org.apache.fop.pdf.PDFFunction: double interpolationExponentN>;
        $b2 = $d0 cmpl $d1;
        if $b2 == 0 goto label6;

        return 0;

     label6:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        if $r0 == null goto label7;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label8;

        return 0;

     label7:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List domain>;
        if $r0 == null goto label8;

        return 0;

     label8:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        if $r0 == null goto label9;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label10;

        return 0;

     label9:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List range>;
        if $r0 == null goto label10;

        return 0;

     label10:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        if $r0 == null goto label11;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label12;

        return 0;

     label11:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List size>;
        if $r0 == null goto label12;

        return 0;

     label12:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        if $r0 == null goto label13;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label14;

        return 0;

     label13:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List encode>;
        if $r0 == null goto label14;

        return 0;

     label14:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        if $r0 == null goto label15;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label16;

        return 0;

     label15:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List decode>;
        if $r0 == null goto label16;

        return 0;

     label16:
        $r2 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        if $r2 == null goto label17;

        $r2 = this.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        $r3 = func.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);
        if $z0 != 0 goto label18;

        return 0;

     label17:
        $r2 = func.<org.apache.fop.pdf.PDFFunction: java.lang.StringBuffer functionDataStream>;
        if $r2 == null goto label18;

        return 0;

     label18:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        if $r0 == null goto label19;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label20;

        return 0;

     label19:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List filter>;
        if $r0 == null goto label20;

        return 0;

     label20:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        if $r0 == null goto label21;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label22;

        return 0;

     label21:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List cZero>;
        if $r0 == null goto label22;

        return 0;

     label22:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        if $r0 == null goto label23;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label24;

        return 0;

     label23:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List cOne>;
        if $r0 == null goto label24;

        return 0;

     label24:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        if $r0 == null goto label25;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label26;

        return 0;

     label25:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List functions>;
        if $r0 == null goto label26;

        return 0;

     label26:
        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        if $r0 == null goto label27;

        $r0 = this.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        $r1 = func.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        $z0 = interfaceinvoke $r0.<java.util.List: boolean equals(java.lang.Object)>($r1);
        if $z0 != 0 goto label28;

        return 0;

     label27:
        $r0 = func.<org.apache.fop.pdf.PDFFunction: java.util.List bounds>;
        if $r0 == null goto label28;

        return 0;

     label28:
        return 1;
    }
}

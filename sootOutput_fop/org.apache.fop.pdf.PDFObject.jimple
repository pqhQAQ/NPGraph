public abstract class org.apache.fop.pdf.PDFObject extends java.lang.Object implements org.apache.fop.pdf.PDFWritable
{
    protected static org.apache.commons.logging.Log log;
    private int objnum;
    private int generation;
    private org.apache.fop.pdf.PDFDocument document;
    private org.apache.fop.pdf.PDFObject parent;
    protected static final java.text.SimpleDateFormat DATE_FORMAT;
    static java.lang.Class class$org$apache$fop$pdf$PDFObject;

    public int getObjectNumber()
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.IllegalStateException $r1;
        java.lang.String $r2, $r3;

        this := @this: org.apache.fop.pdf.PDFObject;
        $i0 = this.<org.apache.fop.pdf.PDFObject: int objnum>;
        if $i0 != 0 goto label0;

        $r1 = new java.lang.IllegalStateException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Object has no number assigned: ");
        $r2 = virtualinvoke this.<java.lang.Object: java.lang.String toString()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r3);
        throw $r1;

     label0:
        $i0 = this.<org.apache.fop.pdf.PDFObject: int objnum>;
        return $i0;
    }

    public void <init>()
    {
        org.apache.fop.pdf.PDFObject this;

        this := @this: org.apache.fop.pdf.PDFObject;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.pdf.PDFObject: int generation> = 0;
        return;
    }

    public void <init>(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFObject this, parent;

        this := @this: org.apache.fop.pdf.PDFObject;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.pdf.PDFObject: int generation> = 0;
        virtualinvoke this.<org.apache.fop.pdf.PDFObject: void setParent(org.apache.fop.pdf.PDFObject)>(parent);
        return;
    }

    public boolean hasObjectNumber()
    {
        org.apache.fop.pdf.PDFObject this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $i0 = this.<org.apache.fop.pdf.PDFObject: int objnum>;
        if $i0 <= 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setObjectNumber(int)
    {
        org.apache.fop.pdf.PDFObject this;
        int objnum;
        org.apache.fop.pdf.PDFDocument doc;
        org.apache.commons.logging.Log $r0;
        boolean $z0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.pdf.PDFObject;
        objnum := @parameter0: int;
        this.<org.apache.fop.pdf.PDFObject: int objnum> = objnum;
        doc = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocument()>();
        virtualinvoke this.<org.apache.fop.pdf.PDFObject: void setParent(org.apache.fop.pdf.PDFObject)>(null);
        virtualinvoke this.<org.apache.fop.pdf.PDFObject: void setDocument(org.apache.fop.pdf.PDFDocument)>(doc);
        $r0 = <org.apache.fop.pdf.PDFObject: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.pdf.PDFObject: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Assigning ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(this);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" object number ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(objnum);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r2);

     label0:
        return;
    }

    public int getGeneration()
    {
        org.apache.fop.pdf.PDFObject this;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $i0 = this.<org.apache.fop.pdf.PDFObject: int generation>;
        return $i0;
    }

    public final org.apache.fop.pdf.PDFDocument getDocument()
    {
        org.apache.fop.pdf.PDFObject this, $r1;
        org.apache.fop.pdf.PDFDocument $r0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $r0 = this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument document>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument document>;
        return $r0;

     label0:
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFObject getParent()>();
        if $r1 == null goto label1;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFObject getParent()>();
        $r0 = virtualinvoke $r1.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocument()>();
        return $r0;

     label1:
        return null;
    }

    public final org.apache.fop.pdf.PDFDocument getDocumentSafely()
    {
        org.apache.fop.pdf.PDFObject this;
        org.apache.fop.pdf.PDFDocument doc;
        java.lang.StringBuffer $r0;
        java.lang.IllegalStateException $r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;

        this := @this: org.apache.fop.pdf.PDFObject;
        doc = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocument()>();
        if doc != null goto label0;

        $r1 = new java.lang.IllegalStateException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Parent PDFDocument is unavailable on ");
        $r2 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);
        throw $r1;

     label0:
        return doc;
    }

    public void setDocument(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFObject this;
        org.apache.fop.pdf.PDFDocument doc;

        this := @this: org.apache.fop.pdf.PDFObject;
        doc := @parameter0: org.apache.fop.pdf.PDFDocument;
        this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument document> = doc;
        return;
    }

    public org.apache.fop.pdf.PDFObject getParent()
    {
        org.apache.fop.pdf.PDFObject this, $r0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $r0 = this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFObject parent>;
        return $r0;
    }

    public void setParent(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFObject this, parent;

        this := @this: org.apache.fop.pdf.PDFObject;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFObject parent> = parent;
        return;
    }

    public java.lang.String getObjectID()
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r1;

        this := @this: org.apache.fop.pdf.PDFObject;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: int getObjectNumber()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: int getGeneration()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" obj\n");
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public java.lang.String referencePDF()
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.String ref;
        boolean $z0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuffer $r1;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: boolean hasObjectNumber()>();
        if $z0 != 0 goto label0;

        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot reference this object. It doesn\'t have an object number");
        throw $r0;

     label0:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: int getObjectNumber()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: int getGeneration()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" R");
        ref = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        return ref;
    }

    public org.apache.fop.pdf.PDFReference makeReference()
    {
        org.apache.fop.pdf.PDFObject this;
        org.apache.fop.pdf.PDFReference $r0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $r0 = new org.apache.fop.pdf.PDFReference;
        specialinvoke $r0.<org.apache.fop.pdf.PDFReference: void <init>(org.apache.fop.pdf.PDFObject)>(this);
        return $r0;
    }

    protected int output(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFObject this;
        java.io.OutputStream stream;
        byte[] pdf;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFObject;
        stream := @parameter0: java.io.OutputStream;
        pdf = virtualinvoke this.<org.apache.fop.pdf.PDFObject: byte[] toPDF()>();
        virtualinvoke stream.<java.io.OutputStream: void write(byte[])>(pdf);
        $i0 = lengthof pdf;
        return $i0;
    }

    public void outputInline(java.io.OutputStream, java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFObject this;
        java.io.OutputStream out;
        java.io.Writer writer;
        boolean $z0;
        java.lang.String $r0;

        this := @this: org.apache.fop.pdf.PDFObject;
        out := @parameter0: java.io.OutputStream;
        writer := @parameter1: java.io.Writer;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: boolean hasObjectNumber()>();
        if $z0 == 0 goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: java.lang.String referencePDF()>();
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r0);
        goto label1;

     label0:
        virtualinvoke writer.<java.io.Writer: void flush()>();
        virtualinvoke this.<org.apache.fop.pdf.PDFObject: int output(java.io.OutputStream)>(out);

     label1:
        return;
    }

    protected byte[] toPDF()
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.String $r0;
        byte[] $r1;

        this := @this: org.apache.fop.pdf.PDFObject;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: java.lang.String toPDFString()>();
        $r1 = staticinvoke <org.apache.fop.pdf.PDFObject: byte[] encode(java.lang.String)>($r0);
        return $r1;
    }

    protected java.lang.String toPDFString()
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.UnsupportedOperationException $r0;

        this := @this: org.apache.fop.pdf.PDFObject;
        $r0 = new java.lang.UnsupportedOperationException;
        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not implemented. Use output(OutputStream) instead.");
        throw $r0;
    }

    public static final byte[] encode(java.lang.String)
    {
        java.lang.String text;
        byte[] $r0;

        text := @parameter0: java.lang.String;
        $r0 = staticinvoke <org.apache.fop.pdf.PDFDocument: byte[] encode(java.lang.String)>(text);
        return $r0;
    }

    protected byte[] encodeText(java.lang.String)
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.String text, $r3;
        byte[] buf, $r2;
        org.apache.fop.pdf.PDFDocument $r0;
        boolean $z0;
        org.apache.fop.pdf.PDFEncryption $r1;

        this := @this: org.apache.fop.pdf.PDFObject;
        text := @parameter0: java.lang.String;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocumentSafely()>();
        $z0 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: boolean isEncryptionActive()>();
        if $z0 == 0 goto label0;

        buf = staticinvoke <org.apache.fop.pdf.PDFText: byte[] toUTF16(java.lang.String)>(text);
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption getEncryption()>();
        $r2 = interfaceinvoke $r1.<org.apache.fop.pdf.PDFEncryption: byte[] encrypt(byte[],org.apache.fop.pdf.PDFObject)>(buf, this);
        $r2 = staticinvoke <org.apache.fop.pdf.PDFText: byte[] escapeByteArray(byte[])>($r2);
        return $r2;

     label0:
        $r3 = staticinvoke <org.apache.fop.pdf.PDFText: java.lang.String escapeText(java.lang.String,boolean)>(text, 0);
        $r2 = staticinvoke <org.apache.fop.pdf.PDFObject: byte[] encode(java.lang.String)>($r3);
        return $r2;
    }

    protected byte[] encodeString(java.lang.String)
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.String string;
        byte[] $r0;

        this := @this: org.apache.fop.pdf.PDFObject;
        string := @parameter0: java.lang.String;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: byte[] encodeText(java.lang.String)>(string);
        return $r0;
    }

    protected void encodeBinaryToHexString(byte[], java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFObject this;
        byte[] data, encoded;
        java.io.OutputStream out;
        java.lang.String hex;
        org.apache.fop.pdf.PDFDocument $r0;
        boolean $z0;
        org.apache.fop.pdf.PDFEncryption $r1;

        this := @this: org.apache.fop.pdf.PDFObject;
        data := @parameter0: byte[];
        out := @parameter1: java.io.OutputStream;
        virtualinvoke out.<java.io.OutputStream: void write(int)>(60);
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocumentSafely()>();
        $z0 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: boolean isEncryptionActive()>();
        if $z0 == 0 goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: org.apache.fop.pdf.PDFDocument getDocument()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.pdf.PDFDocument: org.apache.fop.pdf.PDFEncryption getEncryption()>();
        data = interfaceinvoke $r1.<org.apache.fop.pdf.PDFEncryption: byte[] encrypt(byte[],org.apache.fop.pdf.PDFObject)>(data, this);

     label0:
        hex = staticinvoke <org.apache.fop.pdf.PDFText: java.lang.String toHex(byte[],boolean)>(data, 0);
        encoded = virtualinvoke hex.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");
        virtualinvoke out.<java.io.OutputStream: void write(byte[])>(encoded);
        virtualinvoke out.<java.io.OutputStream: void write(int)>(62);
        return;
    }

    protected void formatObject(java.lang.Object, java.io.OutputStream, java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFObject this;
        java.lang.Object obj;
        java.io.OutputStream out;
        java.io.Writer writer;
        boolean $z0;
        org.apache.fop.pdf.PDFWritable $r0;
        java.lang.Number $r1;
        double $d0;
        java.lang.String $r2, $r4;
        byte[] $r3;

        this := @this: org.apache.fop.pdf.PDFObject;
        obj := @parameter0: java.lang.Object;
        out := @parameter1: java.io.OutputStream;
        writer := @parameter2: java.io.Writer;
        if obj != null goto label0;

        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>("null");
        goto label7;

     label0:
        $z0 = obj instanceof org.apache.fop.pdf.PDFWritable;
        if $z0 == 0 goto label1;

        $r0 = (org.apache.fop.pdf.PDFWritable) obj;
        interfaceinvoke $r0.<org.apache.fop.pdf.PDFWritable: void outputInline(java.io.OutputStream,java.io.Writer)>(out, writer);
        goto label7;

     label1:
        $z0 = obj instanceof java.lang.Number;
        if $z0 == 0 goto label4;

        $z0 = obj instanceof java.lang.Double;
        if $z0 != 0 goto label2;

        $z0 = obj instanceof java.lang.Float;
        if $z0 == 0 goto label3;

     label2:
        $r1 = (java.lang.Number) obj;
        $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>();
        $r2 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double)>($d0);
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r2);
        goto label7;

     label3:
        $r2 = virtualinvoke obj.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r2);
        goto label7;

     label4:
        $z0 = obj instanceof java.lang.Boolean;
        if $z0 == 0 goto label5;

        $r2 = virtualinvoke obj.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r2);
        goto label7;

     label5:
        $z0 = obj instanceof byte[];
        if $z0 == 0 goto label6;

        virtualinvoke writer.<java.io.Writer: void flush()>();
        $r3 = (byte[]) obj;
        $r3 = (byte[]) $r3;
        virtualinvoke this.<org.apache.fop.pdf.PDFObject: void encodeBinaryToHexString(byte[],java.io.OutputStream)>($r3, out);
        goto label7;

     label6:
        virtualinvoke writer.<java.io.Writer: void flush()>();
        $r4 = virtualinvoke obj.<java.lang.Object: java.lang.String toString()>();
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: byte[] encodeText(java.lang.String)>($r4);
        virtualinvoke out.<java.io.OutputStream: void write(byte[])>($r3);

     label7:
        return;
    }

    protected java.lang.String formatDateTime(java.util.Date, java.util.TimeZone)
    {
        org.apache.fop.pdf.PDFObject this;
        java.util.Date time, dt1, $r1;
        java.util.TimeZone tz;
        java.util.Locale $r0;
        java.util.Calendar cal;
        int offset, offsetHour, offsetMinutes, $i0, $i3;
        java.lang.StringBuffer sb, $r2;
        long $l1, $l2;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r4, $r5;

        this := @this: org.apache.fop.pdf.PDFObject;
        time := @parameter0: java.util.Date;
        tz := @parameter1: java.util.TimeZone;
        $r0 = <java.util.Locale: java.util.Locale ENGLISH>;
        cal = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(tz, $r0);
        virtualinvoke cal.<java.util.Calendar: void setTime(java.util.Date)>(time);
        offset = virtualinvoke cal.<java.util.Calendar: int get(int)>(15);
        $i0 = virtualinvoke cal.<java.util.Calendar: int get(int)>(16);
        offset = offset + $i0;
        $r1 = new java.util.Date;
        $l1 = virtualinvoke time.<java.util.Date: long getTime()>();
        $l2 = (long) offset;
        $l1 = $l1 + $l2;
        specialinvoke $r1.<java.util.Date: void <init>(long)>($l1);
        dt1 = $r1;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        sb = $r2;
        $r3 = <org.apache.fop.pdf.PDFObject: java.text.SimpleDateFormat DATE_FORMAT>;
        $r4 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(dt1);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        offset = offset / 60000;
        if offset != 0 goto label0;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(90);
        goto label5;

     label0:
        if offset <= 0 goto label1;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);
        goto label2;

     label1:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

     label2:
        $i3 = offset / 60;
        offsetHour = staticinvoke <java.lang.Math: int abs(int)>($i3);
        $i3 = offset % 60;
        offsetMinutes = staticinvoke <java.lang.Math: int abs(int)>($i3);
        if offsetHour >= 10 goto label3;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label3:
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(offsetHour);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);
        if offsetMinutes >= 10 goto label4;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label4:
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(offsetMinutes);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label5:
        $r5 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r5;
    }

    protected java.lang.String formatDateTime(java.util.Date)
    {
        org.apache.fop.pdf.PDFObject this;
        java.util.Date time;
        java.util.TimeZone $r0;
        java.lang.String $r1;

        this := @this: org.apache.fop.pdf.PDFObject;
        time := @parameter0: java.util.Date;
        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFObject: java.lang.String formatDateTime(java.util.Date,java.util.TimeZone)>(time, $r0);
        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.util.Locale $r1;
        java.lang.String $r2;
        org.apache.commons.logging.Log $r3;
        java.text.SimpleDateFormat $r4;
        java.util.TimeZone $r5;

        $r0 = <org.apache.fop.pdf.PDFObject: java.lang.Class class$org$apache$fop$pdf$PDFObject>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.pdf.PDFObject: java.lang.Class class$(java.lang.String)>("org.apache.fop.pdf.PDFObject");
        <org.apache.fop.pdf.PDFObject: java.lang.Class class$org$apache$fop$pdf$PDFObject> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.pdf.PDFObject: java.lang.Class class$org$apache$fop$pdf$PDFObject>;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();
        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>($r2);
        <org.apache.fop.pdf.PDFObject: org.apache.commons.logging.Log log> = $r3;
        $r4 = new java.text.SimpleDateFormat;
        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;
        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("\'D:\'yyyyMMddHHmmss", $r1);
        <org.apache.fop.pdf.PDFObject: java.text.SimpleDateFormat DATE_FORMAT> = $r4;
        $r4 = <org.apache.fop.pdf.PDFObject: java.text.SimpleDateFormat DATE_FORMAT>;
        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        virtualinvoke $r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);
        return;
    }
}

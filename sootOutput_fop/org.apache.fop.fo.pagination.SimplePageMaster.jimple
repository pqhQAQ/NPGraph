public class org.apache.fop.fo.pagination.SimplePageMaster extends org.apache.fop.fo.FObj
{
    private org.apache.fop.fo.properties.CommonMarginBlock commonMarginBlock;
    private java.lang.String masterName;
    private org.apache.fop.datatypes.Length pageHeight;
    private org.apache.fop.datatypes.Length pageWidth;
    private org.apache.fop.datatypes.Numeric referenceOrientation;
    private int writingMode;
    private java.util.Map regions;
    private boolean hasRegionBody;
    private boolean hasRegionBefore;
    private boolean hasRegionAfter;
    private boolean hasRegionStart;
    private boolean hasRegionEnd;

    public void <init>(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.fo.FONode parent;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        parent := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.FObj: void <init>(org.apache.fop.fo.FONode)>(parent);
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody> = 0;
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBefore> = 0;
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionAfter> = 0;
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionStart> = 0;
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionEnd> = 0;
        return;
    }

    public void bind(org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.fo.PropertyList pList;
        org.apache.fop.fo.properties.CommonMarginBlock $r0;
        org.apache.fop.fo.properties.Property $r1;
        java.lang.String $r2, $r5;
        org.apache.fop.datatypes.Length $r3;
        org.apache.fop.datatypes.Numeric $r4;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        pList := @parameter0: org.apache.fop.fo.PropertyList;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.CommonMarginBlock getMarginBlockProps()>();
        this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.properties.CommonMarginBlock commonMarginBlock> = $r0;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(140);
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        this.<org.apache.fop.fo.pagination.SimplePageMaster: java.lang.String masterName> = $r2;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(166);
        $r3 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Length pageHeight> = $r3;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(168);
        $r3 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Length pageWidth> = $r3;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(179);
        $r4 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Numeric referenceOrientation> = $r4;
        $i0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: int getWritingMode()>();
        this.<org.apache.fop.fo.pagination.SimplePageMaster: int writingMode> = $i0;
        $r5 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.lang.String masterName>;
        if $r5 == null goto label0;

        $r5 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.lang.String masterName>;
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("");
        if $z0 == 0 goto label1;

     label0:
        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void missingPropertyError(java.lang.String)>("master-name");

     label1:
        return;
    }

    protected void startOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.fo.pagination.LayoutMasterSet layoutMasterSet;
        org.apache.fop.fo.FONode $r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.FONode parent>;
        layoutMasterSet = (org.apache.fop.fo.pagination.LayoutMasterSet) $r0;
        $r1 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.lang.String masterName>;
        if $r1 != null goto label0;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void missingPropertyError(java.lang.String)>("master-name");
        goto label1;

     label0:
        virtualinvoke layoutMasterSet.<org.apache.fop.fo.pagination.LayoutMasterSet: void addSimplePageMaster(org.apache.fop.fo.pagination.SimplePageMaster)>(this);

     label1:
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(5);
        this.<org.apache.fop.fo.pagination.SimplePageMaster: java.util.Map regions> = $r2;
        return;
    }

    protected void endOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody>;
        if $z0 != 0 goto label0;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void missingChildElementError(java.lang.String)>("(region-body, region-before?, region-after?, region-start?, region-end?)");

     label0:
        return;
    }

    protected void validateChildNode(org.xml.sax.Locator, java.lang.String, java.lang.String) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.xml.sax.Locator loc;
        java.lang.String nsURI, localName, $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        loc := @parameter0: org.xml.sax.Locator;
        nsURI := @parameter1: java.lang.String;
        localName := @parameter2: java.lang.String;
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label1;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("region-body");
        if $z0 == 0 goto label1;

        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody>;
        if $z0 == 0 goto label0;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:region-body");
        goto label20;

     label0:
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody> = 1;
        goto label20;

     label1:
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label7;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("region-before");
        if $z0 == 0 goto label7;

        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody>;
        if $z0 != 0 goto label2;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-body", "fo:region-before");
        goto label20;

     label2:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBefore>;
        if $z0 == 0 goto label3;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:region-before");
        goto label20;

     label3:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionAfter>;
        if $z0 == 0 goto label4;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-before", "fo:region-after");
        goto label20;

     label4:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionStart>;
        if $z0 == 0 goto label5;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-before", "fo:region-start");
        goto label20;

     label5:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionEnd>;
        if $z0 == 0 goto label6;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-before", "fo:region-end");
        goto label20;

     label6:
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody> = 1;
        goto label20;

     label7:
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label12;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("region-after");
        if $z0 == 0 goto label12;

        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody>;
        if $z0 != 0 goto label8;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-body", "fo:region-after");
        goto label20;

     label8:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionAfter>;
        if $z0 == 0 goto label9;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:region-after");
        goto label20;

     label9:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionStart>;
        if $z0 == 0 goto label10;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-after", "fo:region-start");
        goto label20;

     label10:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionEnd>;
        if $z0 == 0 goto label11;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-after", "fo:region-end");
        goto label20;

     label11:
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionAfter> = 1;
        goto label20;

     label12:
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label16;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("region-start");
        if $z0 == 0 goto label16;

        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody>;
        if $z0 != 0 goto label13;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-body", "fo:region-start");
        goto label20;

     label13:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionStart>;
        if $z0 == 0 goto label14;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:region-start");
        goto label20;

     label14:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionEnd>;
        if $z0 == 0 goto label15;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-start", "fo:region-end");
        goto label20;

     label15:
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionStart> = 1;
        goto label20;

     label16:
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label19;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("region-end");
        if $z0 == 0 goto label19;

        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionBody>;
        if $z0 != 0 goto label17;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:region-body", "fo:region-end");
        goto label20;

     label17:
        $z0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionEnd>;
        if $z0 == 0 goto label18;

        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:region-end");
        goto label20;

     label18:
        this.<org.apache.fop.fo.pagination.SimplePageMaster: boolean hasRegionEnd> = 1;
        goto label20;

     label19:
        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);

     label20:
        return;
    }

    public boolean generatesReferenceAreas()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        return 1;
    }

    protected void addChildNode(org.apache.fop.fo.FONode) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.fo.FONode child;
        boolean $z0;
        org.apache.fop.fo.pagination.Region $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        child := @parameter0: org.apache.fop.fo.FONode;
        $z0 = child instanceof org.apache.fop.fo.pagination.Region;
        if $z0 == 0 goto label0;

        $r0 = (org.apache.fop.fo.pagination.Region) child;
        virtualinvoke this.<org.apache.fop.fo.pagination.SimplePageMaster: void addRegion(org.apache.fop.fo.pagination.Region)>($r0);
        goto label1;

     label0:
        specialinvoke this.<org.apache.fop.fo.FObj: void addChildNode(org.apache.fop.fo.FONode)>(child);

     label1:
        return;
    }

    protected void addRegion(org.apache.fop.fo.pagination.Region)
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.fo.pagination.Region region;
        java.lang.String key;
        int $i0;
        java.util.Map $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        region := @parameter0: org.apache.fop.fo.pagination.Region;
        $i0 = virtualinvoke region.<org.apache.fop.fo.pagination.Region: int getNameId()>();
        key = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.util.Map regions>;
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, region);
        return;
    }

    public org.apache.fop.fo.pagination.Region getRegion(int)
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        int regionId;
        java.util.Map $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.apache.fop.fo.pagination.Region $r3;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        regionId := @parameter0: int;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.util.Map regions>;
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(regionId);
        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);
        $r3 = (org.apache.fop.fo.pagination.Region) $r2;
        return $r3;
    }

    public java.util.Map getRegions()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        java.util.Map $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.util.Map regions>;
        return $r0;
    }

    protected boolean regionNameExists(java.lang.String)
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        java.lang.String regionName, $r3;
        java.util.Iterator regenum;
        org.apache.fop.fo.pagination.Region r;
        java.util.Map $r0;
        java.util.Collection $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        regionName := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.util.Map regions>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>();
        regenum = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke regenum.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke regenum.<java.util.Iterator: java.lang.Object next()>();
        r = (org.apache.fop.fo.pagination.Region) $r2;
        $r3 = virtualinvoke r.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(regionName);
        if $z0 == 0 goto label1;

        return 1;

     label1:
        goto label0;

     label2:
        return 0;
    }

    public org.apache.fop.fo.properties.CommonMarginBlock getCommonMarginBlock()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.fo.properties.CommonMarginBlock $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.properties.CommonMarginBlock commonMarginBlock>;
        return $r0;
    }

    public java.lang.String getMasterName()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: java.lang.String masterName>;
        return $r0;
    }

    public org.apache.fop.datatypes.Length getPageWidth()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.datatypes.Length $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Length pageWidth>;
        return $r0;
    }

    public org.apache.fop.datatypes.Length getPageHeight()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.datatypes.Length $r0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Length pageHeight>;
        return $r0;
    }

    public int getWritingMode()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        int $i0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $i0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: int writingMode>;
        return $i0;
    }

    public int getReferenceOrientation()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;
        org.apache.fop.datatypes.Numeric $r0;
        int $i0;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        $r0 = this.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Numeric referenceOrientation>;
        $i0 = interfaceinvoke $r0.<org.apache.fop.datatypes.Numeric: int getValue()>();
        return $i0;
    }

    public java.lang.String getLocalName()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        return "simple-page-master";
    }

    public int getNameId()
    {
        org.apache.fop.fo.pagination.SimplePageMaster this;

        this := @this: org.apache.fop.fo.pagination.SimplePageMaster;
        return 43;
    }
}

public class org.apache.fop.svg.PDFTextUtil extends java.lang.Object
{
    private static final int DEC;
    public static final int TR_FILL;
    public static final int TR_STROKE;
    public static final int TR_FILL_STROKE;
    public static final int TR_INVISIBLE;
    public static final int TR_FILL_CLIP;
    public static final int TR_STROKE_CLIP;
    public static final int TR_FILL_STROKE_CLIP;
    public static final int TR_CLIP;
    private org.apache.fop.svg.PDFGraphics2D g2d;
    private boolean inTextObject;
    private org.apache.fop.fonts.Font[] fonts;
    private org.apache.fop.fonts.Font font;
    private java.lang.String startText;
    private java.lang.String endText;
    private boolean useMultiByte;
    private java.lang.StringBuffer bufTJ;
    private int textRenderingMode;

    public void <init>(org.apache.fop.svg.PDFGraphics2D)
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.svg.PDFGraphics2D g2d;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        g2d := @parameter0: org.apache.fop.svg.PDFGraphics2D;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.svg.PDFTextUtil: boolean inTextObject> = 0;
        this.<org.apache.fop.svg.PDFTextUtil: int textRenderingMode> = 0;
        this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d> = g2d;
        return;
    }

    private void writeAffineTransform(java.awt.geom.AffineTransform, java.lang.StringBuffer)
    {
        org.apache.fop.svg.PDFTextUtil this;
        java.awt.geom.AffineTransform at;
        java.lang.StringBuffer sb, $r1;
        double[] lt;
        double $d0;
        java.lang.String $r0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        at := @parameter0: java.awt.geom.AffineTransform;
        sb := @parameter1: java.lang.StringBuffer;
        lt = newarray (double)[6];
        virtualinvoke at.<java.awt.geom.AffineTransform: void getMatrix(double[])>(lt);
        $d0 = lt[0];
        $r0 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>($d0, 8);
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $d0 = lt[1];
        $r0 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>($d0, 8);
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $d0 = lt[2];
        $r0 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>($d0, 8);
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $d0 = lt[3];
        $r0 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>($d0, 8);
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $d0 = lt[4];
        $r0 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>($d0, 8);
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $d0 = lt[5];
        $r0 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>($d0, 8);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);
        return;
    }

    private void writeChar(char, java.lang.StringBuffer)
    {
        org.apache.fop.svg.PDFTextUtil this;
        char ch;
        java.lang.StringBuffer sb, $r0;
        boolean $z0;
        java.lang.String $r1;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        ch := @parameter0: char;
        sb := @parameter1: java.lang.StringBuffer;
        $z0 = this.<org.apache.fop.svg.PDFTextUtil: boolean useMultiByte>;
        if $z0 != 0 goto label3;

        if ch <= 127 goto label0;

        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");
        $r1 = staticinvoke <java.lang.Integer: java.lang.String toOctalString(int)>(ch);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        goto label4;

     label0:
        lookupswitch(ch)
        {
            case 40: goto label1;
            case 41: goto label1;
            case 92: goto label1;
            default: goto label2;
        };

     label1:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\");
        goto label2;

     label2:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(ch);
        goto label4;

     label3:
        $r1 = staticinvoke <org.apache.fop.pdf.PDFText: java.lang.String toUnicodeHex(char)>(ch);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label4:
        return;
    }

    private void checkInTextObject()
    {
        org.apache.fop.svg.PDFTextUtil this;
        boolean $z0;
        java.lang.IllegalStateException $r0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $z0 = this.<org.apache.fop.svg.PDFTextUtil: boolean inTextObject>;
        if $z0 != 0 goto label0;

        $r0 = new java.lang.IllegalStateException;
        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not in text object");
        throw $r0;

     label0:
        return;
    }

    public void beginTextObject()
    {
        org.apache.fop.svg.PDFTextUtil this;
        boolean $z0;
        java.lang.IllegalStateException $r0;
        org.apache.fop.svg.PDFGraphics2D $r1;
        java.io.StringWriter $r2;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $z0 = this.<org.apache.fop.svg.PDFTextUtil: boolean inTextObject>;
        if $z0 == 0 goto label0;

        $r0 = new java.lang.IllegalStateException;
        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already in text object");
        throw $r0;

     label0:
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r2 = $r1.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        virtualinvoke $r2.<java.io.StringWriter: void write(java.lang.String)>("BT\n");
        this.<org.apache.fop.svg.PDFTextUtil: boolean inTextObject> = 1;
        return;
    }

    public void endTextObject()
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.svg.PDFGraphics2D $r0;
        java.io.StringWriter $r1;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        specialinvoke this.<org.apache.fop.svg.PDFTextUtil: void checkInTextObject()>();
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r1 = $r0.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        virtualinvoke $r1.<java.io.StringWriter: void write(java.lang.String)>("ET\n");
        this.<org.apache.fop.svg.PDFTextUtil: boolean inTextObject> = 0;
        specialinvoke this.<org.apache.fop.svg.PDFTextUtil: void initValues()>();
        return;
    }

    private void initValues()
    {
        org.apache.fop.svg.PDFTextUtil this;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font font> = null;
        this.<org.apache.fop.svg.PDFTextUtil: int textRenderingMode> = 0;
        return;
    }

    public void saveGraphicsState()
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.svg.PDFGraphics2D $r0;
        java.io.StringWriter $r1;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r1 = $r0.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        virtualinvoke $r1.<java.io.StringWriter: void write(java.lang.String)>("q\n");
        return;
    }

    public void restoreGraphicsState()
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.svg.PDFGraphics2D $r0;
        java.io.StringWriter $r1;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r1 = $r0.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        virtualinvoke $r1.<java.io.StringWriter: void write(java.lang.String)>("Q\n");
        return;
    }

    public void concatMatrixCurrentTransform()
    {
        org.apache.fop.svg.PDFTextUtil this;
        java.lang.StringBuffer $r0, sb;
        org.apache.fop.svg.PDFGraphics2D $r1, $r3;
        java.awt.geom.AffineTransform $r2, $r4;
        boolean $z0;
        java.io.StringWriter $r5;
        java.lang.String $r6;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r2 = virtualinvoke $r1.<org.apache.fop.svg.PDFGraphics2D: java.awt.geom.AffineTransform getTransform()>();
        $z0 = virtualinvoke $r2.<java.awt.geom.AffineTransform: boolean isIdentity()>();
        if $z0 != 0 goto label0;

        $r3 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r4 = virtualinvoke $r3.<org.apache.fop.svg.PDFGraphics2D: java.awt.geom.AffineTransform getTransform()>();
        specialinvoke this.<org.apache.fop.svg.PDFTextUtil: void writeAffineTransform(java.awt.geom.AffineTransform,java.lang.StringBuffer)>($r4, sb);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cm\n");

     label0:
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r5 = $r1.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        $r6 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r5.<java.io.StringWriter: void write(java.lang.String)>($r6);
        return;
    }

    public void setFonts(org.apache.fop.fonts.Font[])
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.fonts.Font[] fonts;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        fonts := @parameter0: org.apache.fop.fonts.Font[];
        this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font[] fonts> = fonts;
        return;
    }

    public void setFont(org.apache.fop.fonts.Font)
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.fonts.Font font;
        org.apache.fop.fonts.Font[] $r0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        font := @parameter0: org.apache.fop.fonts.Font;
        $r0 = newarray (org.apache.fop.fonts.Font)[1];
        $r0[0] = font;
        virtualinvoke this.<org.apache.fop.svg.PDFTextUtil: void setFonts(org.apache.fop.fonts.Font[])>($r0);
        return;
    }

    public org.apache.fop.fonts.Font getCurrentFont()
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.fonts.Font $r0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font font>;
        return $r0;
    }

    public void setCurrentFont(org.apache.fop.fonts.Font)
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.fonts.Font f;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        f := @parameter0: org.apache.fop.fonts.Font;
        this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font font> = f;
        return;
    }

    public void writeTf(org.apache.fop.fonts.Font)
    {
        org.apache.fop.svg.PDFTextUtil this;
        org.apache.fop.fonts.Font f;
        java.lang.String fontName, $r3, $r4;
        float fontSize, $f0;
        int $i0;
        org.apache.fop.svg.PDFGraphics2D $r0, $r5;
        java.io.StringWriter $r1;
        java.lang.StringBuffer $r2;
        double $d0;
        boolean $z0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        f := @parameter0: org.apache.fop.fonts.Font;
        specialinvoke this.<org.apache.fop.svg.PDFTextUtil: void checkInTextObject()>();
        fontName = virtualinvoke f.<org.apache.fop.fonts.Font: java.lang.String getFontName()>();
        $i0 = virtualinvoke f.<org.apache.fop.fonts.Font: int getFontSize()>();
        $f0 = (float) $i0;
        fontSize = $f0 / 1000.0F;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r1 = $r0.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(fontName);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $d0 = (double) fontSize;
        $r3 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double)>($d0);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Tf\n");
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r1.<java.io.StringWriter: void write(java.lang.String)>($r4);
        $r5 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $z0 = virtualinvoke $r5.<org.apache.fop.svg.PDFGraphics2D: boolean isMultiByteFont(java.lang.String)>(fontName);
        this.<org.apache.fop.svg.PDFTextUtil: boolean useMultiByte> = $z0;
        $z0 = this.<org.apache.fop.svg.PDFTextUtil: boolean useMultiByte>;
        if $z0 == 0 goto label0;

        $r4 = "<";
        goto label1;

     label0:
        $r4 = "(";

     label1:
        this.<org.apache.fop.svg.PDFTextUtil: java.lang.String startText> = $r4;
        $z0 = this.<org.apache.fop.svg.PDFTextUtil: boolean useMultiByte>;
        if $z0 == 0 goto label2;

        $r4 = ">";
        goto label3;

     label2:
        $r4 = ")";

     label3:
        this.<org.apache.fop.svg.PDFTextUtil: java.lang.String endText> = $r4;
        return;
    }

    public void setTextRenderingMode(int)
    {
        org.apache.fop.svg.PDFTextUtil this;
        int mode, $i0, $i1;
        java.lang.IllegalArgumentException $r0;
        org.apache.fop.svg.PDFGraphics2D $r1;
        java.io.StringWriter $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r4;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        mode := @parameter0: int;
        if mode < 0 goto label0;

        if mode <= 7 goto label1;

     label0:
        $r0 = new java.lang.IllegalArgumentException;
        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal value for text rendering mode. Expected: 0-7");
        throw $r0;

     label1:
        $i0 = this.<org.apache.fop.svg.PDFTextUtil: int textRenderingMode>;
        if mode == $i0 goto label2;

        this.<org.apache.fop.svg.PDFTextUtil: int textRenderingMode> = mode;
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r2 = $r1.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $i1 = this.<org.apache.fop.svg.PDFTextUtil: int textRenderingMode>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Tr\n");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r2.<java.io.StringWriter: void write(java.lang.String)>($r4);

     label2:
        return;
    }

    public void setTextRenderingMode(boolean, boolean, boolean)
    {
        org.apache.fop.svg.PDFTextUtil this;
        boolean fill, stroke, addToClip;
        int mode;
        byte $b0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        fill := @parameter0: boolean;
        stroke := @parameter1: boolean;
        addToClip := @parameter2: boolean;
        if fill == 0 goto label2;

        if stroke == 0 goto label0;

        $b0 = 2;
        goto label1;

     label0:
        $b0 = 0;

     label1:
        mode = $b0;
        goto label5;

     label2:
        if stroke == 0 goto label3;

        $b0 = 1;
        goto label4;

     label3:
        $b0 = 3;

     label4:
        mode = $b0;

     label5:
        if addToClip == 0 goto label6;

        mode = mode + 4;

     label6:
        virtualinvoke this.<org.apache.fop.svg.PDFTextUtil: void setTextRenderingMode(int)>(mode);
        return;
    }

    public void writeTextMatrix(java.awt.geom.AffineTransform)
    {
        org.apache.fop.svg.PDFTextUtil this;
        java.awt.geom.AffineTransform localTransform;
        java.lang.StringBuffer $r0, sb;
        org.apache.fop.svg.PDFGraphics2D $r1;
        java.io.StringWriter $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        localTransform := @parameter0: java.awt.geom.AffineTransform;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        specialinvoke this.<org.apache.fop.svg.PDFTextUtil: void writeAffineTransform(java.awt.geom.AffineTransform,java.lang.StringBuffer)>(localTransform, sb);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Tm\n");
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r2 = $r1.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        $r3 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r2.<java.io.StringWriter: void write(java.lang.String)>($r3);
        return;
    }

    public org.apache.fop.fonts.Font selectFontForChar(char)
    {
        org.apache.fop.svg.PDFTextUtil this;
        char ch;
        int i, c;
        org.apache.fop.fonts.Font[] $r0;
        org.apache.fop.fonts.Font $r1;
        boolean $z0;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        ch := @parameter0: char;
        i = 0;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font[] fonts>;
        c = lengthof $r0;

     label0:
        if i >= c goto label2;

        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font[] fonts>;
        $r1 = $r0[i];
        $z0 = virtualinvoke $r1.<org.apache.fop.fonts.Font: boolean hasChar(char)>(ch);
        if $z0 == 0 goto label1;

        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font[] fonts>;
        $r1 = $r0[i];
        return $r1;

     label1:
        i = i + 1;
        goto label0;

     label2:
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font[] fonts>;
        $r1 = $r0[0];
        return $r1;
    }

    public void writeTJChar(char)
    {
        org.apache.fop.svg.PDFTextUtil this;
        char ch, mappedChar;
        java.lang.StringBuffer $r0, $r1, $r4;
        int $i0;
        java.lang.String $r2;
        org.apache.fop.fonts.Font $r3;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        ch := @parameter0: char;
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        if $r1 != null goto label0;

        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ> = $r0;

     label0:
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $i0 = virtualinvoke $r1.<java.lang.StringBuffer: int length()>();
        if $i0 != 0 goto label1;

        $r1 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");
        $r2 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.String startText>;
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        $r3 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.fonts.Font font>;
        mappedChar = virtualinvoke $r3.<org.apache.fop.fonts.Font: char mapChar(char)>(ch);
        $r4 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        specialinvoke this.<org.apache.fop.svg.PDFTextUtil: void writeChar(char,java.lang.StringBuffer)>(mappedChar, $r4);
        return;
    }

    public void adjustGlyphTJ(double)
    {
        org.apache.fop.svg.PDFTextUtil this;
        double adjust;
        java.lang.StringBuffer $r0;
        java.lang.String $r1;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        adjust := @parameter0: double;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.String endText>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $r1 = staticinvoke <org.apache.fop.pdf.PDFNumber: java.lang.String doubleOut(double,int)>(adjust, 4);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.String startText>;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        return;
    }

    public void writeTJ()
    {
        org.apache.fop.svg.PDFTextUtil this;
        java.lang.StringBuffer $r0, $r4;
        int $i0;
        java.lang.String $r1;
        org.apache.fop.svg.PDFGraphics2D $r2;
        java.io.StringWriter $r3;

        this := @this: org.apache.fop.svg.PDFTextUtil;
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $i0 = virtualinvoke $r0.<java.lang.StringBuffer: int length()>();
        if $i0 <= 0 goto label0;

        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $r1 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.String endText>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] TJ\n");
        $r2 = this.<org.apache.fop.svg.PDFTextUtil: org.apache.fop.svg.PDFGraphics2D g2d>;
        $r3 = $r2.<org.apache.fop.svg.PDFGraphics2D: java.io.StringWriter currentStream>;
        $r4 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r3.<java.io.StringWriter: void write(java.lang.String)>($r1);
        $r0 = this.<org.apache.fop.svg.PDFTextUtil: java.lang.StringBuffer bufTJ>;
        virtualinvoke $r0.<java.lang.StringBuffer: void setLength(int)>(0);

     label0:
        return;
    }
}

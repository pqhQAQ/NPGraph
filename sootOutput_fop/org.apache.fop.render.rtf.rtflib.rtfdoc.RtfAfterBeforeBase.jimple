abstract class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer implements org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfParagraphContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfExternalGraphicContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer
{
    protected org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table;

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection, java.io.Writer, org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection parent;
        java.io.Writer w;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection;
        w := @parameter1: java.io.Writer;
        attrs := @parameter2: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(parent, w, attrs);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib> = attrs;
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph newParagraph() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfParagraphContainer,java.io.Writer)>(this, $r1);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph newParagraph(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfParagraphContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(this, $r1, attrs);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic newImage() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(this, $r1);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic>;
        return $r2;
    }

    private void closeCurrentParagraph() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph para>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: void close()>();

     label0:
        return;
    }

    private void closeCurrentExternalGraphic() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void close()>();

     label0:
        return;
    }

    private void closeCurrentTable() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void close()>();

     label0:
        return;
    }

    protected void writeRtfPrefix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void writeGroupMark(boolean)>(1);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void writeMyAttributes()>();
        return;
    }

    protected abstract void writeMyAttributes() throws java.io.IOException;

    protected void writeRtfSuffix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void writeGroupMark(boolean)>(0);
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getAttributes()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        return $r0;
    }

    public void closeAll() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeCurrentParagraph()>();
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeCurrentExternalGraphic()>();
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeCurrentTable()>();
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable newTable(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes, org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        tc := @parameter1: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo)>(this, $r1, attrs, tc);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable newTable(org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        tc := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo)>(this, $r1, tc);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase this;
        java.io.Writer $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfterBeforeBase: java.io.Writer writer>;
        $r1 = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(this, $r0, null);
        return $r1;
    }
}

public class org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives extends org.apache.fop.fo.FObj implements org.apache.fop.fo.pagination.SubSequenceSpecifier
{
    private org.apache.fop.fo.properties.Property maximumRepeats;
    private static final int INFINITE;
    private int numberConsumed;
    private java.util.List conditionalPageMasterRefs;
    private boolean hasPagePositionLast;
    private boolean hasPagePositionOnly;

    public void <init>(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        org.apache.fop.fo.FONode parent;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        parent := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.FObj: void <init>(org.apache.fop.fo.FONode)>(parent);
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed> = 0;
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: boolean hasPagePositionLast> = 0;
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: boolean hasPagePositionOnly> = 0;
        return;
    }

    public void bind(org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        org.apache.fop.fo.PropertyList pList;
        org.apache.fop.fo.properties.Property $r0;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        pList := @parameter0: org.apache.fop.fo.PropertyList;
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(143);
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.properties.Property maximumRepeats> = $r0;
        return;
    }

    protected void startOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        java.util.ArrayList $r0;
        org.apache.fop.fo.pagination.PageSequenceMaster pageSequenceMaster;
        org.apache.fop.fo.FONode $r1, $r5;
        java.lang.String $r2, $r6, $r7;
        boolean $z0;
        org.apache.fop.fo.ValidationException $r3;
        java.lang.StringBuffer $r4;
        org.xml.sax.Locator $r8;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: java.util.List conditionalPageMasterRefs> = $r0;
        $r1 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.FONode parent>;
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.FONode: java.lang.String getName()>();
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("fo:page-sequence-master");
        if $z0 == 0 goto label0;

        $r1 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.FONode parent>;
        pageSequenceMaster = (org.apache.fop.fo.pagination.PageSequenceMaster) $r1;
        virtualinvoke pageSequenceMaster.<org.apache.fop.fo.pagination.PageSequenceMaster: void addSubsequenceSpecifier(org.apache.fop.fo.pagination.SubSequenceSpecifier)>(this);
        goto label1;

     label0:
        $r3 = new org.apache.fop.fo.ValidationException;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("fo:repeatable-page-master-alternatives must be child of fo:page-sequence-master, not ");
        $r5 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.FONode parent>;
        $r6 = virtualinvoke $r5.<org.apache.fop.fo.FONode: java.lang.String getName()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        $r8 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.xml.sax.Locator locator>;
        specialinvoke $r3.<org.apache.fop.fo.ValidationException: void <init>(java.lang.String,org.xml.sax.Locator)>($r7, $r8);
        throw $r3;

     label1:
        return;
    }

    protected void endOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        org.apache.fop.fo.FONode $r0;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        $r0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.FONode firstChild>;
        if $r0 != null goto label0;

        virtualinvoke this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: void missingChildElementError(java.lang.String)>("(conditional-page-master-reference+)");

     label0:
        return;
    }

    protected void validateChildNode(org.xml.sax.Locator, java.lang.String, java.lang.String) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        org.xml.sax.Locator loc;
        java.lang.String nsURI, localName, $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        loc := @parameter0: org.xml.sax.Locator;
        nsURI := @parameter1: java.lang.String;
        localName := @parameter2: java.lang.String;
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label0;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("conditional-page-master-reference");
        if $z0 != 0 goto label1;

     label0:
        virtualinvoke this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);

     label1:
        return;
    }

    public int getMaximumRepeats()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        int mr, $i0;
        org.apache.fop.fo.properties.Property $r0, $r4;
        org.apache.fop.datatypes.Numeric $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;
        java.lang.String $r5;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        $r0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.properties.Property maximumRepeats>;
        $i0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: int getEnum()>();
        if $i0 != 89 goto label0;

        return -1;

     label0:
        $r0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.properties.Property maximumRepeats>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        mr = interfaceinvoke $r1.<org.apache.fop.datatypes.Numeric: int getValue()>();
        if mr >= 0 goto label1;

        $r2 = <org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("negative maximum-repeats: ");
        $r4 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: org.apache.fop.fo.properties.Property maximumRepeats>;
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);
        mr = 0;

     label1:
        return mr;
    }

    public java.lang.String getNextPageMasterName(boolean, boolean, boolean, boolean, boolean)
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        boolean isOddPage, isFirstPage, isLastPage, isOnlyPage, isBlankPage, $z0;
        int i, $i0, $i1;
        org.apache.fop.fo.pagination.ConditionalPageMasterReference cpmr;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        isOddPage := @parameter0: boolean;
        isFirstPage := @parameter1: boolean;
        isLastPage := @parameter2: boolean;
        isOnlyPage := @parameter3: boolean;
        isBlankPage := @parameter4: boolean;
        $i0 = virtualinvoke this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int getMaximumRepeats()>();
        if $i0 == -1 goto label1;

        $i0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed>;
        $i1 = virtualinvoke this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int getMaximumRepeats()>();
        if $i0 >= $i1 goto label0;

        $i1 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed>;
        $i1 = $i1 + 1;
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed> = $i1;
        goto label2;

     label0:
        return null;

     label1:
        $i1 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed>;
        $i1 = $i1 + 1;
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed> = $i1;

     label2:
        i = 0;

     label3:
        $r1 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: java.util.List conditionalPageMasterRefs>;
        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();
        if i >= $i1 goto label5;

        $r2 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: java.util.List conditionalPageMasterRefs>;
        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i);
        cpmr = (org.apache.fop.fo.pagination.ConditionalPageMasterReference) $r3;
        $z0 = virtualinvoke cpmr.<org.apache.fop.fo.pagination.ConditionalPageMasterReference: boolean isValid(boolean,boolean,boolean,boolean,boolean)>(isOddPage, isFirstPage, isLastPage, isOnlyPage, isBlankPage);
        if $z0 == 0 goto label4;

        $r4 = virtualinvoke cpmr.<org.apache.fop.fo.pagination.ConditionalPageMasterReference: java.lang.String getMasterReference()>();
        return $r4;

     label4:
        i = i + 1;
        goto label3;

     label5:
        return null;
    }

    public void addConditionalPageMasterReference(org.apache.fop.fo.pagination.ConditionalPageMasterReference)
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        org.apache.fop.fo.pagination.ConditionalPageMasterReference cpmr;
        java.util.List $r0;
        int $i0;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        cpmr := @parameter0: org.apache.fop.fo.pagination.ConditionalPageMasterReference;
        $r0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: java.util.List conditionalPageMasterRefs>;
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(cpmr);
        $i0 = virtualinvoke cpmr.<org.apache.fop.fo.pagination.ConditionalPageMasterReference: int getPagePosition()>();
        if $i0 != 72 goto label0;

        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: boolean hasPagePositionLast> = 1;

     label0:
        $i0 = virtualinvoke cpmr.<org.apache.fop.fo.pagination.ConditionalPageMasterReference: int getPagePosition()>();
        if $i0 != 186 goto label1;

        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: boolean hasPagePositionOnly> = 1;

     label1:
        return;
    }

    public void reset()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed> = 0;
        return;
    }

    public boolean goToPrevious()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        int $i0, $i1;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        $i0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed>;
        if $i0 != 0 goto label0;

        return 0;

     label0:
        $i1 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed>;
        $i1 = $i1 - 1;
        this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: int numberConsumed> = $i1;
        return 1;
    }

    public boolean hasPagePositionLast()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        $z0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: boolean hasPagePositionLast>;
        return $z0;
    }

    public boolean hasPagePositionOnly()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;
        boolean $z0;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        $z0 = this.<org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives: boolean hasPagePositionOnly>;
        return $z0;
    }

    public java.lang.String getLocalName()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        return "repeatable-page-master-alternatives";
    }

    public int getNameId()
    {
        org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives this;

        this := @this: org.apache.fop.fo.pagination.RepeatablePageMasterAlternatives;
        return 39;
    }
}

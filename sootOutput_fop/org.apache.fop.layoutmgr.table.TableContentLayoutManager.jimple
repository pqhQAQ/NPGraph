public class org.apache.fop.layoutmgr.table.TableContentLayoutManager extends java.lang.Object implements org.apache.fop.datatypes.PercentBaseContext
{
    private static org.apache.commons.logging.Log log;
    private org.apache.fop.layoutmgr.table.TableLayoutManager tableLM;
    private org.apache.fop.layoutmgr.table.TableRowIterator bodyIter;
    private org.apache.fop.layoutmgr.table.TableRowIterator headerIter;
    private org.apache.fop.layoutmgr.table.TableRowIterator footerIter;
    private java.util.LinkedList headerList;
    private java.util.LinkedList footerList;
    private int headerNetHeight;
    private int footerNetHeight;
    private int startXOffset;
    private int usedBPD;
    private org.apache.fop.layoutmgr.table.TableStepper stepper;
    static java.lang.Class class$org$apache$fop$layoutmgr$table$TableContentLayoutManager;

    void <init>(org.apache.fop.layoutmgr.table.TableLayoutManager)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.table.TableLayoutManager parent, $r0;
        org.apache.fop.fo.flow.table.Table table;
        org.apache.fop.layoutmgr.table.TableRowIterator $r1;
        org.apache.fop.fo.flow.table.TableBody $r2;
        org.apache.fop.layoutmgr.table.TableStepper $r3;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        parent := @parameter0: org.apache.fop.layoutmgr.table.TableLayoutManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int headerNetHeight> = 0;
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int footerNetHeight> = 0;
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager tableLM> = parent;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        table = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $r1 = new org.apache.fop.layoutmgr.table.TableRowIterator;
        specialinvoke $r1.<org.apache.fop.layoutmgr.table.TableRowIterator: void <init>(org.apache.fop.fo.flow.table.Table,int)>(table, 0);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator bodyIter> = $r1;
        $r2 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableHeader()>();
        if $r2 == null goto label0;

        $r1 = new org.apache.fop.layoutmgr.table.TableRowIterator;
        specialinvoke $r1.<org.apache.fop.layoutmgr.table.TableRowIterator: void <init>(org.apache.fop.fo.flow.table.Table,int)>(table, 1);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator headerIter> = $r1;

     label0:
        $r2 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableFooter()>();
        if $r2 == null goto label1;

        $r1 = new org.apache.fop.layoutmgr.table.TableRowIterator;
        specialinvoke $r1.<org.apache.fop.layoutmgr.table.TableRowIterator: void <init>(org.apache.fop.fo.flow.table.Table,int)>(table, 2);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator footerIter> = $r1;

     label1:
        $r3 = new org.apache.fop.layoutmgr.table.TableStepper;
        specialinvoke $r3.<org.apache.fop.layoutmgr.table.TableStepper: void <init>(org.apache.fop.layoutmgr.table.TableContentLayoutManager)>(this);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableStepper stepper> = $r3;
        return;
    }

    org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager tableLM>;
        return $r0;
    }

    boolean isSeparateBorderModel()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r0;
        org.apache.fop.fo.flow.table.Table $r1;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $z0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.Table: boolean isSeparateBorderModel()>();
        return $z0;
    }

    org.apache.fop.layoutmgr.table.ColumnSetup getColumns()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r0;
        org.apache.fop.layoutmgr.table.ColumnSetup $r1;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.layoutmgr.table.ColumnSetup getColumns()>();
        return $r1;
    }

    protected int getHeaderNetHeight()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $i0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int headerNetHeight>;
        return $i0;
    }

    protected int getFooterNetHeight()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $i0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int footerNetHeight>;
        return $i0;
    }

    protected java.util.LinkedList getHeaderElements()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList headerList>;
        return $r0;
    }

    protected java.util.LinkedList getFooterElements()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList footerList>;
        return $r0;
    }

    public java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext, int)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        int alignment, insertionPoint, $i0, $i1, $i2;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        org.apache.fop.layoutmgr.KnuthBox headerAsFirst, headerAsSecondToLast, footerAsLast, box, $r12;
        org.apache.fop.layoutmgr.table.TableHeaderFooterPosition pos, $r10;
        java.util.LinkedList returnList, $r6, $r8, $r9, $r11;
        boolean $z0;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r2, $r13;
        org.apache.fop.layoutmgr.table.ColumnSetup $r3;
        java.lang.String $r4;
        org.apache.fop.layoutmgr.table.TableRowIterator $r5, $r7, $r15;
        org.apache.fop.fo.flow.table.Table $r14;
        java.lang.Object $r16;
        org.apache.fop.layoutmgr.ListElement $r17;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter1: int;
        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("==> Columns: ");
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r3 = virtualinvoke $r2.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.layoutmgr.table.ColumnSetup getColumns()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label0:
        headerAsFirst = null;
        headerAsSecondToLast = null;
        footerAsLast = null;
        $r5 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator headerIter>;
        if $r5 == null goto label3;

        $r6 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList headerList>;
        if $r6 != null goto label3;

        $r7 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator headerIter>;
        $r8 = specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList getKnuthElementsForRowIterator(org.apache.fop.layoutmgr.table.TableRowIterator,org.apache.fop.layoutmgr.LayoutContext,int,int)>($r7, context, alignment, 1);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList headerList> = $r8;
        $r8 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList headerList>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.ElementListUtils: int calcContentLength(java.util.List)>($r8);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int headerNetHeight> = $i0;
        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label1;

        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("==> Header: ");
        $i1 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int headerNetHeight>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");
        $r9 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList headerList>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label1:
        $r10 = new org.apache.fop.layoutmgr.table.TableHeaderFooterPosition;
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r11 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList headerList>;
        specialinvoke $r10.<org.apache.fop.layoutmgr.table.TableHeaderFooterPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,boolean,java.util.List)>($r2, 1, $r11);
        pos = $r10;
        $r12 = new org.apache.fop.layoutmgr.KnuthBox;
        $i1 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int headerNetHeight>;
        specialinvoke $r12.<org.apache.fop.layoutmgr.KnuthBox: void <init>(int,org.apache.fop.layoutmgr.Position,boolean)>($i1, pos, 0);
        box = $r12;
        $r13 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r14 = virtualinvoke $r13.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $z0 = virtualinvoke $r14.<org.apache.fop.fo.flow.table.Table: boolean omitHeaderAtBreak()>();
        if $z0 == 0 goto label2;

        headerAsFirst = box;
        goto label3;

     label2:
        headerAsSecondToLast = box;

     label3:
        $r5 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator footerIter>;
        if $r5 == null goto label5;

        $r6 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList footerList>;
        if $r6 != null goto label5;

        $r7 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator footerIter>;
        $r8 = specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList getKnuthElementsForRowIterator(org.apache.fop.layoutmgr.table.TableRowIterator,org.apache.fop.layoutmgr.LayoutContext,int,int)>($r7, context, alignment, 2);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList footerList> = $r8;
        $r8 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList footerList>;
        $i0 = staticinvoke <org.apache.fop.layoutmgr.ElementListUtils: int calcContentLength(java.util.List)>($r8);
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int footerNetHeight> = $i0;
        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label4;

        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("==> Footer: ");
        $i1 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int footerNetHeight>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");
        $r9 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList footerList>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r4);

     label4:
        $r10 = new org.apache.fop.layoutmgr.table.TableHeaderFooterPosition;
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r11 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList footerList>;
        specialinvoke $r10.<org.apache.fop.layoutmgr.table.TableHeaderFooterPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,boolean,java.util.List)>($r2, 0, $r11);
        pos = $r10;
        $r12 = new org.apache.fop.layoutmgr.KnuthBox;
        $i1 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int footerNetHeight>;
        specialinvoke $r12.<org.apache.fop.layoutmgr.KnuthBox: void <init>(int,org.apache.fop.layoutmgr.Position,boolean)>($i1, pos, 0);
        box = $r12;
        footerAsLast = box;

     label5:
        $r15 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableRowIterator bodyIter>;
        returnList = specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.util.LinkedList getKnuthElementsForRowIterator(org.apache.fop.layoutmgr.table.TableRowIterator,org.apache.fop.layoutmgr.LayoutContext,int,int)>($r15, context, alignment, 0);
        if headerAsFirst == null goto label7;

        insertionPoint = 0;
        $i2 = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        if $i2 <= 0 goto label6;

        $r16 = virtualinvoke returnList.<java.util.LinkedList: java.lang.Object getFirst()>();
        $r17 = (org.apache.fop.layoutmgr.ListElement) $r16;
        $z0 = virtualinvoke $r17.<org.apache.fop.layoutmgr.ListElement: boolean isForcedBreak()>();
        if $z0 == 0 goto label6;

        insertionPoint = insertionPoint + 1;

     label6:
        virtualinvoke returnList.<java.util.LinkedList: void add(int,java.lang.Object)>(insertionPoint, headerAsFirst);
        goto label9;

     label7:
        if headerAsSecondToLast == null goto label9;

        insertionPoint = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        $i2 = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        if $i2 <= 0 goto label8;

        $r16 = virtualinvoke returnList.<java.util.LinkedList: java.lang.Object getLast()>();
        $r17 = (org.apache.fop.layoutmgr.ListElement) $r16;
        $z0 = virtualinvoke $r17.<org.apache.fop.layoutmgr.ListElement: boolean isForcedBreak()>();
        if $z0 == 0 goto label8;

        insertionPoint = insertionPoint + -1;

     label8:
        virtualinvoke returnList.<java.util.LinkedList: void add(int,java.lang.Object)>(insertionPoint, headerAsSecondToLast);

     label9:
        if footerAsLast == null goto label11;

        insertionPoint = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        $i2 = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        if $i2 <= 0 goto label10;

        $r16 = virtualinvoke returnList.<java.util.LinkedList: java.lang.Object getLast()>();
        $r17 = (org.apache.fop.layoutmgr.ListElement) $r16;
        $z0 = virtualinvoke $r17.<org.apache.fop.layoutmgr.ListElement: boolean isForcedBreak()>();
        if $z0 == 0 goto label10;

        insertionPoint = insertionPoint + -1;

     label10:
        virtualinvoke returnList.<java.util.LinkedList: void add(int,java.lang.Object)>(insertionPoint, footerAsLast);

     label11:
        return returnList;
    }

    private java.util.LinkedList getKnuthElementsForRowIterator(org.apache.fop.layoutmgr.table.TableRowIterator, org.apache.fop.layoutmgr.LayoutContext, int, int)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.table.TableRowIterator iter;
        org.apache.fop.layoutmgr.LayoutContext context;
        int alignment, bodyType, breakBefore, breakBetween, widowContentLimit, orphanContentLimit, $i0;
        java.util.LinkedList $r0, returnList, nextRowGroupElems;
        org.apache.fop.fo.flow.table.EffRow[] rowGroup, $r4;
        boolean keepWithPrevious, keepBetween, $z0, $z1;
        org.apache.fop.layoutmgr.table.RowGroupLayoutManager rowGroupLM, $r1;
        short penaltyValue;
        java.util.ListIterator elemIter;
        org.apache.fop.layoutmgr.ListElement elem;
        org.apache.fop.layoutmgr.BreakElement breakElement;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r2, $r5;
        org.apache.fop.layoutmgr.table.TableStepper $r3;
        org.apache.fop.fo.flow.table.Table $r6;
        java.lang.Object $r7;
        org.apache.fop.datatypes.Length $r8;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        iter := @parameter0: org.apache.fop.layoutmgr.table.TableRowIterator;
        context := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter2: int;
        bodyType := @parameter3: int;
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        returnList = $r0;
        rowGroup = virtualinvoke iter.<org.apache.fop.layoutmgr.table.TableRowIterator: org.apache.fop.fo.flow.table.EffRow[] getNextRowGroup()>();
        virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: void unsetFlags(int)>(1536);
        virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: void setBreakBefore(int)>(9);
        virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: void setBreakAfter(int)>(9);
        keepWithPrevious = 0;
        breakBefore = 9;
        if rowGroup == null goto label6;

        $r1 = new org.apache.fop.layoutmgr.table.RowGroupLayoutManager;
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r3 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableStepper stepper>;
        specialinvoke $r1.<org.apache.fop.layoutmgr.table.RowGroupLayoutManager: void <init>(org.apache.fop.layoutmgr.table.TableLayoutManager,org.apache.fop.fo.flow.table.EffRow[],org.apache.fop.layoutmgr.table.TableStepper)>($r2, rowGroup, $r3);
        rowGroupLM = $r1;
        nextRowGroupElems = virtualinvoke rowGroupLM.<org.apache.fop.layoutmgr.table.RowGroupLayoutManager: java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,int)>(context, alignment, bodyType);
        keepWithPrevious = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isKeepWithPreviousPending()>();
        keepBetween = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isKeepWithNextPending()>();
        breakBefore = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getBreakBefore()>();
        breakBetween = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getBreakAfter()>();
        virtualinvoke returnList.<java.util.LinkedList: boolean addAll(java.util.Collection)>(nextRowGroupElems);

     label0:
        $r4 = virtualinvoke iter.<org.apache.fop.layoutmgr.table.TableRowIterator: org.apache.fop.fo.flow.table.EffRow[] getNextRowGroup()>();
        rowGroup = $r4;
        if $r4 == null goto label6;

        $r1 = new org.apache.fop.layoutmgr.table.RowGroupLayoutManager;
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r3 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableStepper stepper>;
        specialinvoke $r1.<org.apache.fop.layoutmgr.table.RowGroupLayoutManager: void <init>(org.apache.fop.layoutmgr.table.TableLayoutManager,org.apache.fop.fo.flow.table.EffRow[],org.apache.fop.layoutmgr.table.TableStepper)>($r2, rowGroup, $r3);
        rowGroupLM = $r1;
        nextRowGroupElems = virtualinvoke rowGroupLM.<org.apache.fop.layoutmgr.table.RowGroupLayoutManager: java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext,int,int)>(context, alignment, bodyType);
        penaltyValue = 0;
        $z1 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isKeepWithPreviousPending()>();
        keepBetween = keepBetween | $z1;
        if keepBetween != 0 goto label1;

        $r5 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager tableLM>;
        $r6 = virtualinvoke $r5.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $z0 = virtualinvoke $r6.<org.apache.fop.fo.flow.table.Table: boolean mustKeepTogether()>();
        if $z0 == 0 goto label2;

     label1:
        penaltyValue = 1000;

     label2:
        $i0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getBreakBefore()>();
        breakBetween = staticinvoke <org.apache.fop.util.BreakUtil: int compareBreakClasses(int,int)>(breakBetween, $i0);
        if breakBetween == 9 goto label3;

        penaltyValue = -1000;

     label3:
        $i0 = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        elemIter = virtualinvoke returnList.<java.util.LinkedList: java.util.ListIterator listIterator(int)>($i0);
        $r7 = interfaceinvoke elemIter.<java.util.ListIterator: java.lang.Object previous()>();
        elem = (org.apache.fop.layoutmgr.ListElement) $r7;
        $z0 = elem instanceof org.apache.fop.layoutmgr.KnuthGlue;
        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke elemIter.<java.util.ListIterator: java.lang.Object previous()>();
        breakElement = (org.apache.fop.layoutmgr.BreakElement) $r7;
        goto label5;

     label4:
        breakElement = (org.apache.fop.layoutmgr.BreakElement) elem;

     label5:
        virtualinvoke breakElement.<org.apache.fop.layoutmgr.BreakElement: void setPenaltyValue(int)>(penaltyValue);
        virtualinvoke breakElement.<org.apache.fop.layoutmgr.BreakElement: void setBreakClass(int)>(breakBetween);
        virtualinvoke returnList.<java.util.LinkedList: boolean addAll(java.util.Collection)>(nextRowGroupElems);
        breakBetween = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getBreakAfter()>();
        keepBetween = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isKeepWithNextPending()>();
        goto label0;

     label6:
        $i0 = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        elemIter = virtualinvoke returnList.<java.util.LinkedList: java.util.ListIterator listIterator(int)>($i0);
        $r7 = interfaceinvoke elemIter.<java.util.ListIterator: java.lang.Object previous()>();
        elem = (org.apache.fop.layoutmgr.ListElement) $r7;
        $z0 = elem instanceof org.apache.fop.layoutmgr.KnuthGlue;
        if $z0 == 0 goto label7;

        $r7 = interfaceinvoke elemIter.<java.util.ListIterator: java.lang.Object previous()>();
        breakElement = (org.apache.fop.layoutmgr.BreakElement) $r7;
        virtualinvoke breakElement.<org.apache.fop.layoutmgr.BreakElement: void setPenaltyValue(int)>(1000);
        goto label8;

     label7:
        interfaceinvoke elemIter.<java.util.ListIterator: void remove()>();

     label8:
        virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: void setFlags(int,boolean)>(1024, keepWithPrevious);
        virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: void setBreakBefore(int)>(breakBefore);
        $r5 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r6 = virtualinvoke $r5.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $r8 = virtualinvoke $r6.<org.apache.fop.fo.flow.table.Table: org.apache.fop.datatypes.Length getWidowContentLimit()>();
        widowContentLimit = interfaceinvoke $r8.<org.apache.fop.datatypes.Length: int getValue()>();
        if widowContentLimit == 0 goto label9;

        if bodyType != 0 goto label9;

        staticinvoke <org.apache.fop.layoutmgr.ElementListUtils: boolean removeLegalBreaks(java.util.LinkedList,int)>(returnList, widowContentLimit);

     label9:
        $r5 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r6 = virtualinvoke $r5.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $r8 = virtualinvoke $r6.<org.apache.fop.fo.flow.table.Table: org.apache.fop.datatypes.Length getOrphanContentLimit()>();
        orphanContentLimit = interfaceinvoke $r8.<org.apache.fop.datatypes.Length: int getValue()>();
        if orphanContentLimit == 0 goto label10;

        if bodyType != 0 goto label10;

        staticinvoke <org.apache.fop.layoutmgr.ElementListUtils: boolean removeLegalBreaksFromEnd(java.util.LinkedList,int)>(returnList, orphanContentLimit);

     label10:
        return returnList;
    }

    protected int getXOffsetOfGridUnit(org.apache.fop.fo.flow.table.PrimaryGridUnit)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.fo.flow.table.PrimaryGridUnit gu;
        int col, $i0, $i1, $i2;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r0, $r2;
        org.apache.fop.layoutmgr.table.ColumnSetup $r1;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        gu := @parameter0: org.apache.fop.fo.flow.table.PrimaryGridUnit;
        col = virtualinvoke gu.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getColIndex()>();
        $i0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int startXOffset>;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.layoutmgr.table.ColumnSetup getColumns()>();
        $i1 = col + 1;
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $i2 = virtualinvoke $r1.<org.apache.fop.layoutmgr.table.ColumnSetup: int getXOffset(int,org.apache.fop.datatypes.PercentBaseContext)>($i1, $r2);
        $i0 = $i0 + $i2;
        return $i0;
    }

    void addAreas(org.apache.fop.layoutmgr.PositionIterator, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        org.apache.fop.layoutmgr.PositionIterator parentIter;
        org.apache.fop.layoutmgr.LayoutContext layoutContext;
        org.apache.fop.layoutmgr.table.RowPainter painter, $r0;
        java.util.ArrayList tablePositions, $r1;
        java.util.List headerElements, footerElements, $r7;
        org.apache.fop.layoutmgr.Position firstPos, lastPos, lastCheckPos, pos;
        org.apache.fop.layoutmgr.table.TableHeaderFooterPosition thfpos;
        org.apache.fop.layoutmgr.table.TableHFPenaltyPosition penaltyPos;
        java.util.Map markers;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2;
        org.apache.fop.layoutmgr.SpaceResolver$SpaceHandlingBreakPosition $r3;
        int $i0, $i1, $i2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r8, $r11, $r12, $r13;
        org.apache.fop.fo.flow.table.Table $r9, $r14;
        org.apache.fop.area.PageViewport $r10;
        org.apache.fop.fo.flow.table.TableBody $r15;
        java.util.Iterator $r17;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        parentIter := @parameter0: org.apache.fop.layoutmgr.PositionIterator;
        layoutContext := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int usedBPD> = 0;
        $r0 = new org.apache.fop.layoutmgr.table.RowPainter;
        specialinvoke $r0.<org.apache.fop.layoutmgr.table.RowPainter: void <init>(org.apache.fop.layoutmgr.table.TableContentLayoutManager,org.apache.fop.layoutmgr.LayoutContext)>(this, layoutContext);
        painter = $r0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        tablePositions = $r1;
        headerElements = null;
        footerElements = null;
        firstPos = null;
        lastPos = null;
        lastCheckPos = null;

     label0:
        $z0 = virtualinvoke parentIter.<org.apache.fop.layoutmgr.PositionIterator: boolean hasNext()>();
        if $z0 == 0 goto label11;

        $r2 = virtualinvoke parentIter.<org.apache.fop.layoutmgr.PositionIterator: java.lang.Object next()>();
        pos = (org.apache.fop.layoutmgr.Position) $r2;
        $z0 = pos instanceof org.apache.fop.layoutmgr.SpaceResolver$SpaceHandlingBreakPosition;
        if $z0 == 0 goto label1;

        $r3 = (org.apache.fop.layoutmgr.SpaceResolver$SpaceHandlingBreakPosition) pos;
        pos = virtualinvoke $r3.<org.apache.fop.layoutmgr.SpaceResolver$SpaceHandlingBreakPosition: org.apache.fop.layoutmgr.Position getOriginalBreakPosition()>();

     label1:
        if pos != null goto label2;

        goto label0;

     label2:
        if firstPos != null goto label3;

        firstPos = pos;

     label3:
        lastPos = pos;
        $i0 = virtualinvoke pos.<org.apache.fop.layoutmgr.Position: int getIndex()>();
        if $i0 < 0 goto label4;

        lastCheckPos = pos;

     label4:
        $z0 = pos instanceof org.apache.fop.layoutmgr.table.TableHeaderFooterPosition;
        if $z0 == 0 goto label7;

        thfpos = (org.apache.fop.layoutmgr.table.TableHeaderFooterPosition) pos;
        $z0 = thfpos.<org.apache.fop.layoutmgr.table.TableHeaderFooterPosition: boolean header>;
        if $z0 == 0 goto label5;

        headerElements = thfpos.<org.apache.fop.layoutmgr.table.TableHeaderFooterPosition: java.util.List nestedElements>;
        goto label6;

     label5:
        footerElements = thfpos.<org.apache.fop.layoutmgr.table.TableHeaderFooterPosition: java.util.List nestedElements>;

     label6:
        goto label10;

     label7:
        $z0 = pos instanceof org.apache.fop.layoutmgr.table.TableHFPenaltyPosition;
        if $z0 == 0 goto label8;

        goto label10;

     label8:
        $z0 = pos instanceof org.apache.fop.layoutmgr.table.TableContentPosition;
        if $z0 == 0 goto label9;

        interfaceinvoke tablePositions.<java.util.List: boolean add(java.lang.Object)>(pos);
        goto label10;

     label9:
        $r4 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label10;

        $r4 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ignoring position: ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(pos);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r6);

     label10:
        goto label0;

     label11:
        $z0 = lastPos instanceof org.apache.fop.layoutmgr.table.TableHFPenaltyPosition;
        if $z0 == 0 goto label13;

        penaltyPos = (org.apache.fop.layoutmgr.table.TableHFPenaltyPosition) lastPos;
        $r4 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Break at penalty!");
        $r7 = penaltyPos.<org.apache.fop.layoutmgr.table.TableHFPenaltyPosition: java.util.List headerElements>;
        if $r7 == null goto label12;

        headerElements = penaltyPos.<org.apache.fop.layoutmgr.table.TableHFPenaltyPosition: java.util.List headerElements>;

     label12:
        $r7 = penaltyPos.<org.apache.fop.layoutmgr.table.TableHFPenaltyPosition: java.util.List footerElements>;
        if $r7 == null goto label13;

        footerElements = penaltyPos.<org.apache.fop.layoutmgr.table.TableHFPenaltyPosition: java.util.List footerElements>;

     label13:
        $r8 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r9 = virtualinvoke $r8.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        markers = virtualinvoke $r9.<org.apache.fop.fo.flow.table.Table: java.util.Map getMarkers()>();
        if markers == null goto label14;

        $r8 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r10 = virtualinvoke $r8.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        $r11 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $z1 = virtualinvoke $r11.<org.apache.fop.layoutmgr.table.TableLayoutManager: boolean isFirst(org.apache.fop.layoutmgr.Position)>(firstPos);
        $r12 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $z2 = virtualinvoke $r12.<org.apache.fop.layoutmgr.table.TableLayoutManager: boolean isLast(org.apache.fop.layoutmgr.Position)>(lastCheckPos);
        virtualinvoke $r10.<org.apache.fop.area.PageViewport: void addMarkers(java.util.Map,boolean,boolean,boolean)>(markers, 1, $z1, $z2);

     label14:
        if headerElements == null goto label15;

        $r13 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager tableLM>;
        $r14 = virtualinvoke $r13.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $r15 = virtualinvoke $r14.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableHeader()>();
        specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: void addHeaderFooterAreas(java.util.List,org.apache.fop.fo.flow.table.TableBody,org.apache.fop.layoutmgr.table.RowPainter,boolean)>(headerElements, $r15, painter, 0);

     label15:
        $z0 = interfaceinvoke tablePositions.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label16;

        $r4 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>("tablePositions empty. Please send your FO file to fop-users@xmlgraphics.apache.org");
        goto label19;

     label16:
        $r17 = interfaceinvoke tablePositions.<java.util.List: java.util.Iterator iterator()>();
        if footerElements != null goto label17;

        $z1 = 1;
        goto label18;

     label17:
        $z1 = 0;

     label18:
        specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: void addBodyAreas(java.util.Iterator,org.apache.fop.layoutmgr.table.RowPainter,boolean)>($r17, painter, $z1);

     label19:
        if footerElements == null goto label20;

        $r13 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager tableLM>;
        $r14 = virtualinvoke $r13.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.fo.flow.table.Table getTable()>();
        $r15 = virtualinvoke $r14.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableFooter()>();
        specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: void addHeaderFooterAreas(java.util.List,org.apache.fop.fo.flow.table.TableBody,org.apache.fop.layoutmgr.table.RowPainter,boolean)>(footerElements, $r15, painter, 1);

     label20:
        $i1 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int usedBPD>;
        $i2 = virtualinvoke painter.<org.apache.fop.layoutmgr.table.RowPainter: int getAccumulatedBPD()>();
        $i1 = $i1 + $i2;
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int usedBPD> = $i1;
        if markers == null goto label21;

        $r8 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r10 = virtualinvoke $r8.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        $r11 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $z1 = virtualinvoke $r11.<org.apache.fop.layoutmgr.table.TableLayoutManager: boolean isFirst(org.apache.fop.layoutmgr.Position)>(firstPos);
        $r12 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $z2 = virtualinvoke $r12.<org.apache.fop.layoutmgr.table.TableLayoutManager: boolean isLast(org.apache.fop.layoutmgr.Position)>(lastCheckPos);
        virtualinvoke $r10.<org.apache.fop.area.PageViewport: void addMarkers(java.util.Map,boolean,boolean,boolean)>(markers, 0, $z1, $z2);

     label21:
        return;
    }

    private void addHeaderFooterAreas(java.util.List, org.apache.fop.fo.flow.table.TableBody, org.apache.fop.layoutmgr.table.RowPainter, boolean)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        java.util.List elements;
        org.apache.fop.fo.flow.table.TableBody part;
        org.apache.fop.layoutmgr.table.RowPainter painter;
        boolean lastOnPage, $z0;
        java.util.ArrayList $r0, lst;
        org.apache.fop.layoutmgr.KnuthPossPosIter iter, $r1;
        org.apache.fop.layoutmgr.Position pos;
        int $i0;
        java.lang.Object $r2;
        org.apache.fop.layoutmgr.table.TableContentPosition $r3;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        elements := @parameter0: java.util.List;
        part := @parameter1: org.apache.fop.fo.flow.table.TableBody;
        painter := @parameter2: org.apache.fop.layoutmgr.table.RowPainter;
        lastOnPage := @parameter3: boolean;
        $r0 = new java.util.ArrayList;
        $i0 = interfaceinvoke elements.<java.util.List: int size()>();
        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);
        lst = $r0;
        $r1 = new org.apache.fop.layoutmgr.KnuthPossPosIter;
        specialinvoke $r1.<org.apache.fop.layoutmgr.KnuthPossPosIter: void <init>(java.util.List)>(elements);
        iter = $r1;

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        pos = (org.apache.fop.layoutmgr.Position) $r2;
        $z0 = pos instanceof org.apache.fop.layoutmgr.table.TableContentPosition;
        if $z0 == 0 goto label1;

        $r3 = (org.apache.fop.layoutmgr.table.TableContentPosition) pos;
        interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>($r3);

     label1:
        goto label0;

     label2:
        specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: void addTablePartAreas(java.util.List,org.apache.fop.layoutmgr.table.RowPainter,org.apache.fop.fo.flow.table.TableBody,boolean,boolean,boolean,boolean)>(lst, painter, part, 1, 1, 1, lastOnPage);
        return;
    }

    private void addBodyAreas(java.util.Iterator, org.apache.fop.layoutmgr.table.RowPainter, boolean)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        java.util.Iterator iterator;
        org.apache.fop.layoutmgr.table.RowPainter painter;
        boolean lastOnPage, isFirstPos, isLastPos, $z0;
        java.util.ArrayList lst, $r0;
        org.apache.fop.layoutmgr.table.TableContentPosition pos;
        org.apache.fop.fo.flow.table.TableBody body, $r3;
        java.lang.Object $r1;
        org.apache.fop.fo.flow.table.EffRow $r2;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        iterator := @parameter0: java.util.Iterator;
        painter := @parameter1: org.apache.fop.layoutmgr.table.RowPainter;
        lastOnPage := @parameter2: boolean;
        virtualinvoke painter.<org.apache.fop.layoutmgr.table.RowPainter: void startBody()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        lst = $r0;
        $r1 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();
        pos = (org.apache.fop.layoutmgr.table.TableContentPosition) $r1;
        $z0 = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: boolean getFlag(int)>(1);
        if $z0 == 0 goto label0;

        $r2 = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: org.apache.fop.fo.flow.table.EffRow getRow()>();
        $z0 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.EffRow: boolean getFlag(int)>(0);
        if $z0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        isFirstPos = $z0;
        body = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: org.apache.fop.fo.flow.table.TableBody getTableBody()>();
        interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>(pos);

     label2:
        $z0 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r1 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();
        pos = (org.apache.fop.layoutmgr.table.TableContentPosition) $r1;
        $r3 = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: org.apache.fop.fo.flow.table.TableBody getTableBody()>();
        if $r3 == body goto label3;

        specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: void addTablePartAreas(java.util.List,org.apache.fop.layoutmgr.table.RowPainter,org.apache.fop.fo.flow.table.TableBody,boolean,boolean,boolean,boolean)>(lst, painter, body, isFirstPos, 1, 0, 0);
        isFirstPos = 1;
        interfaceinvoke lst.<java.util.List: void clear()>();
        body = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: org.apache.fop.fo.flow.table.TableBody getTableBody()>();

     label3:
        interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>(pos);
        goto label2;

     label4:
        $z0 = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: boolean getFlag(int)>(2);
        if $z0 == 0 goto label5;

        $r2 = virtualinvoke pos.<org.apache.fop.layoutmgr.table.TableContentPosition: org.apache.fop.fo.flow.table.EffRow getRow()>();
        $z0 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.EffRow: boolean getFlag(int)>(1);
        if $z0 == 0 goto label5;

        $z0 = 1;
        goto label6;

     label5:
        $z0 = 0;

     label6:
        isLastPos = $z0;
        specialinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: void addTablePartAreas(java.util.List,org.apache.fop.layoutmgr.table.RowPainter,org.apache.fop.fo.flow.table.TableBody,boolean,boolean,boolean,boolean)>(lst, painter, body, isFirstPos, isLastPos, 1, lastOnPage);
        virtualinvoke painter.<org.apache.fop.layoutmgr.table.RowPainter: void endBody()>();
        return;
    }

    private void addTablePartAreas(java.util.List, org.apache.fop.layoutmgr.table.RowPainter, org.apache.fop.fo.flow.table.TableBody, boolean, boolean, boolean, boolean)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        java.util.List positions;
        org.apache.fop.layoutmgr.table.RowPainter painter;
        org.apache.fop.fo.flow.table.TableBody body;
        boolean isFirstPos, isLastPos, lastInBody, lastOnPage, $z0;
        java.util.Iterator iter;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r0;
        org.apache.fop.area.PageViewport $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.fop.layoutmgr.table.TableContentPosition $r4;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        positions := @parameter0: java.util.List;
        painter := @parameter1: org.apache.fop.layoutmgr.table.RowPainter;
        body := @parameter2: org.apache.fop.fo.flow.table.TableBody;
        isFirstPos := @parameter3: boolean;
        isLastPos := @parameter4: boolean;
        lastInBody := @parameter5: boolean;
        lastOnPage := @parameter6: boolean;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        $r2 = virtualinvoke body.<org.apache.fop.fo.flow.table.TableBody: java.util.Map getMarkers()>();
        virtualinvoke $r1.<org.apache.fop.area.PageViewport: void addMarkers(java.util.Map,boolean,boolean,boolean)>($r2, 1, isFirstPos, isLastPos);
        virtualinvoke painter.<org.apache.fop.layoutmgr.table.RowPainter: void startTablePart(org.apache.fop.fo.flow.table.TableBody)>(body);
        iter = interfaceinvoke positions.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        $r4 = (org.apache.fop.layoutmgr.table.TableContentPosition) $r3;
        virtualinvoke painter.<org.apache.fop.layoutmgr.table.RowPainter: void handleTableContentPosition(org.apache.fop.layoutmgr.table.TableContentPosition)>($r4);
        goto label0;

     label1:
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager getTableLM()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        $r2 = virtualinvoke body.<org.apache.fop.fo.flow.table.TableBody: java.util.Map getMarkers()>();
        virtualinvoke $r1.<org.apache.fop.area.PageViewport: void addMarkers(java.util.Map,boolean,boolean,boolean)>($r2, 0, isFirstPos, isLastPos);
        virtualinvoke painter.<org.apache.fop.layoutmgr.table.RowPainter: void endTablePart(boolean,boolean)>(lastInBody, lastOnPage);
        return;
    }

    void setStartXOffset(int)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        int startXOffset;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        startXOffset := @parameter0: int;
        this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int startXOffset> = startXOffset;
        return;
    }

    int getUsedBPD()
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        $i0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: int usedBPD>;
        return $i0;
    }

    public int getBaseLength(int, org.apache.fop.fo.FObj)
    {
        org.apache.fop.layoutmgr.table.TableContentLayoutManager this;
        int lengthBase, $i0;
        org.apache.fop.fo.FObj fobj;
        org.apache.fop.layoutmgr.table.TableLayoutManager $r0;

        this := @this: org.apache.fop.layoutmgr.table.TableContentLayoutManager;
        lengthBase := @parameter0: int;
        fobj := @parameter1: org.apache.fop.fo.FObj;
        $r0 = this.<org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.fop.layoutmgr.table.TableLayoutManager tableLM>;
        $i0 = virtualinvoke $r0.<org.apache.fop.layoutmgr.table.TableLayoutManager: int getBaseLength(int,org.apache.fop.fo.FObj)>(lengthBase, fobj);
        return $i0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$table$TableContentLayoutManager>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.table.TableContentLayoutManager");
        <org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$table$TableContentLayoutManager> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.table.TableContentLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$table$TableContentLayoutManager>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.table.TableContentLayoutManager: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

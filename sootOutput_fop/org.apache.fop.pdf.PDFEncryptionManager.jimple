public class org.apache.fop.pdf.PDFEncryptionManager extends java.lang.Object
{
    protected static org.apache.commons.logging.Log log;
    static java.lang.Class class$org$apache$fop$pdf$PDFEncryptionManager;
    static java.lang.Class class$org$apache$fop$pdf$PDFEncryptionParams;

    public void <init>()
    {
        org.apache.fop.pdf.PDFEncryptionManager this;

        this := @this: org.apache.fop.pdf.PDFEncryptionManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static boolean isJCEAvailable()
    {
        java.lang.ClassNotFoundException e, $r1;
        boolean $z0;

     label0:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("javax.crypto.Cipher");
        $z0 = 1;

     label1:
        return $z0;

     label2:
        $r1 := @caughtexception;
        e = $r1;
        return 0;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    public static boolean checkAvailableAlgorithms()
    {
        boolean $z0;
        java.security.Provider[] providers;
        org.apache.commons.logging.Log $r0;

        $z0 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: boolean isJCEAvailable()>();
        if $z0 != 0 goto label0;

        return 0;

     label0:
        providers = staticinvoke <java.security.Security: java.security.Provider[] getProviders(java.lang.String)>("Cipher.RC4");
        if providers != null goto label1;

        $r0 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Cipher provider for RC4 not available.");
        return 0;

     label1:
        providers = staticinvoke <java.security.Security: java.security.Provider[] getProviders(java.lang.String)>("MessageDigest.MD5");
        if providers != null goto label2;

        $r0 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("MessageDigest provider for MD5 not available.");
        return 0;

     label2:
        return 1;
    }

    public static void setupPDFEncryption(org.apache.fop.pdf.PDFEncryptionParams, org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFEncryptionParams params;
        org.apache.fop.pdf.PDFDocument pdf;
        java.lang.NullPointerException $r0;
        boolean $z0;
        org.apache.commons.logging.Log $r1;

        params := @parameter0: org.apache.fop.pdf.PDFEncryptionParams;
        pdf := @parameter1: org.apache.fop.pdf.PDFDocument;
        if pdf != null goto label0;

        $r0 = new java.lang.NullPointerException;
        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("PDF document must not be null");
        throw $r0;

     label0:
        if params == null goto label3;

        $z0 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: boolean checkAvailableAlgorithms()>();
        if $z0 != 0 goto label2;

        $z0 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: boolean isJCEAvailable()>();
        if $z0 == 0 goto label1;

        $r1 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("PDF encryption has been requested, JCE is available but there\'s no JCE provider available that provides the necessary algorithms. The PDF won\'t be encrypted.");
        goto label2;

     label1:
        $r1 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("PDF encryption has been requested but JCE is unavailable! The PDF won\'t be encrypted.");

     label2:
        virtualinvoke pdf.<org.apache.fop.pdf.PDFDocument: void setEncryption(org.apache.fop.pdf.PDFEncryptionParams)>(params);

     label3:
        return;
    }

    public static org.apache.fop.pdf.PDFEncryption newInstance(int, org.apache.fop.pdf.PDFEncryptionParams)
    {
        int objnum;
        org.apache.fop.pdf.PDFEncryptionParams params;
        java.lang.Class clazz, $r1;
        java.lang.String $r0;
        java.lang.reflect.Method makeMethod;
        java.lang.Object obj;
        java.lang.ClassNotFoundException e, $r8;
        java.lang.Class[] $r3;
        byte $b0;
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        org.apache.fop.pdf.PDFEncryption $r7;
        boolean $z0;
        org.apache.commons.logging.Log $r9;
        java.lang.NoSuchMethodException $r10, e;
        java.lang.IllegalAccessException $r11, e;
        java.lang.reflect.InvocationTargetException $r12, e;

        objnum := @parameter0: int;
        params := @parameter1: org.apache.fop.pdf.PDFEncryptionParams;

     label0:
        clazz = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.fop.pdf.PDFEncryptionJCE");
        $r0 = "make";
        $r3 = newarray (java.lang.Class)[2];
        $r1 = <java.lang.Integer: java.lang.Class TYPE>;
        $r3[0] = $r1;
        $b0 = 1;
        $r1 = <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$org$apache$fop$pdf$PDFEncryptionParams>;
        if $r1 != null goto label1;

        $r1 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.pdf.PDFEncryptionParams");
        <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$org$apache$fop$pdf$PDFEncryptionParams> = $r1;
        goto label2;

     label1:
        $r1 = <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$org$apache$fop$pdf$PDFEncryptionParams>;

     label2:
        $r3[$b0] = $r1;
        makeMethod = virtualinvoke clazz.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r0, $r3);
        $r5 = newarray (java.lang.Object)[2];
        $r6 = new java.lang.Integer;
        specialinvoke $r6.<java.lang.Integer: void <init>(int)>(objnum);
        $r5[0] = $r6;
        $r5[1] = params;
        obj = virtualinvoke makeMethod.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r5);
        $r7 = (org.apache.fop.pdf.PDFEncryption) obj;

     label3:
        return $r7;

     label4:
        $r8 := @caughtexception;
        e = $r8;
        $z0 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: boolean checkAvailableAlgorithms()>();
        if $z0 == 0 goto label5;

        $r9 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("JCE and algorithms available, but the implementation class unavailable. Please do a full rebuild.");

     label5:
        return null;

     label6:
        $r10 := @caughtexception;
        e = $r10;
        $r9 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void error(java.lang.Object)>(e);
        return null;

     label7:
        $r11 := @caughtexception;
        e = $r11;
        $r9 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void error(java.lang.Object)>(e);
        return null;

     label8:
        $r12 := @caughtexception;
        e = $r12;
        $r9 = <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void error(java.lang.Object)>(e);
        return null;

        catch java.lang.ClassNotFoundException from label0 to label3 with label4;
        catch java.lang.NoSuchMethodException from label0 to label3 with label6;
        catch java.lang.IllegalAccessException from label0 to label3 with label7;
        catch java.lang.reflect.InvocationTargetException from label0 to label3 with label8;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$org$apache$fop$pdf$PDFEncryptionManager>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.pdf.PDFEncryptionManager");
        <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$org$apache$fop$pdf$PDFEncryptionManager> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.pdf.PDFEncryptionManager: java.lang.Class class$org$apache$fop$pdf$PDFEncryptionManager>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.pdf.PDFEncryptionManager: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

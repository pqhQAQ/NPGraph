public class org.apache.fop.render.afp.modca.PresentationTextObject extends org.apache.fop.render.afp.modca.AbstractNamedAFPObject
{
    private static final java.lang.String DEFAULT_NAME;
    private org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData;
    private java.util.ArrayList presentationTextData;

    public void <init>()
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void <init>(java.lang.String)>("PTO00001");
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        java.lang.String name;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        name := @parameter0: java.lang.String;
        specialinvoke this.<org.apache.fop.render.afp.modca.AbstractNamedAFPObject: void <init>(java.lang.String)>(name);
        this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData> = null;
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.render.afp.modca.PresentationTextObject: java.util.ArrayList presentationTextData> = $r0;
        return;
    }

    public void createTextData(int, int, int, java.awt.Color, int, int, byte[])
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        int fontNumber, x, y, vsci, ica;
        java.awt.Color col;
        byte[] data;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        fontNumber := @parameter0: int;
        x := @parameter1: int;
        y := @parameter2: int;
        col := @parameter3: java.awt.Color;
        vsci := @parameter4: int;
        ica := @parameter5: int;
        data := @parameter6: byte[];
        virtualinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void createTextData(int,int,int,int,java.awt.Color,int,int,byte[])>(fontNumber, x, y, 0, col, vsci, ica, data);
        return;
    }

    public void createTextData(int, int, int, int, java.awt.Color, int, int, byte[])
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        int fontNumber, x, y, orientation, vsci, ica;
        java.awt.Color col;
        byte[] data;
        org.apache.fop.render.afp.modca.MaximumSizeExceededException msee, $r1;
        org.apache.fop.render.afp.modca.PresentationTextData $r0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        fontNumber := @parameter0: int;
        x := @parameter1: int;
        y := @parameter2: int;
        orientation := @parameter3: int;
        col := @parameter4: java.awt.Color;
        vsci := @parameter5: int;
        ica := @parameter6: int;
        data := @parameter7: byte[];
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        if $r0 != null goto label0;

        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void startPresentationTextData()>();

     label0:
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        virtualinvoke $r0.<org.apache.fop.render.afp.modca.PresentationTextData: void createTextData(int,int,int,int,java.awt.Color,int,int,byte[])>(fontNumber, x, y, orientation, col, vsci, ica, data);

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        msee = $r1;
        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void endPresentationTextData()>();
        virtualinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void createTextData(int,int,int,int,java.awt.Color,int,int,byte[])>(fontNumber, x, y, orientation, col, vsci, ica, data);

     label3:
        return;

        catch org.apache.fop.render.afp.modca.MaximumSizeExceededException from label0 to label1 with label2;
    }

    public void createLineData(int, int, int, int, int, java.awt.Color)
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        int x1, y1, x2, y2, thickness;
        java.awt.Color col;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        x1 := @parameter0: int;
        y1 := @parameter1: int;
        x2 := @parameter2: int;
        y2 := @parameter3: int;
        thickness := @parameter4: int;
        col := @parameter5: java.awt.Color;
        virtualinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void createLineData(int,int,int,int,int,int,java.awt.Color)>(x1, y1, x2, y2, thickness, 0, col);
        return;
    }

    public void createLineData(int, int, int, int, int, int, java.awt.Color)
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        int x1, y1, x2, y2, thickness, orientation;
        java.awt.Color col;
        org.apache.fop.render.afp.modca.MaximumSizeExceededException msee, $r1;
        org.apache.fop.render.afp.modca.PresentationTextData $r0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        x1 := @parameter0: int;
        y1 := @parameter1: int;
        x2 := @parameter2: int;
        y2 := @parameter3: int;
        thickness := @parameter4: int;
        orientation := @parameter5: int;
        col := @parameter6: java.awt.Color;
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        if $r0 != null goto label0;

        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void startPresentationTextData()>();

     label0:
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        virtualinvoke $r0.<org.apache.fop.render.afp.modca.PresentationTextData: void createLineData(int,int,int,int,int,int,java.awt.Color)>(x1, y1, x2, y2, thickness, orientation, col);

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        msee = $r1;
        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void endPresentationTextData()>();
        virtualinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void createLineData(int,int,int,int,int,int,java.awt.Color)>(x1, y1, x2, y2, thickness, orientation, col);

     label3:
        return;

        catch org.apache.fop.render.afp.modca.MaximumSizeExceededException from label0 to label1 with label2;
    }

    private void startPresentationTextData()
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        org.apache.fop.render.afp.modca.PresentationTextData $r0;
        java.util.ArrayList $r1;
        int $i0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        $r1 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: java.util.ArrayList presentationTextData>;
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        if $i0 != 0 goto label0;

        $r0 = new org.apache.fop.render.afp.modca.PresentationTextData;
        specialinvoke $r0.<org.apache.fop.render.afp.modca.PresentationTextData: void <init>(boolean)>(1);
        this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData> = $r0;
        goto label1;

     label0:
        $r0 = new org.apache.fop.render.afp.modca.PresentationTextData;
        specialinvoke $r0.<org.apache.fop.render.afp.modca.PresentationTextData: void <init>()>();
        this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData> = $r0;

     label1:
        $r1 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: java.util.ArrayList presentationTextData>;
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);
        return;
    }

    private void endPresentationTextData()
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData> = null;
        return;
    }

    public void writeDataStream(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        java.io.OutputStream os;
        java.util.ArrayList $r0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        os := @parameter0: java.io.OutputStream;
        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void writeStart(java.io.OutputStream)>(os);
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: java.util.ArrayList presentationTextData>;
        virtualinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void writeObjectList(java.util.List,java.io.OutputStream)>($r0, os);
        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void writeEnd(java.io.OutputStream)>(os);
        return;
    }

    public java.lang.String getName()
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        java.lang.String $r0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: java.lang.String name>;
        return $r0;
    }

    private void writeStart(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        java.io.OutputStream os;
        byte[] data, $r0, $r1;
        int i, $i0;
        byte $b1;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        os := @parameter0: java.io.OutputStream;
        data = newarray (byte)[17];
        data[0] = 90;
        data[1] = 0;
        data[2] = 16;
        data[3] = -45;
        data[4] = -88;
        data[5] = -101;
        data[6] = 0;
        data[7] = 0;
        data[8] = 0;
        i = 0;

     label0:
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: byte[] nameBytes>;
        $i0 = lengthof $r0;
        if i >= $i0 goto label1;

        $i0 = 9 + i;
        $r1 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: byte[] nameBytes>;
        $b1 = $r1[i];
        data[$i0] = $b1;
        i = i + 1;
        goto label0;

     label1:
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        return;
    }

    private void writeEnd(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        java.io.OutputStream os;
        byte[] data, $r0, $r1;
        int i, $i0;
        byte $b1;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        os := @parameter0: java.io.OutputStream;
        data = newarray (byte)[17];
        data[0] = 90;
        data[1] = 0;
        data[2] = 16;
        data[3] = -45;
        data[4] = -87;
        data[5] = -101;
        data[6] = 0;
        data[7] = 0;
        data[8] = 0;
        i = 0;

     label0:
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: byte[] nameBytes>;
        $i0 = lengthof $r0;
        if i >= $i0 goto label1;

        $i0 = 9 + i;
        $r1 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: byte[] nameBytes>;
        $b1 = $r1[i];
        data[$i0] = $b1;
        i = i + 1;
        goto label0;

     label1:
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        return;
    }

    public void endControlSequence()
    {
        org.apache.fop.render.afp.modca.PresentationTextObject this;
        org.apache.fop.render.afp.modca.MaximumSizeExceededException msee, $r1;
        org.apache.fop.render.afp.modca.PresentationTextData $r0;

        this := @this: org.apache.fop.render.afp.modca.PresentationTextObject;
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        if $r0 != null goto label0;

        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void startPresentationTextData()>();

     label0:
        $r0 = this.<org.apache.fop.render.afp.modca.PresentationTextObject: org.apache.fop.render.afp.modca.PresentationTextData currentPresentationTextData>;
        virtualinvoke $r0.<org.apache.fop.render.afp.modca.PresentationTextData: void endControlSequence()>();

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        msee = $r1;
        specialinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void endPresentationTextData()>();
        virtualinvoke this.<org.apache.fop.render.afp.modca.PresentationTextObject: void endControlSequence()>();

     label3:
        return;

        catch org.apache.fop.render.afp.modca.MaximumSizeExceededException from label0 to label1 with label2;
    }
}

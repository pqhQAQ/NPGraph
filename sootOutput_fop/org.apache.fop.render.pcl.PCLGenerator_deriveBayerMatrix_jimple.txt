method: org.apache.fop.render.pcl.PCLGenerator.deriveBayerMatrix:474967817
1598526522:d := @parameter0: int[]
2130450604:$i0 = lengthof d
426130676:$i0 = $i0 * 4
1247671282:dn = newarray (int)[$i0]
1640738978:$i0 = lengthof d
62492119:$d0 = (double) $i0
185540650:$d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d0)
1528246768:half = (int) $d0
1287765479:part = 0
1441898464:if part >= 4 goto return dn
1463700838:i = 0
631639653:c = lengthof d
1108582568:if i >= c goto part = part + 1
974161865:$i1 = d[i]
33332626:$i1 = $i1 * 4
1875696962:$r0 = <org.apache.fop.render.pcl.PCLGenerator: int[] BAYER_D2>
1306392775:$i2 = $r0[part]
670562497:$i1 = $i1 + $i2
149707623:staticinvoke <org.apache.fop.render.pcl.PCLGenerator: void setValueInMatrix(int[],int,int,int,int)>(dn, half, part, i, $i1)
1432669124:i = i + 1
1283316904:goto [?= (branch)]
1528938707:part = part + 1
83528547:goto [?= (branch)]
685460683:return dn

public class org.apache.fop.render.rtf.rtflib.tools.PercentContext extends java.lang.Object implements org.apache.fop.datatypes.PercentBaseContext
{
    private static org.apache.commons.logging.Log log;
    private java.util.Map lengthMap;
    private java.util.Map tableUnitMap;
    private boolean baseWidthSet;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$tools$PercentContext;

    public void <init>()
    {
        org.apache.fop.render.rtf.rtflib.tools.PercentContext this;
        java.util.HashMap $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map lengthMap> = $r0;
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map tableUnitMap> = $r0;
        this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: boolean baseWidthSet> = 0;
        return;
    }

    public int getBaseLength(int, org.apache.fop.fo.FObj)
    {
        org.apache.fop.render.rtf.rtflib.tools.PercentContext this;
        int lengthBase, $i0;
        org.apache.fop.fo.FObj fobj;
        java.lang.Object width, unit;
        java.lang.StringBuffer $r0;
        java.util.Map $r1;
        java.lang.String $r2, $r6;
        java.lang.Integer $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.Exception $r5;

        this := @this: org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        lengthBase := @parameter0: int;
        fobj := @parameter1: org.apache.fop.fo.FObj;
        if fobj != null goto label0;

        return 0;

     label0:
        tableswitch(lengthBase)
        {
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label1;
            case 6: goto label6;
            case 7: goto label6;
            case 8: goto label6;
            case 9: goto label6;
            case 10: goto label6;
            case 11: goto label3;
            default: goto label6;
        };

     label1:
        $r1 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map lengthMap>;
        width = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(fobj);
        if width == null goto label2;

        $r2 = virtualinvoke width.<java.lang.Object: java.lang.String toString()>();
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);
        return $i0;

     label2:
        return -1;

     label3:
        $r1 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map tableUnitMap>;
        unit = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(fobj);
        if unit == null goto label4;

        $r3 = (java.lang.Integer) unit;
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        goto label5;

     label4:
        $i0 = 0;

     label5:
        return $i0;

     label6:
        $r4 = <org.apache.fop.render.rtf.rtflib.tools.PercentContext: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.Exception;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported base type for LengthBase:");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(lengthBase);
        $r6 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>($r6);
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r5);
        return 0;
    }

    public void setDimension(org.apache.fop.fo.FObj, int)
    {
        org.apache.fop.render.rtf.rtflib.tools.PercentContext this;
        org.apache.fop.fo.FObj fobj;
        int width;
        java.lang.Integer $r0;
        boolean $z0;
        java.util.Map $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        fobj := @parameter0: org.apache.fop.fo.FObj;
        width := @parameter1: int;
        $z0 = fobj instanceof org.apache.fop.fo.pagination.PageSequence;
        if $z0 == 0 goto label0;

        this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: boolean baseWidthSet> = 1;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map lengthMap>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(width);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fobj, $r0);
        return;
    }

    public void setTableUnit(org.apache.fop.fo.flow.table.Table, int)
    {
        org.apache.fop.render.rtf.rtflib.tools.PercentContext this;
        org.apache.fop.fo.flow.table.Table table;
        int tableUnit;
        java.lang.Integer $r0;
        java.util.Map $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        table := @parameter0: org.apache.fop.fo.flow.table.Table;
        tableUnit := @parameter1: int;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map tableUnitMap>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(tableUnit);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(table, $r0);
        return;
    }

    private java.lang.Integer findParent(org.apache.fop.fo.FONode)
    {
        org.apache.fop.render.rtf.rtflib.tools.PercentContext this;
        org.apache.fop.fo.FONode fobj, $r6;
        org.apache.fop.fo.pagination.Root $r0;
        java.util.Map $r1, $r3;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Object $r4;
        java.lang.String $r5, $r9;
        org.apache.commons.logging.Log $r7;
        java.lang.StringBuffer $r8;

        this := @this: org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        fobj := @parameter0: org.apache.fop.fo.FONode;
        $r0 = virtualinvoke fobj.<org.apache.fop.fo.FONode: org.apache.fop.fo.pagination.Root getRoot()>();
        if $r0 == fobj goto label1;

        $r1 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map lengthMap>;
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(fobj);
        if $z0 == 0 goto label0;

        $r2 = new java.lang.Integer;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map lengthMap>;
        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(fobj);
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.Integer: void <init>(java.lang.String)>($r5);
        return $r2;

     label0:
        $r6 = virtualinvoke fobj.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode getParent()>();
        $r2 = specialinvoke this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.lang.Integer findParent(org.apache.fop.fo.FONode)>($r6);
        return $r2;

     label1:
        $r7 = <org.apache.fop.render.rtf.rtflib.tools.PercentContext: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Base Value for element ");
        $r5 = virtualinvoke fobj.<org.apache.fop.fo.FONode: java.lang.String getName()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found");
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r9);
        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(-1);
        return $r2;
    }

    public void setDimension(org.apache.fop.fo.FObj)
    {
        org.apache.fop.render.rtf.rtflib.tools.PercentContext this;
        org.apache.fop.fo.FObj fobj;
        java.lang.Integer width;
        boolean $z0;
        org.apache.fop.fo.FONode $r0;
        int $i0;
        java.util.Map $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        fobj := @parameter0: org.apache.fop.fo.FObj;
        $z0 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: boolean baseWidthSet>;
        if $z0 == 0 goto label0;

        $r0 = virtualinvoke fobj.<org.apache.fop.fo.FObj: org.apache.fop.fo.FONode getParent()>();
        width = specialinvoke this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.lang.Integer findParent(org.apache.fop.fo.FONode)>($r0);
        $i0 = virtualinvoke width.<java.lang.Integer: int intValue()>();
        if $i0 == -1 goto label0;

        $r1 = this.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.util.Map lengthMap>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(fobj, width);

     label0:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.lang.Class class$org$apache$fop$render$rtf$rtflib$tools$PercentContext>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.tools.PercentContext");
        <org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.lang.Class class$org$apache$fop$render$rtf$rtflib$tools$PercentContext> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.render.rtf.rtflib.tools.PercentContext: java.lang.Class class$org$apache$fop$render$rtf$rtflib$tools$PercentContext>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.render.rtf.rtflib.tools.PercentContext: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

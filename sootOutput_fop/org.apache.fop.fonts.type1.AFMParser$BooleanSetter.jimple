class org.apache.fop.fonts.type1.AFMParser$BooleanSetter extends org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler
{
    private java.lang.String method;

    public void <init>(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMParser$BooleanSetter this;
        java.lang.String variable, $r1, $r2;
        java.lang.StringBuffer $r0;

        this := @this: org.apache.fop.fonts.type1.AFMParser$BooleanSetter;
        variable := @parameter0: java.lang.String;
        specialinvoke this.<org.apache.fop.fonts.type1.AFMParser$AbstractValueHandler: void <init>(org.apache.fop.fonts.type1.AFMParser$1)>(null);
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("set");
        $r1 = virtualinvoke variable.<java.lang.String: java.lang.String substring(int)>(2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        this.<org.apache.fop.fonts.type1.AFMParser$BooleanSetter: java.lang.String method> = $r2;
        return;
    }

    protected java.lang.Object getContextObject(java.util.Stack)
    {
        org.apache.fop.fonts.type1.AFMParser$BooleanSetter this;
        java.util.Stack stack;
        java.lang.Object $r0;
        org.apache.fop.fonts.type1.AFMFile $r1;

        this := @this: org.apache.fop.fonts.type1.AFMParser$BooleanSetter;
        stack := @parameter0: java.util.Stack;
        $r0 = virtualinvoke stack.<java.util.Stack: java.lang.Object peek()>();
        $r1 = (org.apache.fop.fonts.type1.AFMFile) $r0;
        return $r1;
    }

    public void parse(java.lang.String, int, java.util.Stack) throws java.io.IOException
    {
        org.apache.fop.fonts.type1.AFMParser$BooleanSetter this;
        java.lang.String line, $r2, $r7;
        int startpos;
        java.util.Stack stack;
        java.lang.Boolean b;
        java.beans.Statement statement, $r0;
        java.lang.Exception e, $r4;
        java.lang.Object $r1;
        java.lang.Object[] $r3;
        java.lang.RuntimeException $r5;
        java.lang.StringBuffer $r6;

        this := @this: org.apache.fop.fonts.type1.AFMParser$BooleanSetter;
        line := @parameter0: java.lang.String;
        startpos := @parameter1: int;
        stack := @parameter2: java.util.Stack;
        b = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$BooleanSetter: java.lang.Boolean getBooleanValue(java.lang.String,int)>(line, startpos);
        $r0 = new java.beans.Statement;
        $r1 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMParser$BooleanSetter: java.lang.Object getContextObject(java.util.Stack)>(stack);
        $r2 = this.<org.apache.fop.fonts.type1.AFMParser$BooleanSetter: java.lang.String method>;
        $r3 = newarray (java.lang.Object)[1];
        $r3[0] = b;
        specialinvoke $r0.<java.beans.Statement: void <init>(java.lang.Object,java.lang.String,java.lang.Object[])>($r1, $r2, $r3);
        statement = $r0;

     label0:
        virtualinvoke statement.<java.beans.Statement: void execute()>();

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        e = $r4;
        $r5 = new java.lang.RuntimeException;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bean error: ");
        $r2 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r5;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }
}

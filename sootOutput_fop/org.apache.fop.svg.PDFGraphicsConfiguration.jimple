class org.apache.fop.svg.PDFGraphicsConfiguration extends org.apache.fop.svg.GraphicsConfiguration
{
    private static final java.awt.image.BufferedImage BI_WITH_ALPHA;
    private static final java.awt.image.BufferedImage BI_WITHOUT_ALPHA;

    void <init>()
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        specialinvoke this.<org.apache.fop.svg.GraphicsConfiguration: void <init>()>();
        return;
    }

    public java.awt.image.BufferedImage createCompatibleImage(int, int, int)
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        int width, height, transparency;
        java.awt.image.BufferedImage $r0;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        width := @parameter0: int;
        height := @parameter1: int;
        transparency := @parameter2: int;
        if transparency != 1 goto label0;

        $r0 = new java.awt.image.BufferedImage;
        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(width, height, 1);
        return $r0;

     label0:
        $r0 = new java.awt.image.BufferedImage;
        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(width, height, 2);
        return $r0;
    }

    public java.awt.image.BufferedImage createCompatibleImage(int, int)
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        int width, height;
        java.awt.image.BufferedImage $r0;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        width := @parameter0: int;
        height := @parameter1: int;
        $r0 = new java.awt.image.BufferedImage;
        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(width, height, 2);
        return $r0;
    }

    public java.awt.Rectangle getBounds()
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        return null;
    }

    public java.awt.image.ColorModel getColorModel()
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        java.awt.image.BufferedImage $r0;
        java.awt.image.ColorModel $r1;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        $r0 = <org.apache.fop.svg.PDFGraphicsConfiguration: java.awt.image.BufferedImage BI_WITH_ALPHA>;
        $r1 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();
        return $r1;
    }

    public java.awt.image.ColorModel getColorModel(int)
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        int transparency;
        java.awt.image.BufferedImage $r0;
        java.awt.image.ColorModel $r1;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        transparency := @parameter0: int;
        if transparency != 1 goto label0;

        $r0 = <org.apache.fop.svg.PDFGraphicsConfiguration: java.awt.image.BufferedImage BI_WITHOUT_ALPHA>;
        $r1 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();
        return $r1;

     label0:
        $r0 = <org.apache.fop.svg.PDFGraphicsConfiguration: java.awt.image.BufferedImage BI_WITH_ALPHA>;
        $r1 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>();
        return $r1;
    }

    public java.awt.geom.AffineTransform getDefaultTransform()
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        java.awt.geom.AffineTransform $r0;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        $r0 = new java.awt.geom.AffineTransform;
        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>()>();
        return $r0;
    }

    public java.awt.geom.AffineTransform getNormalizingTransform()
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        java.awt.geom.AffineTransform $r0;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        $r0 = new java.awt.geom.AffineTransform;
        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(2.0F, 0.0F, 0.0F, 2.0F, 0.0F, 0.0F);
        return $r0;
    }

    public java.awt.GraphicsDevice getDevice()
    {
        org.apache.fop.svg.PDFGraphicsConfiguration this;
        org.apache.fop.svg.PDFGraphicsDevice $r0;

        this := @this: org.apache.fop.svg.PDFGraphicsConfiguration;
        $r0 = new org.apache.fop.svg.PDFGraphicsDevice;
        specialinvoke $r0.<org.apache.fop.svg.PDFGraphicsDevice: void <init>(org.apache.fop.svg.PDFGraphicsConfiguration)>(this);
        return $r0;
    }

    static void <clinit>()
    {
        java.awt.image.BufferedImage $r0;

        $r0 = new java.awt.image.BufferedImage;
        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 2);
        <org.apache.fop.svg.PDFGraphicsConfiguration: java.awt.image.BufferedImage BI_WITH_ALPHA> = $r0;
        $r0 = new java.awt.image.BufferedImage;
        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 1);
        <org.apache.fop.svg.PDFGraphicsConfiguration: java.awt.image.BufferedImage BI_WITHOUT_ALPHA> = $r0;
        return;
    }
}

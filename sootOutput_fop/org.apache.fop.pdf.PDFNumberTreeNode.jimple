public class org.apache.fop.pdf.PDFNumberTreeNode extends org.apache.fop.pdf.PDFDictionary
{
    private static final java.lang.String KIDS;
    private static final java.lang.String NUMS;
    private static final java.lang.String LIMITS;

    public void <init>()
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        specialinvoke this.<org.apache.fop.pdf.PDFDictionary: void <init>()>();
        return;
    }

    public void setKids(org.apache.fop.pdf.PDFArray)
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        org.apache.fop.pdf.PDFArray kids;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        kids := @parameter0: org.apache.fop.pdf.PDFArray;
        virtualinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: void put(java.lang.String,java.lang.Object)>("Kids", kids);
        return;
    }

    public org.apache.fop.pdf.PDFArray getKids()
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        java.lang.Object $r0;
        org.apache.fop.pdf.PDFArray $r1;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: java.lang.Object get(java.lang.String)>("Kids");
        $r1 = (org.apache.fop.pdf.PDFArray) $r0;
        return $r1;
    }

    public void setNums(org.apache.fop.pdf.PDFNumsArray)
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        org.apache.fop.pdf.PDFNumsArray nums;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        nums := @parameter0: org.apache.fop.pdf.PDFNumsArray;
        virtualinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: void put(java.lang.String,java.lang.Object)>("Nums", nums);
        return;
    }

    public org.apache.fop.pdf.PDFNumsArray getNums()
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        java.lang.Object $r0;
        org.apache.fop.pdf.PDFNumsArray $r1;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: java.lang.Object get(java.lang.String)>("Nums");
        $r1 = (org.apache.fop.pdf.PDFNumsArray) $r0;
        return $r1;
    }

    public void setLowerLimit(java.lang.Integer)
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        java.lang.Integer key;
        org.apache.fop.pdf.PDFArray limits;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        key := @parameter0: java.lang.Integer;
        limits = specialinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: org.apache.fop.pdf.PDFArray prepareLimitsArray()>();
        virtualinvoke limits.<org.apache.fop.pdf.PDFArray: void set(int,java.lang.Object)>(0, key);
        return;
    }

    public java.lang.Integer getLowerLimit()
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        org.apache.fop.pdf.PDFArray limits;
        java.lang.Object $r0;
        java.lang.Integer $r1;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        limits = specialinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: org.apache.fop.pdf.PDFArray prepareLimitsArray()>();
        $r0 = virtualinvoke limits.<org.apache.fop.pdf.PDFArray: java.lang.Object get(int)>(0);
        $r1 = (java.lang.Integer) $r0;
        return $r1;
    }

    public void setUpperLimit(java.lang.Integer)
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        java.lang.Integer key;
        org.apache.fop.pdf.PDFArray limits;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        key := @parameter0: java.lang.Integer;
        limits = specialinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: org.apache.fop.pdf.PDFArray prepareLimitsArray()>();
        virtualinvoke limits.<org.apache.fop.pdf.PDFArray: void set(int,java.lang.Object)>(1, key);
        return;
    }

    public java.lang.Integer getUpperLimit()
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        org.apache.fop.pdf.PDFArray limits;
        java.lang.Object $r0;
        java.lang.Integer $r1;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        limits = specialinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: org.apache.fop.pdf.PDFArray prepareLimitsArray()>();
        $r0 = virtualinvoke limits.<org.apache.fop.pdf.PDFArray: java.lang.Object get(int)>(1);
        $r1 = (java.lang.Integer) $r0;
        return $r1;
    }

    private org.apache.fop.pdf.PDFArray prepareLimitsArray()
    {
        org.apache.fop.pdf.PDFNumberTreeNode this;
        org.apache.fop.pdf.PDFArray limits, $r1;
        java.lang.Object $r0;
        java.lang.Object[] $r2;
        int $i0;
        java.lang.IllegalStateException $r3;

        this := @this: org.apache.fop.pdf.PDFNumberTreeNode;
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: java.lang.Object get(java.lang.String)>("Limits");
        limits = (org.apache.fop.pdf.PDFArray) $r0;
        if limits != null goto label0;

        $r1 = new org.apache.fop.pdf.PDFArray;
        $r2 = newarray (java.lang.Object)[2];
        specialinvoke $r1.<org.apache.fop.pdf.PDFArray: void <init>(org.apache.fop.pdf.PDFObject,java.lang.Object[])>(this, $r2);
        limits = $r1;
        virtualinvoke this.<org.apache.fop.pdf.PDFNumberTreeNode: void put(java.lang.String,java.lang.Object)>("Limits", limits);

     label0:
        $i0 = virtualinvoke limits.<org.apache.fop.pdf.PDFArray: int length()>();
        if $i0 == 2 goto label1;

        $r3 = new java.lang.IllegalStateException;
        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Limits array must have 2 entries");
        throw $r3;

     label1:
        return limits;
    }
}

public class org.apache.fop.fonts.FontSetup extends java.lang.Object
{
    protected static org.apache.commons.logging.Log log;
    static java.lang.Class class$org$apache$fop$fonts$FontSetup;

    public void <init>()
    {
        org.apache.fop.fonts.FontSetup this;

        this := @this: org.apache.fop.fonts.FontSetup;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void setup(org.apache.fop.fonts.FontInfo, java.util.List, org.apache.fop.fonts.FontResolver)
    {
        org.apache.fop.fonts.FontInfo fontInfo;
        java.util.List embedList;
        org.apache.fop.fonts.FontResolver resolver;

        fontInfo := @parameter0: org.apache.fop.fonts.FontInfo;
        embedList := @parameter1: java.util.List;
        resolver := @parameter2: org.apache.fop.fonts.FontResolver;
        staticinvoke <org.apache.fop.fonts.FontSetup: void setup(org.apache.fop.fonts.FontInfo,java.util.List,org.apache.fop.fonts.FontResolver,boolean)>(fontInfo, embedList, resolver, 0);
        return;
    }

    public static void setup(org.apache.fop.fonts.FontInfo, java.util.List, org.apache.fop.fonts.FontResolver, boolean)
    {
        org.apache.fop.fonts.FontInfo fontInfo;
        java.util.List embedList;
        org.apache.fop.fonts.FontResolver resolver;
        boolean enableBase14Kerning;
        org.apache.fop.fonts.base14.Helvetica $r0;
        org.apache.fop.fonts.base14.HelveticaOblique $r1;
        org.apache.fop.fonts.base14.HelveticaBold $r2;
        org.apache.fop.fonts.base14.HelveticaBoldOblique $r3;
        org.apache.fop.fonts.base14.TimesRoman $r4;
        org.apache.fop.fonts.base14.TimesItalic $r5;
        org.apache.fop.fonts.base14.TimesBold $r6;
        org.apache.fop.fonts.base14.TimesBoldItalic $r7;
        org.apache.fop.fonts.base14.Courier $r8;
        org.apache.fop.fonts.base14.CourierOblique $r9;
        org.apache.fop.fonts.base14.CourierBold $r10;
        org.apache.fop.fonts.base14.CourierBoldOblique $r11;
        org.apache.fop.fonts.base14.Symbol $r12;
        org.apache.fop.fonts.base14.ZapfDingbats $r13;

        fontInfo := @parameter0: org.apache.fop.fonts.FontInfo;
        embedList := @parameter1: java.util.List;
        resolver := @parameter2: org.apache.fop.fonts.FontResolver;
        enableBase14Kerning := @parameter3: boolean;
        $r0 = new org.apache.fop.fonts.base14.Helvetica;
        specialinvoke $r0.<org.apache.fop.fonts.base14.Helvetica: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F1", $r0);
        $r1 = new org.apache.fop.fonts.base14.HelveticaOblique;
        specialinvoke $r1.<org.apache.fop.fonts.base14.HelveticaOblique: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F2", $r1);
        $r2 = new org.apache.fop.fonts.base14.HelveticaBold;
        specialinvoke $r2.<org.apache.fop.fonts.base14.HelveticaBold: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F3", $r2);
        $r3 = new org.apache.fop.fonts.base14.HelveticaBoldOblique;
        specialinvoke $r3.<org.apache.fop.fonts.base14.HelveticaBoldOblique: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F4", $r3);
        $r4 = new org.apache.fop.fonts.base14.TimesRoman;
        specialinvoke $r4.<org.apache.fop.fonts.base14.TimesRoman: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F5", $r4);
        $r5 = new org.apache.fop.fonts.base14.TimesItalic;
        specialinvoke $r5.<org.apache.fop.fonts.base14.TimesItalic: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F6", $r5);
        $r6 = new org.apache.fop.fonts.base14.TimesBold;
        specialinvoke $r6.<org.apache.fop.fonts.base14.TimesBold: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F7", $r6);
        $r7 = new org.apache.fop.fonts.base14.TimesBoldItalic;
        specialinvoke $r7.<org.apache.fop.fonts.base14.TimesBoldItalic: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F8", $r7);
        $r8 = new org.apache.fop.fonts.base14.Courier;
        specialinvoke $r8.<org.apache.fop.fonts.base14.Courier: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F9", $r8);
        $r9 = new org.apache.fop.fonts.base14.CourierOblique;
        specialinvoke $r9.<org.apache.fop.fonts.base14.CourierOblique: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F10", $r9);
        $r10 = new org.apache.fop.fonts.base14.CourierBold;
        specialinvoke $r10.<org.apache.fop.fonts.base14.CourierBold: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F11", $r10);
        $r11 = new org.apache.fop.fonts.base14.CourierBoldOblique;
        specialinvoke $r11.<org.apache.fop.fonts.base14.CourierBoldOblique: void <init>(boolean)>(enableBase14Kerning);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F12", $r11);
        $r12 = new org.apache.fop.fonts.base14.Symbol;
        specialinvoke $r12.<org.apache.fop.fonts.base14.Symbol: void <init>()>();
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F13", $r12);
        $r13 = new org.apache.fop.fonts.base14.ZapfDingbats;
        specialinvoke $r13.<org.apache.fop.fonts.base14.ZapfDingbats: void <init>()>();
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>("F14", $r13);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F5", "any", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "any", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "any", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F7", "any", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "any", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "any", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F1", "sans-serif", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F2", "sans-serif", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F2", "sans-serif", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F3", "sans-serif", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F4", "sans-serif", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F4", "sans-serif", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F1", "SansSerif", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F2", "SansSerif", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F2", "SansSerif", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F3", "SansSerif", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F4", "SansSerif", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F4", "SansSerif", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F5", "serif", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "serif", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "serif", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F7", "serif", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "serif", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "serif", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F9", "monospace", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F10", "monospace", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F10", "monospace", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F11", "monospace", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F12", "monospace", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F12", "monospace", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F9", "Monospaced", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F10", "Monospaced", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F10", "Monospaced", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F11", "Monospaced", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F12", "Monospaced", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F12", "Monospaced", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F1", "Helvetica", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F2", "Helvetica", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F2", "Helvetica", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F3", "Helvetica", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F4", "Helvetica", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F4", "Helvetica", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F5", "Times", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "Times", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "Times", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F7", "Times", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "Times", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "Times", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F9", "Courier", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F10", "Courier", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F10", "Courier", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F11", "Courier", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F12", "Courier", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F12", "Courier", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F13", "Symbol", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F14", "ZapfDingbats", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F5", "Times-Roman", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "Times-Roman", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "Times-Roman", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F7", "Times-Roman", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "Times-Roman", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "Times-Roman", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F5", "Times Roman", "normal", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "Times Roman", "oblique", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F6", "Times Roman", "italic", 400);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F7", "Times Roman", "normal", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "Times Roman", "oblique", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F8", "Times Roman", "italic", 700);
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,java.lang.String,java.lang.String,int)>("F9", "Computer-Modern-Typewriter", "normal", 400);
        staticinvoke <org.apache.fop.fonts.FontSetup: void addConfiguredFonts(org.apache.fop.fonts.FontInfo,java.util.List,int,org.apache.fop.fonts.FontResolver)>(fontInfo, embedList, 15, resolver);
        return;
    }

    public static void addConfiguredFonts(org.apache.fop.fonts.FontInfo, java.util.List, int, org.apache.fop.fonts.FontResolver)
    {
        org.apache.fop.fonts.FontInfo fontInfo;
        java.util.List fontInfoList, triplets;
        int num, i, c, $i0;
        org.apache.fop.fonts.FontResolver resolver;
        null_type internalName;
        org.apache.fop.fonts.EmbedFontInfo configFontInfo;
        org.apache.fop.fonts.LazyFont font, $r2;
        org.apache.fop.fonts.FontTriplet triplet;
        java.lang.Object $r0;
        java.lang.StringBuffer $r1;
        java.lang.String internalName;

        fontInfo := @parameter0: org.apache.fop.fonts.FontInfo;
        fontInfoList := @parameter1: java.util.List;
        num := @parameter2: int;
        resolver := @parameter3: org.apache.fop.fonts.FontResolver;
        if fontInfoList != null goto label0;

        return;

     label0:
        if resolver != null goto label1;

        resolver = staticinvoke <org.apache.fop.fonts.FontSetup: org.apache.fop.fonts.FontResolver createMinimalFontResolver()>();

     label1:
        internalName = null;
        i = 0;

     label2:
        $i0 = interfaceinvoke fontInfoList.<java.util.List: int size()>();
        if i >= $i0 goto label5;

        $r0 = interfaceinvoke fontInfoList.<java.util.List: java.lang.Object get(int)>(i);
        configFontInfo = (org.apache.fop.fonts.EmbedFontInfo) $r0;
        virtualinvoke configFontInfo.<org.apache.fop.fonts.EmbedFontInfo: java.lang.String getMetricsFile()>();
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("F");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(num);
        internalName = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        num = num + 1;
        $r2 = new org.apache.fop.fonts.LazyFont;
        specialinvoke $r2.<org.apache.fop.fonts.LazyFont: void <init>(org.apache.fop.fonts.EmbedFontInfo,org.apache.fop.fonts.FontResolver)>(configFontInfo, resolver);
        font = $r2;
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addMetrics(java.lang.String,org.apache.fop.fonts.FontMetrics)>(internalName, font);
        triplets = virtualinvoke configFontInfo.<org.apache.fop.fonts.EmbedFontInfo: java.util.List getFontTriplets()>();
        c = 0;

     label3:
        $i0 = interfaceinvoke triplets.<java.util.List: int size()>();
        if c >= $i0 goto label4;

        $r0 = interfaceinvoke triplets.<java.util.List: java.lang.Object get(int)>(c);
        triplet = (org.apache.fop.fonts.FontTriplet) $r0;
        virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: void addFontProperties(java.lang.String,org.apache.fop.fonts.FontTriplet)>(internalName, triplet);
        c = c + 1;
        goto label3;

     label4:
        i = i + 1;
        goto label2;

     label5:
        return;
    }

    public static org.apache.fop.fonts.FontResolver createMinimalFontResolver()
    {
        org.apache.fop.fonts.FontSetup$1 $r0;

        $r0 = new org.apache.fop.fonts.FontSetup$1;
        specialinvoke $r0.<org.apache.fop.fonts.FontSetup$1: void <init>()>();
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.fonts.FontSetup: java.lang.Class class$org$apache$fop$fonts$FontSetup>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.fonts.FontSetup: java.lang.Class class$(java.lang.String)>("org.apache.fop.fonts.FontSetup");
        <org.apache.fop.fonts.FontSetup: java.lang.Class class$org$apache$fop$fonts$FontSetup> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.fonts.FontSetup: java.lang.Class class$org$apache$fop$fonts$FontSetup>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.fonts.FontSetup: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

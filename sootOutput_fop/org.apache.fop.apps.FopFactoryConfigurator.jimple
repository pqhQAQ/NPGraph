public class org.apache.fop.apps.FopFactoryConfigurator extends java.lang.Object
{
    public static final boolean DEFAULT_BREAK_INDENT_INHERITANCE;
    public static final boolean DEFAULT_STRICT_USERCONFIG_VALIDATION;
    public static final boolean DEFAULT_STRICT_FO_VALIDATION;
    public static final java.lang.String DEFAULT_PAGE_WIDTH;
    public static final java.lang.String DEFAULT_PAGE_HEIGHT;
    public static final float DEFAULT_SOURCE_RESOLUTION;
    public static final float DEFAULT_TARGET_RESOLUTION;
    public static final boolean DEFAULT_USE_CACHE;
    private final org.apache.commons.logging.Log log;
    private org.apache.fop.apps.FopFactory factory;
    private org.apache.avalon.framework.configuration.Configuration cfg;
    static java.lang.Class class$org$apache$fop$apps$FopFactoryConfigurator;

    public void <init>(org.apache.fop.apps.FopFactory)
    {
        org.apache.fop.apps.FopFactoryConfigurator this;
        org.apache.fop.apps.FopFactory factory;
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r2;

        this := @this: org.apache.fop.apps.FopFactoryConfigurator;
        factory := @parameter0: org.apache.fop.apps.FopFactory;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = <org.apache.fop.apps.FopFactoryConfigurator: java.lang.Class class$org$apache$fop$apps$FopFactoryConfigurator>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.apps.FopFactoryConfigurator: java.lang.Class class$(java.lang.String)>("org.apache.fop.apps.FopFactoryConfigurator");
        <org.apache.fop.apps.FopFactoryConfigurator: java.lang.Class class$org$apache$fop$apps$FopFactoryConfigurator> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.apps.FopFactoryConfigurator: java.lang.Class class$org$apache$fop$apps$FopFactoryConfigurator>;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log> = $r2;
        this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.fop.apps.FopFactory factory> = null;
        this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg> = null;
        this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.fop.apps.FopFactory factory> = factory;
        return;
    }

    public void configure(org.apache.fop.apps.FopFactory) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactoryConfigurator this;
        org.apache.fop.apps.FopFactory factory;
        org.apache.avalon.framework.configuration.ConfigurationException e, $r3, $r4, $r10, $r13, mfue;
        boolean strict, $z0, $z1;
        java.net.MalformedURLException mfue, $r6, $r7, $r8;
        org.apache.avalon.framework.configuration.Configuration pageConfig, $r1, $r2;
        org.apache.commons.logging.Log $r0;
        java.lang.String $r5, $r11, $r12;
        float $f0, $f1;
        java.lang.StringBuffer $r9;

        this := @this: org.apache.fop.apps.FopFactoryConfigurator;
        factory := @parameter0: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Initializing FopFactory Configuration");

     label0:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("strict-configuration", 0);
        if $r1 == null goto label4;

     label1:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("strict-configuration");
        $z1 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: boolean getValueAsBoolean()>();
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setStrictUserConfigValidation(boolean)>($z1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;
        e = $r3;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, e, 0);

     label4:
        strict = virtualinvoke factory.<org.apache.fop.apps.FopFactory: boolean validateUserConfigStrictly()>();
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("strict-validation", 0);
        if $r1 == null goto label8;

     label5:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("strict-validation");
        $z1 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: boolean getValueAsBoolean()>();
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setStrictValidation(boolean)>($z1);

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;
        e = $r4;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, e, strict);

     label8:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("base", 0);
        if $r1 == null goto label12;

     label9:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("base");
        $r5 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getValue(java.lang.String)>(null);
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setBaseURL(java.lang.String)>($r5);

     label10:
        goto label12;

     label11:
        $r6 := @caughtexception;
        mfue = $r6;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, mfue, strict);

     label12:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("font-base", 0);
        if $r1 == null goto label16;

     label13:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("font-base");
        $r5 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getValue(java.lang.String)>(null);
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setFontBaseURL(java.lang.String)>($r5);

     label14:
        goto label16;

     label15:
        $r7 := @caughtexception;
        mfue = $r7;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, mfue, strict);

     label16:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("hyphenation-base", 0);
        if $r1 == null goto label20;

     label17:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("hyphenation-base");
        $r5 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getValue(java.lang.String)>(null);
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setHyphenBaseURL(java.lang.String)>($r5);

     label18:
        goto label20;

     label19:
        $r8 := @caughtexception;
        mfue = $r8;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, mfue, strict);

     label20:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("source-resolution", 0);
        if $r1 == null goto label21;

        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("source-resolution");
        $f0 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: float getValueAsFloat(float)>(72.0F);
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setSourceResolution(float)>($f0);
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label21;

        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("source-resolution set to: ");
        $f1 = virtualinvoke factory.<org.apache.fop.apps.FopFactory: float getSourceResolution()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dpi (px2mm=");
        $f1 = virtualinvoke factory.<org.apache.fop.apps.FopFactory: float getSourcePixelUnitToMillimeter()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);

     label21:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("target-resolution", 0);
        if $r1 == null goto label22;

        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("target-resolution");
        $f0 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: float getValueAsFloat(float)>(72.0F);
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setTargetResolution(float)>($f0);
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label22;

        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("target-resolution set to: ");
        $f1 = virtualinvoke factory.<org.apache.fop.apps.FopFactory: float getTargetResolution()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dpi (px2mm=");
        $f1 = virtualinvoke factory.<org.apache.fop.apps.FopFactory: float getTargetPixelUnitToMillimeter()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r5);

     label22:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("break-indent-inheritance", 0);
        if $r1 == null goto label26;

     label23:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("break-indent-inheritance");
        $z1 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: boolean getValueAsBoolean()>();
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setBreakIndentInheritanceOnReferenceAreaBoundary(boolean)>($z1);

     label24:
        goto label26;

     label25:
        $r10 := @caughtexception;
        e = $r10;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, e, strict);

     label26:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        pageConfig = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("default-page-settings");
        $r11 = interfaceinvoke pageConfig.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getAttribute(java.lang.String,java.lang.String)>("height", null);
        if $r11 == null goto label27;

        $r5 = interfaceinvoke pageConfig.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getAttribute(java.lang.String,java.lang.String)>("height", "11in");
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setPageHeight(java.lang.String)>($r5);
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label27;

        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default page-height set to: ");
        $r12 = virtualinvoke factory.<org.apache.fop.apps.FopFactory: java.lang.String getPageHeight()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);
        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r5);

     label27:
        $r11 = interfaceinvoke pageConfig.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getAttribute(java.lang.String,java.lang.String)>("width", null);
        if $r11 == null goto label28;

        $r5 = interfaceinvoke pageConfig.<org.apache.avalon.framework.configuration.Configuration: java.lang.String getAttribute(java.lang.String,java.lang.String)>("width", "8.26in");
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setPageWidth(java.lang.String)>($r5);
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
        if $z0 == 0 goto label28;

        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default page-width set to: ");
        $r12 = virtualinvoke factory.<org.apache.fop.apps.FopFactory: java.lang.String getPageWidth()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);
        $r5 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r5);

     label28:
        $r1 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r1 = interfaceinvoke $r1.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String,boolean)>("use-cache", 0);
        if $r1 == null goto label32;

     label29:
        $r2 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        $r2 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: org.apache.avalon.framework.configuration.Configuration getChild(java.lang.String)>("use-cache");
        $z1 = interfaceinvoke $r2.<org.apache.avalon.framework.configuration.Configuration: boolean getValueAsBoolean()>();
        virtualinvoke factory.<org.apache.fop.apps.FopFactory: void setUseCache(boolean)>($z1);

     label30:
        goto label32;

     label31:
        $r13 := @caughtexception;
        mfue = $r13;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.commons.logging.Log log>;
        staticinvoke <org.apache.fop.util.LogUtil: void handleException(org.apache.commons.logging.Log,java.lang.Exception,boolean)>($r0, mfue, strict);

     label32:
        return;

        catch org.apache.avalon.framework.configuration.ConfigurationException from label1 to label2 with label3;
        catch org.apache.avalon.framework.configuration.ConfigurationException from label5 to label6 with label7;
        catch java.net.MalformedURLException from label9 to label10 with label11;
        catch java.net.MalformedURLException from label13 to label14 with label15;
        catch java.net.MalformedURLException from label17 to label18 with label19;
        catch org.apache.avalon.framework.configuration.ConfigurationException from label23 to label24 with label25;
        catch org.apache.avalon.framework.configuration.ConfigurationException from label29 to label30 with label31;
    }

    public void setUserConfig(java.io.File) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.fop.apps.FopFactoryConfigurator this;
        java.io.File userConfigFile;
        org.apache.avalon.framework.configuration.DefaultConfigurationBuilder $r0, cfgBuilder;
        org.apache.avalon.framework.configuration.ConfigurationException e, $r2;
        org.apache.avalon.framework.configuration.Configuration $r1;
        org.apache.fop.apps.FOPException $r3;

        this := @this: org.apache.fop.apps.FopFactoryConfigurator;
        userConfigFile := @parameter0: java.io.File;

     label0:
        $r0 = new org.apache.avalon.framework.configuration.DefaultConfigurationBuilder;
        specialinvoke $r0.<org.apache.avalon.framework.configuration.DefaultConfigurationBuilder: void <init>()>();
        cfgBuilder = $r0;
        $r1 = virtualinvoke cfgBuilder.<org.apache.avalon.framework.configuration.DefaultConfigurationBuilder: org.apache.avalon.framework.configuration.Configuration buildFromFile(java.io.File)>(userConfigFile);
        virtualinvoke this.<org.apache.fop.apps.FopFactoryConfigurator: void setUserConfig(org.apache.avalon.framework.configuration.Configuration)>($r1);

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        e = $r2;
        $r3 = new org.apache.fop.apps.FOPException;
        specialinvoke $r3.<org.apache.fop.apps.FOPException: void <init>(java.lang.Exception)>(e);
        throw $r3;

     label3:
        return;

        catch org.apache.avalon.framework.configuration.ConfigurationException from label0 to label1 with label2;
    }

    public void setUserConfig(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.fop.apps.FopFactoryConfigurator this;
        java.lang.String uri;
        org.apache.avalon.framework.configuration.DefaultConfigurationBuilder $r0, cfgBuilder;
        org.apache.avalon.framework.configuration.ConfigurationException e, $r2;
        org.apache.avalon.framework.configuration.Configuration $r1;
        org.apache.fop.apps.FOPException $r3;

        this := @this: org.apache.fop.apps.FopFactoryConfigurator;
        uri := @parameter0: java.lang.String;

     label0:
        $r0 = new org.apache.avalon.framework.configuration.DefaultConfigurationBuilder;
        specialinvoke $r0.<org.apache.avalon.framework.configuration.DefaultConfigurationBuilder: void <init>()>();
        cfgBuilder = $r0;
        $r1 = virtualinvoke cfgBuilder.<org.apache.avalon.framework.configuration.DefaultConfigurationBuilder: org.apache.avalon.framework.configuration.Configuration build(java.lang.String)>(uri);
        virtualinvoke this.<org.apache.fop.apps.FopFactoryConfigurator: void setUserConfig(org.apache.avalon.framework.configuration.Configuration)>($r1);

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        e = $r2;
        $r3 = new org.apache.fop.apps.FOPException;
        specialinvoke $r3.<org.apache.fop.apps.FOPException: void <init>(java.lang.Exception)>(e);
        throw $r3;

     label3:
        return;

        catch org.apache.avalon.framework.configuration.ConfigurationException from label0 to label1 with label2;
    }

    public void setUserConfig(org.apache.avalon.framework.configuration.Configuration) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactoryConfigurator this;
        org.apache.avalon.framework.configuration.Configuration cfg;
        org.apache.fop.apps.FopFactory $r0;

        this := @this: org.apache.fop.apps.FopFactoryConfigurator;
        cfg := @parameter0: org.apache.avalon.framework.configuration.Configuration;
        this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg> = cfg;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.fop.apps.FopFactory factory>;
        virtualinvoke this.<org.apache.fop.apps.FopFactoryConfigurator: void configure(org.apache.fop.apps.FopFactory)>($r0);
        return;
    }

    public org.apache.avalon.framework.configuration.Configuration getUserConfig()
    {
        org.apache.fop.apps.FopFactoryConfigurator this;
        org.apache.avalon.framework.configuration.Configuration $r0;

        this := @this: org.apache.fop.apps.FopFactoryConfigurator;
        $r0 = this.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration cfg>;
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

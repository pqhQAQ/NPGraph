public class org.apache.fop.area.BlockParent extends org.apache.fop.area.Area
{
    protected int xOffset;
    protected int yOffset;
    protected java.util.List children;
    private int orientation;

    public void <init>()
    {
        org.apache.fop.area.BlockParent this;

        this := @this: org.apache.fop.area.BlockParent;
        specialinvoke this.<org.apache.fop.area.Area: void <init>()>();
        this.<org.apache.fop.area.BlockParent: int xOffset> = 0;
        this.<org.apache.fop.area.BlockParent: int yOffset> = 0;
        this.<org.apache.fop.area.BlockParent: java.util.List children> = null;
        this.<org.apache.fop.area.BlockParent: int orientation> = 0;
        return;
    }

    public void addChildArea(org.apache.fop.area.Area)
    {
        org.apache.fop.area.BlockParent this;
        org.apache.fop.area.Area childArea;
        java.util.ArrayList $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.area.BlockParent;
        childArea := @parameter0: org.apache.fop.area.Area;
        $r1 = this.<org.apache.fop.area.BlockParent: java.util.List children>;
        if $r1 != null goto label0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.area.BlockParent: java.util.List children> = $r0;

     label0:
        $r1 = this.<org.apache.fop.area.BlockParent: java.util.List children>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(childArea);
        return;
    }

    public void addBlock(org.apache.fop.area.Block)
    {
        org.apache.fop.area.BlockParent this;
        org.apache.fop.area.Block block;

        this := @this: org.apache.fop.area.BlockParent;
        block := @parameter0: org.apache.fop.area.Block;
        virtualinvoke this.<org.apache.fop.area.BlockParent: void addChildArea(org.apache.fop.area.Area)>(block);
        return;
    }

    public java.util.List getChildAreas()
    {
        org.apache.fop.area.BlockParent this;
        java.util.List $r0;

        this := @this: org.apache.fop.area.BlockParent;
        $r0 = this.<org.apache.fop.area.BlockParent: java.util.List children>;
        return $r0;
    }

    public boolean isEmpty()
    {
        org.apache.fop.area.BlockParent this;
        java.util.List $r0;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.area.BlockParent;
        $r0 = this.<org.apache.fop.area.BlockParent: java.util.List children>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.area.BlockParent: java.util.List children>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if $i0 != 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setXOffset(int)
    {
        org.apache.fop.area.BlockParent this;
        int off;

        this := @this: org.apache.fop.area.BlockParent;
        off := @parameter0: int;
        this.<org.apache.fop.area.BlockParent: int xOffset> = off;
        return;
    }

    public void setYOffset(int)
    {
        org.apache.fop.area.BlockParent this;
        int off;

        this := @this: org.apache.fop.area.BlockParent;
        off := @parameter0: int;
        this.<org.apache.fop.area.BlockParent: int yOffset> = off;
        return;
    }

    public int getXOffset()
    {
        org.apache.fop.area.BlockParent this;
        int $i0;

        this := @this: org.apache.fop.area.BlockParent;
        $i0 = this.<org.apache.fop.area.BlockParent: int xOffset>;
        return $i0;
    }

    public int getYOffset()
    {
        org.apache.fop.area.BlockParent this;
        int $i0;

        this := @this: org.apache.fop.area.BlockParent;
        $i0 = this.<org.apache.fop.area.BlockParent: int yOffset>;
        return $i0;
    }
}

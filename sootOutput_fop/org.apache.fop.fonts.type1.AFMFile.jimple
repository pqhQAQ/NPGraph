public class org.apache.fop.fonts.type1.AFMFile extends java.lang.Object
{
    private java.lang.String fontName;
    private java.lang.String fullName;
    private java.lang.String familyName;
    private java.lang.String weight;
    private java.awt.geom.RectangularShape fontBBox;
    private java.lang.String encodingScheme;
    private java.lang.String characterSet;
    private java.lang.Number capHeight;
    private java.lang.Number xHeight;
    private java.lang.Number ascender;
    private java.lang.Number descender;
    private java.lang.Number stdHW;
    private java.lang.Number stdVW;
    private org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] writingDirectionMetrics;
    private java.util.List charMetrics;
    private java.util.Map charNameToMetrics;
    private int firstChar;
    private int lastChar;
    private java.util.Map kerningMap;

    public void <init>()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] $r0;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = newarray (org.apache.fop.fonts.type1.AFMWritingDirectionMetrics)[3];
        this.<org.apache.fop.fonts.type1.AFMFile: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] writingDirectionMetrics> = $r0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.fonts.type1.AFMFile: java.util.List charMetrics> = $r1;
        $r2 = new java.util.HashMap;
        specialinvoke $r2.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map charNameToMetrics> = $r2;
        this.<org.apache.fop.fonts.type1.AFMFile: int firstChar> = -1;
        this.<org.apache.fop.fonts.type1.AFMFile: int lastChar> = -1;
        return;
    }

    public java.lang.String getFontName()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String fontName>;
        return $r0;
    }

    public void setFontName(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String fontName;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        fontName := @parameter0: java.lang.String;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String fontName> = fontName;
        return;
    }

    public java.lang.String getFullName()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String fullName>;
        return $r0;
    }

    public void setFullName(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String fullName;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        fullName := @parameter0: java.lang.String;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String fullName> = fullName;
        return;
    }

    public java.lang.String getFamilyName()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String familyName>;
        return $r0;
    }

    public void setFamilyName(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String familyName;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        familyName := @parameter0: java.lang.String;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String familyName> = familyName;
        return;
    }

    public java.lang.String getWeight()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String weight>;
        return $r0;
    }

    public void setWeight(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String weight;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        weight := @parameter0: java.lang.String;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String weight> = weight;
        return;
    }

    public java.awt.geom.RectangularShape getFontBBox()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.awt.geom.RectangularShape $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.awt.geom.RectangularShape fontBBox>;
        return $r0;
    }

    public int[] getFontBBoxAsIntArray()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.awt.geom.RectangularShape rect;
        int[] $r0;
        double $d0;
        int $i0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        rect = virtualinvoke this.<org.apache.fop.fonts.type1.AFMFile: java.awt.geom.RectangularShape getFontBBox()>();
        $r0 = newarray (int)[4];
        $d0 = virtualinvoke rect.<java.awt.geom.RectangularShape: double getMinX()>();
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);
        $i0 = (int) $d0;
        $r0[0] = $i0;
        $d0 = virtualinvoke rect.<java.awt.geom.RectangularShape: double getMinY()>();
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);
        $i0 = (int) $d0;
        $r0[1] = $i0;
        $d0 = virtualinvoke rect.<java.awt.geom.RectangularShape: double getMaxX()>();
        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);
        $i0 = (int) $d0;
        $r0[2] = $i0;
        $d0 = virtualinvoke rect.<java.awt.geom.RectangularShape: double getMaxY()>();
        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);
        $i0 = (int) $d0;
        $r0[3] = $i0;
        return $r0;
    }

    public void setFontBBox(java.awt.geom.RectangularShape)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.awt.geom.RectangularShape fontBBox;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        fontBBox := @parameter0: java.awt.geom.RectangularShape;
        this.<org.apache.fop.fonts.type1.AFMFile: java.awt.geom.RectangularShape fontBBox> = fontBBox;
        return;
    }

    public java.lang.String getEncodingScheme()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String encodingScheme>;
        return $r0;
    }

    public void setEncodingScheme(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String encodingScheme;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        encodingScheme := @parameter0: java.lang.String;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String encodingScheme> = encodingScheme;
        return;
    }

    public java.lang.String getCharacterSet()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String characterSet>;
        return $r0;
    }

    public void setCharacterSet(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String characterSet;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        characterSet := @parameter0: java.lang.String;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String characterSet> = characterSet;
        return;
    }

    public java.lang.Number getCapHeight()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number capHeight>;
        return $r0;
    }

    public void setCapHeight(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number capHeight;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        capHeight := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number capHeight> = capHeight;
        return;
    }

    public java.lang.Number getXHeight()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number xHeight>;
        return $r0;
    }

    public void setXHeight(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number height;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        height := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number xHeight> = height;
        return;
    }

    public java.lang.Number getAscender()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number ascender>;
        return $r0;
    }

    public void setAscender(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number ascender;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        ascender := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number ascender> = ascender;
        return;
    }

    public java.lang.Number getDescender()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number descender>;
        return $r0;
    }

    public void setDescender(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number descender;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        descender := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number descender> = descender;
        return;
    }

    public java.lang.Number getStdHW()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number stdHW>;
        return $r0;
    }

    public void setStdHW(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number stdHW;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        stdHW := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number stdHW> = stdHW;
        return;
    }

    public java.lang.Number getStdVW()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number stdVW>;
        return $r0;
    }

    public void setStdVW(java.lang.Number)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.Number stdVW;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        stdVW := @parameter0: java.lang.Number;
        this.<org.apache.fop.fonts.type1.AFMFile: java.lang.Number stdVW> = stdVW;
        return;
    }

    public org.apache.fop.fonts.type1.AFMWritingDirectionMetrics getWritingDirectionMetrics(int)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        int index;
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] $r0;
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics $r1;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        index := @parameter0: int;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] writingDirectionMetrics>;
        $r1 = $r0[index];
        return $r1;
    }

    public void setWritingDirectionMetrics(int, org.apache.fop.fonts.type1.AFMWritingDirectionMetrics)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        int index;
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics metrics;
        org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        index := @parameter0: int;
        metrics := @parameter1: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: org.apache.fop.fonts.type1.AFMWritingDirectionMetrics[] writingDirectionMetrics>;
        $r0[index] = metrics;
        return;
    }

    public void addCharMetrics(org.apache.fop.fonts.type1.AFMCharMetrics)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        org.apache.fop.fonts.type1.AFMCharMetrics metrics;
        java.lang.String name, u, $r0;
        int idx, $i0, $i1;
        java.util.List $r1;
        java.util.Map $r2;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        metrics := @parameter0: org.apache.fop.fonts.type1.AFMCharMetrics;
        name = virtualinvoke metrics.<org.apache.fop.fonts.type1.AFMCharMetrics: java.lang.String getCharName()>();
        $r0 = virtualinvoke metrics.<org.apache.fop.fonts.type1.AFMCharMetrics: java.lang.String getUnicodeSequence()>();
        if $r0 != null goto label2;

        if name == null goto label1;

        $r0 = virtualinvoke metrics.<org.apache.fop.fonts.type1.AFMCharMetrics: java.lang.String getCharName()>();
        u = staticinvoke <org.apache.xmlgraphics.fonts.Glyphs: java.lang.String getUnicodeSequenceForGlyphName(java.lang.String)>($r0);
        if u == null goto label0;

        virtualinvoke metrics.<org.apache.fop.fonts.type1.AFMCharMetrics: void setUnicodeSequence(java.lang.String)>(u);

     label0:
        goto label2;

     label1:
        return;

     label2:
        $r1 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.List charMetrics>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(metrics);
        if name == null goto label3;

        $r2 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map charNameToMetrics>;
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, metrics);

     label3:
        idx = virtualinvoke metrics.<org.apache.fop.fonts.type1.AFMCharMetrics: int getCharCode()>();
        if idx < 0 goto label7;

        $i0 = this.<org.apache.fop.fonts.type1.AFMFile: int firstChar>;
        if $i0 < 0 goto label4;

        $i1 = this.<org.apache.fop.fonts.type1.AFMFile: int firstChar>;
        if idx >= $i1 goto label5;

     label4:
        this.<org.apache.fop.fonts.type1.AFMFile: int firstChar> = idx;

     label5:
        $i0 = this.<org.apache.fop.fonts.type1.AFMFile: int lastChar>;
        if $i0 < 0 goto label6;

        $i1 = this.<org.apache.fop.fonts.type1.AFMFile: int lastChar>;
        if idx <= $i1 goto label7;

     label6:
        this.<org.apache.fop.fonts.type1.AFMFile: int lastChar> = idx;

     label7:
        return;
    }

    public int getCharCount()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.util.List $r0;
        int $i0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.List charMetrics>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        return $i0;
    }

    public int getFirstChar()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        int $i0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $i0 = this.<org.apache.fop.fonts.type1.AFMFile: int firstChar>;
        return $i0;
    }

    public int getLastChar()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        int $i0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $i0 = this.<org.apache.fop.fonts.type1.AFMFile: int lastChar>;
        return $i0;
    }

    public org.apache.fop.fonts.type1.AFMCharMetrics getChar(java.lang.String)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String name;
        java.util.Map $r0;
        java.lang.Object $r1;
        org.apache.fop.fonts.type1.AFMCharMetrics $r2;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        name := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map charNameToMetrics>;
        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        $r2 = (org.apache.fop.fonts.type1.AFMCharMetrics) $r1;
        return $r2;
    }

    public java.util.List getCharMetrics()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.util.List $r0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.List charMetrics>;
        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);
        return $r0;
    }

    public void addXKerning(java.lang.String, java.lang.String, double)
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.String name1, name2;
        double kx;
        java.util.HashMap $r0, $r3;
        java.util.Map entries, $r1;
        java.lang.Object $r2;
        org.apache.xmlgraphics.java2d.Dimension2DDouble $r4;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        name1 := @parameter0: java.lang.String;
        name2 := @parameter1: java.lang.String;
        kx := @parameter2: double;
        $r1 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map kerningMap>;
        if $r1 != null goto label0;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map kerningMap> = $r0;

     label0:
        $r1 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map kerningMap>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(name1);
        entries = (java.util.Map) $r2;
        if entries != null goto label1;

        $r3 = new java.util.HashMap;
        specialinvoke $r3.<java.util.HashMap: void <init>()>();
        entries = $r3;
        $r1 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map kerningMap>;
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name1, entries);

     label1:
        $r4 = new org.apache.xmlgraphics.java2d.Dimension2DDouble;
        specialinvoke $r4.<org.apache.xmlgraphics.java2d.Dimension2DDouble: void <init>(double,double)>(kx, 0.0);
        interfaceinvoke entries.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name2, $r4);
        return;
    }

    public boolean hasKerning()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.util.Map $r0;
        boolean $z0;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map kerningMap>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public java.util.Map createXKerningMapEncoded()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.util.HashMap m, $r0;
        java.util.Iterator iterFrom, iterTo;
        java.util.Map$Entry entryFrom, entryTo;
        java.lang.String name1, name2;
        org.apache.fop.fonts.type1.AFMCharMetrics chm1, chm2;
        java.util.Map container, entriesTo, $r1;
        java.lang.Integer k1, $r4, $r5, $r6;
        java.awt.geom.Dimension2D dim;
        boolean $z0;
        java.util.Set $r2;
        java.lang.Object $r3;
        int $i0, $i1, $i3;
        double $d0;
        long $l2;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $z0 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMFile: boolean hasKerning()>();
        if $z0 != 0 goto label0;

        return null;

     label0:
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        m = $r0;
        $r1 = this.<org.apache.fop.fonts.type1.AFMFile: java.util.Map kerningMap>;
        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();
        iterFrom = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iterFrom.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke iterFrom.<java.util.Iterator: java.lang.Object next()>();
        entryFrom = (java.util.Map$Entry) $r3;
        $r3 = interfaceinvoke entryFrom.<java.util.Map$Entry: java.lang.Object getKey()>();
        name1 = (java.lang.String) $r3;
        chm1 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMFile: org.apache.fop.fonts.type1.AFMCharMetrics getChar(java.lang.String)>(name1);
        $z0 = virtualinvoke chm1.<org.apache.fop.fonts.type1.AFMCharMetrics: boolean hasCharCode()>();
        if $z0 != 0 goto label2;

        goto label1;

     label2:
        container = null;
        $r3 = interfaceinvoke entryFrom.<java.util.Map$Entry: java.lang.Object getValue()>();
        entriesTo = (java.util.Map) $r3;
        $r2 = interfaceinvoke entriesTo.<java.util.Map: java.util.Set entrySet()>();
        iterTo = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke iterTo.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke iterTo.<java.util.Iterator: java.lang.Object next()>();
        entryTo = (java.util.Map$Entry) $r3;
        $r3 = interfaceinvoke entryTo.<java.util.Map$Entry: java.lang.Object getKey()>();
        name2 = (java.lang.String) $r3;
        chm2 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMFile: org.apache.fop.fonts.type1.AFMCharMetrics getChar(java.lang.String)>(name2);
        $z0 = virtualinvoke chm2.<org.apache.fop.fonts.type1.AFMCharMetrics: boolean hasCharCode()>();
        if $z0 != 0 goto label4;

        goto label3;

     label4:
        if container != null goto label5;

        $r4 = new java.lang.Integer;
        $i0 = virtualinvoke chm1.<org.apache.fop.fonts.type1.AFMCharMetrics: int getCharCode()>();
        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i0);
        k1 = $r4;
        $r3 = interfaceinvoke m.<java.util.Map: java.lang.Object get(java.lang.Object)>(k1);
        container = (java.util.Map) $r3;
        if container != null goto label5;

        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        container = $r0;
        interfaceinvoke m.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(k1, container);

     label5:
        $r3 = interfaceinvoke entryTo.<java.util.Map$Entry: java.lang.Object getValue()>();
        dim = (java.awt.geom.Dimension2D) $r3;
        $r5 = new java.lang.Integer;
        $i1 = virtualinvoke chm2.<org.apache.fop.fonts.type1.AFMCharMetrics: int getCharCode()>();
        specialinvoke $r5.<java.lang.Integer: void <init>(int)>($i1);
        $r6 = new java.lang.Integer;
        $d0 = virtualinvoke dim.<java.awt.geom.Dimension2D: double getWidth()>();
        $l2 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i3 = (int) $l2;
        specialinvoke $r6.<java.lang.Integer: void <init>(int)>($i3);
        interfaceinvoke container.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);
        goto label3;

     label6:
        goto label1;

     label7:
        return m;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fonts.type1.AFMFile this;
        java.lang.StringBuffer $r0;
        java.lang.String $r1, $r2;

        this := @this: org.apache.fop.fonts.type1.AFMFile;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AFM: ");
        $r1 = virtualinvoke this.<org.apache.fop.fonts.type1.AFMFile: java.lang.String getFullName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }
}

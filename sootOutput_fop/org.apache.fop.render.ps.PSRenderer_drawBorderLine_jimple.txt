method: org.apache.fop.render.ps.PSRenderer.drawBorderLine:1289161806
1427643771:this := @this: org.apache.fop.render.ps.PSRenderer
574071266:x1 := @parameter0: float
1919225338:y1 := @parameter1: float
1215877826:x2 := @parameter2: float
1951720377:y2 := @parameter3: float
1899151961:horz := @parameter4: boolean
997563166:startOrBefore := @parameter5: boolean
639298833:style := @parameter6: int
834800290:col := @parameter7: java.awt.Color
296854659:w = x2 - x1
1100457706:h = y2 - y1
1082626285:$b0 = w cmpg 0.0F
71030964:if $b0 < 0 goto $r0 = <org.apache.fop.render.ps.PSRenderer: org.apache.commons.logging.Log log>
942839394:$b0 = h cmpg 0.0F
19863745:if $b0 >= 0 goto (branch)
989996930:$r0 = <org.apache.fop.render.ps.PSRenderer: org.apache.commons.logging.Log log>
946449688:interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>("Negative extent received. Border won\'t be painted.")
568532887:return
950537837:lookupswitch(style) {     case 31: goto specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col);     case 36: goto specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col);     case 37: goto specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col);     case 55: goto if style != 55 goto $f0 = -0.4F;     case 57: goto goto [?= (branch)];     case 67: goto if style != 101 goto $f0 = -0.4F;     case 101: goto if style != 101 goto $f0 = -0.4F;     case 119: goto if style != 55 goto $f0 = -0.4F;     default: goto specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col); }
1256181245:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col)
1018398611:if horz == 0 goto $f0 = 2.0F * w
1261924333:$f0 = 2.0F * h
1217323372:unit = staticinvoke <java.lang.Math: float abs(float)>($f0)
1536748510:$f0 = w / unit
2013709137:rep = (int) $f0
579750374:$i1 = rep % 2
731229379:if $i1 != 0 goto $f1 = (float) rep
1870744719:rep = rep + 1
310637585:$f1 = (float) rep
1814698405:unit = w / $f1
731500987:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
2140693081:$r2 = new java.lang.StringBuffer
2079021465:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
17749190:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[")
416467527:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(unit)
719480824:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] 0")
1981276358:$r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
430318524:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>($r3)
1812459014:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1721646183:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineCap(int)>(0)
1883224657:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
2058261958:$d0 = (double) h
1542142230:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
502988501:$f1 = h / 2.0F
1896199631:ym = y1 + $f1
685874416:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym, x2, ym)
1946576263:goto [?= (branch)]
818875751:$f0 = 2.0F * w
108693064:unit = staticinvoke <java.lang.Math: float abs(float)>($f0)
1383162793:$f0 = h / unit
930169879:rep = (int) $f0
253209950:$i1 = rep % 2
1534524943:if $i1 != 0 goto $f1 = (float) rep
1629600178:rep = rep + 1
1174187145:$f1 = (float) rep
1974480692:unit = h / $f1
2055288474:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
958920523:$r2 = new java.lang.StringBuffer
1289581479:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
811862606:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[")
1008000577:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(unit)
742203271:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] 0")
1625353921:$r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
1331360407:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>($r3)
339658002:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
661869784:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineCap(int)>(0)
915161327:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1605769911:$d0 = (double) w
747902328:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
865553677:$f1 = w / 2.0F
411811221:xm = x1 + $f1
1870323809:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm, y1, xm, y2)
1814116724:goto [?= (branch)]
1583593455:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col)
834715435:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
104927881:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineCap(int)>(1)
818812662:if horz == 0 goto $f0 = 2.0F * w
618223691:$f0 = 2.0F * h
1915220987:unit = staticinvoke <java.lang.Math: float abs(float)>($f0)
2054765061:$f0 = w / unit
596566792:rep = (int) $f0
171835995:$i1 = rep % 2
1829546397:if $i1 != 0 goto $f1 = (float) rep
1515436633:rep = rep + 1
738994914:$f1 = (float) rep
937611454:unit = w / $f1
1711239654:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1703864154:$r2 = new java.lang.StringBuffer
243926612:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
25203539:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[0 ")
1660949812:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(unit)
1046442580:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] 0")
1816856777:$r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
841874346:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>($r3)
788802171:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1837961655:$d0 = (double) h
1216757137:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
867257959:$f1 = h / 2.0F
1452593920:ym = y1 + $f1
1692928286:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym, x2, ym)
1034863699:goto [?= (branch)]
1526514881:$f0 = 2.0F * w
30856392:unit = staticinvoke <java.lang.Math: float abs(float)>($f0)
40665278:$f0 = h / unit
1551228282:rep = (int) $f0
1758054371:$i1 = rep % 2
392314324:if $i1 != 0 goto $f1 = (float) rep
852047178:rep = rep + 1
983673840:$f1 = (float) rep
360551353:unit = h / $f1
1042916728:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
539920682:$r2 = new java.lang.StringBuffer
607801934:specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()
59053032:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[0 ")
456184833:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(unit)
1969843096:$r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] 0")
1545012320:$r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()
1797286363:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>($r3)
1822989803:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1061214185:$d0 = (double) w
975118960:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
1385248647:$f1 = w / 2.0F
117453782:xm = x1 + $f1
1155081856:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm, y1, xm, y2)
208584912:goto [?= (branch)]
1367480333:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col)
713180231:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
285985469:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>(null)
71610069:if horz == 0 goto w3 = w / 3.0F
1275384753:h3 = h / 3.0F
947337514:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
465157379:$d0 = (double) h3
1059593773:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
1657246153:$f1 = h3 / 2.0F
803999126:ym1 = y1 + $f1
1386748552:$f0 = ym1 + h3
939429154:ym2 = $f0 + h3
370926867:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym1, x2, ym1)
2116447756:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym2, x2, ym2)
218306184:goto [?= (branch)]
196075552:w3 = w / 3.0F
899860880:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1700298397:$d0 = (double) w3
350267750:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
1602086697:$f1 = w3 / 2.0F
1153136373:xm1 = x1 + $f1
1407626169:$f0 = xm1 + w3
2056012209:xm2 = $f0 + w3
780094128:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm1, y1, xm1, y2)
1130008391:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm2, y1, xm2, y2)
1853137116:goto [?= (branch)]
1302995719:if style != 55 goto $f0 = -0.4F
1558300774:$f0 = 0.4F
1798033453:goto [?= colFactor = $f0]
158363987:$f0 = -0.4F
891290876:colFactor = $f0
904573914:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1845905389:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>(null)
2127320644:if horz == 0 goto $f1 = neg colFactor
1335231412:$f1 = neg colFactor
1275082846:uppercol = staticinvoke <org.apache.fop.render.ps.PSRenderer: java.awt.Color lightenColor(java.awt.Color,float)>(col, $f1)
1140801663:lowercol = staticinvoke <org.apache.fop.render.ps.PSRenderer: java.awt.Color lightenColor(java.awt.Color,float)>(col, colFactor)
501309303:h3 = h / 3.0F
1916011395:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
2051711055:$d0 = (double) h3
962781506:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
1589904940:$f1 = h3 / 2.0F
355394447:ym1 = y1 + $f1
1023799350:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
3030756:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(uppercol)
1863412315:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym1, x2, ym1)
673959737:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
220181582:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(col)
367608409:$f2 = ym1 + h3
609926807:$f3 = ym1 + h3
1100398118:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, $f2, x2, $f3)
1113734084:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
2123894217:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(lowercol)
1174184472:$f2 = ym1 + h3
684900212:$f2 = $f2 + h3
1263146412:$f3 = ym1 + h3
290890793:$f3 = $f3 + h3
1328777379:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, $f2, x2, $f3)
1078963700:goto [?= (branch)]
376336142:$f1 = neg colFactor
1539772677:leftcol = staticinvoke <org.apache.fop.render.ps.PSRenderer: java.awt.Color lightenColor(java.awt.Color,float)>(col, $f1)
940968639:rightcol = staticinvoke <org.apache.fop.render.ps.PSRenderer: java.awt.Color lightenColor(java.awt.Color,float)>(col, colFactor)
887294132:w3 = w / 3.0F
1193336439:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1496157066:$d0 = (double) w3
1025785539:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
1691178878:$f1 = w3 / 2.0F
2075675206:xm1 = x1 + $f1
1075569219:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
133429119:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(leftcol)
705907811:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm1, y1, xm1, y2)
197405795:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1376415268:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(col)
536118876:$f1 = xm1 + w3
438196937:$f4 = xm1 + w3
1855619928:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>($f1, y1, $f4, y2)
2069103492:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1668554996:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(rightcol)
79307425:$f1 = xm1 + w3
575160644:$f1 = $f1 + w3
532095017:$f4 = xm1 + w3
1327532386:$f4 = $f4 + w3
1595279683:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>($f1, y1, $f4, y2)
532299386:goto [?= (branch)]
134751075:if style != 101 goto $f0 = -0.4F
1313553587:$f0 = 0.4F
763245549:goto [?= colFactor = $f0]
948118512:$f0 = -0.4F
699170444:colFactor = $f0
1586637105:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
810839600:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>(null)
1122896991:if horz == 0 goto (branch)
1452532869:if startOrBefore == 0 goto $b2 = -1
125830187:$b2 = 1
1704044261:goto [?= $f1 = (float) $b2]
1029978235:$b2 = -1
2126000825:$f1 = (float) $b2
238470863:$f1 = $f1 * colFactor
1837412824:c = staticinvoke <org.apache.fop.render.ps.PSRenderer: java.awt.Color lightenColor(java.awt.Color,float)>(col, $f1)
1663975130:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
269374994:$d0 = (double) h
489996282:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
818834783:$f1 = h / 2.0F
452065715:ym1 = y1 + $f1
529266607:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1766989117:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(c)
663380971:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym1, x2, ym1)
1856368020:goto [?= (branch)]
1856834375:if startOrBefore == 0 goto $b2 = -1
582982421:$b2 = 1
1365152133:goto [?= $f1 = (float) $b2]
396614783:$b2 = -1
115417593:$f1 = (float) $b2
1924205879:$f1 = $f1 * colFactor
549190976:c = staticinvoke <org.apache.fop.render.ps.PSRenderer: java.awt.Color lightenColor(java.awt.Color,float)>(col, $f1)
539505222:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1274677297:$d0 = (double) w
204468207:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
246318816:$f1 = w / 2.0F
503979080:xm1 = x1 + $f1
974158349:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1135285703:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useColor(java.awt.Color)>(c)
1672447465:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm1, y1, xm1, y2)
411088672:goto [?= (branch)]
712417905:goto [?= (branch)]
1385203345:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void useColor(java.awt.Color)>(col)
278776057:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1986536698:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useDash(java.lang.String)>(null)
687514781:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
1306686538:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineCap(int)>(0)
10675883:if horz == 0 goto $r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
77943413:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
314282749:$d0 = (double) h
1487874470:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
2042326073:$f1 = h / 2.0F
664729239:ym = y1 + $f1
644096277:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(x1, ym, x2, ym)
2008546659:goto [?= (branch)]
1948210843:$r1 = this.<org.apache.fop.render.ps.PSRenderer: org.apache.xmlgraphics.ps.PSGenerator gen>
267905692:$d0 = (double) w
1565241332:virtualinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void useLineWidth(double)>($d0)
888704935:$f1 = w / 2.0F
991743008:xm = x1 + $f1
168046602:specialinvoke this.<org.apache.fop.render.ps.PSRenderer: void drawLine(float,float,float,float)>(xm, y1, xm, y2)
418244009:goto [?= return]
1926804999:$r5 := @caughtexception
713082632:ioe = $r5
1941416079:virtualinvoke this.<org.apache.fop.render.ps.PSRenderer: void handleIOTrouble(java.io.IOException)>(ioe)
513507235:return

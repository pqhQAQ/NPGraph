public class org.apache.fop.util.ColorSpaceCache extends java.lang.Object
{
    private static org.apache.commons.logging.Log log;
    private javax.xml.transform.URIResolver resolver;
    private java.util.Map colorSpaceMap;
    static java.lang.Class class$org$apache$fop$util$ColorSpaceCache;

    public void <init>(javax.xml.transform.URIResolver)
    {
        org.apache.fop.util.ColorSpaceCache this;
        javax.xml.transform.URIResolver resolver;
        java.util.HashMap $r0;
        java.util.Map $r1;

        this := @this: org.apache.fop.util.ColorSpaceCache;
        resolver := @parameter0: javax.xml.transform.URIResolver;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);
        this.<org.apache.fop.util.ColorSpaceCache: java.util.Map colorSpaceMap> = $r1;
        this.<org.apache.fop.util.ColorSpaceCache: javax.xml.transform.URIResolver resolver> = resolver;
        return;
    }

    public java.awt.color.ColorSpace get(java.lang.String, java.lang.String)
    {
        org.apache.fop.util.ColorSpaceCache this;
        java.lang.String base, iccProfileSrc, $r2;
        java.awt.color.ColorSpace colorSpace;
        java.lang.StringBuffer $r0;
        java.awt.color.ICC_Profile iccProfile;
        javax.xml.transform.Source src;
        java.lang.Exception l4, $r7;
        java.util.Map $r1;
        boolean $z0;
        javax.xml.transform.URIResolver $r3;
        javax.xml.transform.stream.StreamSource $r4;
        java.io.InputStream $r5;
        java.awt.color.ICC_ColorSpace $r6;
        java.lang.Object $r8;
        org.apache.commons.logging.Log $r9;

        this := @this: org.apache.fop.util.ColorSpaceCache;
        base := @parameter0: java.lang.String;
        iccProfileSrc := @parameter1: java.lang.String;
        colorSpace = null;
        $r1 = this.<org.apache.fop.util.ColorSpaceCache: java.util.Map colorSpaceMap>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(base);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(iccProfileSrc);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);
        if $z0 != 0 goto label6;

     label0:
        iccProfile = null;
        $r3 = this.<org.apache.fop.util.ColorSpaceCache: javax.xml.transform.URIResolver resolver>;
        src = interfaceinvoke $r3.<javax.xml.transform.URIResolver: javax.xml.transform.Source resolve(java.lang.String,java.lang.String)>(iccProfileSrc, base);
        if src == null goto label1;

        $z0 = src instanceof javax.xml.transform.stream.StreamSource;
        if $z0 == 0 goto label1;

        $r4 = (javax.xml.transform.stream.StreamSource) src;
        $r5 = virtualinvoke $r4.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();
        iccProfile = staticinvoke <java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.io.InputStream)>($r5);

     label1:
        if iccProfile == null goto label2;

        $r6 = new java.awt.color.ICC_ColorSpace;
        specialinvoke $r6.<java.awt.color.ICC_ColorSpace: void <init>(java.awt.color.ICC_Profile)>(iccProfile);
        colorSpace = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;
        l4 = $r7;

     label4:
        if colorSpace == null goto label5;

        $r1 = this.<org.apache.fop.util.ColorSpaceCache: java.util.Map colorSpaceMap>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(base);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(iccProfileSrc);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, colorSpace);
        goto label7;

     label5:
        $r9 = <org.apache.fop.util.ColorSpaceCache: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Color profile \'");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(iccProfileSrc);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' not found.");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r2);
        goto label7;

     label6:
        $r1 = this.<org.apache.fop.util.ColorSpaceCache: java.util.Map colorSpaceMap>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(base);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(iccProfileSrc);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $r8 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);
        colorSpace = (java.awt.color.ColorSpace) $r8;

     label7:
        return colorSpace;

        catch java.lang.Exception from label0 to label2 with label3;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.util.ColorSpaceCache: java.lang.Class class$org$apache$fop$util$ColorSpaceCache>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.util.ColorSpaceCache: java.lang.Class class$(java.lang.String)>("org.apache.fop.util.ColorSpaceCache");
        <org.apache.fop.util.ColorSpaceCache: java.lang.Class class$org$apache$fop$util$ColorSpaceCache> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.util.ColorSpaceCache: java.lang.Class class$org$apache$fop$util$ColorSpaceCache>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.util.ColorSpaceCache: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

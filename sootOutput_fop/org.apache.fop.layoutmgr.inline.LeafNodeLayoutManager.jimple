public abstract class org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager extends org.apache.fop.layoutmgr.AbstractLayoutManager implements org.apache.fop.layoutmgr.inline.InlineLevelLayoutManager
{
    protected static org.apache.commons.logging.Log log;
    protected org.apache.fop.area.inline.InlineArea curArea;
    protected org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground;
    protected org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext;
    private org.apache.fop.traits.MinOptMax ipd;
    protected boolean isSomethingChanged;
    protected org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo;
    static java.lang.Class class$org$apache$fop$layoutmgr$inline$LeafNodeLayoutManager;

    public void <init>(org.apache.fop.fo.FObj)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.fo.FObj node;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        node := @parameter0: org.apache.fop.fo.FObj;
        specialinvoke this.<org.apache.fop.layoutmgr.AbstractLayoutManager: void <init>(org.apache.fop.fo.FObj)>(node);
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea> = null;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground> = null;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = null;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: boolean isSomethingChanged> = 0;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo> = null;
        return;
    }

    public void <init>()
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        specialinvoke this.<org.apache.fop.layoutmgr.AbstractLayoutManager: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea> = null;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground> = null;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = null;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: boolean isSomethingChanged> = 0;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo> = null;
        return;
    }

    public org.apache.fop.area.inline.InlineArea get(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.area.inline.InlineArea $r0;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        return $r0;
    }

    public boolean resolved()
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        return 0;
    }

    public void setCurrentArea(org.apache.fop.area.inline.InlineArea)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.area.inline.InlineArea ia;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        ia := @parameter0: org.apache.fop.area.inline.InlineArea;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea> = ia;
        return;
    }

    public void addChildArea(org.apache.fop.area.Area)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.area.Area childArea;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        childArea := @parameter0: org.apache.fop.area.Area;
        return;
    }

    public org.apache.fop.area.Area getParentArea(org.apache.fop.area.Area)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.area.Area childArea;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        childArea := @parameter0: org.apache.fop.area.Area;
        return null;
    }

    protected void setCommonBorderPaddingBackground(org.apache.fop.fo.properties.CommonBorderPaddingBackground)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        commonBorderPaddingBackground := @parameter0: org.apache.fop.fo.properties.CommonBorderPaddingBackground;
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground> = commonBorderPaddingBackground;
        return;
    }

    protected org.apache.fop.traits.MinOptMax getAllocationIPD(int)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        int refIPD, $i0;
        org.apache.fop.traits.MinOptMax $r0;
        org.apache.fop.area.inline.InlineArea $r1;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        refIPD := @parameter0: int;
        $r0 = new org.apache.fop.traits.MinOptMax;
        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        $i0 = virtualinvoke $r1.<org.apache.fop.area.inline.InlineArea: int getIPD()>();
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i0);
        return $r0;
    }

    public void addAreas(org.apache.fop.layoutmgr.PositionIterator, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.layoutmgr.PositionIterator posIter;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.area.inline.InlineArea area;
        int $i0;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r0, $r1;
        org.apache.fop.layoutmgr.LayoutManager $r2;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        posIter := @parameter0: org.apache.fop.layoutmgr.PositionIterator;
        context := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void addId()>();
        area = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea getEffectiveArea()>();
        $i0 = virtualinvoke area.<org.apache.fop.area.inline.InlineArea: int getAllocIPD()>();
        if $i0 > 0 goto label0;

        $i0 = virtualinvoke area.<org.apache.fop.area.inline.InlineArea: int getAllocBPD()>();
        if $i0 <= 0 goto label2;

     label0:
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void offsetArea(org.apache.fop.area.inline.InlineArea,org.apache.fop.layoutmgr.LayoutContext)>(area, context);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void widthAdjustArea(org.apache.fop.area.inline.InlineArea,org.apache.fop.layoutmgr.LayoutContext)>(area, context);
        $r0 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        if $r0 == null goto label1;

        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void setBorderPaddingTraits(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,boolean,boolean,org.apache.fop.datatypes.PercentBaseContext)>(area, $r1, 0, 0, this);
        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addBackground(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonBorderPaddingBackground,org.apache.fop.datatypes.PercentBaseContext)>(area, $r1, this);

     label1:
        $r2 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.LayoutManager parentLM>;
        interfaceinvoke $r2.<org.apache.fop.layoutmgr.LayoutManager: void addChildArea(org.apache.fop.area.Area)>(area);

     label2:
        $z0 = virtualinvoke posIter.<org.apache.fop.layoutmgr.PositionIterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        virtualinvoke posIter.<org.apache.fop.layoutmgr.PositionIterator: java.lang.Object next()>();
        goto label2;

     label3:
        return;
    }

    protected org.apache.fop.area.inline.InlineArea getEffectiveArea()
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.area.inline.InlineArea $r0;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        return $r0;
    }

    protected void addId()
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        return;
    }

    protected void offsetArea(org.apache.fop.area.inline.InlineArea, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.area.inline.InlineArea area;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r0;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        area := @parameter0: org.apache.fop.area.inline.InlineArea;
        context := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $i0 = virtualinvoke $r0.<org.apache.fop.layoutmgr.inline.AlignmentContext: int getOffset()>();
        virtualinvoke area.<org.apache.fop.area.inline.InlineArea: void setOffset(int)>($i0);
        return;
    }

    protected org.apache.fop.layoutmgr.inline.AlignmentContext makeAlignmentContext(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r0;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext getAlignmentContext()>();
        return $r0;
    }

    protected void widthAdjustArea(org.apache.fop.area.inline.InlineArea, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.area.inline.InlineArea area;
        org.apache.fop.layoutmgr.LayoutContext context;
        double dAdjust, $d0, $d1, $d2;
        int width, $i1, $i2, $i3, $i4;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r0, $r2, $r4, $r6;
        org.apache.fop.traits.MinOptMax $r1, $r3, $r5, $r7;
        byte $b0;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        area := @parameter0: org.apache.fop.area.inline.InlineArea;
        context := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        dAdjust = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: double getIPDAdjust()>();
        $r0 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r1 = $r0.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        width = $r1.<org.apache.fop.traits.MinOptMax: int opt>;
        $b0 = dAdjust cmpg 0.0;
        if $b0 >= 0 goto label0;

        $d0 = (double) width;
        $r2 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r3 = $r2.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i1 = $r3.<org.apache.fop.traits.MinOptMax: int opt>;
        $r4 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r5 = $r4.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i2 = $r5.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = $i1 - $i2;
        $d1 = (double) $i1;
        $d2 = dAdjust * $d1;
        $d0 = $d0 + $d2;
        width = (int) $d0;
        goto label1;

     label0:
        $b0 = dAdjust cmpl 0.0;
        if $b0 <= 0 goto label1;

        $d0 = (double) width;
        $r2 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r3 = $r2.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i1 = $r3.<org.apache.fop.traits.MinOptMax: int max>;
        $r4 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r5 = $r4.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i2 = $r5.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $d1 = (double) $i1;
        $d2 = dAdjust * $d1;
        $d0 = $d0 + $d2;
        width = (int) $d0;

     label1:
        virtualinvoke area.<org.apache.fop.area.inline.InlineArea: void setIPD(int)>(width);
        $r6 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r7 = $r6.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i3 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i4 = width - $i3;
        virtualinvoke area.<org.apache.fop.area.inline.InlineArea: void setAdjustment(int)>($i4);
        return;
    }

    public java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext, int)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        int alignment, $i0, $i1;
        org.apache.fop.traits.MinOptMax ipd, $r8;
        org.apache.fop.layoutmgr.InlineKnuthSequence seq, $r5;
        java.util.LinkedList returnList, $r12;
        org.apache.fop.area.inline.InlineArea $r0, $r1;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r2, $r4, $r9;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r3, $r7;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r6;
        org.apache.fop.layoutmgr.LeafPosition $r10;
        org.apache.fop.layoutmgr.Position $r11;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter1: int;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea get(org.apache.fop.layoutmgr.LayoutContext)>(context);
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea> = $r0;
        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        if $r1 != null goto label0;

        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void setFinished(boolean)>(1);
        return null;

     label0:
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext makeAlignmentContext(org.apache.fop.layoutmgr.LayoutContext)>(context);
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = $r2;
        $i0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getRefIPD()>();
        ipd = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.traits.MinOptMax getAllocationIPD(int)>($i0);
        $r3 = new org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo;
        $r4 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager,short,org.apache.fop.traits.MinOptMax,boolean,org.apache.fop.layoutmgr.inline.AlignmentContext)>(this, 0, ipd, 0, $r4);
        this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo> = $r3;
        $r5 = new org.apache.fop.layoutmgr.InlineKnuthSequence;
        specialinvoke $r5.<org.apache.fop.layoutmgr.InlineKnuthSequence: void <init>()>();
        seq = $r5;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void addKnuthElementsForBorderPaddingStart(java.util.List)>(seq);
        $r6 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r7 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r8 = $r7.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int opt>;
        $r9 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r10 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r10.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, 0);
        $r11 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r10);
        specialinvoke $r6.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i1, $r9, $r11, 0);
        virtualinvoke seq.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r6);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void addKnuthElementsForBorderPaddingEnd(java.util.List)>(seq);
        $r12 = new java.util.LinkedList;
        specialinvoke $r12.<java.util.LinkedList: void <init>()>();
        returnList = $r12;
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>(seq);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void setFinished(boolean)>(1);
        return returnList;
    }

    public java.util.List addALetterSpaceTo(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.util.List oldList;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        oldList := @parameter0: java.util.List;
        return oldList;
    }

    public void removeWordSpace(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.util.List oldList;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r4;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        oldList := @parameter0: java.util.List;
        $r0 = <org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" should not receive a call to removeWordSpace(list)");
        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r4);
        return;
    }

    public void getWordChars(java.lang.StringBuffer, org.apache.fop.layoutmgr.Position)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.lang.StringBuffer sbChars;
        org.apache.fop.layoutmgr.Position pos;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        sbChars := @parameter0: java.lang.StringBuffer;
        pos := @parameter1: org.apache.fop.layoutmgr.Position;
        return;
    }

    public void hyphenate(org.apache.fop.layoutmgr.Position, org.apache.fop.layoutmgr.inline.HyphContext)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        org.apache.fop.layoutmgr.Position pos;
        org.apache.fop.layoutmgr.inline.HyphContext hc;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        pos := @parameter0: org.apache.fop.layoutmgr.Position;
        hc := @parameter1: org.apache.fop.layoutmgr.inline.HyphContext;
        return;
    }

    public boolean applyChanges(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.util.List oldList;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        oldList := @parameter0: java.util.List;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void setFinished(boolean)>(0);
        return 0;
    }

    public java.util.LinkedList getChangedKnuthElements(java.util.List, int)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.util.List oldList;
        int alignment, $i0;
        java.util.LinkedList returnList, $r1;
        org.apache.fop.layoutmgr.LeafPosition $r0;
        boolean $z0;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r2;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r3, $r5;
        org.apache.fop.traits.MinOptMax $r4;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r6;
        org.apache.fop.layoutmgr.Position $r7;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        oldList := @parameter0: java.util.List;
        alignment := @parameter1: int;
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: boolean isFinished()>();
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r1 = new java.util.LinkedList;
        specialinvoke $r1.<java.util.LinkedList: void <init>()>();
        returnList = $r1;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void addKnuthElementsForBorderPaddingStart(java.util.List)>(returnList);
        $r2 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r3 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r4 = $r3.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea>;
        $i0 = $r4.<org.apache.fop.traits.MinOptMax: int opt>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r6 = $r5.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, 0);
        $r7 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r2.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i0, $r6, $r7, 1);
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void addKnuthElementsForBorderPaddingEnd(java.util.List)>(returnList);
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void setFinished(boolean)>(1);
        return returnList;
    }

    protected void addKnuthElementsForBorderPaddingStart(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.util.List returnList;
        int ipStart, $i0, $i1;
        org.apache.fop.layoutmgr.LeafPosition $r0;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r1, $r2;
        org.apache.fop.layoutmgr.KnuthPenalty $r3;
        org.apache.fop.layoutmgr.KnuthGlue $r4;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        returnList := @parameter0: java.util.List;
        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        if $r1 == null goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getBorderStartWidth(boolean)>(0);
        $r2 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        $i1 = virtualinvoke $r2.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getPaddingStart(boolean,org.apache.fop.datatypes.PercentBaseContext)>(0, this);
        ipStart = $i0 + $i1;
        if ipStart <= 0 goto label0;

        $r3 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        interfaceinvoke returnList.<java.util.List: boolean add(java.lang.Object)>($r3);
        $r4 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>(ipStart, 0, 0, $r0, 1);
        interfaceinvoke returnList.<java.util.List: boolean add(java.lang.Object)>($r4);

     label0:
        return;
    }

    protected void addKnuthElementsForBorderPaddingEnd(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager this;
        java.util.List returnList;
        int ipEnd, $i0, $i1;
        org.apache.fop.layoutmgr.LeafPosition $r0;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r1, $r2;
        org.apache.fop.layoutmgr.KnuthPenalty $r3;
        org.apache.fop.layoutmgr.KnuthGlue $r4;

        this := @this: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;
        returnList := @parameter0: java.util.List;
        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        if $r1 == null goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getBorderEndWidth(boolean)>(0);
        $r2 = this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        $i1 = virtualinvoke $r2.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getPaddingEnd(boolean,org.apache.fop.datatypes.PercentBaseContext)>(0, this);
        ipEnd = $i0 + $i1;
        if ipEnd <= 0 goto label0;

        $r3 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        interfaceinvoke returnList.<java.util.List: boolean add(java.lang.Object)>($r3);
        $r4 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>(ipEnd, 0, 0, $r0, 1);
        interfaceinvoke returnList.<java.util.List: boolean add(java.lang.Object)>($r4);

     label0:
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$inline$LeafNodeLayoutManager>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager");
        <org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$inline$LeafNodeLayoutManager> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$inline$LeafNodeLayoutManager>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

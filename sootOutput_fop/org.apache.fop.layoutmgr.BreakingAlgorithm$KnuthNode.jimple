public class org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode extends java.lang.Object
{
    public int position;
    public int line;
    public int fitness;
    public int totalWidth;
    public int totalStretch;
    public int totalShrink;
    public double adjustRatio;
    public int availableShrink;
    public int availableStretch;
    public int difference;
    public double totalDemerits;
    public org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode previous;
    public org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode next;
    public int fitRecoveryCounter;
    private final org.apache.fop.layoutmgr.BreakingAlgorithm this$0;

    public void <init>(org.apache.fop.layoutmgr.BreakingAlgorithm, int, int, int, int, int, int, double, int, int, int, double, org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode)
    {
        org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode this, previous;
        org.apache.fop.layoutmgr.BreakingAlgorithm this$0;
        int position, line, fitness, totalWidth, totalStretch, totalShrink, availableShrink, availableStretch, difference;
        double adjustRatio, totalDemerits;

        this := @this: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode;
        this$0 := @parameter0: org.apache.fop.layoutmgr.BreakingAlgorithm;
        position := @parameter1: int;
        line := @parameter2: int;
        fitness := @parameter3: int;
        totalWidth := @parameter4: int;
        totalStretch := @parameter5: int;
        totalShrink := @parameter6: int;
        adjustRatio := @parameter7: double;
        availableShrink := @parameter8: int;
        availableStretch := @parameter9: int;
        difference := @parameter10: int;
        totalDemerits := @parameter11: double;
        previous := @parameter12: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: org.apache.fop.layoutmgr.BreakingAlgorithm this$0> = this$0;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int fitRecoveryCounter> = 0;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int position> = position;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int line> = line;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int fitness> = fitness;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int totalWidth> = totalWidth;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int totalStretch> = totalStretch;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int totalShrink> = totalShrink;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: double adjustRatio> = adjustRatio;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int availableShrink> = availableShrink;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int availableStretch> = availableStretch;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int difference> = difference;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: double totalDemerits> = totalDemerits;
        this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode previous> = previous;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode this, $r1;
        java.lang.StringBuffer $r0;
        int $i0;
        double $d0;
        java.lang.String $r2;

        this := @this: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<KnuthNode at ");
        $i0 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int position>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $i0 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int totalWidth>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("+");
        $i0 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int totalStretch>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");
        $i0 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int totalShrink>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" line:");
        $i0 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int line>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" prev:");
        $r1 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode previous>;
        if $r1 == null goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode previous>;
        $i0 = $r1.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: int position>;
        goto label1;

     label0:
        $i0 = -1;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" dem:");
        $d0 = this.<org.apache.fop.layoutmgr.BreakingAlgorithm$KnuthNode: double totalDemerits>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }
}

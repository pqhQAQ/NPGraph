class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatBase
{

    private void <init>()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatBase: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)>(null);
        return;
    }

    public static boolean isFormat(byte[])
    {
        byte[] data, pattern, $r0;
        boolean $z0;

        data := @parameter0: byte[];
        $r0 = newarray (byte)[3];
        $r0[0] = 80;
        $r0[1] = 78;
        $r0[2] = 71;
        pattern = $r0;
        $z0 = staticinvoke <org.apache.fop.render.rtf.rtflib.tools.ImageUtil: boolean compareHexValues(byte[],byte[],int,boolean)>(pattern, data, 1, 1);
        return $z0;
    }

    public int getType()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG;
        return 1;
    }

    public java.lang.String getRtfTag()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG;
        return "pngblip";
    }

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1 x0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG;
        x0 := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$1;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic$FormatPNG: void <init>()>();
        return;
    }
}

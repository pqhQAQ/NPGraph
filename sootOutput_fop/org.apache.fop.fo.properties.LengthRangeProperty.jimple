public class org.apache.fop.fo.properties.LengthRangeProperty extends org.apache.fop.fo.properties.Property implements org.apache.fop.datatypes.CompoundDatatype
{
    private org.apache.fop.fo.properties.Property minimum;
    private org.apache.fop.fo.properties.Property optimum;
    private org.apache.fop.fo.properties.Property maximum;
    private static final int MINSET;
    private static final int OPTSET;
    private static final int MAXSET;
    private int bfSet;
    private boolean consistent;

    public void <init>()
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        specialinvoke this.<org.apache.fop.fo.properties.Property: void <init>()>();
        this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet> = 0;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: boolean consistent> = 0;
        return;
    }

    public void setComponent(int, org.apache.fop.fo.properties.Property, boolean)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        int cmpId;
        org.apache.fop.fo.properties.Property cmpnValue;
        boolean bIsDefault;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        cmpId := @parameter0: int;
        cmpnValue := @parameter1: org.apache.fop.fo.properties.Property;
        bIsDefault := @parameter2: boolean;
        if cmpId != 3072 goto label0;

        virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: void setMinimum(org.apache.fop.fo.properties.Property,boolean)>(cmpnValue, bIsDefault);
        goto label2;

     label0:
        if cmpId != 3584 goto label1;

        virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: void setOptimum(org.apache.fop.fo.properties.Property,boolean)>(cmpnValue, bIsDefault);
        goto label2;

     label1:
        if cmpId != 2560 goto label2;

        virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: void setMaximum(org.apache.fop.fo.properties.Property,boolean)>(cmpnValue, bIsDefault);

     label2:
        return;
    }

    public org.apache.fop.fo.properties.Property getComponent(int)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        int cmpId;
        org.apache.fop.fo.properties.Property $r0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        cmpId := @parameter0: int;
        if cmpId != 3072 goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        return $r0;

     label0:
        if cmpId != 3584 goto label1;

        $r0 = virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        return $r0;

     label1:
        if cmpId != 2560 goto label2;

        $r0 = virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        return $r0;

     label2:
        return null;
    }

    protected void setMinimum(org.apache.fop.fo.properties.Property, boolean)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.fo.properties.Property minimum;
        boolean bIsDefault;
        int $i0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        minimum := @parameter0: org.apache.fop.fo.properties.Property;
        bIsDefault := @parameter1: boolean;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum> = minimum;
        if bIsDefault != 0 goto label0;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 | 1;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet> = $i0;

     label0:
        this.<org.apache.fop.fo.properties.LengthRangeProperty: boolean consistent> = 0;
        return;
    }

    protected void setMaximum(org.apache.fop.fo.properties.Property, boolean)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.fo.properties.Property max;
        boolean bIsDefault;
        int $i0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        max := @parameter0: org.apache.fop.fo.properties.Property;
        bIsDefault := @parameter1: boolean;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum> = max;
        if bIsDefault != 0 goto label0;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 | 4;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet> = $i0;

     label0:
        this.<org.apache.fop.fo.properties.LengthRangeProperty: boolean consistent> = 0;
        return;
    }

    protected void setOptimum(org.apache.fop.fo.properties.Property, boolean)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.fo.properties.Property opt;
        boolean bIsDefault;
        int $i0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        opt := @parameter0: org.apache.fop.fo.properties.Property;
        bIsDefault := @parameter1: boolean;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum> = opt;
        if bIsDefault != 0 goto label0;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 | 2;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet> = $i0;

     label0:
        this.<org.apache.fop.fo.properties.LengthRangeProperty: boolean consistent> = 0;
        return;
    }

    private void checkConsistency(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.datatypes.PercentBaseContext context;
        boolean $z0;
        org.apache.fop.fo.properties.Property $r0, $r2;
        org.apache.fop.datatypes.Length $r1, $r3;
        int $i0, $i1;
        org.apache.commons.logging.Log $r4;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        $z0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: boolean consistent>;
        if $z0 == 0 goto label0;

        return;

     label0:
        if context != null goto label1;

        return;

     label1:
        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 != 0 goto label4;

        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 != 0 goto label4;

        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i0 = interfaceinvoke $r1.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i1 = interfaceinvoke $r3.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        if $i0 <= $i1 goto label4;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 & 1;
        if $i0 == 0 goto label3;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 & 4;
        if $i0 == 0 goto label2;

        $r4 = <org.apache.fop.fo.properties.LengthRangeProperty: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>("forcing max to min in LengthRange");

     label2:
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum> = $r2;
        goto label4;

     label3:
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum> = $r2;

     label4:
        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 != 0 goto label7;

        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 != 0 goto label7;

        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i0 = interfaceinvoke $r1.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i1 = interfaceinvoke $r3.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        if $i0 <= $i1 goto label7;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label6;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 & 4;
        if $i0 == 0 goto label5;

        $r4 = <org.apache.fop.fo.properties.LengthRangeProperty: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>("forcing opt to max in LengthRange");
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum> = $r2;
        goto label10;

     label5:
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum> = $r2;
        goto label10;

     label6:
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum> = $r2;
        goto label10;

     label7:
        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 != 0 goto label10;

        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 != 0 goto label10;

        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i0 = interfaceinvoke $r1.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i1 = interfaceinvoke $r3.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        if $i0 >= $i1 goto label10;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 & 1;
        if $i0 == 0 goto label9;

        $i0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: int bfSet>;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label8;

        $r4 = <org.apache.fop.fo.properties.LengthRangeProperty: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>("forcing opt to min in LengthRange");

     label8:
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum> = $r2;
        goto label10;

     label9:
        $r2 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum> = $r2;

     label10:
        this.<org.apache.fop.fo.properties.LengthRangeProperty: boolean consistent> = 1;
        return;
    }

    public org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.datatypes.PercentBaseContext context;
        org.apache.fop.fo.properties.Property $r0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        specialinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: void checkConsistency(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property minimum>;
        return $r0;
    }

    public org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.datatypes.PercentBaseContext context;
        org.apache.fop.fo.properties.Property $r0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        specialinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: void checkConsistency(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property maximum>;
        return $r0;
    }

    public org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        org.apache.fop.datatypes.PercentBaseContext context;
        org.apache.fop.fo.properties.Property $r0;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        specialinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: void checkConsistency(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r0 = this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property optimum>;
        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;
        java.lang.StringBuffer $r0;
        org.apache.fop.fo.properties.Property $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("LengthRange[min:");
        $r1 = virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: java.lang.Object getObject()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", max:");
        $r1 = virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: java.lang.Object getObject()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", opt:");
        $r1 = virtualinvoke this.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.properties.Property: java.lang.Object getObject()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }

    public org.apache.fop.fo.properties.LengthRangeProperty getLengthRange()
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        return this;
    }

    public java.lang.Object getObject()
    {
        org.apache.fop.fo.properties.LengthRangeProperty this;

        this := @this: org.apache.fop.fo.properties.LengthRangeProperty;
        return this;
    }
}

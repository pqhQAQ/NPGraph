public class org.apache.fop.hyphenation.TernaryTree$Iterator extends java.lang.Object implements java.util.Enumeration
{
    int cur;
    java.lang.String curkey;
    java.util.Stack ns;
    java.lang.StringBuffer ks;
    private final org.apache.fop.hyphenation.TernaryTree this$0;

    public void <init>(org.apache.fop.hyphenation.TernaryTree)
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        org.apache.fop.hyphenation.TernaryTree this$0;
        java.util.Stack $r0;
        java.lang.StringBuffer $r1;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        this$0 := @parameter0: org.apache.fop.hyphenation.TernaryTree;
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0> = this$0;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur> = -1;
        $r0 = new java.util.Stack;
        specialinvoke $r0.<java.util.Stack: void <init>()>();
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns> = $r0;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks> = $r1;
        virtualinvoke this.<org.apache.fop.hyphenation.TernaryTree$Iterator: void rewind()>();
        return;
    }

    public void rewind()
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        java.util.Stack $r0;
        java.lang.StringBuffer $r1;
        org.apache.fop.hyphenation.TernaryTree $r2;
        char $c0;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        virtualinvoke $r0.<java.util.Stack: void removeAllElements()>();
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks>;
        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);
        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $c0 = $r2.<org.apache.fop.hyphenation.TernaryTree: char root>;
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur> = $c0;
        specialinvoke this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int run()>();
        return;
    }

    public java.lang.Object nextElement()
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        java.lang.String $r0, res, $r1;
        int $i0;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        $r0 = new java.lang.String;
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.String curkey>;
        specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>($r1);
        res = $r0;
        $i0 = specialinvoke this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int up()>();
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur> = $i0;
        specialinvoke this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int run()>();
        return res;
    }

    public char getValue()
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        int $i0, $i1;
        org.apache.fop.hyphenation.TernaryTree $r0;
        char[] $r1;
        char $c2;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        $i0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        if $i0 < 0 goto label0;

        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r1 = $r0.<org.apache.fop.hyphenation.TernaryTree: char[] eq>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c2 = $r1[$i1];
        return $c2;

     label0:
        return 0;
    }

    public boolean hasMoreElements()
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        $i0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        if $i0 == -1 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    private int up()
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        org.apache.fop.hyphenation.TernaryTree$Iterator$Item $r0, i;
        char res, $c2, $c3, $c4;
        boolean climb, $z0;
        java.util.Stack $r1;
        int $i0, $i1;
        org.apache.fop.hyphenation.TernaryTree $r2, $r7;
        char[] $r3, $r8;
        java.lang.Object $r4, $r5;
        java.lang.StringBuffer $r6, $r9;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        $r0 = new org.apache.fop.hyphenation.TernaryTree$Iterator$Item;
        specialinvoke $r0.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: void <init>(org.apache.fop.hyphenation.TernaryTree$Iterator)>(this);
        i = $r0;
        res = 0;
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $z0 = virtualinvoke $r1.<java.util.Stack: boolean empty()>();
        if $z0 == 0 goto label0;

        return -1;

     label0:
        $i0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        if $i0 == 0 goto label1;

        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r3 = $r2.<org.apache.fop.hyphenation.TernaryTree: char[] sc>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c2 = $r3[$i1];
        if $c2 != 0 goto label1;

        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r3 = $r2.<org.apache.fop.hyphenation.TernaryTree: char[] lo>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c2 = $r3[$i1];
        return $c2;

     label1:
        climb = 1;

     label2:
        if climb == 0 goto label10;

        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $r4 = virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();
        i = (org.apache.fop.hyphenation.TernaryTree$Iterator$Item) $r4;
        $c3 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char child>;
        $i1 = $c3 + 1;
        $c3 = (char) $i1;
        i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char child> = $c3;
        $c2 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char child>;
        lookupswitch($c2)
        {
            case 1: goto label3;
            case 2: goto label6;
            default: goto label8;
        };

     label3:
        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r3 = $r2.<org.apache.fop.hyphenation.TernaryTree: char[] sc>;
        $c3 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char parent>;
        $c2 = $r3[$c3];
        if $c2 == 0 goto label4;

        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r3 = $r2.<org.apache.fop.hyphenation.TernaryTree: char[] eq>;
        $c3 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char parent>;
        res = $r3[$c3];
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $r5 = virtualinvoke i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: java.lang.Object clone()>();
        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
        $r6 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks>;
        $r7 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r8 = $r7.<org.apache.fop.hyphenation.TernaryTree: char[] sc>;
        $c4 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char parent>;
        $c3 = $r8[$c4];
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);
        goto label5;

     label4:
        $c3 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char child>;
        $i1 = $c3 + 1;
        $c3 = (char) $i1;
        i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char child> = $c3;
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $r5 = virtualinvoke i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: java.lang.Object clone()>();
        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r3 = $r2.<org.apache.fop.hyphenation.TernaryTree: char[] hi>;
        $c3 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char parent>;
        res = $r3[$c3];

     label5:
        climb = 0;
        goto label2;

     label6:
        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r3 = $r2.<org.apache.fop.hyphenation.TernaryTree: char[] hi>;
        $c3 = i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: char parent>;
        res = $r3[$c3];
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $r5 = virtualinvoke i.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: java.lang.Object clone()>();
        virtualinvoke $r1.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r5);
        $r6 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks>;
        $i0 = virtualinvoke $r6.<java.lang.StringBuffer: int length()>();
        if $i0 <= 0 goto label7;

        $r6 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks>;
        $r9 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks>;
        $i1 = virtualinvoke $r9.<java.lang.StringBuffer: int length()>();
        $i1 = $i1 - 1;
        virtualinvoke $r6.<java.lang.StringBuffer: void setLength(int)>($i1);

     label7:
        climb = 0;
        goto label2;

     label8:
        $r1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $z0 = virtualinvoke $r1.<java.util.Stack: boolean empty()>();
        if $z0 == 0 goto label9;

        return -1;

     label9:
        climb = 1;
        goto label2;

     label10:
        return res;
    }

    private int run()
    {
        org.apache.fop.hyphenation.TernaryTree$Iterator this;
        boolean leaf;
        java.lang.StringBuffer buf, $r7, $r8;
        int p, $i0, $i1, $i3, $i5;
        org.apache.fop.hyphenation.TernaryTree $r0, $r5;
        char[] $r1, $r6;
        char $c2, $c4, $c6;
        java.util.Stack $r2;
        org.apache.fop.hyphenation.TernaryTree$Iterator$Item $r3;
        java.lang.String $r9, $r12;
        org.apache.fop.hyphenation.CharVector $r10, $r11;

        this := @this: org.apache.fop.hyphenation.TernaryTree$Iterator;
        $i0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        if $i0 != -1 goto label0;

        return -1;

     label0:
        leaf = 0;

     label1:
        $i0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        if $i0 == 0 goto label4;

        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r1 = $r0.<org.apache.fop.hyphenation.TernaryTree: char[] sc>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c2 = $r1[$i1];
        if $c2 != 65535 goto label2;

        leaf = 1;
        goto label4;

     label2:
        $r2 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.util.Stack ns>;
        $r3 = new org.apache.fop.hyphenation.TernaryTree$Iterator$Item;
        $i3 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c4 = (char) $i3;
        specialinvoke $r3.<org.apache.fop.hyphenation.TernaryTree$Iterator$Item: void <init>(org.apache.fop.hyphenation.TernaryTree$Iterator,char,char)>(this, $c4, 0);
        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r3);
        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r1 = $r0.<org.apache.fop.hyphenation.TernaryTree: char[] sc>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c2 = $r1[$i1];
        if $c2 != 0 goto label3;

        leaf = 1;
        goto label4;

     label3:
        $r5 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r6 = $r5.<org.apache.fop.hyphenation.TernaryTree: char[] lo>;
        $i5 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c6 = $r6[$i5];
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur> = $c6;
        goto label1;

     label4:
        if leaf == 0 goto label5;

        goto label6;

     label5:
        $i1 = specialinvoke this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int up()>();
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur> = $i1;
        $i0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        if $i0 != -1 goto label1;

        return -1;

     label6:
        $r7 = new java.lang.StringBuffer;
        $r8 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.StringBuffer ks>;
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r7.<java.lang.StringBuffer: void <init>(java.lang.String)>($r9);
        buf = $r7;
        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r1 = $r0.<org.apache.fop.hyphenation.TernaryTree: char[] sc>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        $c2 = $r1[$i1];
        if $c2 != 65535 goto label8;

        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r1 = $r0.<org.apache.fop.hyphenation.TernaryTree: char[] lo>;
        $i1 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: int cur>;
        p = $r1[$i1];

     label7:
        $r0 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r10 = $r0.<org.apache.fop.hyphenation.TernaryTree: org.apache.fop.hyphenation.CharVector kv>;
        $c2 = virtualinvoke $r10.<org.apache.fop.hyphenation.CharVector: char get(int)>(p);
        if $c2 == 0 goto label8;

        $r5 = this.<org.apache.fop.hyphenation.TernaryTree$Iterator: org.apache.fop.hyphenation.TernaryTree this$0>;
        $r11 = $r5.<org.apache.fop.hyphenation.TernaryTree: org.apache.fop.hyphenation.CharVector kv>;
        $i5 = p;
        p = p + 1;
        $c6 = virtualinvoke $r11.<org.apache.fop.hyphenation.CharVector: char get(int)>($i5);
        virtualinvoke buf.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);
        goto label7;

     label8:
        $r12 = virtualinvoke buf.<java.lang.StringBuffer: java.lang.String toString()>();
        this.<org.apache.fop.hyphenation.TernaryTree$Iterator: java.lang.String curkey> = $r12;
        return 0;
    }
}

public final class org.apache.fop.fo.properties.PropertyCache extends java.lang.Object
{
    private static final int SEGMENT_MASK;
    private org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments;
    private org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table;
    boolean[] votesForRehash;

    private static int hash(java.lang.Object)
    {
        java.lang.Object x;
        int $i0;

        x := @parameter0: java.lang.Object;
        $i0 = virtualinvoke x.<java.lang.Object: int hashCode()>();
        $i0 = staticinvoke <org.apache.fop.fo.properties.PropertyCache: int hash(int)>($i0);
        return $i0;
    }

    private static int hash(int)
    {
        int hashCode, h, $i0;

        hashCode := @parameter0: int;
        h = hashCode;
        $i0 = h << 9;
        $i0 = $i0 ^ -1;
        h = h + $i0;
        $i0 = h >>> 14;
        h = h ^ $i0;
        $i0 = h << 4;
        h = h + $i0;
        $i0 = h >>> 10;
        h = h ^ $i0;
        return h;
    }

    private static boolean eq(java.lang.Object, java.lang.Object)
    {
        java.lang.Object p, q;
        boolean $z0;

        p := @parameter0: java.lang.Object;
        q := @parameter1: java.lang.Object;
        if p == q goto label0;

        if p == null goto label1;

        $z0 = virtualinvoke p.<java.lang.Object: boolean equals(java.lang.Object)>(q);
        if $z0 == 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private final void cleanSegment(int)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        int segmentIndex, oldCount, bucketIndex, voteCount, i, $i0, $i1;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment segment;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry entry, prev, e, $r3, $r6, $r7;
        boolean[] l6, $r8;
        java.lang.Throwable l9, $r9;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment[] $r0;
        java.lang.ref.ReferenceQueue $r1;
        java.lang.ref.Reference $r2;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry[] $r4, $r5;
        boolean $z0;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        segmentIndex := @parameter0: int;
        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        segment = $r0[segmentIndex];
        oldCount = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$000(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);

     label0:
        $r1 = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: java.lang.ref.ReferenceQueue access$100(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);
        $r2 = virtualinvoke $r1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();
        $r3 = (org.apache.fop.fo.properties.PropertyCache$CacheEntry) $r2;
        entry = $r3;
        if $r3 == null goto label6;

        $i0 = entry.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: int hash>;
        $i0 = staticinvoke <org.apache.fop.fo.properties.PropertyCache: int hash(int)>($i0);
        $r4 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $i1 = lengthof $r4;
        $i1 = $i1 - 1;
        bucketIndex = $i0 & $i1;
        prev = null;
        $r5 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        e = $r5[bucketIndex];

     label1:
        if e == null goto label2;

        $r3 = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        if $r3 == null goto label2;

        $i0 = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: int hash>;
        $i1 = entry.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: int hash>;
        if $i0 == $i1 goto label2;

        prev = e;
        e = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        goto label1;

     label2:
        if e == null goto label5;

        if prev != null goto label3;

        $r5 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $r6 = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        $r5[bucketIndex] = $r6;
        goto label4;

     label3:
        $r7 = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        prev.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry> = $r7;

     label4:
        staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$010(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);

     label5:
        goto label0;

     label6:
        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        l6 = $r8;
        entermonitor $r8;

     label7:
        $i1 = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$000(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);
        if oldCount <= $i1 goto label10;

        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        $z0 = $r8[segmentIndex];
        if $z0 == 0 goto label8;

        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        $r8[segmentIndex] = 0;

     label8:
        exitmonitor l6;

     label9:
        return;

     label10:
        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        $z0 = $r8[segmentIndex];
        if $z0 != 0 goto label14;

        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        $r8[segmentIndex] = 1;
        voteCount = 0;
        i = 32;

     label11:
        i = i + -1;
        if i < 0 goto label12;

        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        $z0 = $r8[i];
        if $z0 == 0 goto label11;

        voteCount = voteCount + 1;
        goto label11;

     label12:
        if voteCount <= 7 goto label14;

        specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: void rehash(int)>(31);
        i = 32;

     label13:
        i = i + -1;
        if i < 0 goto label14;

        $r8 = this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash>;
        $r8[i] = 0;
        goto label13;

     label14:
        exitmonitor l6;

     label15:
        goto label19;

     label16:
        $r9 := @caughtexception;

     label17:
        l9 = $r9;
        exitmonitor l6;

     label18:
        throw l9;

     label19:
        return;

        catch java.lang.Throwable from label7 to label9 with label16;
        catch java.lang.Throwable from label10 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label16;
    }

    private final void put(java.lang.Object)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        java.lang.Object o, p;
        int hash, index, $i0, $i1, $i2;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment segment, l4;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry entry, newEntry, $r4;
        java.lang.Throwable l9, $r7;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment[] $r0;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry[] $r2, $r3, $r6;
        java.lang.ref.ReferenceQueue $r5;
        boolean $z0;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        o := @parameter0: java.lang.Object;
        hash = staticinvoke <org.apache.fop.fo.properties.PropertyCache: int hash(java.lang.Object)>(o);
        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        $i0 = hash & 31;
        segment = $r0[$i0];
        l4 = segment;
        entermonitor segment;

     label0:
        $r2 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $i0 = lengthof $r2;
        $i0 = $i0 - 1;
        index = hash & $i0;
        $r3 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        entry = $r3[index];
        if entry != null goto label1;

        $r4 = new org.apache.fop.fo.properties.PropertyCache$CacheEntry;
        $r5 = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: java.lang.ref.ReferenceQueue access$100(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);
        specialinvoke $r4.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: void <init>(org.apache.fop.fo.properties.PropertyCache,java.lang.Object,org.apache.fop.fo.properties.PropertyCache$CacheEntry,java.lang.ref.ReferenceQueue)>(this, o, null, $r5);
        entry = $r4;
        $r3 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $r3[index] = entry;
        staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$008(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);
        goto label4;

     label1:
        p = virtualinvoke entry.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: java.lang.Object get()>();
        $z0 = staticinvoke <org.apache.fop.fo.properties.PropertyCache: boolean eq(java.lang.Object,java.lang.Object)>(p, o);
        if $z0 == 0 goto label3;

        exitmonitor l4;

     label2:
        return;

     label3:
        $r4 = new org.apache.fop.fo.properties.PropertyCache$CacheEntry;
        $r5 = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: java.lang.ref.ReferenceQueue access$100(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);
        specialinvoke $r4.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: void <init>(org.apache.fop.fo.properties.PropertyCache,java.lang.Object,org.apache.fop.fo.properties.PropertyCache$CacheEntry,java.lang.ref.ReferenceQueue)>(this, o, entry, $r5);
        newEntry = $r4;
        $r3 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $r3[index] = newEntry;
        staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$008(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);

     label4:
        $i1 = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$000(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>(segment);
        $r6 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $i2 = lengthof $r6;
        $i0 = 2 * $i2;
        if $i1 <= $i0 goto label5;

        $i0 = hash & 31;
        specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: void cleanSegment(int)>($i0);

     label5:
        exitmonitor l4;

     label6:
        goto label10;

     label7:
        $r7 := @caughtexception;

     label8:
        l9 = $r7;
        exitmonitor l4;

     label9:
        throw l9;

     label10:
        return;

        catch java.lang.Throwable from label0 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private final java.lang.Object get(java.lang.Object)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        java.lang.Object o, q, $r2;
        int hash, index, $i0, $i1;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry entry, e;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment segment, l7;
        java.lang.Throwable l9, $r5;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry[] $r0, $r1;
        boolean $z0;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment[] $r3;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        o := @parameter0: java.lang.Object;
        hash = staticinvoke <org.apache.fop.fo.properties.PropertyCache: int hash(java.lang.Object)>(o);
        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $i0 = lengthof $r0;
        $i0 = $i0 - 1;
        index = hash & $i0;
        $r1 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        entry = $r1[index];
        e = entry;

     label0:
        if e == null goto label2;

        $i1 = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: int hash>;
        $i0 = virtualinvoke o.<java.lang.Object: int hashCode()>();
        if $i1 != $i0 goto label1;

        $r2 = virtualinvoke e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: java.lang.Object get()>();
        q = $r2;
        if $r2 == null goto label1;

        $z0 = staticinvoke <org.apache.fop.fo.properties.PropertyCache: boolean eq(java.lang.Object,java.lang.Object)>(q, o);
        if $z0 == 0 goto label1;

        return q;

     label1:
        e = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        goto label0;

     label2:
        $r3 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        $i0 = hash & 31;
        segment = $r3[$i0];
        l7 = segment;
        entermonitor segment;

     label3:
        $r1 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        entry = $r1[index];
        e = entry;

     label4:
        if e == null goto label7;

        $i1 = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: int hash>;
        $i0 = virtualinvoke o.<java.lang.Object: int hashCode()>();
        if $i1 != $i0 goto label6;

        $r2 = virtualinvoke e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: java.lang.Object get()>();
        q = $r2;
        if $r2 == null goto label6;

        $z0 = staticinvoke <org.apache.fop.fo.properties.PropertyCache: boolean eq(java.lang.Object,java.lang.Object)>(q, o);
        if $z0 == 0 goto label6;

        exitmonitor l7;

     label5:
        return q;

     label6:
        e = e.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        goto label4;

     label7:
        exitmonitor l7;

     label8:
        goto label12;

     label9:
        $r5 := @caughtexception;

     label10:
        l9 = $r5;
        exitmonitor l7;

     label11:
        throw l9;

     label12:
        return null;

        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label6 to label8 with label9;
        catch java.lang.Throwable from label10 to label11 with label9;
    }

    private final void rehash(int)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        int index, newLength, i, hash, idx, $i0, $i1, $i2;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment seg, l3, $r1, $r7;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry[] newTable, $r2;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry c, $r4, $r5;
        java.lang.Object o, $r3;
        java.lang.Throwable l11, $r9;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment[] $r0, $r6;
        java.lang.ref.ReferenceQueue $r8;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        index := @parameter0: int;
        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        seg = $r0[index];
        l3 = seg;
        entermonitor seg;

     label0:
        if index <= 0 goto label1;

        $i0 = index - 1;
        specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: void rehash(int)>($i0);
        goto label9;

     label1:
        $r2 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        $i1 = lengthof $r2;
        newLength = $i1 << 1;
        if newLength <= 0 goto label9;

        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        i = lengthof $r0;

     label2:
        i = i + -1;
        if i < 0 goto label3;

        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        $r1 = $r0[i];
        staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$002(org.apache.fop.fo.properties.PropertyCache$CacheSegment,int)>($r1, 0);
        goto label2;

     label3:
        newTable = newarray (org.apache.fop.fo.properties.PropertyCache$CacheEntry)[newLength];
        newLength = newLength + -1;
        $r2 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        i = lengthof $r2;

     label4:
        i = i + -1;
        if i < 0 goto label8;

        $r2 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table>;
        c = $r2[i];

     label5:
        if c == null goto label7;

        $r3 = virtualinvoke c.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: java.lang.Object get()>();
        o = $r3;
        if $r3 == null goto label6;

        hash = c.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: int hash>;
        idx = hash & newLength;
        $r4 = new org.apache.fop.fo.properties.PropertyCache$CacheEntry;
        $r5 = newTable[idx];
        $r6 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        $i2 = hash & 31;
        $r7 = $r6[$i2];
        $r8 = staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: java.lang.ref.ReferenceQueue access$100(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>($r7);
        specialinvoke $r4.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: void <init>(org.apache.fop.fo.properties.PropertyCache,java.lang.Object,org.apache.fop.fo.properties.PropertyCache$CacheEntry,java.lang.ref.ReferenceQueue)>(this, o, $r5, $r8);
        newTable[idx] = $r4;
        $r0 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        $i0 = hash & 31;
        $r1 = $r0[$i0];
        staticinvoke <org.apache.fop.fo.properties.PropertyCache$CacheSegment: int access$008(org.apache.fop.fo.properties.PropertyCache$CacheSegment)>($r1);

     label6:
        c = c.<org.apache.fop.fo.properties.PropertyCache$CacheEntry: org.apache.fop.fo.properties.PropertyCache$CacheEntry nextEntry>;
        goto label5;

     label7:
        goto label4;

     label8:
        this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table> = newTable;

     label9:
        exitmonitor l3;

     label10:
        goto label14;

     label11:
        $r9 := @caughtexception;

     label12:
        l11 = $r9;
        exitmonitor l3;

     label13:
        throw l11;

     label14:
        return;

        catch java.lang.Throwable from label0 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public void <init>()
    {
        org.apache.fop.fo.properties.PropertyCache this;
        int i;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment $r0;
        org.apache.fop.fo.properties.PropertyCache$CacheSegment[] $r1, $r4;
        org.apache.fop.fo.properties.PropertyCache$CacheEntry[] $r2;
        boolean[] $r3;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r1 = newarray (org.apache.fop.fo.properties.PropertyCache$CacheSegment)[32];
        this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments> = $r1;
        $r2 = newarray (org.apache.fop.fo.properties.PropertyCache$CacheEntry)[8];
        this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheEntry[] table> = $r2;
        $r3 = newarray (boolean)[32];
        this.<org.apache.fop.fo.properties.PropertyCache: boolean[] votesForRehash> = $r3;
        i = 32;

     label0:
        i = i + -1;
        if i < 0 goto label1;

        $r4 = this.<org.apache.fop.fo.properties.PropertyCache: org.apache.fop.fo.properties.PropertyCache$CacheSegment[] segments>;
        $r0 = new org.apache.fop.fo.properties.PropertyCache$CacheSegment;
        specialinvoke $r0.<org.apache.fop.fo.properties.PropertyCache$CacheSegment: void <init>(org.apache.fop.fo.properties.PropertyCache,org.apache.fop.fo.properties.PropertyCache$1)>(this, null);
        $r4[i] = $r0;
        goto label0;

     label1:
        return;
    }

    private final java.lang.Object fetch(java.lang.Object)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        java.lang.Object obj, cacheEntry;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        obj := @parameter0: java.lang.Object;
        if obj != null goto label0;

        return null;

     label0:
        cacheEntry = specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: java.lang.Object get(java.lang.Object)>(obj);
        if cacheEntry == null goto label1;

        return cacheEntry;

     label1:
        specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: void put(java.lang.Object)>(obj);
        return obj;
    }

    public final org.apache.fop.fo.properties.Property fetch(org.apache.fop.fo.properties.Property)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        org.apache.fop.fo.properties.Property prop, $r1;
        java.lang.Object $r0;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        prop := @parameter0: org.apache.fop.fo.properties.Property;
        $r0 = specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: java.lang.Object fetch(java.lang.Object)>(prop);
        $r1 = (org.apache.fop.fo.properties.Property) $r0;
        return $r1;
    }

    public final org.apache.fop.fo.properties.CommonHyphenation fetch(org.apache.fop.fo.properties.CommonHyphenation)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        org.apache.fop.fo.properties.CommonHyphenation chy, $r1;
        java.lang.Object $r0;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        chy := @parameter0: org.apache.fop.fo.properties.CommonHyphenation;
        $r0 = specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: java.lang.Object fetch(java.lang.Object)>(chy);
        $r1 = (org.apache.fop.fo.properties.CommonHyphenation) $r0;
        return $r1;
    }

    public final org.apache.fop.fo.properties.CommonFont$CachedCommonFont fetch(org.apache.fop.fo.properties.CommonFont$CachedCommonFont)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        org.apache.fop.fo.properties.CommonFont$CachedCommonFont ccf, $r1;
        java.lang.Object $r0;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        ccf := @parameter0: org.apache.fop.fo.properties.CommonFont$CachedCommonFont;
        $r0 = specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: java.lang.Object fetch(java.lang.Object)>(ccf);
        $r1 = (org.apache.fop.fo.properties.CommonFont$CachedCommonFont) $r0;
        return $r1;
    }

    public final org.apache.fop.fo.properties.CommonFont fetch(org.apache.fop.fo.properties.CommonFont)
    {
        org.apache.fop.fo.properties.PropertyCache this;
        org.apache.fop.fo.properties.CommonFont cf, $r1;
        java.lang.Object $r0;

        this := @this: org.apache.fop.fo.properties.PropertyCache;
        cf := @parameter0: org.apache.fop.fo.properties.CommonFont;
        $r0 = specialinvoke this.<org.apache.fop.fo.properties.PropertyCache: java.lang.Object fetch(java.lang.Object)>(cf);
        $r1 = (org.apache.fop.fo.properties.CommonFont) $r0;
        return $r1;
    }
}

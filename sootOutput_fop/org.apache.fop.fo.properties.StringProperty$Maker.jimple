public class org.apache.fop.fo.properties.StringProperty$Maker extends org.apache.fop.fo.properties.PropertyMaker
{

    public void <init>(int)
    {
        org.apache.fop.fo.properties.StringProperty$Maker this;
        int propId;

        this := @this: org.apache.fop.fo.properties.StringProperty$Maker;
        propId := @parameter0: int;
        specialinvoke this.<org.apache.fop.fo.properties.PropertyMaker: void <init>(int)>(propId);
        return;
    }

    public org.apache.fop.fo.properties.Property make(org.apache.fop.fo.PropertyList, java.lang.String, org.apache.fop.fo.FObj)
    {
        org.apache.fop.fo.properties.StringProperty$Maker this;
        org.apache.fop.fo.PropertyList propertyList;
        java.lang.String value, str, $r1, $r4;
        org.apache.fop.fo.FObj fo;
        int vlen, $i0;
        char q1, $c1;
        org.apache.fop.fo.properties.StringProperty $r0;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;

        this := @this: org.apache.fop.fo.properties.StringProperty$Maker;
        propertyList := @parameter0: org.apache.fop.fo.PropertyList;
        value := @parameter1: java.lang.String;
        fo := @parameter2: org.apache.fop.fo.FObj;
        $i0 = virtualinvoke value.<java.lang.String: int length()>();
        vlen = $i0 - 1;
        if vlen <= 0 goto label3;

        q1 = virtualinvoke value.<java.lang.String: char charAt(int)>(0);
        if q1 == 34 goto label0;

        if q1 != 39 goto label2;

     label0:
        $c1 = virtualinvoke value.<java.lang.String: char charAt(int)>(vlen);
        if $c1 != q1 goto label1;

        $r0 = new org.apache.fop.fo.properties.StringProperty;
        $r1 = virtualinvoke value.<java.lang.String: java.lang.String substring(int,int)>(1, vlen);
        specialinvoke $r0.<org.apache.fop.fo.properties.StringProperty: void <init>(java.lang.String,org.apache.fop.fo.properties.StringProperty$1)>($r1, null);
        return $r0;

     label1:
        $r2 = <org.apache.fop.fo.properties.Property: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("String-valued property starts with quote but doesn\'t end with quote: ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(value);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r4);

     label2:
        str = virtualinvoke this.<org.apache.fop.fo.properties.StringProperty$Maker: java.lang.String checkValueKeywords(java.lang.String)>(value);
        if str == null goto label3;

        value = str;

     label3:
        $r0 = new org.apache.fop.fo.properties.StringProperty;
        specialinvoke $r0.<org.apache.fop.fo.properties.StringProperty: void <init>(java.lang.String,org.apache.fop.fo.properties.StringProperty$1)>(value, null);
        return $r0;
    }
}

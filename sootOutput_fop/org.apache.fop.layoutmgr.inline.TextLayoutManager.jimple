public class org.apache.fop.layoutmgr.inline.TextLayoutManager extends org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager
{
    private static org.apache.commons.logging.Log log;
    private java.util.ArrayList vecAreaInfo;
    private static final java.lang.String BREAK_CHARS;
    private static final org.apache.fop.traits.MinOptMax ZERO_MINOPTMAX;
    private org.apache.fop.fo.FOText foText;
    private char[] textArray;
    private org.apache.fop.traits.MinOptMax[] letterAdjustArray;
    private static final char NEWLINE;
    private org.apache.fop.fonts.Font font;
    private short iAreaStart;
    private short iNextStart;
    private org.apache.fop.traits.MinOptMax ipdTotal;
    private int spaceCharIPD;
    private org.apache.fop.traits.MinOptMax wordSpaceIPD;
    private org.apache.fop.traits.MinOptMax letterSpaceIPD;
    private int hyphIPD;
    private org.apache.fop.traits.SpaceVal ws;
    private org.apache.fop.traits.SpaceVal halfWS;
    private org.apache.fop.traits.SpaceVal halfLS;
    private int iNbSpacesPending;
    private boolean bChanged;
    private int iReturnedIndex;
    private short iThisStart;
    private short iTempStart;
    private java.util.LinkedList changeList;
    private org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext;
    private int lineStartBAP;
    private int lineEndBAP;
    private boolean keepTogether;
    static final int SOFT_HYPHEN_PENALTY;
    static java.lang.Class class$org$apache$fop$layoutmgr$inline$TextLayoutManager;

    public void <init>(org.apache.fop.fo.FOText)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.fo.FOText node;
        int $i0, $i1, $i2, $i3;
        char[] $r0, $r1, $r2;
        org.apache.fop.traits.MinOptMax[] $r3;
        java.util.ArrayList $r4;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        node := @parameter0: org.apache.fop.fo.FOText;
        specialinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font> = null;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iAreaStart> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean bChanged> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iTempStart> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList> = null;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = null;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP> = 0;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText> = node;
        $i0 = node.<org.apache.fop.fo.FOText: int endIndex>;
        $i1 = node.<org.apache.fop.fo.FOText: int startIndex>;
        $i0 = $i0 - $i1;
        $r0 = newarray (char)[$i0];
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray> = $r0;
        $r1 = node.<org.apache.fop.fo.FOText: char[] ca>;
        $i0 = node.<org.apache.fop.fo.FOText: int startIndex>;
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i2 = node.<org.apache.fop.fo.FOText: int endIndex>;
        $i3 = node.<org.apache.fop.fo.FOText: int startIndex>;
        $i2 = $i2 - $i3;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, 0, $i2);
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i0 = lengthof $r0;
        $i0 = $i0 + 1;
        $r3 = newarray (org.apache.fop.traits.MinOptMax)[$i0];
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray> = $r3;
        $r4 = new java.util.ArrayList;
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo> = $r4;
        return;
    }

    public void initialize()
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.fonts.FontInfo fi;
        org.apache.fop.fonts.FontTriplet[] fontkeys;
        org.apache.fop.traits.SpaceVal ls, $r12, $r16, $r17, $r18, $r19, $r21;
        org.apache.fop.fo.FOText $r0, $r4, $r8;
        org.apache.fop.fo.FOEventHandler $r1;
        org.apache.fop.fo.properties.CommonFont $r2, $r5;
        org.apache.fop.fonts.FontTriplet $r3;
        org.apache.fop.datatypes.Length $r6;
        int $i0, $i1, $i2;
        org.apache.fop.fonts.Font $r7, $r10, $r15;
        org.apache.fop.fo.properties.CommonHyphenation $r9;
        org.apache.fop.fo.properties.Property $r11, $r14;
        org.apache.fop.traits.MinOptMax $r13, $r20, $r22;
        boolean $z0, $z1, $z2;
        org.apache.fop.fo.properties.KeepProperty $r24;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.FOText: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        fi = virtualinvoke $r1.<org.apache.fop.fo.FOEventHandler: org.apache.fop.fonts.FontInfo getFontInfo()>();
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r2 = virtualinvoke $r0.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.CommonFont getCommonFont()>();
        fontkeys = virtualinvoke $r2.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fonts.FontTriplet[] getFontState(org.apache.fop.fonts.FontInfo)>(fi);
        $r3 = fontkeys[0];
        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.CommonFont getCommonFont()>();
        $r6 = $r5.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize>;
        $i0 = interfaceinvoke $r6.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(this);
        $r7 = virtualinvoke fi.<org.apache.fop.fonts.FontInfo: org.apache.fop.fonts.Font getFontInstance(org.apache.fop.fonts.FontTriplet,int)>($r3, $i0);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font> = $r7;
        $r7 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r7.<org.apache.fop.fonts.Font: int getCharWidth(char)>(32);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int spaceCharIPD> = $i1;
        $r8 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r9 = virtualinvoke $r8.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.CommonHyphenation getCommonHyphenation()>();
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r9.<org.apache.fop.fo.properties.CommonHyphenation: int getHyphIPD(org.apache.fop.fonts.Font)>($r10);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int hyphIPD> = $i1;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r11 = virtualinvoke $r0.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.Property getLetterSpacing()>();
        ls = staticinvoke <org.apache.fop.traits.SpaceVal: org.apache.fop.traits.SpaceVal makeLetterSpacing(org.apache.fop.fo.properties.Property)>($r11);
        $r12 = new org.apache.fop.traits.SpaceVal;
        $r13 = virtualinvoke ls.<org.apache.fop.traits.SpaceVal: org.apache.fop.traits.MinOptMax getSpace()>();
        $r13 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r13, 0.5);
        $z0 = virtualinvoke ls.<org.apache.fop.traits.SpaceVal: boolean isConditional()>();
        $z1 = virtualinvoke ls.<org.apache.fop.traits.SpaceVal: boolean isForcing()>();
        $i2 = virtualinvoke ls.<org.apache.fop.traits.SpaceVal: int getPrecedence()>();
        specialinvoke $r12.<org.apache.fop.traits.SpaceVal: void <init>(org.apache.fop.traits.MinOptMax,boolean,boolean,int)>($r13, $z0, $z1, $i2);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal halfLS> = $r12;
        $r8 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r14 = virtualinvoke $r8.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.Property getWordSpacing()>();
        $r15 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $r12 = staticinvoke <org.apache.fop.traits.SpaceVal: org.apache.fop.traits.SpaceVal makeWordSpacing(org.apache.fop.fo.properties.Property,org.apache.fop.traits.SpaceVal,org.apache.fop.fonts.Font)>($r14, ls, $r15);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal ws> = $r12;
        $r12 = new org.apache.fop.traits.SpaceVal;
        $r16 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal ws>;
        $r13 = virtualinvoke $r16.<org.apache.fop.traits.SpaceVal: org.apache.fop.traits.MinOptMax getSpace()>();
        $r13 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r13, 0.5);
        $r17 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal ws>;
        $z0 = virtualinvoke $r17.<org.apache.fop.traits.SpaceVal: boolean isConditional()>();
        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal ws>;
        $z1 = virtualinvoke $r18.<org.apache.fop.traits.SpaceVal: boolean isForcing()>();
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal ws>;
        $i2 = virtualinvoke $r19.<org.apache.fop.traits.SpaceVal: int getPrecedence()>();
        specialinvoke $r12.<org.apache.fop.traits.SpaceVal: void <init>(org.apache.fop.traits.MinOptMax,boolean,boolean,int)>($r13, $z0, $z1, $i2);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal halfWS> = $r12;
        $r20 = virtualinvoke ls.<org.apache.fop.traits.SpaceVal: org.apache.fop.traits.MinOptMax getSpace()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD> = $r20;
        $r20 = new org.apache.fop.traits.MinOptMax;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int spaceCharIPD>;
        specialinvoke $r20.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i0);
        $r21 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.SpaceVal ws>;
        $r22 = virtualinvoke $r21.<org.apache.fop.traits.SpaceVal: org.apache.fop.traits.MinOptMax getSpace()>();
        $r20 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax add(org.apache.fop.traits.MinOptMax,org.apache.fop.traits.MinOptMax)>($r20, $r22);
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD> = $r20;
        $r8 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r24 = virtualinvoke $r8.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.KeepProperty getKeepTogether()>();
        $r14 = virtualinvoke $r24.<org.apache.fop.fo.properties.KeepProperty: org.apache.fop.fo.properties.Property getWithinLine()>();
        $i1 = virtualinvoke $r14.<org.apache.fop.fo.properties.Property: int getEnum()>();
        if $i1 != 7 goto label0;

        $z2 = 1;
        goto label1;

     label0:
        $z2 = 0;

     label1:
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean keepTogether> = $z2;
        return;
    }

    private boolean getHyphenIPD(org.apache.fop.layoutmgr.inline.HyphContext, org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.layoutmgr.inline.HyphContext hc;
        org.apache.fop.traits.MinOptMax hyphIPD;
        boolean bCanHyphenate;
        int iStopIndex, $i1, $i2, $i5;
        char c;
        short $s0, $s3, $s4;
        char[] $r0;
        org.apache.fop.fonts.Font $r2;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        hc := @parameter0: org.apache.fop.layoutmgr.inline.HyphContext;
        hyphIPD := @parameter1: org.apache.fop.traits.MinOptMax;
        bCanHyphenate = 1;
        $s0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: int getNextHyphPoint()>();
        iStopIndex = $s0 + $i1;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i2 = lengthof $r0;
        if $i2 >= iStopIndex goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        iStopIndex = lengthof $r0;
        bCanHyphenate = 0;

     label0:
        $s3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = iStopIndex - $s3;
        virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: void updateOffset(int)>($i1);

     label1:
        $s0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        if $s0 >= iStopIndex goto label2;

        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        c = $r0[$s4];
        $i1 = hyphIPD.<org.apache.fop.traits.MinOptMax: int opt>;
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i5 = virtualinvoke $r2.<org.apache.fop.fonts.Font: int getCharWidth(char)>(c);
        $i1 = $i1 + $i5;
        hyphIPD.<org.apache.fop.traits.MinOptMax: int opt> = $i1;
        $s4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = $s4 + 1;
        $s4 = (short) $i1;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart> = $s4;
        goto label1;

     label2:
        return bCanHyphenate;
    }

    public void addAreas(org.apache.fop.layoutmgr.PositionIterator, org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.layoutmgr.PositionIterator posIter;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai;
        int iWScount, iLScount, firstAreaInfoIndex, lastAreaInfoIndex, textLength, i, iWordSpaceDim, iLetterSpaceDim, $i0, $i1, $i4, iDifference, $i6, iTotalAdjust, $i7, $i8;
        org.apache.fop.traits.MinOptMax realWidth, ladj, $r0, $r3, $r5, $r9;
        org.apache.fop.layoutmgr.LeafPosition tbpNext;
        boolean iDifference, $z0, $z1;
        byte iTotalAdjust, $b5;
        double dIPDAdjust, $d0, $d1;
        org.apache.fop.area.inline.TextArea t;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        short $s2, $s3;
        org.apache.fop.traits.MinOptMax[] $r4;
        org.apache.commons.logging.Log $r6;
        java.lang.StringBuffer $r7;
        java.lang.String $r8;
        org.apache.fop.layoutmgr.LayoutManager $r10;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        posIter := @parameter0: org.apache.fop.layoutmgr.PositionIterator;
        context := @parameter1: org.apache.fop.layoutmgr.LayoutContext;
        ai = null;
        iWScount = 0;
        iLScount = 0;
        firstAreaInfoIndex = -1;
        lastAreaInfoIndex = 0;
        $r0 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        realWidth = $r0;

     label0:
        $z0 = virtualinvoke posIter.<org.apache.fop.layoutmgr.PositionIterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r1 = virtualinvoke posIter.<org.apache.fop.layoutmgr.PositionIterator: java.lang.Object next()>();
        tbpNext = (org.apache.fop.layoutmgr.LeafPosition) $r1;
        if tbpNext != null goto label1;

        goto label0;

     label1:
        $i0 = virtualinvoke tbpNext.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        if $i0 == -1 goto label3;

        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = virtualinvoke tbpNext.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        $r1 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);
        ai = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r1;
        if firstAreaInfoIndex != -1 goto label2;

        firstAreaInfoIndex = virtualinvoke tbpNext.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();

     label2:
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$000(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        iWScount = iWScount + $s2;
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        iLScount = iLScount + $s2;
        $r3 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        virtualinvoke realWidth.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r3);
        lastAreaInfoIndex = virtualinvoke tbpNext.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();

     label3:
        goto label0;

     label4:
        if ai != null goto label5;

        return;

     label5:
        $s3 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        textLength = $s3 - $s2;
        $s3 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $s3 != textLength goto label6;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z0 != 0 goto label6;

        $z0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isLastArea()>();
        if $z0 == 0 goto label6;

        $r3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $r3 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r3, -1.0);
        virtualinvoke realWidth.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r3);
        iLScount = iLScount + -1;

     label6:
        i = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);

     label7:
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if i >= $s2 goto label9;

        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $i1 = i + 1;
        ladj = $r4[$i1];
        if ladj == null goto label8;

        $z0 = virtualinvoke ladj.<org.apache.fop.traits.MinOptMax: boolean isElastic()>();
        if $z0 == 0 goto label8;

        iLScount = iLScount + 1;

     label8:
        i = i + 1;
        goto label7;

     label9:
        $z0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isLastArea()>();
        if $z0 == 0 goto label10;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z0 == 0 goto label10;

        $r3 = new org.apache.fop.traits.MinOptMax;
        $i4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int hyphIPD>;
        specialinvoke $r3.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i4);
        virtualinvoke realWidth.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r3);

     label10:
        iDifference = 0;
        iTotalAdjust = 0;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        iWordSpaceDim = $r0.<org.apache.fop.traits.MinOptMax: int opt>;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        iLetterSpaceDim = $r0.<org.apache.fop.traits.MinOptMax: int opt>;
        dIPDAdjust = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: double getIPDAdjust()>();
        virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: double getSpaceAdjust()>();
        $b5 = dIPDAdjust cmpl 0.0;
        if $b5 <= 0 goto label11;

        $i0 = realWidth.<org.apache.fop.traits.MinOptMax: int max>;
        $i1 = realWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 - $i1;
        $d0 = (double) $i0;
        $d0 = $d0 * dIPDAdjust;
        iDifference = (int) $d0;
        goto label12;

     label11:
        $i0 = realWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = realWidth.<org.apache.fop.traits.MinOptMax: int min>;
        $i0 = $i0 - $i1;
        $d0 = (double) $i0;
        $d0 = $d0 * dIPDAdjust;
        iDifference = (int) $d0;

     label12:
        $b5 = dIPDAdjust cmpl 0.0;
        if $b5 <= 0 goto label13;

        $r3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i1 = $r3.<org.apache.fop.traits.MinOptMax: int max>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i6 = $r5.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i6;
        $d1 = (double) $i1;
        $d1 = $d1 * dIPDAdjust;
        $i1 = (int) $d1;
        iLetterSpaceDim = iLetterSpaceDim + $i1;
        goto label14;

     label13:
        $r3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i1 = $r3.<org.apache.fop.traits.MinOptMax: int opt>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i6 = $r5.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = $i1 - $i6;
        $d1 = (double) $i1;
        $d1 = $d1 * dIPDAdjust;
        $i1 = (int) $d1;
        iLetterSpaceDim = iLetterSpaceDim + $i1;

     label14:
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i6 = $r5.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = iLetterSpaceDim - $i6;
        $i1 = $i1 * iLScount;
        iTotalAdjust = iTotalAdjust + $i1;
        if iWScount <= 0 goto label15;

        $i1 = iDifference - iTotalAdjust;
        $i1 = $i1 / iWScount;
        iWordSpaceDim = iWordSpaceDim + $i1;

     label15:
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        $i6 = $r5.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = iWordSpaceDim - $i6;
        $i1 = $i1 * iWScount;
        iTotalAdjust = iTotalAdjust + $i1;
        if iTotalAdjust == iDifference goto label16;

        $r6 = <org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.commons.logging.Log log>;
        $r7 = new java.lang.StringBuffer;
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("TextLM.addAreas: error in word / letter space adjustment = ");
        $i6 = iTotalAdjust - iDifference;
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r8);
        iTotalAdjust = iDifference;

     label16:
        $r9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        $i7 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i8 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int spaceCharIPD>;
        $i7 = $i7 - $i8;
        $z1 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: boolean isLastArea()>();
        t = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.area.inline.TextArea createTextArea(org.apache.fop.traits.MinOptMax,int,org.apache.fop.layoutmgr.LayoutContext,int,int,int,boolean)>(realWidth, iTotalAdjust, context, $i7, firstAreaInfoIndex, lastAreaInfoIndex, $z1);
        virtualinvoke t.<org.apache.fop.area.inline.TextArea: void setTextLetterSpaceAdjust(int)>(iLetterSpaceDim);
        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int spaceCharIPD>;
        $i1 = iWordSpaceDim - $i6;
        $i4 = virtualinvoke t.<org.apache.fop.area.inline.TextArea: int getTextLetterSpaceAdjust()>();
        $i6 = 2 * $i4;
        $i1 = $i1 - $i6;
        virtualinvoke t.<org.apache.fop.area.inline.TextArea: void setTextWordSpaceAdjust(int)>($i1);
        $d0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: double getIPDAdjust()>();
        $b5 = $d0 cmpl 0.0;
        if $b5 == 0 goto label17;

        $r3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        $i1 = $r3.<org.apache.fop.traits.MinOptMax: int opt>;
        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int spaceCharIPD>;
        $i1 = $i1 - $i6;
        $i4 = virtualinvoke t.<org.apache.fop.area.inline.TextArea: int getTextLetterSpaceAdjust()>();
        $i6 = 2 * $i4;
        $i1 = $i1 - $i6;
        virtualinvoke t.<org.apache.fop.area.inline.TextArea: void setSpaceDifference(int)>($i1);

     label17:
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.LayoutManager parentLM>;
        interfaceinvoke $r10.<org.apache.fop.layoutmgr.LayoutManager: void addChildArea(org.apache.fop.area.Area)>(t);
        return;
    }

    protected org.apache.fop.area.inline.TextArea createTextArea(org.apache.fop.traits.MinOptMax, int, org.apache.fop.layoutmgr.LayoutContext, int, int, int, boolean)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.traits.MinOptMax width, adj;
        int adjust, spaceDiff, firstIndex, lastIndex, wordStartIndex, len, i, j, letter, lsCount, k, $i1, $i2, $i3, $i4, $i5;
        org.apache.fop.layoutmgr.LayoutContext context;
        boolean isLastArea, $z0, $z1;
        org.apache.fop.area.inline.TextArea textArea, $r0;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo areaInfo, ai, $r7;
        char spaceChar, $c10;
        java.lang.StringBuffer wordChars, $r8;
        int[] letterAdjust;
        double $d0;
        byte $b0;
        org.apache.fop.fonts.Font $r1, $r2;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        short $s6, $s7, $s8, $s9;
        char[] $r6, $r9;
        org.apache.fop.traits.MinOptMax[] $r10;
        org.apache.fop.fo.FOText $r12, $r16;
        org.apache.fop.fo.properties.CommonHyphenation $r13;
        java.lang.String $r14;
        java.lang.Integer $r15;
        java.awt.Color $r17;
        org.apache.fop.fo.properties.CommonTextDecoration $r18;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        width := @parameter0: org.apache.fop.traits.MinOptMax;
        adjust := @parameter1: int;
        context := @parameter2: org.apache.fop.layoutmgr.LayoutContext;
        spaceDiff := @parameter3: int;
        firstIndex := @parameter4: int;
        lastIndex := @parameter5: int;
        isLastArea := @parameter6: boolean;
        $d0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: double getIPDAdjust()>();
        $b0 = $d0 cmpl 0.0;
        if $b0 != 0 goto label0;

        $r0 = new org.apache.fop.area.inline.TextArea;
        specialinvoke $r0.<org.apache.fop.area.inline.TextArea: void <init>()>();
        textArea = $r0;
        goto label1;

     label0:
        $r0 = new org.apache.fop.area.inline.TextArea;
        $i1 = width.<org.apache.fop.traits.MinOptMax: int max>;
        $i2 = width.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $i2 = width.<org.apache.fop.traits.MinOptMax: int opt>;
        $i3 = width.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = $i2 - $i3;
        specialinvoke $r0.<org.apache.fop.area.inline.TextArea: void <init>(int,int,int)>($i1, $i2, adjust);
        textArea = $r0;

     label1:
        $i4 = width.<org.apache.fop.traits.MinOptMax: int opt>;
        $i4 = $i4 + adjust;
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void setIPD(int)>($i4);
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i4 = virtualinvoke $r1.<org.apache.fop.fonts.Font: int getAscender()>();
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r2.<org.apache.fop.fonts.Font: int getDescender()>();
        $i4 = $i4 - $i1;
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void setBPD(int)>($i4);
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i4 = virtualinvoke $r1.<org.apache.fop.fonts.Font: int getAscender()>();
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void setBaselineOffset(int)>($i4);
        $i5 = virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: int getBPD()>();
        $r3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $i4 = virtualinvoke $r3.<org.apache.fop.layoutmgr.inline.AlignmentContext: int getHeight()>();
        if $i5 != $i4 goto label2;

        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void setOffset(int)>(0);
        goto label3;

     label2:
        $r3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $i4 = virtualinvoke $r3.<org.apache.fop.layoutmgr.inline.AlignmentContext: int getOffset()>();
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void setOffset(int)>($i4);

     label3:
        wordStartIndex = -1;
        len = 0;
        i = firstIndex;

     label4:
        if i > lastIndex goto label22;

        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i);
        areaInfo = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r5;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$600(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);
        if $z0 == 0 goto label8;

        j = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);

     label5:
        $s6 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);
        if j >= $s6 goto label7;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        spaceChar = $r6[j];
        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isZeroWidthSpace(char)>(spaceChar);
        if $z0 != 0 goto label6;

        $z1 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isAdjustableSpace(char)>(spaceChar);
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void addSpace(char,int,boolean)>(spaceChar, 0, $z1);

     label6:
        j = j + 1;
        goto label5;

     label7:
        goto label21;

     label8:
        if wordStartIndex != -1 goto label9;

        wordStartIndex = i;
        len = 0;

     label9:
        $s6 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);
        $s7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);
        $i4 = $s6 - $s7;
        len = len + $i4;
        if i == lastIndex goto label10;

        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i4 = i + 1;
        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i4);
        $r7 = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r5;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$600(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>($r7);
        if $z0 == 0 goto label21;

     label10:
        if isLastArea == 0 goto label11;

        if i != lastIndex goto label11;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);
        if $z0 == 0 goto label11;

        len = len + 1;

     label11:
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>(len);
        wordChars = $r8;
        letterAdjust = newarray (int)[len];
        letter = 0;
        j = wordStartIndex;

     label12:
        if j > i goto label19;

        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(j);
        ai = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r5;
        lsCount = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $s8 - $s9;
        virtualinvoke wordChars.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r9, $s7, $i2);
        k = 0;

     label13:
        $s6 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i4 = $s6 - $s7;
        if k >= $i4 goto label18;

        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $s6 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i4 = $s6 + k;
        adj = $r10[$i4];
        if letter <= 0 goto label16;

        $i4 = letter;
        if adj == null goto label14;

        $i1 = adj.<org.apache.fop.traits.MinOptMax: int opt>;
        goto label15;

     label14:
        $i1 = 0;

     label15:
        letterAdjust[$i4] = $i1;

     label16:
        if lsCount <= 0 goto label17;

        $i1 = letterAdjust[letter];
        $i2 = virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: int getTextLetterSpaceAdjust()>();
        $i1 = $i1 + $i2;
        letterAdjust[letter] = $i1;
        lsCount = lsCount + -1;

     label17:
        letter = letter + 1;
        k = k + 1;
        goto label13;

     label18:
        j = j + 1;
        goto label12;

     label19:
        if isLastArea == 0 goto label20;

        if i != lastIndex goto label20;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(areaInfo);
        if $z0 == 0 goto label20;

        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r13 = virtualinvoke $r12.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.CommonHyphenation getCommonHyphenation()>();
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $c10 = virtualinvoke $r13.<org.apache.fop.fo.properties.CommonHyphenation: char getHyphChar(org.apache.fop.fonts.Font)>($r2);
        virtualinvoke wordChars.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c10);

     label20:
        $r14 = virtualinvoke wordChars.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void addWord(java.lang.String,int,int[])>($r14, 0, letterAdjust);
        wordStartIndex = -1;

     label21:
        i = i + 1;
        goto label4;

     label22:
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addFontTraits(org.apache.fop.area.Area,org.apache.fop.fonts.Font)>(textArea, $r1);
        $r15 = <org.apache.fop.area.Trait: java.lang.Integer COLOR>;
        $r16 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r17 = virtualinvoke $r16.<org.apache.fop.fo.FOText: java.awt.Color getColor()>();
        virtualinvoke textArea.<org.apache.fop.area.inline.TextArea: void addTrait(java.lang.Object,java.lang.Object)>($r15, $r17);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $r18 = virtualinvoke $r12.<org.apache.fop.fo.FOText: org.apache.fop.fo.properties.CommonTextDecoration getTextDecoration()>();
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addTextDecoration(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonTextDecoration)>(textArea, $r18);
        return textArea;
    }

    private void addToLetterAdjust(int, int)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        int index, width;
        org.apache.fop.traits.MinOptMax $r0, $r2;
        org.apache.fop.traits.MinOptMax[] $r1;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        index := @parameter0: int;
        width := @parameter1: int;
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $r2 = $r1[index];
        if $r2 != null goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $r0 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int)>(width);
        $r1[index] = $r0;
        goto label1;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $r2 = $r1[index];
        virtualinvoke $r2.<org.apache.fop.traits.MinOptMax: void add(int)>(width);

     label1:
        return;
    }

    private void addToLetterAdjust(int, org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        int index;
        org.apache.fop.traits.MinOptMax width, $r0, $r2;
        org.apache.fop.traits.MinOptMax[] $r1;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        index := @parameter0: int;
        width := @parameter1: org.apache.fop.traits.MinOptMax;
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $r2 = $r1[index];
        if $r2 != null goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $r0 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(org.apache.fop.traits.MinOptMax)>(width);
        $r1[index] = $r0;
        goto label1;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $r2 = $r1[index];
        virtualinvoke $r2.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>(width);

     label1:
        return;
    }

    private static boolean isSpace(char)
    {
        char ch;
        boolean $z0;

        ch := @parameter0: char;
        if ch == 32 goto label0;

        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isNonBreakableSpace(char)>(ch);
        if $z0 != 0 goto label0;

        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isFixedWidthSpace(char)>(ch);
        if $z0 == 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.util.LinkedList getNextKnuthElements(org.apache.fop.layoutmgr.LayoutContext, int)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        int alignment, lastIndex, wordLength, i, charWidth, kern, iLetterSpaces, $i1, $i6, $i7, $i13, $i15, $i18, $i19;
        java.util.LinkedList returnList, $r2, $r21;
        org.apache.fop.layoutmgr.InlineKnuthSequence sequence, $r3;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai, prevAi, $r14, $r15;
        org.apache.fop.text.linebreak.LineBreakStatus lbs, $r4;
        boolean inWord, inWhitespace, breakOpportunity, kerning, $z0, $z1, $z2;
        char ch, c, previous, $c5, $c8, $c12;
        byte breakAction, $b0, $b4;
        org.apache.fop.traits.MinOptMax wordIPD, $r0, ipd, $r11, $r13, $r20;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r1;
        short $s2, $s3, $s9, $s10, $s11, $s14, $s16, $s17;
        char[] $r5, $r6, $r17;
        org.apache.commons.logging.Log $r7;
        java.lang.StringBuffer $r8;
        java.lang.String $r9;
        org.apache.fop.fonts.Font $r10, $r12, $r26;
        double $d0, $d1;
        java.util.ArrayList $r18, $r19;
        org.apache.fop.layoutmgr.KnuthGlue $r22;
        org.apache.fop.layoutmgr.LeafPosition $r23;
        org.apache.fop.fo.FOText $r25;
        null_type ai;
        java.lang.Object $r28;
        java.util.List $r29;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter1: int;
        $i1 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getLineStartBorderAndPaddingWidth()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP> = $i1;
        $i1 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: int getLineEndBorderAndPaddingWidth()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP> = $i1;
        $r1 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext getAlignmentContext()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = $r1;
        $r2 = new java.util.LinkedList;
        specialinvoke $r2.<java.util.LinkedList: void <init>()>();
        returnList = $r2;
        $r3 = new org.apache.fop.layoutmgr.InlineKnuthSequence;
        specialinvoke $r3.<org.apache.fop.layoutmgr.InlineKnuthSequence: void <init>()>();
        sequence = $r3;
        ai = null;
        prevAi = null;
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>(sequence);
        $r4 = new org.apache.fop.text.linebreak.LineBreakStatus;
        specialinvoke $r4.<org.apache.fop.text.linebreak.LineBreakStatus: void <init>()>();
        lbs = $r4;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = $s2;
        inWord = 0;
        inWhitespace = 0;
        ch = 0;

     label0:
        $s3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i1 = lengthof $r5;
        if $s3 >= $i1 goto label39;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        ch = $r6[$s2];
        breakOpportunity = 0;
        $z0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean keepTogether>;
        if $z0 == 0 goto label1;

        $b4 = 4;
        goto label2;

     label1:
        $b4 = virtualinvoke lbs.<org.apache.fop.text.linebreak.LineBreakStatus: byte nextChar(char)>(ch);

     label2:
        breakAction = $b4;
        tableswitch(breakAction)
        {
            case 0: goto label5;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label4;
            default: goto label6;
        };

     label3:
        goto label7;

     label4:
        goto label7;

     label5:
        breakOpportunity = 1;
        goto label7;

     label6:
        $r7 = <org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unexpected breakAction: ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(breakAction);
        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r9);

     label7:
        if inWord == 0 goto label20;

        if breakOpportunity != 0 goto label8;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean isSpace(char)>(ch);
        if $z0 != 0 goto label8;

        if ch != 10 goto label28;

     label8:
        lastIndex = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;

     label9:
        if lastIndex <= 0 goto label10;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i1 = lastIndex - 1;
        $c5 = $r6[$i1];
        if $c5 != 173 goto label10;

        lastIndex = lastIndex + -1;
        goto label9;

     label10:
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        wordLength = lastIndex - $s2;
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        kerning = virtualinvoke $r10.<org.apache.fop.fonts.Font: boolean hasKerning()>();
        $r11 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r11.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        wordIPD = $r11;
        i = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;

     label11:
        if i >= lastIndex goto label15;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        c = $r6[i];
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        charWidth = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getCharWidth(char)>(c);
        virtualinvoke wordIPD.<org.apache.fop.traits.MinOptMax: void add(int)>(charWidth);
        if kerning == 0 goto label14;

        kern = 0;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        if i <= $s2 goto label12;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i1 = i - 1;
        previous = $r6[$i1];
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i6 = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getKernValue(char,char)>(previous, c);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r12.<org.apache.fop.fonts.Font: int getFontSize()>();
        $i6 = $i6 * $i1;
        kern = $i6 / 1000;
        goto label13;

     label12:
        if prevAi == null goto label13;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$600(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(prevAi);
        if $z0 != 0 goto label13;

        $s3 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(prevAi);
        if $s3 <= 0 goto label13;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(prevAi);
        $i1 = $s2 - 1;
        previous = $r6[$i1];
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i6 = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getKernValue(char,char)>(previous, c);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r12.<org.apache.fop.fonts.Font: int getFontSize()>();
        $i6 = $i6 * $i1;
        kern = $i6 / 1000;

     label13:
        if kern == 0 goto label14;

        specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: void addToLetterAdjust(int,int)>(i, kern);
        virtualinvoke wordIPD.<org.apache.fop.traits.MinOptMax: void add(int)>(kern);

     label14:
        i = i + 1;
        goto label11;

     label15:
        if kerning == 0 goto label16;

        if breakOpportunity == 0 goto label16;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean isSpace(char)>(ch);
        if $z0 != 0 goto label16;

        if lastIndex <= 0 goto label16;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $c5 = $r6[lastIndex];
        if $c5 != 173 goto label16;

        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i7 = lastIndex - 1;
        $c8 = $r5[$i7];
        $i6 = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getKernValue(char,char)>($c8, ch);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r12.<org.apache.fop.fonts.Font: int getFontSize()>();
        $i6 = $i6 * $i1;
        kern = $i6 / 1000;
        if kern == 0 goto label16;

        specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: void addToLetterAdjust(int,int)>(lastIndex, kern);

     label16:
        iLetterSpaces = wordLength - 1;
        if breakOpportunity == 0 goto label17;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean isSpace(char)>(ch);
        if $z0 != 0 goto label17;

        iLetterSpaces = iLetterSpaces + 1;

     label17:
        $r13 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $d0 = (double) iLetterSpaces;
        $r13 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r13, $d0);
        virtualinvoke wordIPD.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r13);
        $r14 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $r15 = $r14;
        $s9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $s10 = (short) lastIndex;
        $b0 = 0;
        $s11 = (short) iLetterSpaces;
        $r0 = wordIPD;
        $r17 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $c12 = $r17[lastIndex];
        if $c12 != 173 goto label18;

        $z1 = 1;
        goto label19;

     label18:
        $z1 = 0;

     label19:
        specialinvoke $r15.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s9, $s10, $b0, $s11, $r0, $z1, 0, breakOpportunity);
        ai = $r14;
        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(ai);
        prevAi = ai;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iTempStart> = $s2;
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();
        $i13 = $i13 - 1;
        $r20 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $r21 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForAWordFragment(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int,org.apache.fop.traits.MinOptMax)>(alignment, ai, $i13, $r20);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean addAll(java.util.Collection)>($r21);
        ai = null;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = $s2;
        goto label28;

     label20:
        if inWhitespace == 0 goto label22;

        if ch != 32 goto label21;

        if breakOpportunity == 0 goto label28;

     label21:
        $r14 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $s10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s14 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s11 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $i15 = $s14 - $s11;
        $s14 = (short) $i15;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        $s16 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s17 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $i18 = $s16 - $s17;
        $d1 = (double) $i18;
        $r0 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r0, $d1);
        specialinvoke $r14.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s9, $s10, $s14, 0, $r0, 0, 1, breakOpportunity);
        ai = $r14;
        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(ai);
        prevAi = ai;
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();
        $i13 = $i13 - 1;
        $r21 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForASpace(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int)>(alignment, ai, $i13);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean addAll(java.util.Collection)>($r21);
        ai = null;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = $s2;
        goto label28;

     label22:
        if ai == null goto label26;

        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(ai);
        prevAi = ai;
        $r14 = ai;
        if ch == 32 goto label23;

        if breakOpportunity == 0 goto label24;

     label23:
        $z2 = 1;
        goto label25;

     label24:
        $z2 = 0;

     label25:
        staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$702(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,boolean)>($r14, $z2);
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();
        $i13 = $i13 - 1;
        $r21 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForASpace(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int)>(alignment, ai, $i13);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean addAll(java.util.Collection)>($r21);
        ai = null;

     label26:
        if breakAction != 5 goto label28;

        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i6 == 0 goto label27;

        $r22 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r23 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r23.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r22.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i19, 0, 0, $r23, 1);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r22);

     label27:
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: org.apache.fop.layoutmgr.KnuthSequence endSequence()>();
        $r3 = new org.apache.fop.layoutmgr.InlineKnuthSequence;
        specialinvoke $r3.<org.apache.fop.layoutmgr.InlineKnuthSequence: void <init>()>();
        sequence = $r3;
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>(sequence);

     label28:
        if ch != 32 goto label29;

        $r25 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $i6 = virtualinvoke $r25.<org.apache.fop.fo.FOText: int getWhitespaceTreatment()>();
        if $i6 == 108 goto label30;

     label29:
        if ch != 160 goto label31;

     label30:
        $r14 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i13 = $s10 + 1;
        $s10 = (short) $i13;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        specialinvoke $r14.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s9, $s10, 1, 0, $r0, 0, 1, breakOpportunity);
        ai = $r14;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = $s2 + 1;
        $s2 = (short) $i1;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = $s2;
        goto label34;

     label31:
        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isFixedWidthSpace(char)>(ch);
        if $z0 != 0 goto label32;

        $z0 = staticinvoke <org.apache.fop.util.CharUtilities: boolean isZeroWidthSpace(char)>(ch);
        if $z0 == 0 goto label33;

     label32:
        $r11 = new org.apache.fop.traits.MinOptMax;
        $r26 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i7 = virtualinvoke $r26.<org.apache.fop.fonts.Font: int getCharWidth(char)>(ch);
        specialinvoke $r11.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i7);
        ipd = $r11;
        $r14 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i13 = $s10 + 1;
        $s10 = (short) $i13;
        specialinvoke $r14.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s9, $s10, 0, 0, ipd, 0, 1, breakOpportunity);
        ai = $r14;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = $s2 + 1;
        $s2 = (short) $i1;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = $s2;
        goto label34;

     label33:
        if ch != 10 goto label34;

        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = $s2 + 1;
        $s2 = (short) $i1;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart> = $s2;

     label34:
        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean isSpace(char)>(ch);
        if $z0 != 0 goto label35;

        if ch == 10 goto label35;

        $z0 = 1;
        goto label36;

     label35:
        $z0 = 0;

     label36:
        inWord = $z0;
        if ch != 32 goto label37;

        $r25 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $i6 = virtualinvoke $r25.<org.apache.fop.fo.FOText: int getWhitespaceTreatment()>();
        if $i6 == 108 goto label37;

        $z0 = 1;
        goto label38;

     label37:
        $z0 = 0;

     label38:
        inWhitespace = $z0;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = $s2 + 1;
        $s2 = (short) $i1;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart> = $s2;
        goto label0;

     label39:
        if inWord == 0 goto label46;

        lastIndex = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $i1 = $s2 - 1;
        $c5 = $r6[$i1];
        if $c5 != 173 goto label40;

        lastIndex = lastIndex + -1;

     label40:
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        wordLength = lastIndex - $s2;
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        kerning = virtualinvoke $r10.<org.apache.fop.fonts.Font: boolean hasKerning()>();
        $r11 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r11.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        wordIPD = $r11;
        i = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;

     label41:
        if i >= lastIndex goto label45;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        c = $r6[i];
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        charWidth = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getCharWidth(char)>(c);
        virtualinvoke wordIPD.<org.apache.fop.traits.MinOptMax: void add(int)>(charWidth);
        if kerning == 0 goto label44;

        kern = 0;
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        if i <= $s2 goto label42;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i1 = i - 1;
        previous = $r6[$i1];
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i6 = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getKernValue(char,char)>(previous, c);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r12.<org.apache.fop.fonts.Font: int getFontSize()>();
        $i6 = $i6 * $i1;
        kern = $i6 / 1000;
        goto label43;

     label42:
        if prevAi == null goto label43;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$600(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(prevAi);
        if $z0 != 0 goto label43;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(prevAi);
        $i1 = $s2 - 1;
        previous = $r6[$i1];
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i6 = virtualinvoke $r10.<org.apache.fop.fonts.Font: int getKernValue(char,char)>(previous, c);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r12.<org.apache.fop.fonts.Font: int getFontSize()>();
        $i6 = $i6 * $i1;
        kern = $i6 / 1000;

     label43:
        if kern == 0 goto label44;

        specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: void addToLetterAdjust(int,int)>(i, kern);
        virtualinvoke wordIPD.<org.apache.fop.traits.MinOptMax: void add(int)>(kern);

     label44:
        i = i + 1;
        goto label41;

     label45:
        iLetterSpaces = wordLength - 1;
        $r13 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $d0 = (double) iLetterSpaces;
        $r13 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r13, $d0);
        virtualinvoke wordIPD.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r13);
        $r14 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $s10 = (short) lastIndex;
        $s11 = (short) iLetterSpaces;
        specialinvoke $r14.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s9, $s10, 0, $s11, wordIPD, 0, 0, 0);
        ai = $r14;
        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(ai);
        $s2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iTempStart> = $s2;
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();
        $i13 = $i13 - 1;
        $r20 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $r21 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForAWordFragment(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int,org.apache.fop.traits.MinOptMax)>(alignment, ai, $i13, $r20);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean addAll(java.util.Collection)>($r21);
        ai = null;
        goto label52;

     label46:
        if inWhitespace == 0 goto label47;

        $r14 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $s10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s14 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s11 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $i15 = $s14 - $s11;
        $s14 = (short) $i15;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax wordSpaceIPD>;
        $s16 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iNextStart>;
        $s17 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iThisStart>;
        $i18 = $s16 - $s17;
        $d1 = (double) $i18;
        $r0 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r0, $d1);
        specialinvoke $r14.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s9, $s10, $s14, 0, $r0, 0, 1, 1);
        ai = $r14;
        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(ai);
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();
        $i13 = $i13 - 1;
        $r21 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForASpace(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int)>(alignment, ai, $i13);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean addAll(java.util.Collection)>($r21);
        ai = null;
        goto label52;

     label47:
        if ai == null goto label50;

        $r18 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r18.<java.util.ArrayList: boolean add(java.lang.Object)>(ai);
        $r14 = ai;
        if ch != 8203 goto label48;

        $z2 = 1;
        goto label49;

     label48:
        $z2 = 0;

     label49:
        staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$702(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,boolean)>($r14, $z2);
        $r19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i13 = virtualinvoke $r19.<java.util.ArrayList: int size()>();
        $i13 = $i13 - 1;
        $r21 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForASpace(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int)>(alignment, ai, $i13);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean addAll(java.util.Collection)>($r21);
        ai = null;
        goto label52;

     label50:
        if ch != 10 goto label52;

        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i6 == 0 goto label51;

        $r22 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i19 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r23 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r23.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r22.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i19, 0, 0, $r23, 1);
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: boolean add(java.lang.Object)>($r22);

     label51:
        virtualinvoke sequence.<org.apache.fop.layoutmgr.KnuthSequence: org.apache.fop.layoutmgr.KnuthSequence endSequence()>();
        $r3 = new org.apache.fop.layoutmgr.InlineKnuthSequence;
        specialinvoke $r3.<org.apache.fop.layoutmgr.InlineKnuthSequence: void <init>()>();
        sequence = $r3;
        virtualinvoke returnList.<java.util.LinkedList: boolean add(java.lang.Object)>(sequence);

     label52:
        $r28 = virtualinvoke returnList.<java.util.LinkedList: java.lang.Object getLast()>();
        $r29 = (java.util.List) $r28;
        $i6 = interfaceinvoke $r29.<java.util.List: int size()>();
        if $i6 != 0 goto label53;

        virtualinvoke returnList.<java.util.LinkedList: java.lang.Object removeLast()>();

     label53:
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: void setFinished(boolean)>(1);
        $i6 = virtualinvoke returnList.<java.util.LinkedList: int size()>();
        if $i6 <= 0 goto label54;

        return returnList;

     label54:
        return null;
    }

    public java.util.List addALetterSpaceTo(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        java.util.List oldList;
        java.util.ListIterator oldListIterator;
        org.apache.fop.layoutmgr.KnuthElement el;
        org.apache.fop.layoutmgr.LeafPosition pos, $r0;
        int idx, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i13;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.KnuthBox $r2;
        org.apache.fop.layoutmgr.Position $r3;
        java.util.ArrayList $r4;
        org.apache.fop.traits.MinOptMax $r5, $r6, $r11, $r12, $r13, $r14, $r17;
        java.lang.String $r7;
        char[] $r8;
        short $s1, $s10, $s11, $s12;
        char $c3;
        org.apache.fop.layoutmgr.KnuthPenalty $r9;
        org.apache.fop.layoutmgr.KnuthGlue $r10;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r15;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r16;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        oldList := @parameter0: java.util.List;
        oldListIterator = interfaceinvoke oldList.<java.util.List: java.util.ListIterator listIterator()>();
        $r1 = interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();
        el = (org.apache.fop.layoutmgr.KnuthElement) $r1;
        $r2 = (org.apache.fop.layoutmgr.KnuthBox) el;
        $r3 = virtualinvoke $r2.<org.apache.fop.layoutmgr.KnuthBox: org.apache.fop.layoutmgr.Position getPosition()>();
        pos = (org.apache.fop.layoutmgr.LeafPosition) $r3;
        idx = virtualinvoke pos.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        if idx <= -1 goto label2;

        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $r1 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(idx);
        ai = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r1;
        staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$108(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r5 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        virtualinvoke $r5.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r6);
        $r7 = "-/";
        $r8 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: short iTempStart>;
        $i2 = $s1 - 1;
        $c3 = $r8[$i2];
        $i4 = virtualinvoke $r7.<java.lang.String: int indexOf(int)>($c3);
        if $i4 < 0 goto label0;

        $i5 = interfaceinvoke oldList.<java.util.List: int size()>();
        oldListIterator = interfaceinvoke oldList.<java.util.List: java.util.ListIterator listIterator(int)>($i5);
        $r9 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r9.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 50, 1, $r0, 0);
        interfaceinvoke oldListIterator.<java.util.ListIterator: void add(java.lang.Object)>($r9);
        $r10 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r11 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i6 = $r11.<org.apache.fop.traits.MinOptMax: int opt>;
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i7 = $r12.<org.apache.fop.traits.MinOptMax: int max>;
        $r13 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i8 = $r13.<org.apache.fop.traits.MinOptMax: int opt>;
        $i7 = $i7 - $i8;
        $r13 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i8 = $r13.<org.apache.fop.traits.MinOptMax: int opt>;
        $r14 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i9 = $r14.<org.apache.fop.traits.MinOptMax: int min>;
        $i8 = $i8 - $i9;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r10.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i6, $i7, $i8, $r0, 0);
        interfaceinvoke oldListIterator.<java.util.ListIterator: void add(java.lang.Object)>($r10);
        goto label2;

     label0:
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i4 = $r5.<org.apache.fop.traits.MinOptMax: int min>;
        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i5 = $r6.<org.apache.fop.traits.MinOptMax: int max>;
        if $i4 != $i5 goto label1;

        $r15 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r11 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i6 = $r11.<org.apache.fop.traits.MinOptMax: int opt>;
        $r16 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        specialinvoke $r15.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i6, $r16, pos, 0);
        interfaceinvoke oldListIterator.<java.util.ListIterator: void set(java.lang.Object)>($r15);
        goto label2;

     label1:
        interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();
        interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();
        $r10 = new org.apache.fop.layoutmgr.KnuthGlue;
        $s10 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i7 = $r12.<org.apache.fop.traits.MinOptMax: int opt>;
        $i6 = $s10 * $i7;
        $s11 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r13 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i8 = $r13.<org.apache.fop.traits.MinOptMax: int max>;
        $r14 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i9 = $r14.<org.apache.fop.traits.MinOptMax: int opt>;
        $i8 = $i8 - $i9;
        $i7 = $s11 * $i8;
        $s12 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r14 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i9 = $r14.<org.apache.fop.traits.MinOptMax: int opt>;
        $r17 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $i13 = $r17.<org.apache.fop.traits.MinOptMax: int min>;
        $i9 = $i9 - $i13;
        $i8 = $s12 * $i9;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r10.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i6, $i7, $i8, $r0, 1);
        interfaceinvoke oldListIterator.<java.util.ListIterator: void set(java.lang.Object)>($r10);

     label2:
        return oldList;
    }

    public void removeWordSpace(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        java.util.List oldList;
        java.util.ListIterator oldListIterator;
        int leafValue, $i0, $i1;
        java.util.LinkedList $r0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.KnuthElement $r2;
        boolean $z0;
        org.apache.fop.layoutmgr.Position $r3;
        org.apache.fop.layoutmgr.LeafPosition $r4;
        java.util.ArrayList $r5, $r6;
        org.apache.commons.logging.Log $r7;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        oldList := @parameter0: java.util.List;
        oldListIterator = interfaceinvoke oldList.<java.util.List: java.util.ListIterator listIterator()>();
        $r0 = (java.util.LinkedList) oldList;
        $r1 = virtualinvoke $r0.<java.util.LinkedList: java.lang.Object getFirst()>();
        $r2 = (org.apache.fop.layoutmgr.KnuthElement) $r1;
        $z0 = virtualinvoke $r2.<org.apache.fop.layoutmgr.KnuthElement: boolean isPenalty()>();
        if $z0 == 0 goto label0;

        interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();

     label0:
        $i0 = interfaceinvoke oldList.<java.util.List: int size()>();
        if $i0 <= 2 goto label1;

        interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();
        interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();

     label1:
        $r1 = interfaceinvoke oldListIterator.<java.util.ListIterator: java.lang.Object next()>();
        $r2 = (org.apache.fop.layoutmgr.KnuthElement) $r1;
        $r3 = virtualinvoke $r2.<org.apache.fop.layoutmgr.KnuthElement: org.apache.fop.layoutmgr.Position getPosition()>();
        $r4 = (org.apache.fop.layoutmgr.LeafPosition) $r3;
        leafValue = virtualinvoke $r4.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = virtualinvoke $r5.<java.util.ArrayList: int size()>();
        $i1 = $i1 - 1;
        if leafValue != $i1 goto label2;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        virtualinvoke $r6.<java.util.ArrayList: java.lang.Object remove(int)>(leafValue);
        goto label3;

     label2:
        $r7 = <org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>("trying to remove a non-trailing word space");

     label3:
        return;
    }

    public void hyphenate(org.apache.fop.layoutmgr.Position, org.apache.fop.layoutmgr.inline.HyphContext)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        org.apache.fop.layoutmgr.Position pos;
        org.apache.fop.layoutmgr.inline.HyphContext hc;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai, $r15;
        int iStartIndex, iStopIndex, i, $i1, $i3, $i4, $i7, $i10, $i12;
        boolean bNothingChanged, bHyphenFollows, bIsWordEnd, $z0;
        org.apache.fop.traits.MinOptMax newIPD, la, $r5, $r7;
        char c;
        byte $b0;
        java.util.ArrayList $r2;
        org.apache.fop.layoutmgr.LeafPosition $r3, $r16;
        java.lang.Object $r4;
        short $s2, $s5, $s6, $s8, $s9, $s11;
        char[] $r6;
        org.apache.fop.fonts.Font $r8;
        org.apache.fop.traits.MinOptMax[] $r9;
        double $d0;
        java.util.LinkedList $r10, $r11;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange $r12;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        pos := @parameter0: org.apache.fop.layoutmgr.Position;
        hc := @parameter1: org.apache.fop.layoutmgr.inline.HyphContext;
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $r3 = (org.apache.fop.layoutmgr.LeafPosition) pos;
        $i1 = virtualinvoke $r3.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);
        ai = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r4;
        iStartIndex = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        bNothingChanged = 1;

     label0:
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if iStartIndex >= $s2 goto label16;

        $r5 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r5.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        newIPD = $r5;
        $z0 = virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: boolean hasMoreHyphPoints()>();
        if $z0 == 0 goto label1;

        $i1 = virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: int getNextHyphPoint()>();
        $i3 = iStartIndex + $i1;
        iStopIndex = $i3;
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $i3 > $s2 goto label1;

        bHyphenFollows = 1;
        goto label2;

     label1:
        bHyphenFollows = 0;
        iStopIndex = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);

     label2:
        $i1 = iStopIndex - iStartIndex;
        virtualinvoke hc.<org.apache.fop.layoutmgr.inline.HyphContext: void updateOffset(int)>($i1);
        i = iStartIndex;

     label3:
        if i >= iStopIndex goto label6;

        $r6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        c = $r6[i];
        $r7 = new org.apache.fop.traits.MinOptMax;
        $r8 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fonts.Font font>;
        $i4 = virtualinvoke $r8.<org.apache.fop.fonts.Font: int getCharWidth(char)>(c);
        specialinvoke $r7.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i4);
        virtualinvoke newIPD.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r7);
        if i >= iStopIndex goto label5;

        $r9 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $i1 = i + 1;
        la = $r9[$i1];
        $i1 = iStopIndex - 1;
        if i != $i1 goto label4;

        if bHyphenFollows == 0 goto label4;

        la = null;

     label4:
        if la == null goto label5;

        virtualinvoke newIPD.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>(la);

     label5:
        i = i + 1;
        goto label3;

     label6:
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if iStopIndex != $s2 goto label7;

        $s5 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s6 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $s2 - $s6;
        if $s5 >= $i1 goto label7;

        $z0 = 1;
        goto label8;

     label7:
        $z0 = 0;

     label8:
        bIsWordEnd = $z0;
        $r7 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        if bIsWordEnd == 0 goto label9;

        $i7 = iStopIndex - iStartIndex;
        $i7 = $i7 - 1;
        goto label10;

     label9:
        $i7 = iStopIndex - iStartIndex;

     label10:
        $d0 = (double) $i7;
        $r7 = staticinvoke <org.apache.fop.traits.MinOptMax: org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax,double)>($r7, $d0);
        virtualinvoke newIPD.<org.apache.fop.traits.MinOptMax: void add(org.apache.fop.traits.MinOptMax)>($r7);
        if bNothingChanged == 0 goto label11;

        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if iStopIndex != $s2 goto label11;

        if bHyphenFollows == 0 goto label15;

     label11:
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList>;
        if $r10 != null goto label12;

        $r11 = new java.util.LinkedList;
        specialinvoke $r11.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList> = $r11;

     label12:
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList>;
        $r12 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange;
        $r15 = new org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        $s8 = (short) iStartIndex;
        $s9 = (short) iStopIndex;
        $b0 = 0;
        if bIsWordEnd == 0 goto label13;

        $i10 = iStopIndex - iStartIndex;
        $i10 = $i10 - 1;
        goto label14;

     label13:
        $i10 = iStopIndex - iStartIndex;

     label14:
        $s11 = (short) $i10;
        specialinvoke $r15.<org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,short,short,short,short,org.apache.fop.traits.MinOptMax,boolean,boolean,boolean)>(this, $s8, $s9, $b0, $s11, newIPD, bHyphenFollows, 0, 0);
        $r16 = (org.apache.fop.layoutmgr.LeafPosition) pos;
        $i12 = virtualinvoke $r16.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        specialinvoke $r12.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: void <init>(org.apache.fop.layoutmgr.inline.TextLayoutManager,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int)>(this, $r15, $i12);
        virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>($r12);
        bNothingChanged = 0;

     label15:
        iStartIndex = iStopIndex;
        goto label0;

     label16:
        $z0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean bChanged>;
        if $z0 != 0 goto label17;

        if bNothingChanged != 0 goto label17;

        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean bChanged> = 1;

     label17:
        return;
    }

    public boolean applyChanges(java.util.List)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        java.util.List oldList;
        int iAddedAI, iRemovedAI, iOldIndex, $i0, $i1;
        null_type currChange;
        java.util.ListIterator changeListIterator;
        java.util.LinkedList $r0;
        boolean $z0;
        java.lang.Object $r1;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange currChange;
        java.util.ArrayList $r2;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo $r3;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        oldList := @parameter0: java.util.List;
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: void setFinished(boolean)>(0);
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList>;
        if $r0 == null goto label3;

        iAddedAI = 0;
        iRemovedAI = 0;
        iOldIndex = -1;
        currChange = null;
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList>;
        changeListIterator = virtualinvoke $r0.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label0:
        $z0 = interfaceinvoke changeListIterator.<java.util.ListIterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke changeListIterator.<java.util.ListIterator: java.lang.Object next()>();
        currChange = (org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange) $r1;
        $i0 = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: int index>;
        if $i0 == iOldIndex goto label1;

        iRemovedAI = iRemovedAI + 1;
        iAddedAI = iAddedAI + 1;
        iOldIndex = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: int index>;
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: int index>;
        $i1 = $i1 + iAddedAI;
        $i1 = $i1 - iRemovedAI;
        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i1);
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: int index>;
        $i1 = $i1 + iAddedAI;
        $i1 = $i1 - iRemovedAI;
        $r3 = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai>;
        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r3);
        goto label0;

     label1:
        iAddedAI = iAddedAI + 1;
        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: int index>;
        $i1 = $i1 + iAddedAI;
        $i1 = $i1 - iRemovedAI;
        $r3 = currChange.<org.apache.fop.layoutmgr.inline.TextLayoutManager$PendingChange: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai>;
        virtualinvoke $r2.<java.util.ArrayList: void add(int,java.lang.Object)>($i1, $r3);
        goto label0;

     label2:
        $r0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList changeList>;
        virtualinvoke $r0.<java.util.LinkedList: void clear()>();

     label3:
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex> = 0;
        $z0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean bChanged>;
        return $z0;
    }

    public java.util.LinkedList getChangedKnuthElements(java.util.List, int)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        java.util.List oldList;
        int alignment, $i0, $i1, $i3;
        java.util.LinkedList returnList, $r0, $r5;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai;
        boolean $z0;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        short $s2;
        org.apache.fop.traits.MinOptMax $r4;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        oldList := @parameter0: java.util.List;
        alignment := @parameter1: int;
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: boolean isFinished()>();
        if $z0 == 0 goto label0;

        return null;

     label0:
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        returnList = $r0;

     label1:
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex>;
        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();
        if $i0 >= $i1 goto label4;

        $r2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex>;
        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i1);
        ai = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r3;
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$000(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $s2 != 0 goto label2;

        $i3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex>;
        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax letterSpaceIPD>;
        $r5 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForAWordFragment(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int,org.apache.fop.traits.MinOptMax)>(alignment, ai, $i3, $r4);
        virtualinvoke returnList.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r5);
        goto label3;

     label2:
        $i3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex>;
        $r5 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForASpace(int,org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo,int)>(alignment, ai, $i3);
        virtualinvoke returnList.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r5);

     label3:
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex>;
        $i1 = $i1 + 1;
        this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int iReturnedIndex> = $i1;
        goto label1;

     label4:
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: void setFinished(boolean)>(1);
        return returnList;
    }

    public void getWordChars(java.lang.StringBuffer, org.apache.fop.layoutmgr.Position)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        java.lang.StringBuffer sbChars;
        org.apache.fop.layoutmgr.Position pos;
        int iLeafValue, $i3;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai;
        org.apache.fop.layoutmgr.LeafPosition $r0;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        char[] $r4;
        short $s0, $s1, $s2;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        sbChars := @parameter0: java.lang.StringBuffer;
        pos := @parameter1: org.apache.fop.layoutmgr.Position;
        $r0 = (org.apache.fop.layoutmgr.LeafPosition) pos;
        iLeafValue = virtualinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: int getLeafPos()>();
        if iLeafValue == -1 goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.ArrayList vecAreaInfo>;
        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(iLeafValue);
        ai = (org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo) $r2;
        $r3 = new java.lang.String;
        $r4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s1 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $s2 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i3 = $s1 - $s2;
        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, $s0, $i3);
        virtualinvoke sbChars.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label0:
        return;
    }

    private java.util.LinkedList createElementsForASpace(int, org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo, int)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        int alignment, leafValue, $i0, $i1, $i2, $i3, $i6;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai;
        java.util.LinkedList $r0, spaceElements;
        org.apache.fop.layoutmgr.LeafPosition mainPosition, $r1, $r2;
        boolean $z0;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r3;
        org.apache.fop.layoutmgr.Position $r4;
        org.apache.fop.layoutmgr.KnuthPenalty $r5;
        org.apache.fop.layoutmgr.KnuthGlue $r6;
        org.apache.fop.traits.MinOptMax $r7, $r8, $r9, $r10;
        char[] $r11;
        short $s4;
        char $c5;
        org.apache.fop.fo.FOText $r12;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        alignment := @parameter0: int;
        ai := @parameter1: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        leafValue := @parameter2: int;
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        spaceElements = $r0;
        $r2 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r2.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, leafValue);
        mainPosition = $r2;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$700(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z0 != 0 goto label1;

        if alignment != 70 goto label0;

        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 1);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $r10 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i3 = $r10.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = $i2 - $i3;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, $i2, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label0:
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i0, null, mainPosition, 1);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        goto label18;

     label1:
        $r11 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $s4 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$400(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $c5 = $r11[$s4];
        if $c5 != 32 goto label2;

        $r12 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.fo.FOText foText>;
        $i6 = virtualinvoke $r12.<org.apache.fop.fo.FOText: int getWhitespaceTreatment()>();
        if $i6 != 108 goto label7;

     label2:
        lookupswitch(alignment)
        {
            case 23: goto label3;
            case 39: goto label4;
            case 70: goto label5;
            case 135: goto label4;
            default: goto label6;
        };

     label3:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i0 = $i0 + $i1;
        $i0 = neg $i0;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -20016, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i0 = $i0 + $i1;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label4:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i0 = $i0 + $i1;
        $i0 = neg $i0;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i0 = $i0 + $i1;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label5:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i0 = $i0 + $i1;
        $i0 = neg $i0;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $r10 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i3 = $r10.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = $i2 - $i3;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, $i2, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 + $i1;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label6:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i0 = $i0 + $i1;
        $i0 = neg $i0;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 + $i1;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label7:
        lookupswitch(alignment)
        {
            case 23: goto label8;
            case 39: goto label9;
            case 70: goto label12;
            case 135: goto label9;
            default: goto label15;
        };

     label8:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i1 = $i1 + $i2;
        $i0 = $i0 - $i1;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -20016, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label9:
        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        if $i6 != 0 goto label10;

        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i6 == 0 goto label11;

     label10:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i1 = $i1 + $i2;
        $i0 = $i0 - $i1;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -10008, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label11:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>(0, 10008, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -10008, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label12:
        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        if $i6 != 0 goto label13;

        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i6 == 0 goto label14;

     label13:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i1 = $i1 + $i2;
        $i0 = $i0 - $i1;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $r10 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i3 = $r10.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = $i2 - $i3;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, $i2, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label14:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $r10 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i3 = $r10.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = $i2 - $i3;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, $i2, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label15:
        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        if $i6 != 0 goto label16;

        $i6 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i6 == 0 goto label17;

     label16:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i1 = $i1 + $i2;
        $i0 = $i0 - $i1;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        $r3 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r4 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r4, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r5.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r1, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);
        goto label18;

     label17:
        $r6 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r7 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $r7.<org.apache.fop.traits.MinOptMax: int opt>;
        $r8 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i1 = $r8.<org.apache.fop.traits.MinOptMax: int max>;
        $r9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r9.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        specialinvoke $r6.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i1, 0, mainPosition, 0);
        virtualinvoke spaceElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r6);

     label18:
        return spaceElements;
    }

    private java.util.LinkedList createElementsForAWordFragment(int, org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo, int, org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        int alignment, leafValue, unsuppressibleLetterSpaces, $i0, $i1, $i2, $i3, $i6, $i7, $i8;
        org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo ai;
        org.apache.fop.traits.MinOptMax letterSpaceWidth, widthIfNoBreakOccurs, $r4, $r13;
        java.util.LinkedList $r0, wordElements, $r14;
        org.apache.fop.layoutmgr.LeafPosition mainPosition, $r1, $r8;
        boolean bSuppressibleLetterSpace, $z0, $z1;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r2, $r3;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r5;
        org.apache.fop.layoutmgr.Position $r6;
        short $s4, $s5, $s9;
        org.apache.fop.layoutmgr.KnuthPenalty $r7;
        org.apache.fop.layoutmgr.KnuthGlue $r9;
        char[] $r10;
        org.apache.fop.traits.MinOptMax[] $r11;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        alignment := @parameter0: int;
        ai := @parameter1: org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo;
        leafValue := @parameter2: int;
        letterSpaceWidth := @parameter3: org.apache.fop.traits.MinOptMax;
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        wordElements = $r0;
        $r1 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r1.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, leafValue);
        mainPosition = $r1;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$700(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z0 == 0 goto label0;

        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        bSuppressibleLetterSpace = $z0;
        $i0 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 != $i1 goto label4;

        $r2 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r3 = $r2;
        if bSuppressibleLetterSpace == 0 goto label2;

        $r4 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r4.<org.apache.fop.traits.MinOptMax: int opt>;
        $i3 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = $i2 - $i3;
        goto label3;

     label2:
        $r4 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r4.<org.apache.fop.traits.MinOptMax: int opt>;

     label3:
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>(mainPosition);
        specialinvoke $r3.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i2, $r5, $r6, 0);
        virtualinvoke wordElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        goto label7;

     label4:
        if bSuppressibleLetterSpace == 0 goto label5;

        $s4 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i0 = $s4 - 1;
        goto label6;

     label5:
        $i0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);

     label6:
        unsuppressibleLetterSpaces = $i0;
        $r2 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r4 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax access$200(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i2 = $r4.<org.apache.fop.traits.MinOptMax: int opt>;
        $s5 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$100(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $i6 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i3 = $s5 * $i6;
        $i2 = $i2 - $i3;
        $r5 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>(mainPosition);
        specialinvoke $r2.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>($i2, $r5, $r6, 0);
        virtualinvoke wordElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r7 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r8 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r8.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r7.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r8, 1);
        virtualinvoke wordElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);
        $r9 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i3 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = unsuppressibleLetterSpaces * $i3;
        $i6 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int max>;
        $i7 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i6 = $i6 - $i7;
        $i3 = unsuppressibleLetterSpaces * $i6;
        $i7 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int opt>;
        $i8 = letterSpaceWidth.<org.apache.fop.traits.MinOptMax: int min>;
        $i7 = $i7 - $i8;
        $i6 = unsuppressibleLetterSpaces * $i7;
        $r8 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r8.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r9.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i2, $i3, $i6, $r8, 1);
        virtualinvoke wordElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r9);
        $r2 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r8 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r8.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r8);
        specialinvoke $r2.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r6, 1);
        virtualinvoke wordElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

     label7:
        $z0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z0 == 0 goto label11;

        widthIfNoBreakOccurs = null;
        $s4 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        $r10 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: char[] textArray>;
        $i1 = lengthof $r10;
        if $s4 >= $i1 goto label8;

        $r11 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax[] letterAdjustArray>;
        $s9 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: short access$300(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        widthIfNoBreakOccurs = $r11[$s9];

     label8:
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int hyphIPD>;
        $r13 = widthIfNoBreakOccurs;
        $z1 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$700(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z1 == 0 goto label9;

        $z1 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo: boolean access$500(org.apache.fop.layoutmgr.inline.TextLayoutManager$AreaInfo)>(ai);
        if $z1 == 0 goto label9;

        $z1 = 1;
        goto label10;

     label9:
        $z1 = 0;

     label10:
        $r14 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForAHyphen(int,int,org.apache.fop.traits.MinOptMax,boolean)>(alignment, $i2, $r13, $z1);
        virtualinvoke wordElements.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r14);
        goto label12;

     label11:
        if bSuppressibleLetterSpace == 0 goto label12;

        $r14 = specialinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: java.util.LinkedList createElementsForAHyphen(int,int,org.apache.fop.traits.MinOptMax,boolean)>(alignment, 0, letterSpaceWidth, 1);
        virtualinvoke wordElements.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r14);

     label12:
        return wordElements;
    }

    private java.util.LinkedList createElementsForAHyphen(int, int, org.apache.fop.traits.MinOptMax, boolean)
    {
        org.apache.fop.layoutmgr.inline.TextLayoutManager this;
        int alignment, widthIfBreakOccurs, $i0, $i2, $i3, $i4, $i5;
        org.apache.fop.traits.MinOptMax widthIfNoBreakOccurs;
        boolean unflagged, $z1;
        java.util.LinkedList hyphenElements, $r1;
        org.apache.fop.layoutmgr.LeafPosition $r0;
        org.apache.fop.layoutmgr.KnuthPenalty $r2, $r4;
        org.apache.fop.layoutmgr.KnuthGlue $r3;
        byte $b1;
        org.apache.fop.layoutmgr.inline.KnuthInlineBox $r5;
        org.apache.fop.layoutmgr.Position $r6;

        this := @this: org.apache.fop.layoutmgr.inline.TextLayoutManager;
        alignment := @parameter0: int;
        widthIfBreakOccurs := @parameter1: int;
        widthIfNoBreakOccurs := @parameter2: org.apache.fop.traits.MinOptMax;
        unflagged := @parameter3: boolean;
        if widthIfNoBreakOccurs != null goto label0;

        widthIfNoBreakOccurs = <org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax ZERO_MINOPTMAX>;

     label0:
        $r1 = new java.util.LinkedList;
        specialinvoke $r1.<java.util.LinkedList: void <init>()>();
        hyphenElements = $r1;
        lookupswitch(alignment)
        {
            case 23: goto label1;
            case 39: goto label6;
            case 135: goto label6;
            default: goto label17;
        };

     label1:
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r4 = $r2;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int hyphIPD>;
        if unflagged == 0 goto label2;

        $b1 = 1;
        goto label3;

     label2:
        $b1 = 50;

     label3:
        if unflagged != 0 goto label4;

        $z1 = 1;
        goto label5;

     label4:
        $z1 = 0;

     label5:
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>($i0, $b1, $z1, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i0 = $i0 + $i2;
        $i0 = neg $i0;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -20016, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r5.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r6, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        goto label32;

     label6:
        $i3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        if $i3 != 0 goto label7;

        $i3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i3 == 0 goto label12;

     label7:
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 10008, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r4 = $r2;
        if unflagged == 0 goto label8;

        $b1 = 1;
        goto label9;

     label8:
        $b1 = 50;

     label9:
        if unflagged != 0 goto label10;

        $z1 = 1;
        goto label11;

     label10:
        $z1 = 0;

     label11:
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(widthIfBreakOccurs, $b1, $z1, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i2 = $i2 + $i4;
        $i0 = $i0 - $i2;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -10008, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r5 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r5.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r6, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        goto label32;

     label12:
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>(0, 10008, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r4 = $r2;
        if unflagged == 0 goto label13;

        $b1 = 1;
        goto label14;

     label13:
        $b1 = 50;

     label14:
        if unflagged != 0 goto label15;

        $z1 = 1;
        goto label16;

     label15:
        $z1 = 0;

     label16:
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(widthIfBreakOccurs, $b1, $z1, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, -10008, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        goto label32;

     label17:
        $i3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        if $i3 != 0 goto label18;

        $i3 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        if $i3 == 0 goto label26;

     label18:
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 1);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r4 = $r2;
        if unflagged == 0 goto label19;

        $b1 = 1;
        goto label20;

     label19:
        $b1 = 50;

     label20:
        if unflagged != 0 goto label21;

        $z1 = 1;
        goto label22;

     label21:
        $z1 = 0;

     label22:
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(widthIfBreakOccurs, $b1, $z1, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $i3 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int min>;
        if $i3 != 0 goto label23;

        $i3 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int max>;
        if $i3 == 0 goto label24;

     label23:
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i4 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i2 = $i2 + $i4;
        $i0 = $i0 - $i2;
        $i2 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int max>;
        $i4 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = $i2 - $i4;
        $i4 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i5 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int min>;
        $i4 = $i4 - $i5;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i2, $i4, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        goto label25;

     label24:
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $i2 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineEndBAP>;
        $i0 = $i0 + $i2;
        $i0 = neg $i0;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);

     label25:
        $r5 = new org.apache.fop.layoutmgr.inline.KnuthInlineBox;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.layoutmgr.Position notifyPos(org.apache.fop.layoutmgr.Position)>($r0);
        specialinvoke $r5.<org.apache.fop.layoutmgr.inline.KnuthInlineBox: void <init>(int,org.apache.fop.layoutmgr.inline.AlignmentContext,org.apache.fop.layoutmgr.Position,boolean)>(0, null, $r6, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r5);
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r2.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(0, 1000, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = this.<org.apache.fop.layoutmgr.inline.TextLayoutManager: int lineStartBAP>;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, 0, 0, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);
        goto label32;

     label26:
        $r2 = new org.apache.fop.layoutmgr.KnuthPenalty;
        $r4 = $r2;
        if unflagged == 0 goto label27;

        $b1 = 1;
        goto label28;

     label27:
        $b1 = 50;

     label28:
        if unflagged != 0 goto label29;

        $z1 = 1;
        goto label30;

     label29:
        $z1 = 0;

     label30:
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r4.<org.apache.fop.layoutmgr.KnuthPenalty: void <init>(int,int,boolean,org.apache.fop.layoutmgr.Position,boolean)>(widthIfBreakOccurs, $b1, $z1, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);
        $i3 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int min>;
        if $i3 != 0 goto label31;

        $i3 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int max>;
        if $i3 == 0 goto label32;

     label31:
        $r3 = new org.apache.fop.layoutmgr.KnuthGlue;
        $i0 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int max>;
        $i4 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = $i2 - $i4;
        $i4 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int opt>;
        $i5 = widthIfNoBreakOccurs.<org.apache.fop.traits.MinOptMax: int min>;
        $i4 = $i4 - $i5;
        $r0 = new org.apache.fop.layoutmgr.LeafPosition;
        specialinvoke $r0.<org.apache.fop.layoutmgr.LeafPosition: void <init>(org.apache.fop.layoutmgr.LayoutManager,int)>(this, -1);
        specialinvoke $r3.<org.apache.fop.layoutmgr.KnuthGlue: void <init>(int,int,int,org.apache.fop.layoutmgr.Position,boolean)>($i0, $i2, $i4, $r0, 0);
        virtualinvoke hyphenElements.<java.util.LinkedList: boolean add(java.lang.Object)>($r3);

     label32:
        return hyphenElements;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;
        org.apache.fop.traits.MinOptMax $r2;

        $r0 = <org.apache.fop.layoutmgr.inline.TextLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$inline$TextLayoutManager>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.inline.TextLayoutManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.inline.TextLayoutManager");
        <org.apache.fop.layoutmgr.inline.TextLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$inline$TextLayoutManager> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.inline.TextLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$inline$TextLayoutManager>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.commons.logging.Log log> = $r1;
        $r2 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r2.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        <org.apache.fop.layoutmgr.inline.TextLayoutManager: org.apache.fop.traits.MinOptMax ZERO_MINOPTMAX> = $r2;
        return;
    }
}

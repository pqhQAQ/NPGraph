public class org.apache.fop.fo.expr.FromParentFunction extends org.apache.fop.fo.expr.FunctionBase
{

    public void <init>()
    {
        org.apache.fop.fo.expr.FromParentFunction this;

        this := @this: org.apache.fop.fo.expr.FromParentFunction;
        specialinvoke this.<org.apache.fop.fo.expr.FunctionBase: void <init>()>();
        return;
    }

    public int nbArgs()
    {
        org.apache.fop.fo.expr.FromParentFunction this;

        this := @this: org.apache.fop.fo.expr.FromParentFunction;
        return 1;
    }

    public boolean padArgsWithPropertyName()
    {
        org.apache.fop.fo.expr.FromParentFunction this;

        this := @this: org.apache.fop.fo.expr.FromParentFunction;
        return 1;
    }

    public org.apache.fop.fo.properties.Property eval(org.apache.fop.fo.properties.Property[], org.apache.fop.fo.expr.PropertyInfo) throws org.apache.fop.fo.expr.PropertyException
    {
        org.apache.fop.fo.expr.FromParentFunction this;
        org.apache.fop.fo.properties.Property[] args;
        org.apache.fop.fo.expr.PropertyInfo pInfo;
        java.lang.String propName;
        org.apache.fop.fo.properties.Property $r0;
        org.apache.fop.fo.expr.PropertyException $r1;
        org.apache.fop.fo.PropertyList $r2;
        int $i0;

        this := @this: org.apache.fop.fo.expr.FromParentFunction;
        args := @parameter0: org.apache.fop.fo.properties.Property[];
        pInfo := @parameter1: org.apache.fop.fo.expr.PropertyInfo;
        $r0 = args[0];
        propName = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: java.lang.String getString()>();
        if propName != null goto label0;

        $r1 = new org.apache.fop.fo.expr.PropertyException;
        specialinvoke $r1.<org.apache.fop.fo.expr.PropertyException: void <init>(java.lang.String)>("Incorrect parameter to from-parent function");
        throw $r1;

     label0:
        $r2 = virtualinvoke pInfo.<org.apache.fop.fo.expr.PropertyInfo: org.apache.fop.fo.PropertyList getPropertyList()>();
        $i0 = staticinvoke <org.apache.fop.fo.FOPropertyMapping: int getPropertyId(java.lang.String)>(propName);
        $r0 = virtualinvoke $r2.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property getFromParent(int)>($i0);
        return $r0;
    }
}

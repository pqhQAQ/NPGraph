public class org.apache.fop.fonts.CachedFontInfo extends org.apache.fop.fonts.EmbedFontInfo
{
    private static final long serialVersionUID;
    private long lastModified;

    public static java.io.File getFileFromUrls(java.lang.String[])
    {
        java.lang.String[] urls;
        int i, $i0;
        java.lang.String urlStr;
        java.io.File fontFile, $r2;
        java.net.URL url, $r0;
        java.net.MalformedURLException l4, $r1;
        boolean $z0;

        urls := @parameter0: java.lang.String[];
        i = 0;

     label0:
        $i0 = lengthof urls;
        if i >= $i0 goto label7;

        urlStr = urls[i];
        if urlStr == null goto label6;

        fontFile = null;
        $z0 = virtualinvoke urlStr.<java.lang.String: boolean startsWith(java.lang.String)>("file:");
        if $z0 == 0 goto label4;

     label1:
        $r0 = new java.net.URL;
        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(urlStr);
        url = $r0;
        fontFile = staticinvoke <org.apache.commons.io.FileUtils: java.io.File toFile(java.net.URL)>(url);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;
        l4 = $r1;

     label4:
        if fontFile != null goto label5;

        $r2 = new java.io.File;
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(urlStr);
        fontFile = $r2;

     label5:
        $z0 = virtualinvoke fontFile.<java.io.File: boolean exists()>();
        if $z0 == 0 goto label6;

        $z0 = virtualinvoke fontFile.<java.io.File: boolean canRead()>();
        if $z0 == 0 goto label6;

        return fontFile;

     label6:
        i = i + 1;
        goto label0;

     label7:
        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public void <init>(java.lang.String, boolean, java.util.List, java.lang.String, long)
    {
        org.apache.fop.fonts.CachedFontInfo this;
        java.lang.String metricsFile, embedFile;
        boolean kerning;
        java.util.List fontTriplets;
        long lastModified;

        this := @this: org.apache.fop.fonts.CachedFontInfo;
        metricsFile := @parameter0: java.lang.String;
        kerning := @parameter1: boolean;
        fontTriplets := @parameter2: java.util.List;
        embedFile := @parameter3: java.lang.String;
        lastModified := @parameter4: long;
        specialinvoke this.<org.apache.fop.fonts.EmbedFontInfo: void <init>(java.lang.String,boolean,java.util.List,java.lang.String)>(metricsFile, kerning, fontTriplets, embedFile);
        this.<org.apache.fop.fonts.CachedFontInfo: long lastModified> = -1L;
        this.<org.apache.fop.fonts.CachedFontInfo: long lastModified> = lastModified;
        return;
    }

    public void <init>(org.apache.fop.fonts.EmbedFontInfo)
    {
        org.apache.fop.fonts.CachedFontInfo this;
        org.apache.fop.fonts.EmbedFontInfo fontInfo;
        java.io.File fontFile;
        java.lang.String $r0, $r2, $r4;
        boolean $z0;
        java.util.List $r1;
        java.lang.String[] $r3;
        long $l0;

        this := @this: org.apache.fop.fonts.CachedFontInfo;
        fontInfo := @parameter0: org.apache.fop.fonts.EmbedFontInfo;
        $r0 = fontInfo.<org.apache.fop.fonts.EmbedFontInfo: java.lang.String metricsFile>;
        $z0 = fontInfo.<org.apache.fop.fonts.EmbedFontInfo: boolean kerning>;
        $r1 = fontInfo.<org.apache.fop.fonts.EmbedFontInfo: java.util.List fontTriplets>;
        $r2 = fontInfo.<org.apache.fop.fonts.EmbedFontInfo: java.lang.String embedFile>;
        specialinvoke this.<org.apache.fop.fonts.EmbedFontInfo: void <init>(java.lang.String,boolean,java.util.List,java.lang.String)>($r0, $z0, $r1, $r2);
        this.<org.apache.fop.fonts.CachedFontInfo: long lastModified> = -1L;
        $r3 = newarray (java.lang.String)[2];
        $r4 = this.<org.apache.fop.fonts.CachedFontInfo: java.lang.String embedFile>;
        $r3[0] = $r4;
        $r4 = this.<org.apache.fop.fonts.CachedFontInfo: java.lang.String metricsFile>;
        $r3[1] = $r4;
        fontFile = staticinvoke <org.apache.fop.fonts.CachedFontInfo: java.io.File getFileFromUrls(java.lang.String[])>($r3);
        if fontFile == null goto label0;

        $l0 = virtualinvoke fontFile.<java.io.File: long lastModified()>();
        this.<org.apache.fop.fonts.CachedFontInfo: long lastModified> = $l0;

     label0:
        return;
    }

    public long lastModified()
    {
        org.apache.fop.fonts.CachedFontInfo this;
        long $l0;

        this := @this: org.apache.fop.fonts.CachedFontInfo;
        $l0 = this.<org.apache.fop.fonts.CachedFontInfo: long lastModified>;
        return $l0;
    }

    public void setLastModified(long)
    {
        org.apache.fop.fonts.CachedFontInfo this;
        long lastModified;

        this := @this: org.apache.fop.fonts.CachedFontInfo;
        lastModified := @parameter0: long;
        this.<org.apache.fop.fonts.CachedFontInfo: long lastModified> = lastModified;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fonts.CachedFontInfo this;
        java.lang.StringBuffer $r0;
        java.lang.String $r1, $r2;
        long $l0;

        this := @this: org.apache.fop.fonts.CachedFontInfo;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r1 = specialinvoke this.<org.apache.fop.fonts.EmbedFontInfo: java.lang.String toString()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", lastModified=");
        $l0 = this.<org.apache.fop.fonts.CachedFontInfo: long lastModified>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }
}

public class org.apache.fop.render.afp.modca.ObjectAreaDescriptor extends org.apache.fop.render.afp.modca.AbstractDescriptor
{

    public void <init>(int, int, int, int)
    {
        org.apache.fop.render.afp.modca.ObjectAreaDescriptor this;
        int width, height, widthResolution, heightResolution;

        this := @this: org.apache.fop.render.afp.modca.ObjectAreaDescriptor;
        width := @parameter0: int;
        height := @parameter1: int;
        widthResolution := @parameter2: int;
        heightResolution := @parameter3: int;
        specialinvoke this.<org.apache.fop.render.afp.modca.AbstractDescriptor: void <init>(int,int,int,int)>(width, height, widthResolution, heightResolution);
        return;
    }

    public void writeDataStream(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.ObjectAreaDescriptor this;
        java.io.OutputStream os;
        byte[] data, len, xdpi, ydpi, x, y;
        int $i0;
        byte $b1;

        this := @this: org.apache.fop.render.afp.modca.ObjectAreaDescriptor;
        os := @parameter0: java.io.OutputStream;
        data = newarray (byte)[29];
        data[0] = 90;
        $i0 = lengthof data;
        $i0 = $i0 - 1;
        len = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = len[0];
        data[1] = $b1;
        $b1 = len[1];
        data[2] = $b1;
        data[3] = -45;
        data[4] = -90;
        data[5] = 107;
        data[6] = 0;
        data[7] = 0;
        data[8] = 0;
        data[9] = 3;
        data[10] = 67;
        data[11] = 1;
        data[12] = 8;
        data[13] = 75;
        data[14] = 0;
        data[15] = 0;
        $i0 = this.<org.apache.fop.render.afp.modca.ObjectAreaDescriptor: int widthResolution>;
        $i0 = $i0 * 10;
        xdpi = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = xdpi[0];
        data[16] = $b1;
        $b1 = xdpi[1];
        data[17] = $b1;
        $i0 = this.<org.apache.fop.render.afp.modca.ObjectAreaDescriptor: int heightResolution>;
        $i0 = $i0 * 10;
        ydpi = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = ydpi[0];
        data[18] = $b1;
        $b1 = ydpi[1];
        data[19] = $b1;
        data[20] = 9;
        data[21] = 76;
        data[22] = 2;
        $i0 = this.<org.apache.fop.render.afp.modca.ObjectAreaDescriptor: int width>;
        x = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 3);
        $b1 = x[0];
        data[23] = $b1;
        $b1 = x[1];
        data[24] = $b1;
        $b1 = x[2];
        data[25] = $b1;
        $i0 = this.<org.apache.fop.render.afp.modca.ObjectAreaDescriptor: int height>;
        y = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 3);
        $b1 = y[0];
        data[26] = $b1;
        $b1 = y[1];
        data[27] = $b1;
        $b1 = y[2];
        data[28] = $b1;
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        return;
    }
}

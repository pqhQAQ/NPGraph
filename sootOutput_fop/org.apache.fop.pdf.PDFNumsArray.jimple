public class org.apache.fop.pdf.PDFNumsArray extends org.apache.fop.pdf.PDFObject
{
    protected java.util.SortedMap map;

    public void <init>(org.apache.fop.pdf.PDFObject)
    {
        org.apache.fop.pdf.PDFNumsArray this;
        org.apache.fop.pdf.PDFObject parent;
        java.util.TreeMap $r0;

        this := @this: org.apache.fop.pdf.PDFNumsArray;
        parent := @parameter0: org.apache.fop.pdf.PDFObject;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>(org.apache.fop.pdf.PDFObject)>(parent);
        $r0 = new java.util.TreeMap;
        specialinvoke $r0.<java.util.TreeMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFNumsArray: java.util.SortedMap map> = $r0;
        return;
    }

    public int length()
    {
        org.apache.fop.pdf.PDFNumsArray this;
        java.util.SortedMap $r0;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFNumsArray;
        $r0 = this.<org.apache.fop.pdf.PDFNumsArray: java.util.SortedMap map>;
        $i0 = interfaceinvoke $r0.<java.util.SortedMap: int size()>();
        return $i0;
    }

    public void put(int, java.lang.Object)
    {
        org.apache.fop.pdf.PDFNumsArray this;
        int key;
        java.lang.Object obj;
        java.lang.Integer $r0;
        java.util.SortedMap $r1;

        this := @this: org.apache.fop.pdf.PDFNumsArray;
        key := @parameter0: int;
        obj := @parameter1: java.lang.Object;
        $r1 = this.<org.apache.fop.pdf.PDFNumsArray: java.util.SortedMap map>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(key);
        interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, obj);
        return;
    }

    public java.lang.Object get(int)
    {
        org.apache.fop.pdf.PDFNumsArray this;
        int key;
        java.lang.Integer $r0;
        java.util.SortedMap $r1;
        java.lang.Object $r2;

        this := @this: org.apache.fop.pdf.PDFNumsArray;
        key := @parameter0: int;
        $r1 = this.<org.apache.fop.pdf.PDFNumsArray: java.util.SortedMap map>;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(key);
        $r2 = interfaceinvoke $r1.<java.util.SortedMap: java.lang.Object get(java.lang.Object)>($r0);
        return $r2;
    }

    protected int output(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.pdf.PDFNumsArray this;
        java.io.OutputStream stream;
        org.apache.commons.io.output.CountingOutputStream $r0, cout;
        java.io.Writer writer;
        boolean first, $z0;
        java.util.Iterator iter;
        java.util.Map$Entry entry;
        java.lang.String $r1;
        java.util.SortedMap $r2;
        java.util.Set $r3;
        java.lang.Object $r4, $r5;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFNumsArray;
        stream := @parameter0: java.io.OutputStream;
        $r0 = new org.apache.commons.io.output.CountingOutputStream;
        specialinvoke $r0.<org.apache.commons.io.output.CountingOutputStream: void <init>(java.io.OutputStream)>(stream);
        cout = $r0;
        writer = staticinvoke <org.apache.fop.pdf.PDFDocument: java.io.Writer getWriterFor(java.io.OutputStream)>(cout);
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFNumsArray: boolean hasObjectNumber()>();
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFNumsArray: java.lang.String getObjectID()>();
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>($r1);

     label0:
        virtualinvoke writer.<java.io.Writer: void write(int)>(91);
        first = 1;
        $r2 = this.<org.apache.fop.pdf.PDFNumsArray: java.util.SortedMap map>;
        $r3 = interfaceinvoke $r2.<java.util.SortedMap: java.util.Set entrySet()>();
        iter = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        entry = (java.util.Map$Entry) $r4;
        if first != 0 goto label2;

        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>(" ");

     label2:
        first = 0;
        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();
        virtualinvoke this.<org.apache.fop.pdf.PDFNumsArray: void formatObject(java.lang.Object,java.io.OutputStream,java.io.Writer)>($r5, cout, writer);
        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>(" ");
        $r5 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();
        virtualinvoke this.<org.apache.fop.pdf.PDFNumsArray: void formatObject(java.lang.Object,java.io.OutputStream,java.io.Writer)>($r5, cout, writer);
        goto label1;

     label3:
        virtualinvoke writer.<java.io.Writer: void write(int)>(93);
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFNumsArray: boolean hasObjectNumber()>();
        if $z0 == 0 goto label4;

        virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>("\nendobj\n");

     label4:
        virtualinvoke writer.<java.io.Writer: void flush()>();
        $i0 = virtualinvoke cout.<org.apache.commons.io.output.CountingOutputStream: int getCount()>();
        return $i0;
    }
}

public class org.apache.fop.render.txt.TXTState extends java.lang.Object
{
    private java.util.LinkedList stackCTM;
    private org.apache.fop.area.CTM resultCTM;

    public void <init>()
    {
        org.apache.fop.render.txt.TXTState this;
        java.util.LinkedList $r0;
        org.apache.fop.area.CTM $r1;

        this := @this: org.apache.fop.render.txt.TXTState;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.render.txt.TXTState: java.util.LinkedList stackCTM> = $r0;
        $r1 = new org.apache.fop.area.CTM;
        specialinvoke $r1.<org.apache.fop.area.CTM: void <init>()>();
        this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM resultCTM> = $r1;
        return;
    }

    private void updateResultCTM(org.apache.fop.area.CTM)
    {
        org.apache.fop.render.txt.TXTState this;
        org.apache.fop.area.CTM ctm, $r0;

        this := @this: org.apache.fop.render.txt.TXTState;
        ctm := @parameter0: org.apache.fop.area.CTM;
        $r0 = this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM resultCTM>;
        $r0 = virtualinvoke $r0.<org.apache.fop.area.CTM: org.apache.fop.area.CTM multiply(org.apache.fop.area.CTM)>(ctm);
        this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM resultCTM> = $r0;
        return;
    }

    private void calcResultCTM()
    {
        org.apache.fop.render.txt.TXTState this;
        org.apache.fop.area.CTM $r0;
        java.util.Iterator i;
        java.util.LinkedList $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: org.apache.fop.render.txt.TXTState;
        $r0 = new org.apache.fop.area.CTM;
        specialinvoke $r0.<org.apache.fop.area.CTM: void <init>()>();
        this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM resultCTM> = $r0;
        $r1 = this.<org.apache.fop.render.txt.TXTState: java.util.LinkedList stackCTM>;
        i = virtualinvoke $r1.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        $r0 = (org.apache.fop.area.CTM) $r2;
        specialinvoke this.<org.apache.fop.render.txt.TXTState: void updateResultCTM(org.apache.fop.area.CTM)>($r0);
        goto label0;

     label1:
        return;
    }

    public void push(org.apache.fop.area.CTM)
    {
        org.apache.fop.render.txt.TXTState this;
        org.apache.fop.area.CTM ctm;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.render.txt.TXTState;
        ctm := @parameter0: org.apache.fop.area.CTM;
        $r0 = this.<org.apache.fop.render.txt.TXTState: java.util.LinkedList stackCTM>;
        virtualinvoke $r0.<java.util.LinkedList: void addLast(java.lang.Object)>(ctm);
        specialinvoke this.<org.apache.fop.render.txt.TXTState: void updateResultCTM(org.apache.fop.area.CTM)>(ctm);
        return;
    }

    public void pop()
    {
        org.apache.fop.render.txt.TXTState this;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.render.txt.TXTState;
        $r0 = this.<org.apache.fop.render.txt.TXTState: java.util.LinkedList stackCTM>;
        virtualinvoke $r0.<java.util.LinkedList: java.lang.Object removeLast()>();
        specialinvoke this.<org.apache.fop.render.txt.TXTState: void calcResultCTM()>();
        return;
    }

    public org.apache.fop.area.CTM refineCTM(org.apache.fop.area.CTM)
    {
        org.apache.fop.render.txt.TXTState this;
        org.apache.fop.area.CTM ctm, $r0;
        double[] da;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        int $i0;

        this := @this: org.apache.fop.render.txt.TXTState;
        ctm := @parameter0: org.apache.fop.area.CTM;
        da = virtualinvoke ctm.<org.apache.fop.area.CTM: double[] toArray()>();
        $d0 = da[4];
        $i0 = (int) $d0;
        $i0 = staticinvoke <org.apache.fop.render.txt.Helper: int roundPosition(int,int)>($i0, 6000);
        $d0 = (double) $i0;
        da[4] = $d0;
        $d0 = da[5];
        $i0 = (int) $d0;
        $i0 = staticinvoke <org.apache.fop.render.txt.Helper: int roundPosition(int,int)>($i0, 7860);
        $d0 = (double) $i0;
        da[5] = $d0;
        $r0 = new org.apache.fop.area.CTM;
        $d0 = da[0];
        $d1 = da[1];
        $d2 = da[2];
        $d3 = da[3];
        $d4 = da[4];
        $d5 = da[5];
        specialinvoke $r0.<org.apache.fop.area.CTM: void <init>(double,double,double,double,double,double)>($d0, $d1, $d2, $d3, $d4, $d5);
        return $r0;
    }

    public java.awt.Point transformPoint(java.awt.Point, org.apache.fop.area.CTM)
    {
        org.apache.fop.render.txt.TXTState this;
        java.awt.Point p, $r1;
        org.apache.fop.area.CTM ctm, nctm;
        java.awt.geom.Rectangle2D$Double $r0, r;
        int $i0, $i1, $i2;
        double $d0, $d1, $d2;
        java.awt.geom.Rectangle2D r;

        this := @this: org.apache.fop.render.txt.TXTState;
        p := @parameter0: java.awt.Point;
        ctm := @parameter1: org.apache.fop.area.CTM;
        $r0 = new java.awt.geom.Rectangle2D$Double;
        $i0 = p.<java.awt.Point: int x>;
        $d0 = (double) $i0;
        $i1 = p.<java.awt.Point: int y>;
        $d1 = (double) $i1;
        specialinvoke $r0.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d0, $d1, 0.0, 0.0);
        r = $r0;
        nctm = virtualinvoke this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM refineCTM(org.apache.fop.area.CTM)>(ctm);
        r = virtualinvoke nctm.<org.apache.fop.area.CTM: java.awt.geom.Rectangle2D transform(java.awt.geom.Rectangle2D)>(r);
        $r1 = new java.awt.Point;
        $d0 = virtualinvoke r.<java.awt.geom.Rectangle2D: double getX()>();
        $i0 = (int) $d0;
        $d2 = virtualinvoke r.<java.awt.geom.Rectangle2D: double getY()>();
        $i2 = (int) $d2;
        specialinvoke $r1.<java.awt.Point: void <init>(int,int)>($i0, $i2);
        return $r1;
    }

    public java.awt.Point transformPoint(int, int)
    {
        org.apache.fop.render.txt.TXTState this;
        int x, y;
        java.awt.Point $r0, $r2;
        org.apache.fop.area.CTM $r1;

        this := @this: org.apache.fop.render.txt.TXTState;
        x := @parameter0: int;
        y := @parameter1: int;
        $r0 = new java.awt.Point;
        specialinvoke $r0.<java.awt.Point: void <init>(int,int)>(x, y);
        $r1 = this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM resultCTM>;
        $r2 = virtualinvoke this.<org.apache.fop.render.txt.TXTState: java.awt.Point transformPoint(java.awt.Point,org.apache.fop.area.CTM)>($r0, $r1);
        return $r2;
    }

    public org.apache.fop.area.CTM getResultCTM()
    {
        org.apache.fop.render.txt.TXTState this;
        org.apache.fop.area.CTM $r0;

        this := @this: org.apache.fop.render.txt.TXTState;
        $r0 = this.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM resultCTM>;
        return $r0;
    }
}

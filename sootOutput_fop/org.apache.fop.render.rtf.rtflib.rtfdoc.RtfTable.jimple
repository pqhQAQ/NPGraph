public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer
{
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row;
    private int highestRow;
    private java.lang.Boolean isNestedTable;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes borderAttributes;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tableContext;
    private int nestedTableDepth;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs;

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer, java.io.Writer, org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer parent;
        java.io.Writer w;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer;
        w := @parameter1: java.io.Writer;
        tc := @parameter2: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        $r0 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer) parent;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>($r0, w);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.lang.Boolean isNestedTable> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes borderAttributes> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int nestedTableDepth> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tableContext> = tc;
        return;
    }

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer, java.io.Writer, org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes, org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer parent;
        java.io.Writer w;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer;
        w := @parameter1: java.io.Writer;
        attrs := @parameter2: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        tc := @parameter3: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        $r0 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer) parent;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r0, w, attrs);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.lang.Boolean isNestedTable> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes borderAttributes> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int nestedTableDepth> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs> = null;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tableContext> = tc;
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow newTableRow() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r0, $r2;
        int $i0, $i1;
        java.io.Writer $r3;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r4;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void close()>();

     label0:
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow>;
        $i0 = $i0 + 1;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow> = $i0;
        $r2 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.io.Writer writer>;
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $i1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow>;
        specialinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,int)>(this, $r3, $r4, $i1);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row> = $r2;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow newTableRow(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs, $r0, attr;
        null_type attr;
        java.lang.Object $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r2, $r4;
        int $i0, $i1;
        java.io.Writer $r5;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        attr = null;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r1 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Object clone()>();
        attr = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) $r1;
        virtualinvoke attr.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(attrs);
        goto label1;

     label0:
        attr = attrs;

     label1:
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row>;
        if $r2 == null goto label2;

        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row>;
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void close()>();

     label2:
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow>;
        $i0 = $i0 + 1;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow> = $i0;
        $r4 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        $r5 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.io.Writer writer>;
        $i1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow>;
        specialinvoke $r4.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,int)>(this, $r5, attr, $i1);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row> = $r4;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row>;
        return $r2;
    }

    protected void writeRtfPrefix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: boolean isNestedTable()>();
        if $z0 == 0 goto label0;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void writeControlWordNS(java.lang.String)>("pard");

     label0:
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void writeGroupMark(boolean)>(1);
        return;
    }

    protected void writeRtfSuffix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void writeGroupMark(boolean)>(0);
        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: boolean isNestedTable()>();
        if $z0 == 0 goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow getRow()>();
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: void writeRowAndCellsDefintions()>();

     label0:
        return;
    }

    public boolean isHighestRow(int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        int id, $i0;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        id := @parameter0: int;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int highestRow>;
        if $i0 != id goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo getITableColumnsInfo()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tableContext>;
        return $r0;
    }

    public void setHeaderAttribs(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs> = attrs;
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getHeaderAttribs()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes headerAttribs>;
        return $r0;

     label0:
        $r0 = specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        return $r0;
    }

    public boolean isNestedTable()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer e, $r2;
        java.lang.Boolean $r0, $r1;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.lang.Boolean isNestedTable>;
        if $r1 != null goto label3;

        e = this;

     label0:
        $r2 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        if $r2 == null goto label2;

        $r2 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        $z0 = $r2 instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        if $z0 == 0 goto label1;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.lang.Boolean isNestedTable> = $r0;
        return 1;

     label1:
        e = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        goto label0;

     label2:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.lang.Boolean isNestedTable> = $r0;
        goto label4;

     label3:
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: java.lang.Boolean isNestedTable>;
        $z0 = virtualinvoke $r1.<java.lang.Boolean: boolean booleanValue()>();
        return $z0;

     label4:
        return 0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow getRow()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer e, $r0;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        e = this;

     label0:
        $r0 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        if $r0 == null goto label2;

        $r0 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        $z0 = $r0 instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        if $z0 == 0 goto label1;

        $r0 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        $r1 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow) $r0;
        return $r1;

     label1:
        e = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        goto label0;

     label2:
        return null;
    }

    public void setNestedTableDepth(int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        int nestedTableDepth;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        nestedTableDepth := @parameter0: int;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int nestedTableDepth> = nestedTableDepth;
        return;
    }

    public int getNestedTableDepth()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: int nestedTableDepth>;
        return $i0;
    }

    public void setBorderAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attributes;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        attributes := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes borderAttributes> = attributes;
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getBorderAttributes()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes borderAttributes>;
        return $r0;
    }
}

public class org.apache.fop.fo.flow.table.EffRow extends java.lang.Object
{
    public static final int FIRST_IN_PART;
    public static final int LAST_IN_PART;
    private java.util.List gridUnits;
    private int index;
    private int bodyType;
    private org.apache.fop.traits.MinOptMax height;
    private org.apache.fop.traits.MinOptMax explicitHeight;

    public void <init>(int, int, java.util.List)
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int index, bodyType;
        java.util.List gridUnits;
        java.util.ArrayList $r0;
        java.util.Iterator guIter;
        java.lang.Object gu;
        boolean $z0;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r1;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        index := @parameter0: int;
        bodyType := @parameter1: int;
        gridUnits := @parameter2: java.util.List;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits> = $r0;
        this.<org.apache.fop.fo.flow.table.EffRow: int index> = index;
        this.<org.apache.fop.fo.flow.table.EffRow: int bodyType> = bodyType;
        this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits> = gridUnits;
        guIter = interfaceinvoke gridUnits.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke guIter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        gu = interfaceinvoke guIter.<java.util.Iterator: java.lang.Object next()>();
        $z0 = gu instanceof org.apache.fop.fo.flow.table.PrimaryGridUnit;
        if $z0 == 0 goto label1;

        $r1 = (org.apache.fop.fo.flow.table.PrimaryGridUnit) gu;
        virtualinvoke $r1.<org.apache.fop.fo.flow.table.PrimaryGridUnit: void setRowIndex(int)>(index);

     label1:
        goto label0;

     label2:
        return;
    }

    public int getIndex()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $i0 = this.<org.apache.fop.fo.flow.table.EffRow: int index>;
        return $i0;
    }

    public int getBodyType()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $i0 = this.<org.apache.fop.fo.flow.table.EffRow: int bodyType>;
        return $i0;
    }

    public org.apache.fop.fo.flow.table.TableRow getTableRow()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        org.apache.fop.fo.flow.table.GridUnit $r0;
        org.apache.fop.fo.flow.table.TableRow $r1;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $r0 = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.fo.flow.table.GridUnit getGridUnit(int)>(0);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.flow.table.GridUnit: org.apache.fop.fo.flow.table.TableRow getRow()>();
        return $r1;
    }

    public org.apache.fop.traits.MinOptMax getHeight()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax height>;
        return $r0;
    }

    public void setHeight(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.fo.flow.table.EffRow this;
        org.apache.fop.traits.MinOptMax mom;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        mom := @parameter0: org.apache.fop.traits.MinOptMax;
        this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax height> = mom;
        return;
    }

    public org.apache.fop.traits.MinOptMax getExplicitHeight()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax explicitHeight>;
        return $r0;
    }

    public void setExplicitHeight(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.fo.flow.table.EffRow this;
        org.apache.fop.traits.MinOptMax mom;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        mom := @parameter0: org.apache.fop.traits.MinOptMax;
        this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax explicitHeight> = mom;
        return;
    }

    public java.util.List getGridUnits()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        java.util.List $r0;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        return $r0;
    }

    public org.apache.fop.fo.flow.table.GridUnit getGridUnit(int)
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int column;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.fo.flow.table.GridUnit $r2;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        column := @parameter0: int;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        $r1 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(column);
        $r2 = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        return $r2;
    }

    public org.apache.fop.fo.flow.table.GridUnit safelyGetGridUnit(int)
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int column, $i0;
        java.util.List $r0, $r1;
        java.lang.Object $r2;
        org.apache.fop.fo.flow.table.GridUnit $r3;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        column := @parameter0: int;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();
        if column >= $i0 goto label0;

        $r1 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(column);
        $r3 = (org.apache.fop.fo.flow.table.GridUnit) $r2;
        return $r3;

     label0:
        return null;
    }

    public boolean getFlag(int)
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int which;
        java.lang.StringBuffer $r0;
        org.apache.fop.fo.flow.table.GridUnit $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        which := @parameter0: int;
        if which != 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.fo.flow.table.GridUnit getGridUnit(int)>(0);
        $z0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.GridUnit: boolean getFlag(int)>(0);
        return $z0;

     label0:
        if which != 1 goto label1;

        $r1 = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.fo.flow.table.GridUnit getGridUnit(int)>(0);
        $z0 = virtualinvoke $r1.<org.apache.fop.fo.flow.table.GridUnit: boolean getFlag(int)>(1);
        return $z0;

     label1:
        $r2 = new java.lang.IllegalArgumentException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal flag queried: ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(which);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);
        throw $r2;
    }

    public boolean mustKeepWithPrevious()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        boolean keepWithPrevious, $z0, $z1;
        org.apache.fop.fo.flow.table.TableRow row;
        java.util.Iterator iter;
        org.apache.fop.fo.flow.table.GridUnit gu;
        java.util.List $r0;
        java.lang.Object $r1;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r2;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        keepWithPrevious = 0;
        row = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.fo.flow.table.TableRow getTableRow()>();
        if row == null goto label0;

        keepWithPrevious = virtualinvoke row.<org.apache.fop.fo.flow.table.TableRow: boolean mustKeepWithPrevious()>();

     label0:
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isPrimary()>();
        if $z0 == 0 goto label2;

        $r2 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: org.apache.fop.fo.flow.table.PrimaryGridUnit getPrimary()>();
        $z1 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.PrimaryGridUnit: boolean mustKeepWithPrevious()>();
        keepWithPrevious = keepWithPrevious | $z1;

     label2:
        goto label1;

     label3:
        return keepWithPrevious;
    }

    public boolean mustKeepWithNext()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        boolean keepWithNext, $z0, $z1;
        org.apache.fop.fo.flow.table.TableRow row;
        java.util.Iterator iter;
        org.apache.fop.fo.flow.table.GridUnit gu;
        java.util.List $r0;
        java.lang.Object $r1;
        int $i0;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r2;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        keepWithNext = 0;
        row = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.fo.flow.table.TableRow getTableRow()>();
        if row == null goto label0;

        keepWithNext = virtualinvoke row.<org.apache.fop.fo.flow.table.TableRow: boolean mustKeepWithNext()>();

     label0:
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label3;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isEmpty()>();
        if $z0 != 0 goto label2;

        $i0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: int getColSpanIndex()>();
        if $i0 != 0 goto label2;

        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isLastGridUnitRowSpan()>();
        if $z0 == 0 goto label2;

        $r2 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: org.apache.fop.fo.flow.table.PrimaryGridUnit getPrimary()>();
        $z1 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.PrimaryGridUnit: boolean mustKeepWithNext()>();
        keepWithNext = keepWithNext | $z1;

     label2:
        goto label1;

     label3:
        return keepWithNext;
    }

    public boolean mustKeepTogether()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        org.apache.fop.fo.flow.table.TableRow row;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        row = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.fo.flow.table.TableRow getTableRow()>();
        if row == null goto label0;

        $z0 = virtualinvoke row.<org.apache.fop.fo.flow.table.TableRow: boolean mustKeepTogether()>();
        if $z0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public int getBreakBefore()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int breakBefore, $i0;
        java.util.Iterator iter;
        org.apache.fop.fo.flow.table.GridUnit gu;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r2;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        breakBefore = 9;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isPrimary()>();
        if $z0 == 0 goto label1;

        $r2 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: org.apache.fop.fo.flow.table.PrimaryGridUnit getPrimary()>();
        $i0 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getBreakBefore()>();
        breakBefore = staticinvoke <org.apache.fop.util.BreakUtil: int compareBreakClasses(int,int)>(breakBefore, $i0);

     label1:
        goto label0;

     label2:
        return breakBefore;
    }

    public int getBreakAfter()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        int breakAfter, $i0, $i1;
        java.util.Iterator iter;
        org.apache.fop.fo.flow.table.GridUnit gu;
        java.util.List $r0;
        boolean $z0;
        java.lang.Object $r1;
        org.apache.fop.fo.flow.table.PrimaryGridUnit $r2;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        breakAfter = 9;
        $r0 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        iter = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        gu = (org.apache.fop.fo.flow.table.GridUnit) $r1;
        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        $i0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: int getColSpanIndex()>();
        if $i0 != 0 goto label1;

        $z0 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: boolean isLastGridUnitRowSpan()>();
        if $z0 == 0 goto label1;

        $r2 = virtualinvoke gu.<org.apache.fop.fo.flow.table.GridUnit: org.apache.fop.fo.flow.table.PrimaryGridUnit getPrimary()>();
        $i1 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.PrimaryGridUnit: int getBreakAfter()>();
        breakAfter = staticinvoke <org.apache.fop.util.BreakUtil: int compareBreakClasses(int,int)>(breakAfter, $i1);

     label1:
        goto label0;

     label2:
        return breakAfter;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.flow.table.EffRow this;
        java.lang.StringBuffer $r0, sb;
        int $i0, $i1;
        org.apache.fop.traits.MinOptMax $r1;
        java.util.List $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.fo.flow.table.EffRow;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("EffRow {");
        sb = $r0;
        $i0 = this.<org.apache.fop.fo.flow.table.EffRow: int index>;
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $i1 = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: int getBodyType()>();
        if $i1 != 0 goto label0;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in body");
        goto label2;

     label0:
        $i1 = virtualinvoke this.<org.apache.fop.fo.flow.table.EffRow: int getBodyType()>();
        if $i1 != 1 goto label1;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in header");
        goto label2;

     label1:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in footer");

     label2:
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");
        $r1 = this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax height>;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");
        $r1 = this.<org.apache.fop.fo.flow.table.EffRow: org.apache.fop.traits.MinOptMax explicitHeight>;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");
        $r2 = this.<org.apache.fop.fo.flow.table.EffRow: java.util.List gridUnits>;
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" gu");
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");
        $r3 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }
}

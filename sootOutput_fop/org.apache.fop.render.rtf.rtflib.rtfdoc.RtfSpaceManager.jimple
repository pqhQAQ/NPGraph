public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager extends java.lang.Object
{
    private java.util.LinkedList blockAttributes;
    private java.util.LinkedList inlineAttributes;
    private int accumulatedSpace;

    public void <init>()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList blockAttributes> = $r0;
        $r0 = new java.util.LinkedList;
        specialinvoke $r0.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList inlineAttributes> = $r0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: int accumulatedSpace> = 0;
        return;
    }

    public void stopUpdatingSpaceBefore()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter splitter;
        java.util.LinkedList $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList blockAttributes>;
        it = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        splitter = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter) $r1;
        $z0 = virtualinvoke splitter.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: boolean isBeforeCadidateSet()>();
        if $z0 == 0 goto label1;

        virtualinvoke splitter.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: void stopUpdatingSpaceBefore()>();

     label1:
        goto label0;

     label2:
        return;
    }

    public void setCandidate(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter splitter;
        java.util.LinkedList $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList blockAttributes>;
        it = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        splitter = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter) $r1;
        virtualinvoke splitter.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: void setSpaceBeforeCandidate(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(attrs);
        virtualinvoke splitter.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: void setSpaceAfterCandidate(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(attrs);
        goto label0;

     label1:
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter pushRtfSpaceSplitter(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter $r0, splitter;
        int $i0;
        java.util.LinkedList $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: int accumulatedSpace>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,int)>(attrs, $i0);
        splitter = $r0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: int accumulatedSpace> = 0;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList blockAttributes>;
        virtualinvoke $r1.<java.util.LinkedList: void addLast(java.lang.Object)>(splitter);
        return splitter;
    }

    public void popRtfSpaceSplitter()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter splitter;
        java.util.LinkedList $r0;
        boolean $z0;
        java.lang.Object $r1;
        int $i0, $i1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList blockAttributes>;
        $z0 = virtualinvoke $r0.<java.util.LinkedList: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList blockAttributes>;
        $r1 = virtualinvoke $r0.<java.util.LinkedList: java.lang.Object removeLast()>();
        splitter = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter) $r1;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: int accumulatedSpace>;
        $i1 = virtualinvoke splitter.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceSplitter: int flush()>();
        $i0 = $i0 + $i1;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: int accumulatedSpace> = $i0;

     label0:
        return;
    }

    public void pushInlineAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList inlineAttributes>;
        virtualinvoke $r0.<java.util.LinkedList: void addLast(java.lang.Object)>(attrs);
        return;
    }

    public void popInlineAttributes()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        java.util.LinkedList $r0;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList inlineAttributes>;
        $z0 = virtualinvoke $r0.<java.util.LinkedList: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList inlineAttributes>;
        virtualinvoke $r0.<java.util.LinkedList: java.lang.Object removeLast()>();

     label0:
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getLastInlineAttribute()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager this;
        java.util.LinkedList $r0;
        java.lang.Object $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r2;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSpaceManager: java.util.LinkedList inlineAttributes>;
        $r1 = virtualinvoke $r0.<java.util.LinkedList: java.lang.Object getLast()>();
        $r2 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) $r1;
        return $r2;
    }
}

public abstract class org.apache.fop.render.afp.exceptions.NestedRuntimeException extends java.lang.RuntimeException
{
    private java.lang.Throwable underlyingException;

    public void <init>(java.lang.String)
    {
        org.apache.fop.render.afp.exceptions.NestedRuntimeException this;
        java.lang.String msg;

        this := @this: org.apache.fop.render.afp.exceptions.NestedRuntimeException;
        msg := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg);
        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.apache.fop.render.afp.exceptions.NestedRuntimeException this;
        java.lang.String msg;
        java.lang.Throwable t;

        this := @this: org.apache.fop.render.afp.exceptions.NestedRuntimeException;
        msg := @parameter0: java.lang.String;
        t := @parameter1: java.lang.Throwable;
        specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg);
        this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException> = t;
        return;
    }

    public java.lang.Throwable getUnderlyingException()
    {
        org.apache.fop.render.afp.exceptions.NestedRuntimeException this;
        java.lang.Throwable $r0;

        this := @this: org.apache.fop.render.afp.exceptions.NestedRuntimeException;
        $r0 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        return $r0;
    }

    public java.lang.String getMessage()
    {
        org.apache.fop.render.afp.exceptions.NestedRuntimeException this;
        java.lang.Throwable $r0, $r4;
        java.lang.String $r1, $r3;
        java.lang.StringBuffer $r2;
        java.lang.Class $r5;

        this := @this: org.apache.fop.render.afp.exceptions.NestedRuntimeException;
        $r0 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        if $r0 != null goto label0;

        $r1 = specialinvoke this.<java.lang.RuntimeException: java.lang.String getMessage()>();
        return $r1;

     label0:
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r3 = specialinvoke this.<java.lang.RuntimeException: java.lang.String getMessage()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; nested exception is ");
        $r4 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        org.apache.fop.render.afp.exceptions.NestedRuntimeException this;
        java.io.PrintStream ps;
        java.lang.Throwable $r0;

        this := @this: org.apache.fop.render.afp.exceptions.NestedRuntimeException;
        ps := @parameter0: java.io.PrintStream;
        $r0 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        if $r0 != null goto label0;

        specialinvoke this.<java.lang.RuntimeException: void printStackTrace(java.io.PrintStream)>(ps);
        goto label1;

     label0:
        virtualinvoke ps.<java.io.PrintStream: void println(java.lang.Object)>(this);
        $r0 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(ps);

     label1:
        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        org.apache.fop.render.afp.exceptions.NestedRuntimeException this;
        java.io.PrintWriter pw;
        java.lang.Throwable $r0;

        this := @this: org.apache.fop.render.afp.exceptions.NestedRuntimeException;
        pw := @parameter0: java.io.PrintWriter;
        $r0 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        if $r0 != null goto label0;

        specialinvoke this.<java.lang.RuntimeException: void printStackTrace(java.io.PrintWriter)>(pw);
        goto label1;

     label0:
        virtualinvoke pw.<java.io.PrintWriter: void println(java.lang.Object)>(this);
        $r0 = this.<org.apache.fop.render.afp.exceptions.NestedRuntimeException: java.lang.Throwable underlyingException>;
        virtualinvoke $r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(pw);

     label1:
        return;
    }
}

public class org.apache.fop.pdf.PDFState$Data extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    public java.awt.Color color;
    public java.awt.Color backcolor;
    public java.awt.Paint paint;
    public java.awt.Paint backPaint;
    public int lineCap;
    public int lineJoin;
    public float lineWidth;
    public float miterLimit;
    public boolean text;
    public int dashOffset;
    public int[] dashArray;
    public java.awt.geom.AffineTransform transform;
    public float fontSize;
    public java.lang.String fontName;
    public java.awt.Shape clip;
    public org.apache.fop.pdf.PDFGState gstate;
    private final org.apache.fop.pdf.PDFState this$0;

    public void <init>(org.apache.fop.pdf.PDFState)
    {
        org.apache.fop.pdf.PDFState$Data this;
        org.apache.fop.pdf.PDFState this$0;
        java.awt.Color $r0;
        int[] $r1;
        java.awt.geom.AffineTransform $r2;

        this := @this: org.apache.fop.pdf.PDFState$Data;
        this$0 := @parameter0: org.apache.fop.pdf.PDFState;
        this.<org.apache.fop.pdf.PDFState$Data: org.apache.fop.pdf.PDFState this$0> = this$0;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = <java.awt.Color: java.awt.Color black>;
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.Color color> = $r0;
        $r0 = <java.awt.Color: java.awt.Color black>;
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.Color backcolor> = $r0;
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.Paint paint> = null;
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.Paint backPaint> = null;
        this.<org.apache.fop.pdf.PDFState$Data: int lineCap> = 0;
        this.<org.apache.fop.pdf.PDFState$Data: int lineJoin> = 0;
        this.<org.apache.fop.pdf.PDFState$Data: float lineWidth> = 1.0F;
        this.<org.apache.fop.pdf.PDFState$Data: float miterLimit> = 0.0F;
        this.<org.apache.fop.pdf.PDFState$Data: boolean text> = 0;
        this.<org.apache.fop.pdf.PDFState$Data: int dashOffset> = 0;
        $r1 = newarray (int)[0];
        this.<org.apache.fop.pdf.PDFState$Data: int[] dashArray> = $r1;
        $r2 = new java.awt.geom.AffineTransform;
        specialinvoke $r2.<java.awt.geom.AffineTransform: void <init>()>();
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform> = $r2;
        this.<org.apache.fop.pdf.PDFState$Data: float fontSize> = 0.0F;
        this.<org.apache.fop.pdf.PDFState$Data: java.lang.String fontName> = "";
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.Shape clip> = null;
        this.<org.apache.fop.pdf.PDFState$Data: org.apache.fop.pdf.PDFGState gstate> = null;
        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.fop.pdf.PDFState$Data this, $r0, obj;
        org.apache.fop.pdf.PDFState $r1;
        java.awt.Color $r2;
        java.awt.Paint $r3;
        int $i0;
        float $f0;
        boolean $z0;
        int[] $r4;
        java.awt.geom.AffineTransform $r5, $r6;
        java.lang.String $r7;
        java.awt.Shape $r8;
        org.apache.fop.pdf.PDFGState $r9;

        this := @this: org.apache.fop.pdf.PDFState$Data;
        $r0 = new org.apache.fop.pdf.PDFState$Data;
        $r1 = this.<org.apache.fop.pdf.PDFState$Data: org.apache.fop.pdf.PDFState this$0>;
        specialinvoke $r0.<org.apache.fop.pdf.PDFState$Data: void <init>(org.apache.fop.pdf.PDFState)>($r1);
        obj = $r0;
        $r2 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.Color color>;
        obj.<org.apache.fop.pdf.PDFState$Data: java.awt.Color color> = $r2;
        $r2 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.Color backcolor>;
        obj.<org.apache.fop.pdf.PDFState$Data: java.awt.Color backcolor> = $r2;
        $r3 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.Paint paint>;
        obj.<org.apache.fop.pdf.PDFState$Data: java.awt.Paint paint> = $r3;
        $r3 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.Paint paint>;
        obj.<org.apache.fop.pdf.PDFState$Data: java.awt.Paint backPaint> = $r3;
        $i0 = this.<org.apache.fop.pdf.PDFState$Data: int lineCap>;
        obj.<org.apache.fop.pdf.PDFState$Data: int lineCap> = $i0;
        $i0 = this.<org.apache.fop.pdf.PDFState$Data: int lineJoin>;
        obj.<org.apache.fop.pdf.PDFState$Data: int lineJoin> = $i0;
        $f0 = this.<org.apache.fop.pdf.PDFState$Data: float lineWidth>;
        obj.<org.apache.fop.pdf.PDFState$Data: float lineWidth> = $f0;
        $f0 = this.<org.apache.fop.pdf.PDFState$Data: float miterLimit>;
        obj.<org.apache.fop.pdf.PDFState$Data: float miterLimit> = $f0;
        $z0 = this.<org.apache.fop.pdf.PDFState$Data: boolean text>;
        obj.<org.apache.fop.pdf.PDFState$Data: boolean text> = $z0;
        $i0 = this.<org.apache.fop.pdf.PDFState$Data: int dashOffset>;
        obj.<org.apache.fop.pdf.PDFState$Data: int dashOffset> = $i0;
        $r4 = this.<org.apache.fop.pdf.PDFState$Data: int[] dashArray>;
        obj.<org.apache.fop.pdf.PDFState$Data: int[] dashArray> = $r4;
        $r5 = new java.awt.geom.AffineTransform;
        $r6 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform>;
        specialinvoke $r5.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r6);
        obj.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform> = $r5;
        $f0 = this.<org.apache.fop.pdf.PDFState$Data: float fontSize>;
        obj.<org.apache.fop.pdf.PDFState$Data: float fontSize> = $f0;
        $r7 = this.<org.apache.fop.pdf.PDFState$Data: java.lang.String fontName>;
        obj.<org.apache.fop.pdf.PDFState$Data: java.lang.String fontName> = $r7;
        $r8 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.Shape clip>;
        obj.<org.apache.fop.pdf.PDFState$Data: java.awt.Shape clip> = $r8;
        $r9 = this.<org.apache.fop.pdf.PDFState$Data: org.apache.fop.pdf.PDFGState gstate>;
        obj.<org.apache.fop.pdf.PDFState$Data: org.apache.fop.pdf.PDFGState gstate> = $r9;
        return obj;
    }

    public java.awt.geom.AffineTransform getTransform()
    {
        org.apache.fop.pdf.PDFState$Data this;
        java.awt.geom.AffineTransform $r0;

        this := @this: org.apache.fop.pdf.PDFState$Data;
        $r0 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform>;
        return $r0;
    }

    public void resetTransform()
    {
        org.apache.fop.pdf.PDFState$Data this;
        java.awt.geom.AffineTransform $r0;

        this := @this: org.apache.fop.pdf.PDFState$Data;
        $r0 = new java.awt.geom.AffineTransform;
        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>()>();
        this.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform> = $r0;
        return;
    }

    public void concatenate(java.awt.geom.AffineTransform)
    {
        org.apache.fop.pdf.PDFState$Data this;
        java.awt.geom.AffineTransform at, $r0;

        this := @this: org.apache.fop.pdf.PDFState$Data;
        at := @parameter0: java.awt.geom.AffineTransform;
        $r0 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform>;
        virtualinvoke $r0.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>(at);
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.pdf.PDFState$Data this;
        java.lang.StringBuffer $r0;
        java.lang.String $r1, $r3;
        java.awt.geom.AffineTransform $r2;

        this := @this: org.apache.fop.pdf.PDFState$Data;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r1 = specialinvoke this.<java.lang.Object: java.lang.String toString()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");
        $r2 = this.<org.apache.fop.pdf.PDFState$Data: java.awt.geom.AffineTransform transform>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r3;
    }
}

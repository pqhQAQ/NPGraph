public class org.apache.fop.render.ps.ResourceHandler extends java.lang.Object implements org.apache.xmlgraphics.ps.dsc.DSCParserConstants, org.apache.fop.render.ps.PSSupportedFlavors
{

    public void <init>()
    {
        org.apache.fop.render.ps.ResourceHandler this;

        this := @this: org.apache.fop.render.ps.ResourceHandler;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void process(org.apache.fop.apps.FOUserAgent, java.io.InputStream, java.io.OutputStream, org.apache.fop.fonts.FontInfo, org.apache.xmlgraphics.ps.dsc.ResourceTracker, java.util.Map, int, java.awt.geom.Rectangle2D) throws org.apache.xmlgraphics.ps.dsc.DSCException, java.io.IOException
    {
        org.apache.fop.apps.FOUserAgent userAgent;
        java.io.InputStream in;
        java.io.OutputStream out;
        org.apache.fop.fonts.FontInfo fontInfo;
        org.apache.xmlgraphics.ps.dsc.ResourceTracker resTracker;
        java.util.Map formResources, $r7;
        int pageCount, $i0;
        java.awt.geom.Rectangle2D documentBoundingBox;
        org.apache.xmlgraphics.ps.dsc.DSCParser $r0, parser;
        org.apache.xmlgraphics.ps.PSGenerator gen, $r1;
        org.apache.xmlgraphics.ps.dsc.events.DSCHeaderComment header;
        org.apache.xmlgraphics.ps.dsc.events.DSCEvent event;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentPages pages, $r4;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentSuppliedResources supplied, $r9;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentNeededResources needed, $r11;
        org.apache.xmlgraphics.ps.dsc.events.DSCComment comment, pageOrTrailer;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentLanguageLevel level;
        org.apache.xmlgraphics.ps.dsc.events.PostScriptComment fontSetupPlaceholder;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentPage page;
        org.apache.xmlgraphics.ps.dsc.DefaultNestedDocumentHandler $r2;
        org.apache.fop.render.ps.ResourceHandler$1 $r3;
        boolean $z0;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentBoundingBox $r5;
        org.apache.xmlgraphics.ps.dsc.events.DSCCommentHiResBoundingBox $r6;
        java.util.Set $r10;
        java.lang.String $r12, $r13;
        org.apache.xmlgraphics.ps.dsc.DSCException $r14;

        userAgent := @parameter0: org.apache.fop.apps.FOUserAgent;
        in := @parameter1: java.io.InputStream;
        out := @parameter2: java.io.OutputStream;
        fontInfo := @parameter3: org.apache.fop.fonts.FontInfo;
        resTracker := @parameter4: org.apache.xmlgraphics.ps.dsc.ResourceTracker;
        formResources := @parameter5: java.util.Map;
        pageCount := @parameter6: int;
        documentBoundingBox := @parameter7: java.awt.geom.Rectangle2D;
        $r0 = new org.apache.xmlgraphics.ps.dsc.DSCParser;
        specialinvoke $r0.<org.apache.xmlgraphics.ps.dsc.DSCParser: void <init>(java.io.InputStream)>(in);
        parser = $r0;
        $r1 = new org.apache.xmlgraphics.ps.PSGenerator;
        specialinvoke $r1.<org.apache.xmlgraphics.ps.PSGenerator: void <init>(java.io.OutputStream)>(out);
        gen = $r1;
        $r2 = new org.apache.xmlgraphics.ps.dsc.DefaultNestedDocumentHandler;
        specialinvoke $r2.<org.apache.xmlgraphics.ps.dsc.DefaultNestedDocumentHandler: void <init>(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: void setNestedDocumentHandler(org.apache.xmlgraphics.ps.dsc.NestedDocumentHandler)>($r2);
        header = staticinvoke <org.apache.xmlgraphics.ps.dsc.tools.DSCTools: org.apache.xmlgraphics.ps.dsc.events.DSCHeaderComment checkAndSkipDSC30Header(org.apache.xmlgraphics.ps.dsc.DSCParser)>(parser);
        virtualinvoke header.<org.apache.xmlgraphics.ps.dsc.events.DSCHeaderComment: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        $r3 = new org.apache.fop.render.ps.ResourceHandler$1;
        specialinvoke $r3.<org.apache.fop.render.ps.ResourceHandler$1: void <init>()>();
        virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: void setFilter(org.apache.xmlgraphics.ps.dsc.DSCFilter)>($r3);

     label0:
        event = virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: org.apache.xmlgraphics.ps.dsc.events.DSCEvent nextEvent()>();
        if event != null goto label1;

        staticinvoke <org.apache.fop.render.ps.ResourceHandler: void reportInvalidDSC()>();

     label1:
        $z0 = staticinvoke <org.apache.xmlgraphics.ps.dsc.tools.DSCTools: boolean headerCommentsEndHere(org.apache.xmlgraphics.ps.dsc.events.DSCEvent)>(event);
        if $z0 == 0 goto label2;

        $r4 = new org.apache.xmlgraphics.ps.dsc.events.DSCCommentPages;
        specialinvoke $r4.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentPages: void <init>(int)>(pageCount);
        pages = $r4;
        virtualinvoke pages.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentPages: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        $r5 = new org.apache.xmlgraphics.ps.dsc.events.DSCCommentBoundingBox;
        specialinvoke $r5.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentBoundingBox: void <init>(java.awt.geom.Rectangle2D)>(documentBoundingBox);
        virtualinvoke $r5.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentBoundingBox: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        $r6 = new org.apache.xmlgraphics.ps.dsc.events.DSCCommentHiResBoundingBox;
        specialinvoke $r6.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentHiResBoundingBox: void <init>(java.awt.geom.Rectangle2D)>(documentBoundingBox);
        virtualinvoke $r6.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentHiResBoundingBox: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        $r7 = virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: java.util.Map getUsedFonts()>();
        staticinvoke <org.apache.fop.render.ps.PSFontUtils: java.util.Map determineSuppliedFonts(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.fonts.FontInfo,java.util.Map)>(resTracker, fontInfo, $r7);
        staticinvoke <org.apache.fop.render.ps.ResourceHandler: void registerSuppliedForms(org.apache.xmlgraphics.ps.dsc.ResourceTracker,java.util.Map)>(resTracker, formResources);
        $r9 = new org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentSuppliedResources;
        $r10 = virtualinvoke resTracker.<org.apache.xmlgraphics.ps.dsc.ResourceTracker: java.util.Set getDocumentSuppliedResources()>();
        specialinvoke $r9.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentSuppliedResources: void <init>(java.util.Collection)>($r10);
        supplied = $r9;
        virtualinvoke supplied.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentSuppliedResources: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        $r11 = new org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentNeededResources;
        $r10 = virtualinvoke resTracker.<org.apache.xmlgraphics.ps.dsc.ResourceTracker: java.util.Set getDocumentNeededResources()>();
        specialinvoke $r11.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentNeededResources: void <init>(java.util.Collection)>($r10);
        needed = $r11;
        virtualinvoke needed.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentDocumentNeededResources: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        interfaceinvoke event.<org.apache.xmlgraphics.ps.dsc.events.DSCEvent: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label4;

     label2:
        $z0 = interfaceinvoke event.<org.apache.xmlgraphics.ps.dsc.events.DSCEvent: boolean isDSCComment()>();
        if $z0 == 0 goto label3;

        comment = interfaceinvoke event.<org.apache.xmlgraphics.ps.dsc.events.DSCEvent: org.apache.xmlgraphics.ps.dsc.events.DSCComment asDSCComment()>();
        $r12 = "LanguageLevel";
        $r13 = interfaceinvoke comment.<org.apache.xmlgraphics.ps.dsc.events.DSCComment: java.lang.String getName()>();
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);
        if $z0 == 0 goto label3;

        level = (org.apache.xmlgraphics.ps.dsc.events.DSCCommentLanguageLevel) comment;
        $i0 = virtualinvoke level.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentLanguageLevel: int getLanguageLevel()>();
        virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: void setPSLevel(int)>($i0);

     label3:
        interfaceinvoke event.<org.apache.xmlgraphics.ps.dsc.events.DSCEvent: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label0;

     label4:
        fontSetupPlaceholder = virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: org.apache.xmlgraphics.ps.dsc.events.PostScriptComment nextPSComment(java.lang.String,org.apache.xmlgraphics.ps.PSGenerator)>("FOPFontSetup", gen);
        if fontSetupPlaceholder != null goto label5;

        $r14 = new org.apache.xmlgraphics.ps.dsc.DSCException;
        specialinvoke $r14.<org.apache.xmlgraphics.ps.dsc.DSCException: void <init>(java.lang.String)>("Didn\'t find %FOPFontSetup comment in stream");
        throw $r14;

     label5:
        $r7 = virtualinvoke fontInfo.<org.apache.fop.fonts.FontInfo: java.util.Map getUsedFonts()>();
        staticinvoke <org.apache.fop.render.ps.PSFontUtils: java.util.Map writeFontDict(org.apache.xmlgraphics.ps.PSGenerator,org.apache.fop.fonts.FontInfo,java.util.Map)>(gen, fontInfo, $r7);
        staticinvoke <org.apache.fop.render.ps.ResourceHandler: void generateForms(org.apache.xmlgraphics.ps.dsc.ResourceTracker,org.apache.fop.apps.FOUserAgent,java.util.Map,org.apache.xmlgraphics.ps.PSGenerator)>(resTracker, userAgent, formResources, gen);
        pageOrTrailer = virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: org.apache.xmlgraphics.ps.dsc.events.DSCComment nextDSCComment(java.lang.String,org.apache.xmlgraphics.ps.PSGenerator)>("Page", gen);
        if pageOrTrailer != null goto label6;

        $r14 = new org.apache.xmlgraphics.ps.dsc.DSCException;
        specialinvoke $r14.<org.apache.xmlgraphics.ps.dsc.DSCException: void <init>(java.lang.String)>("Page expected, but none found");
        throw $r14;

     label6:
        page = (org.apache.xmlgraphics.ps.dsc.events.DSCCommentPage) pageOrTrailer;
        virtualinvoke page.<org.apache.xmlgraphics.ps.dsc.events.DSCCommentPage: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        pageOrTrailer = staticinvoke <org.apache.xmlgraphics.ps.dsc.tools.DSCTools: org.apache.xmlgraphics.ps.dsc.events.DSCComment nextPageOrTrailer(org.apache.xmlgraphics.ps.dsc.DSCParser,org.apache.xmlgraphics.ps.PSGenerator)>(parser, gen);
        if pageOrTrailer != null goto label7;

        staticinvoke <org.apache.fop.render.ps.ResourceHandler: void reportInvalidDSC()>();
        goto label8;

     label7:
        $r12 = "Page";
        $r13 = interfaceinvoke pageOrTrailer.<org.apache.xmlgraphics.ps.dsc.events.DSCComment: java.lang.String getName()>();
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);
        if $z0 != 0 goto label8;

        interfaceinvoke pageOrTrailer.<org.apache.xmlgraphics.ps.dsc.events.DSCComment: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label9;

     label8:
        goto label6;

     label9:
        $z0 = virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: boolean hasNext()>();
        if $z0 == 0 goto label10;

        event = virtualinvoke parser.<org.apache.xmlgraphics.ps.dsc.DSCParser: org.apache.xmlgraphics.ps.dsc.events.DSCEvent nextEvent()>();
        interfaceinvoke event.<org.apache.xmlgraphics.ps.dsc.events.DSCEvent: void generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label9;

     label10:
        return;
    }

    private static void reportInvalidDSC() throws org.apache.xmlgraphics.ps.dsc.DSCException
    {
        org.apache.xmlgraphics.ps.dsc.DSCException $r0;

        $r0 = new org.apache.xmlgraphics.ps.dsc.DSCException;
        specialinvoke $r0.<org.apache.xmlgraphics.ps.dsc.DSCException: void <init>(java.lang.String)>("File is not DSC-compliant: Unexpected end of file");
        throw $r0;
    }

    private static void registerSuppliedForms(org.apache.xmlgraphics.ps.dsc.ResourceTracker, java.util.Map) throws java.io.IOException
    {
        org.apache.xmlgraphics.ps.dsc.ResourceTracker resTracker;
        java.util.Map formResources;
        java.util.Iterator iter;
        org.apache.fop.render.ps.PSImageFormResource form;
        java.util.Collection $r0;
        boolean $z0;
        java.lang.Object $r1;

        resTracker := @parameter0: org.apache.xmlgraphics.ps.dsc.ResourceTracker;
        formResources := @parameter1: java.util.Map;
        if formResources != null goto label0;

        return;

     label0:
        $r0 = interfaceinvoke formResources.<java.util.Map: java.util.Collection values()>();
        iter = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        form = (org.apache.fop.render.ps.PSImageFormResource) $r1;
        virtualinvoke resTracker.<org.apache.xmlgraphics.ps.dsc.ResourceTracker: void registerSuppliedResource(org.apache.xmlgraphics.ps.PSResource)>(form);
        goto label1;

     label2:
        return;
    }

    private static void generateForms(org.apache.xmlgraphics.ps.dsc.ResourceTracker, org.apache.fop.apps.FOUserAgent, java.util.Map, org.apache.xmlgraphics.ps.PSGenerator) throws java.io.IOException
    {
        org.apache.xmlgraphics.ps.dsc.ResourceTracker resTracker;
        org.apache.fop.apps.FOUserAgent userAgent;
        java.util.Map formResources, hints;
        org.apache.xmlgraphics.ps.PSGenerator gen;
        java.util.Iterator iter;
        org.apache.fop.render.ps.PSImageFormResource form;
        java.lang.String uri, imageDescription, $r4, $r7, $r21;
        org.apache.xmlgraphics.image.loader.ImageManager manager;
        null_type info;
        org.apache.xmlgraphics.image.loader.ImageSessionContext sessionContext;
        org.apache.xmlgraphics.image.loader.ImageFlavor[] flavors;
        org.apache.xmlgraphics.image.loader.Image img;
        java.awt.geom.Dimension2D dimensionsPt, $r11;
        java.awt.Dimension dimensionsMpt, $r15;
        org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D imageG2D;
        org.apache.fop.render.ps.ResourceHandler$2 formGen, $r6;
        org.apache.xmlgraphics.image.loader.impl.ImageRendered imgRend;
        java.awt.image.RenderedImage ri;
        org.apache.xmlgraphics.image.loader.impl.ImageRawStream raw;
        org.apache.xmlgraphics.image.loader.impl.ImageRawEPS eps;
        org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax jpeg;
        org.apache.fop.render.ps.ImageEncoderCCITTFax encoder, $r13;
        org.apache.xmlgraphics.image.loader.ImageException ie, $r19;
        java.util.Collection $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        org.apache.fop.apps.FopFactory $r2;
        org.apache.xmlgraphics.image.loader.ImageInfo info;
        int $i0;
        java.lang.StringBuffer $r3, $r18;
        org.apache.xmlgraphics.image.loader.ImageSize $r5, $r10, $r14;
        org.apache.xmlgraphics.ps.ImageFormGenerator $r9, formGen;
        java.lang.UnsupportedOperationException $r12;
        java.awt.color.ColorSpace $r16;
        org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG jpeg;
        org.apache.fop.render.ps.ImageEncoderJPEG $r17, encoder;
        java.io.IOException $r20;

        resTracker := @parameter0: org.apache.xmlgraphics.ps.dsc.ResourceTracker;
        userAgent := @parameter1: org.apache.fop.apps.FOUserAgent;
        formResources := @parameter2: java.util.Map;
        gen := @parameter3: org.apache.xmlgraphics.ps.PSGenerator;
        if formResources != null goto label0;

        return;

     label0:
        $r0 = interfaceinvoke formResources.<java.util.Map: java.util.Collection values()>();
        iter = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label16;

        $r1 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        form = (org.apache.fop.render.ps.PSImageFormResource) $r1;
        uri = virtualinvoke form.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String getImageURI()>();
        $r2 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.fop.apps.FopFactory getFactory()>();
        manager = virtualinvoke $r2.<org.apache.fop.apps.FopFactory: org.apache.xmlgraphics.image.loader.ImageManager getImageManager()>();
        info = null;

     label2:
        sessionContext = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()>();
        info = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.ImageInfo getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)>(uri, sessionContext);
        $i0 = virtualinvoke gen.<org.apache.xmlgraphics.ps.PSGenerator: int getPSLevel()>();
        if $i0 < 3 goto label3;

        flavors = <org.apache.fop.render.ps.ResourceHandler: org.apache.xmlgraphics.image.loader.ImageFlavor[] LEVEL_3_FLAVORS_FORM>;
        goto label4;

     label3:
        flavors = <org.apache.fop.render.ps.ResourceHandler: org.apache.xmlgraphics.image.loader.ImageFlavor[] LEVEL_2_FLAVORS_FORM>;

     label4:
        hints = staticinvoke <org.apache.xmlgraphics.image.loader.util.ImageUtil: java.util.Map getDefaultHints(org.apache.xmlgraphics.image.loader.ImageSessionContext)>(sessionContext);
        img = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.Image getImage(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map,org.apache.xmlgraphics.image.loader.ImageSessionContext)>(info, flavors, hints, sessionContext);
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: java.lang.String getMimeType()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r4 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: java.lang.String getOriginalURI()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        imageDescription = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r5 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        dimensionsPt = virtualinvoke $r5.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.geom.Dimension2D getDimensionPt()>();
        $r5 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        dimensionsMpt = virtualinvoke $r5.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.Dimension getDimensionMpt()>();
        $z0 = img instanceof org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;
        if $z0 == 0 goto label5;

        imageG2D = (org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D) img;
        $r6 = new org.apache.fop.render.ps.ResourceHandler$2;
        $r7 = virtualinvoke form.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String getName()>();
        specialinvoke $r6.<org.apache.fop.render.ps.ResourceHandler$2: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D,java.awt.geom.Dimension2D)>($r7, imageDescription, dimensionsPt, imageG2D, dimensionsMpt);
        formGen = $r6;
        virtualinvoke formGen.<org.apache.xmlgraphics.ps.FormGenerator: org.apache.xmlgraphics.ps.PSResource generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label13;

     label5:
        $z0 = img instanceof org.apache.xmlgraphics.image.loader.impl.ImageRendered;
        if $z0 == 0 goto label6;

        imgRend = (org.apache.xmlgraphics.image.loader.impl.ImageRendered) img;
        ri = virtualinvoke imgRend.<org.apache.xmlgraphics.image.loader.impl.ImageRendered: java.awt.image.RenderedImage getRenderedImage()>();
        $r9 = new org.apache.xmlgraphics.ps.ImageFormGenerator;
        $r7 = virtualinvoke form.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String getName()>();
        $r10 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        $r11 = virtualinvoke $r10.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.geom.Dimension2D getDimensionPt()>();
        specialinvoke $r9.<org.apache.xmlgraphics.ps.ImageFormGenerator: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.image.RenderedImage,boolean)>($r7, imageDescription, $r11, ri, 0);
        formGen = $r9;
        virtualinvoke formGen.<org.apache.xmlgraphics.ps.FormGenerator: org.apache.xmlgraphics.ps.PSResource generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label13;

     label6:
        $z0 = img instanceof org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM;
        if $z0 == 0 goto label7;

        $r12 = new java.lang.UnsupportedOperationException;
        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Embedding an ImageXMLDOM as a form isn\'t supported, yet");
        throw $r12;

     label7:
        $z0 = img instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawStream;
        if $z0 == 0 goto label12;

        raw = (org.apache.xmlgraphics.image.loader.impl.ImageRawStream) img;
        $z0 = raw instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawEPS;
        if $z0 == 0 goto label8;

        eps = (org.apache.xmlgraphics.image.loader.impl.ImageRawEPS) raw;
        $r12 = new java.lang.UnsupportedOperationException;
        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Embedding EPS as forms isn\'t supported, yet");
        throw $r12;

     label8:
        $z0 = raw instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax;
        if $z0 == 0 goto label9;

        jpeg = (org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax) raw;
        $r13 = new org.apache.fop.render.ps.ImageEncoderCCITTFax;
        specialinvoke $r13.<org.apache.fop.render.ps.ImageEncoderCCITTFax: void <init>(org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax)>(jpeg);
        encoder = $r13;
        $r9 = new org.apache.xmlgraphics.ps.ImageFormGenerator;
        $r7 = virtualinvoke form.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String getName()>();
        $r10 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        $r11 = virtualinvoke $r10.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.geom.Dimension2D getDimensionPt()>();
        $r14 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        $r15 = virtualinvoke $r14.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.Dimension getDimensionPx()>();
        $r16 = virtualinvoke jpeg.<org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax: java.awt.color.ColorSpace getColorSpace()>();
        specialinvoke $r9.<org.apache.xmlgraphics.ps.ImageFormGenerator: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.Dimension,org.apache.xmlgraphics.ps.ImageEncoder,java.awt.color.ColorSpace,int,boolean)>($r7, imageDescription, $r11, $r15, encoder, $r16, 1, 0);
        formGen = $r9;
        virtualinvoke formGen.<org.apache.xmlgraphics.ps.FormGenerator: org.apache.xmlgraphics.ps.PSResource generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label11;

     label9:
        $z0 = raw instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG;
        if $z0 == 0 goto label10;

        jpeg = (org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG) raw;
        $r17 = new org.apache.fop.render.ps.ImageEncoderJPEG;
        specialinvoke $r17.<org.apache.fop.render.ps.ImageEncoderJPEG: void <init>(org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG)>(jpeg);
        encoder = $r17;
        $r9 = new org.apache.xmlgraphics.ps.ImageFormGenerator;
        $r7 = virtualinvoke form.<org.apache.fop.render.ps.PSImageFormResource: java.lang.String getName()>();
        $r10 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        $r11 = virtualinvoke $r10.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.geom.Dimension2D getDimensionPt()>();
        $r14 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        $r15 = virtualinvoke $r14.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.Dimension getDimensionPx()>();
        $r16 = virtualinvoke jpeg.<org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG: java.awt.color.ColorSpace getColorSpace()>();
        $z1 = virtualinvoke jpeg.<org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG: boolean isInverted()>();
        specialinvoke $r9.<org.apache.xmlgraphics.ps.ImageFormGenerator: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.Dimension,org.apache.xmlgraphics.ps.ImageEncoder,java.awt.color.ColorSpace,boolean)>($r7, imageDescription, $r11, $r15, encoder, $r16, $z1);
        formGen = $r9;
        virtualinvoke formGen.<org.apache.xmlgraphics.ps.FormGenerator: org.apache.xmlgraphics.ps.PSResource generate(org.apache.xmlgraphics.ps.PSGenerator)>(gen);
        goto label11;

     label10:
        $r12 = new java.lang.UnsupportedOperationException;
        $r18 = new java.lang.StringBuffer;
        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();
        $r18 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported raw image: ");
        $r18 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(info);
        $r7 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);
        throw $r12;

     label11:
        goto label13;

     label12:
        $r12 = new java.lang.UnsupportedOperationException;
        $r18 = new java.lang.StringBuffer;
        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();
        $r18 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported image type: ");
        $r18 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(img);
        $r7 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);
        throw $r12;

     label13:
        goto label15;

     label14:
        $r19 := @caughtexception;
        ie = $r19;
        $r20 = new java.io.IOException;
        $r18 = new java.lang.StringBuffer;
        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();
        $r18 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while generating form for image: ");
        $r21 = virtualinvoke ie.<org.apache.xmlgraphics.image.loader.ImageException: java.lang.String getMessage()>();
        $r18 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);
        $r7 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r7);
        throw $r20;

     label15:
        goto label1;

     label16:
        return;

        catch org.apache.xmlgraphics.image.loader.ImageException from label2 to label13 with label14;
    }

    private static org.apache.xmlgraphics.ps.FormGenerator createMissingForm(java.lang.String, java.awt.geom.Dimension2D)
    {
        java.lang.String formName;
        java.awt.geom.Dimension2D dimensions;
        org.apache.fop.render.ps.ResourceHandler$3 $r0, formGen;

        formName := @parameter0: java.lang.String;
        dimensions := @parameter1: java.awt.geom.Dimension2D;
        $r0 = new org.apache.fop.render.ps.ResourceHandler$3;
        specialinvoke $r0.<org.apache.fop.render.ps.ResourceHandler$3: void <init>(java.lang.String,java.lang.String,java.awt.geom.Dimension2D,java.awt.geom.Dimension2D)>(formName, null, dimensions, dimensions);
        formGen = $r0;
        return formGen;
    }
}

public class org.apache.fop.layoutmgr.PageSequenceLayoutManager extends org.apache.fop.layoutmgr.AbstractPageSequenceLayoutManager
{
    private static org.apache.commons.logging.Log log;
    private org.apache.fop.layoutmgr.PageProvider pageProvider;
    static java.lang.Class class$org$apache$fop$layoutmgr$PageSequenceLayoutManager;

    public void <init>(org.apache.fop.area.AreaTreeHandler, org.apache.fop.fo.pagination.PageSequence)
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        org.apache.fop.area.AreaTreeHandler ath;
        org.apache.fop.fo.pagination.PageSequence pseq;
        org.apache.fop.layoutmgr.PageProvider $r0;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        ath := @parameter0: org.apache.fop.area.AreaTreeHandler;
        pseq := @parameter1: org.apache.fop.fo.pagination.PageSequence;
        specialinvoke this.<org.apache.fop.layoutmgr.AbstractPageSequenceLayoutManager: void <init>(org.apache.fop.area.AreaTreeHandler,org.apache.fop.fo.pagination.AbstractPageSequence)>(ath, pseq);
        $r0 = new org.apache.fop.layoutmgr.PageProvider;
        specialinvoke $r0.<org.apache.fop.layoutmgr.PageProvider: void <init>(org.apache.fop.area.AreaTreeHandler,org.apache.fop.fo.pagination.PageSequence)>(ath, pseq);
        this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.PageProvider pageProvider> = $r0;
        return;
    }

    public org.apache.fop.layoutmgr.PageProvider getPageProvider()
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        org.apache.fop.layoutmgr.PageProvider $r0;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.PageProvider pageProvider>;
        return $r0;
    }

    protected org.apache.fop.fo.pagination.PageSequence getPageSequence()
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        org.apache.fop.fo.pagination.AbstractPageSequence $r0;
        org.apache.fop.fo.pagination.PageSequence $r1;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.AbstractPageSequence pageSeq>;
        $r1 = (org.apache.fop.fo.pagination.PageSequence) $r0;
        return $r1;
    }

    public org.apache.fop.layoutmgr.PageSequenceLayoutManager getPSLM()
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        return this;
    }

    public void activateLayout()
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        org.apache.fop.area.LineArea title;
        org.apache.fop.layoutmgr.inline.ContentLayoutManager clm;
        java.lang.IllegalStateException l2, $r6;
        org.apache.fop.area.AreaTreeModel areaTreeModel;
        org.apache.fop.area.PageSequence pageSequenceAreaObject, $r8;
        org.apache.fop.layoutmgr.PageBreaker breaker, $r13;
        int flowBPD;
        org.apache.fop.fo.pagination.PageSequence $r0, $r3, $r9;
        org.apache.fop.fo.pagination.Title $r1, $r4;
        org.apache.fop.layoutmgr.LayoutManagerMaker $r2;
        org.apache.fop.area.Area $r5;
        org.apache.fop.area.AreaTreeHandler $r7;
        java.lang.String $r10;
        org.apache.commons.logging.Log $r11;
        boolean $z0;
        org.apache.fop.layoutmgr.Page $r12;
        org.apache.fop.area.PageViewport $r14;
        org.apache.fop.area.BodyRegion $r15;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void initialize()>();
        title = null;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Title getTitleFO()>();
        if $r1 == null goto label3;

     label0:
        $r2 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.LayoutManagerMaker getLayoutManagerMaker()>();
        $r3 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        $r4 = virtualinvoke $r3.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Title getTitleFO()>();
        clm = interfaceinvoke $r2.<org.apache.fop.layoutmgr.LayoutManagerMaker: org.apache.fop.layoutmgr.inline.ContentLayoutManager makeContentLayoutManager(org.apache.fop.layoutmgr.PageSequenceLayoutManager,org.apache.fop.fo.pagination.Title)>(this, $r4);
        $r5 = virtualinvoke clm.<org.apache.fop.layoutmgr.inline.ContentLayoutManager: org.apache.fop.area.Area getParentArea(org.apache.fop.area.Area)>(null);
        title = (org.apache.fop.area.LineArea) $r5;

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        l2 = $r6;

     label3:
        $r7 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.area.AreaTreeHandler areaTreeHandler>;
        areaTreeModel = virtualinvoke $r7.<org.apache.fop.area.AreaTreeHandler: org.apache.fop.area.AreaTreeModel getAreaTreeModel()>();
        $r8 = new org.apache.fop.area.PageSequence;
        specialinvoke $r8.<org.apache.fop.area.PageSequence: void <init>(org.apache.fop.area.LineArea)>(title);
        pageSequenceAreaObject = $r8;
        $r9 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        $r10 = virtualinvoke $r9.<org.apache.fop.fo.pagination.PageSequence: java.lang.String getLanguage()>();
        virtualinvoke pageSequenceAreaObject.<org.apache.fop.area.PageSequence: void setLanguage(java.lang.String)>($r10);
        $r9 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        $r10 = virtualinvoke $r9.<org.apache.fop.fo.pagination.PageSequence: java.lang.String getCountry()>();
        virtualinvoke pageSequenceAreaObject.<org.apache.fop.area.PageSequence: void setCountry(java.lang.String)>($r10);
        virtualinvoke areaTreeModel.<org.apache.fop.area.AreaTreeModel: void startPageSequence(org.apache.fop.area.PageSequence)>(pageSequenceAreaObject);
        $r11 = <org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label4;

        $r11 = <org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Starting layout");

     label4:
        $r12 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.Page makeNewPage(boolean,boolean)>(0, 0);
        this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.Page curPage> = $r12;
        $r13 = new org.apache.fop.layoutmgr.PageBreaker;
        specialinvoke $r13.<org.apache.fop.layoutmgr.PageBreaker: void <init>(org.apache.fop.layoutmgr.PageSequenceLayoutManager)>(this);
        breaker = $r13;
        $r14 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        $r15 = virtualinvoke $r14.<org.apache.fop.area.PageViewport: org.apache.fop.area.BodyRegion getBodyRegion()>();
        flowBPD = virtualinvoke $r15.<org.apache.fop.area.BodyRegion: int getRemainingBPD()>();
        virtualinvoke breaker.<org.apache.fop.layoutmgr.PageBreaker: void doLayout(int)>(flowBPD);
        virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void finishPage()>();
        return;

        catch java.lang.IllegalStateException from label0 to label1 with label2;
    }

    public void finishPageSequence()
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        java.lang.String masterReference, $r3;
        org.apache.fop.fo.pagination.PageSequenceMaster pageSeqMaster;
        org.apache.fop.fo.pagination.AbstractPageSequence $r0, $r2;
        boolean $z0;
        org.apache.fop.area.IDTracker $r1;
        org.apache.fop.fo.pagination.Root $r4;
        int $i0, $i1, $i2;
        org.apache.fop.area.AreaTreeHandler $r5;
        org.apache.fop.fo.pagination.PageSequence $r6;
        org.apache.fop.fo.pagination.LayoutMasterSet $r7;
        org.apache.commons.logging.Log $r8;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.AbstractPageSequence pageSeq>;
        $z0 = virtualinvoke $r0.<org.apache.fop.fo.pagination.AbstractPageSequence: boolean hasId()>();
        if $z0 == 0 goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.area.IDTracker idTracker>;
        $r2 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.AbstractPageSequence pageSeq>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.pagination.AbstractPageSequence: java.lang.String getId()>();
        virtualinvoke $r1.<org.apache.fop.area.IDTracker: void signalIDProcessed(java.lang.String)>($r3);

     label0:
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.AbstractPageSequence pageSeq>;
        $r4 = virtualinvoke $r0.<org.apache.fop.fo.pagination.AbstractPageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $i0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: int currentPageNum>;
        $i1 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: int currentPageNum>;
        $i2 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: int startPageNum>;
        $i1 = $i1 - $i2;
        $i1 = $i1 + 1;
        virtualinvoke $r4.<org.apache.fop.fo.pagination.Root: void notifyPageSequenceFinished(int,int)>($i0, $i1);
        $r5 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.area.AreaTreeHandler areaTreeHandler>;
        $r2 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.AbstractPageSequence pageSeq>;
        $i1 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: int currentPageNum>;
        $i2 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: int startPageNum>;
        $i1 = $i1 - $i2;
        $i1 = $i1 + 1;
        virtualinvoke $r5.<org.apache.fop.area.AreaTreeHandler: void notifyPageSequenceFinished(org.apache.fop.fo.pagination.AbstractPageSequence,int)>($r2, $i1);
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        virtualinvoke $r6.<org.apache.fop.fo.pagination.PageSequence: void releasePageSequence()>();
        $r6 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        masterReference = virtualinvoke $r6.<org.apache.fop.fo.pagination.PageSequence: java.lang.String getMasterReference()>();
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.AbstractPageSequence pageSeq>;
        $r4 = virtualinvoke $r0.<org.apache.fop.fo.pagination.AbstractPageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $r7 = virtualinvoke $r4.<org.apache.fop.fo.pagination.Root: org.apache.fop.fo.pagination.LayoutMasterSet getLayoutMasterSet()>();
        pageSeqMaster = virtualinvoke $r7.<org.apache.fop.fo.pagination.LayoutMasterSet: org.apache.fop.fo.pagination.PageSequenceMaster getPageSequenceMaster(java.lang.String)>(masterReference);
        if pageSeqMaster == null goto label1;

        virtualinvoke pageSeqMaster.<org.apache.fop.fo.pagination.PageSequenceMaster: void reset()>();

     label1:
        $r8 = <org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label2;

        $r8 = <org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.commons.logging.Log log>;
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Ending layout");

     label2:
        return;
    }

    protected org.apache.fop.layoutmgr.Page createPage(int, boolean)
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        int pageNumber;
        boolean isBlank;
        org.apache.fop.layoutmgr.PageProvider $r0;
        org.apache.fop.layoutmgr.Page $r1;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        pageNumber := @parameter0: int;
        isBlank := @parameter1: boolean;
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.PageProvider pageProvider>;
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.PageProvider: org.apache.fop.layoutmgr.Page getPage(boolean,int,int)>(isBlank, pageNumber, 0);
        return $r1;
    }

    private void layoutSideRegion(int)
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;
        int regionID;
        org.apache.fop.fo.pagination.SideRegion reg;
        org.apache.fop.fo.pagination.StaticContent sc;
        org.apache.fop.layoutmgr.StaticContentLayoutManager lm;
        org.apache.fop.layoutmgr.Page $r0;
        org.apache.fop.fo.pagination.SimplePageMaster $r1;
        org.apache.fop.fo.pagination.Region $r2;
        org.apache.fop.fo.pagination.PageSequence $r3;
        java.lang.String $r4;
        org.apache.fop.layoutmgr.LayoutManagerMaker $r5;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        regionID := @parameter0: int;
        $r0 = this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.Page curPage>;
        $r1 = virtualinvoke $r0.<org.apache.fop.layoutmgr.Page: org.apache.fop.fo.pagination.SimplePageMaster getSimplePageMaster()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(regionID);
        reg = (org.apache.fop.fo.pagination.SideRegion) $r2;
        if reg != null goto label0;

        return;

     label0:
        $r3 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.fo.pagination.PageSequence getPageSequence()>();
        $r4 = virtualinvoke reg.<org.apache.fop.fo.pagination.SideRegion: java.lang.String getRegionName()>();
        sc = virtualinvoke $r3.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.StaticContent getStaticContent(java.lang.String)>($r4);
        if sc != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.fop.layoutmgr.LayoutManagerMaker getLayoutManagerMaker()>();
        lm = interfaceinvoke $r5.<org.apache.fop.layoutmgr.LayoutManagerMaker: org.apache.fop.layoutmgr.StaticContentLayoutManager makeStaticContentLayoutManager(org.apache.fop.layoutmgr.PageSequenceLayoutManager,org.apache.fop.fo.pagination.StaticContent,org.apache.fop.fo.pagination.SideRegion)>(this, sc, reg);
        virtualinvoke lm.<org.apache.fop.layoutmgr.StaticContentLayoutManager: void doLayout()>();
        return;
    }

    protected void finishPage()
    {
        org.apache.fop.layoutmgr.PageSequenceLayoutManager this;

        this := @this: org.apache.fop.layoutmgr.PageSequenceLayoutManager;
        specialinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void layoutSideRegion(int)>(35);
        specialinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void layoutSideRegion(int)>(34);
        specialinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void layoutSideRegion(int)>(38);
        specialinvoke this.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void layoutSideRegion(int)>(37);
        specialinvoke this.<org.apache.fop.layoutmgr.AbstractPageSequenceLayoutManager: void finishPage()>();
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.layoutmgr.PageSequenceLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$PageSequenceLayoutManager>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.layoutmgr.PageSequenceLayoutManager: java.lang.Class class$(java.lang.String)>("org.apache.fop.layoutmgr.PageSequenceLayoutManager");
        <org.apache.fop.layoutmgr.PageSequenceLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$PageSequenceLayoutManager> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.layoutmgr.PageSequenceLayoutManager: java.lang.Class class$org$apache$fop$layoutmgr$PageSequenceLayoutManager>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.layoutmgr.PageSequenceLayoutManager: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

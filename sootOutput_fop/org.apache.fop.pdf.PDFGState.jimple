public class org.apache.fop.pdf.PDFGState extends org.apache.fop.pdf.PDFObject
{
    public static final java.lang.String GSTATE_LINE_WIDTH;
    public static final java.lang.String GSTATE_LINE_CAP;
    public static final java.lang.String GSTATE_LINE_JOIN;
    public static final java.lang.String GSTATE_MITER_LIMIT;
    public static final java.lang.String GSTATE_DASH_PATTERN;
    public static final java.lang.String GSTATE_RENDERING_INTENT;
    public static final java.lang.String GSTATE_OVERPRINT_STROKE;
    public static final java.lang.String GSTATE_OVERPRINT_FILL;
    public static final java.lang.String GSTATE_OVERPRINT_MODE;
    public static final java.lang.String GSTATE_FONT;
    public static final java.lang.String GSTATE_BLACK_GENERATION;
    public static final java.lang.String GSTATE_BLACK_GENERATION2;
    public static final java.lang.String GSTATE_UNDERCOLOR_REMOVAL;
    public static final java.lang.String GSTATE_UNDERCOLOR_REMOVAL2;
    public static final java.lang.String GSTATE_TRANSFER_FUNCTION;
    public static final java.lang.String GSTATE_TRANSFER_FUNCTION2;
    public static final java.lang.String GSTATE_HALFTONE_DICT;
    public static final java.lang.String GSTATE_HALFTONE_PHASE;
    public static final java.lang.String GSTATE_FLATNESS;
    public static final java.lang.String GSTATE_SMOOTHNESS;
    public static final java.lang.String GSTATE_STRIKE_ADJ;
    public static final java.lang.String GSTATE_BLEND_MODE;
    public static final java.lang.String GSTATE_SOFT_MASK;
    public static final java.lang.String GSTATE_ALPHA_STROKE;
    public static final java.lang.String GSTATE_ALPHA_NONSTROKE;
    public static final java.lang.String GSTATE_ALPHA_SOURCE_FLAG;
    public static final java.lang.String GSTATE_TEXT_KNOCKOUT;
    public static final org.apache.fop.pdf.PDFGState DEFAULT;
    private java.util.Map values;

    public void <init>()
    {
        org.apache.fop.pdf.PDFGState this;
        java.util.HashMap $r0;

        this := @this: org.apache.fop.pdf.PDFGState;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.pdf.PDFGState: java.util.Map values> = $r0;
        return;
    }

    public java.lang.String getName()
    {
        org.apache.fop.pdf.PDFGState this;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.String $r1;

        this := @this: org.apache.fop.pdf.PDFGState;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GS");
        $i0 = virtualinvoke this.<org.apache.fop.pdf.PDFGState: int getObjectNumber()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }

    public void setAlpha(float, boolean)
    {
        org.apache.fop.pdf.PDFGState this;
        float val;
        boolean fill;
        java.lang.Float $r0;
        java.util.Map $r1;

        this := @this: org.apache.fop.pdf.PDFGState;
        val := @parameter0: float;
        fill := @parameter1: boolean;
        if fill == 0 goto label0;

        $r1 = this.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        $r0 = new java.lang.Float;
        specialinvoke $r0.<java.lang.Float: void <init>(float)>(val);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ca", $r0);
        goto label1;

     label0:
        $r1 = this.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        $r0 = new java.lang.Float;
        specialinvoke $r0.<java.lang.Float: void <init>(float)>(val);
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CA", $r0);

     label1:
        return;
    }

    public void addValues(org.apache.fop.pdf.PDFGState)
    {
        org.apache.fop.pdf.PDFGState this, state;
        java.util.Map $r0, $r1;

        this := @this: org.apache.fop.pdf.PDFGState;
        state := @parameter0: org.apache.fop.pdf.PDFGState;
        $r0 = this.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        $r1 = state.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        interfaceinvoke $r0.<java.util.Map: void putAll(java.util.Map)>($r1);
        return;
    }

    public void addValues(java.util.Map)
    {
        org.apache.fop.pdf.PDFGState this;
        java.util.Map vals, $r0;

        this := @this: org.apache.fop.pdf.PDFGState;
        vals := @parameter0: java.util.Map;
        $r0 = this.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        interfaceinvoke $r0.<java.util.Map: void putAll(java.util.Map)>(vals);
        return;
    }

    public java.lang.String toPDFString()
    {
        org.apache.fop.pdf.PDFGState this;
        java.lang.StringBuffer $r0, sb;
        java.lang.String $r1, $r2;

        this := @this: org.apache.fop.pdf.PDFGState;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(64);
        sb = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFGState: java.lang.String getObjectID()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<<\n/Type /ExtGState\n");
        specialinvoke this.<org.apache.fop.pdf.PDFGState: void appendVal(java.lang.StringBuffer,java.lang.String)>(sb, "ca");
        specialinvoke this.<org.apache.fop.pdf.PDFGState: void appendVal(java.lang.StringBuffer,java.lang.String)>(sb, "CA");
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(">>\nendobj\n");
        $r2 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    private void appendVal(java.lang.StringBuffer, java.lang.String)
    {
        org.apache.fop.pdf.PDFGState this;
        java.lang.StringBuffer sb, $r1;
        java.lang.String name, $r2;
        java.lang.Object val;
        java.util.Map $r0;

        this := @this: org.apache.fop.pdf.PDFGState;
        sb := @parameter0: java.lang.StringBuffer;
        name := @parameter1: java.lang.String;
        $r0 = this.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        val = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);
        if val == null goto label0;

        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(name);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(val);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label0:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.fop.pdf.PDFGState this, $r0;
        java.lang.Object obj, str, obj1, $r2;
        java.util.Map vals1, vals2;
        java.util.Iterator iter;
        boolean $z0;
        int $i0, $i1;
        java.util.Set $r1;

        this := @this: org.apache.fop.pdf.PDFGState;
        obj := @parameter0: java.lang.Object;
        if obj != this goto label0;

        return 1;

     label0:
        $z0 = obj instanceof org.apache.fop.pdf.PDFGState;
        if $z0 != 0 goto label1;

        return 0;

     label1:
        vals1 = this.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        $r0 = (org.apache.fop.pdf.PDFGState) obj;
        vals2 = $r0.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        $i0 = interfaceinvoke vals1.<java.util.Map: int size()>();
        $i1 = interfaceinvoke vals2.<java.util.Map: int size()>();
        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $r1 = interfaceinvoke vals1.<java.util.Map: java.util.Set keySet()>();
        iter = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label5;

        str = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();
        obj1 = interfaceinvoke vals1.<java.util.Map: java.lang.Object get(java.lang.Object)>(str);
        $r2 = interfaceinvoke vals2.<java.util.Map: java.lang.Object get(java.lang.Object)>(str);
        $z0 = virtualinvoke obj1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);
        if $z0 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        org.apache.fop.pdf.PDFGState $r0;
        java.util.Map vals;
        java.lang.Float $r1;

        $r0 = new org.apache.fop.pdf.PDFGState;
        specialinvoke $r0.<org.apache.fop.pdf.PDFGState: void <init>()>();
        <org.apache.fop.pdf.PDFGState: org.apache.fop.pdf.PDFGState DEFAULT> = $r0;
        $r0 = <org.apache.fop.pdf.PDFGState: org.apache.fop.pdf.PDFGState DEFAULT>;
        vals = $r0.<org.apache.fop.pdf.PDFGState: java.util.Map values>;
        $r1 = new java.lang.Float;
        specialinvoke $r1.<java.lang.Float: void <init>(double)>(1.0);
        interfaceinvoke vals.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("CA", $r1);
        $r1 = new java.lang.Float;
        specialinvoke $r1.<java.lang.Float: void <init>(double)>(1.0);
        interfaceinvoke vals.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ca", $r1);
        return;
    }
}

public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer
{
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer listTableContainer;
    private int listNum;

    public void <init>(java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        java.io.Writer w;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        w := @parameter0: java.io.Writer;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(null, w);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: int listNum> = 0;
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader startHeader() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader $r0, $r2;
        org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException $r1;
        java.io.Writer $r3;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r4;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header>;
        if $r0 == null goto label0;

        $r1 = new org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException;
        specialinvoke $r1.<org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException: void <init>(java.lang.String)>("startHeader called more than once");
        throw $r1;

     label0:
        $r2 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: java.io.Writer writer>;
        specialinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile,java.io.Writer)>(this, $r3);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header> = $r2;
        $r4 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: java.io.Writer writer>;
        specialinvoke $r4.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(this, $r3);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer listTableContainer> = $r4;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable startListTable(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attr;
        java.lang.Integer $r1;
        int $i0, $i1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable $r2, $r3;
        java.io.Writer $r4;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r5;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        attr := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: int listNum>;
        $i0 = $i0 + 1;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: int listNum> = $i0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable>;
        if $r2 == null goto label0;

        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable>;
        return $r2;

     label0:
        $r3 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable;
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: java.io.Writer writer>;
        $r1 = new java.lang.Integer;
        $i1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: int listNum>;
        specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i1);
        specialinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,java.lang.Integer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(this, $r4, $r1, attr);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable> = $r3;
        $r5 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer listTableContainer>;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable>;
        virtualinvoke $r5.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void addChild(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement)>($r3);
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable getListTable()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListTable listTable>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea startPageArea() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea $r0, $r3;
        org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader $r2;
        java.io.Writer $r4;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea>;
        if $r0 == null goto label0;

        $r1 = new org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException;
        specialinvoke $r1.<org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException: void <init>(java.lang.String)>("startPageArea called more than once");
        throw $r1;

     label0:
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header>;
        if $r2 != null goto label1;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader startHeader()>();

     label1:
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header>;
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void close()>();
        $r3 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea;
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: java.io.Writer writer>;
        specialinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile,java.io.Writer)>(this, $r4);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea> = $r3;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void addChild(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement)>($r3);
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea getPageArea() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea>;
        if $r0 != null goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea startPageArea()>();
        return $r0;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfPageArea pageArea>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea startDocumentArea() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea $r0, $r3;
        org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader $r2;
        java.io.Writer $r4;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea>;
        if $r0 == null goto label0;

        $r1 = new org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException;
        specialinvoke $r1.<org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException: void <init>(java.lang.String)>("startDocumentArea called more than once");
        throw $r1;

     label0:
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header>;
        if $r2 != null goto label1;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader startHeader()>();

     label1:
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader header>;
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHeader: void close()>();
        $r3 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea;
        $r4 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: java.io.Writer writer>;
        specialinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile,java.io.Writer)>(this, $r4);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea> = $r3;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void addChild(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement)>($r3);
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea>;
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea getDocumentArea() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea>;
        if $r0 != null goto label0;

        $r0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea startDocumentArea()>();
        return $r0;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea>;
        return $r0;
    }

    protected void writeRtfPrefix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void writeGroupMark(boolean)>(1);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void writeControlWord(java.lang.String)>("rtf1");
        return;
    }

    protected void writeRtfSuffix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void writeGroupMark(boolean)>(0);
        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile this;
        java.io.Writer $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void writeRtf()>();
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: java.io.Writer writer>;
        virtualinvoke $r0.<java.io.Writer: void flush()>();
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] args;
        null_type w;
        java.lang.String outFile, $r2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile f, $r7;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph p;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attr, $r10;
        int $i0;
        java.io.PrintStream $r0, $r6;
        java.lang.StringBuffer $r1;
        java.io.BufferedWriter $r3, w;
        java.io.FileWriter $r4;
        java.io.OutputStreamWriter $r5;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea $r8;

        args := @parameter0: java.lang.String[];
        w = null;
        $i0 = lengthof args;
        if $i0 == 0 goto label0;

        outFile = args[0];
        $r0 = <java.lang.System: java.io.PrintStream err>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Outputting RTF to file \'");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(outFile);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r2);
        $r3 = new java.io.BufferedWriter;
        $r4 = new java.io.FileWriter;
        specialinvoke $r4.<java.io.FileWriter: void <init>(java.lang.String)>(outFile);
        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4);
        w = $r3;
        goto label1;

     label0:
        $r0 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Outputting RTF code to standard output");
        $r3 = new java.io.BufferedWriter;
        $r5 = new java.io.OutputStreamWriter;
        $r6 = <java.lang.System: java.io.PrintStream out>;
        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r6);
        specialinvoke $r3.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r5);
        w = $r3;

     label1:
        $r7 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        specialinvoke $r7.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void <init>(java.io.Writer)>(w);
        f = $r7;
        $r8 = virtualinvoke f.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea startDocumentArea()>();
        sect = virtualinvoke $r8.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection newSection()>();
        p = virtualinvoke sect.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph newParagraph()>();
        virtualinvoke p.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfText newText(java.lang.String,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>("Hello, RTF world.\n", null);
        $r10 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r10.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        attr = $r10;
        virtualinvoke attr.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("b");
        virtualinvoke attr.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("i");
        virtualinvoke attr.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String,int)>("fs", 36);
        virtualinvoke p.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfText newText(java.lang.String,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>("This is bold, italic, 36 points", attr);
        virtualinvoke f.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void flush()>();
        $r0 = <java.lang.System: java.io.PrintStream err>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("RtfFile test: all done.");
        return;
    }
}

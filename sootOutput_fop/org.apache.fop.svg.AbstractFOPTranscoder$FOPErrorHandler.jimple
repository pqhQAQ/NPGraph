public class org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler extends java.lang.Object implements org.apache.batik.transcoder.ErrorHandler
{
    private final org.apache.fop.svg.AbstractFOPTranscoder this$0;

    protected void <init>(org.apache.fop.svg.AbstractFOPTranscoder)
    {
        org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler this;
        org.apache.fop.svg.AbstractFOPTranscoder this$0;

        this := @this: org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler;
        this$0 := @parameter0: org.apache.fop.svg.AbstractFOPTranscoder;
        this.<org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler: org.apache.fop.svg.AbstractFOPTranscoder this$0> = this$0;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void error(org.apache.batik.transcoder.TranscoderException) throws org.apache.batik.transcoder.TranscoderException
    {
        org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler this;
        org.apache.batik.transcoder.TranscoderException te;
        org.apache.fop.svg.AbstractFOPTranscoder $r0;
        org.apache.commons.logging.Log $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler;
        te := @parameter0: org.apache.batik.transcoder.TranscoderException;
        $r0 = this.<org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler: org.apache.fop.svg.AbstractFOPTranscoder this$0>;
        $r1 = virtualinvoke $r0.<org.apache.fop.svg.AbstractFOPTranscoder: org.apache.commons.logging.Log getLogger()>();
        $r2 = virtualinvoke te.<org.apache.batik.transcoder.TranscoderException: java.lang.String getMessage()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r2);
        return;
    }

    public void fatalError(org.apache.batik.transcoder.TranscoderException) throws org.apache.batik.transcoder.TranscoderException
    {
        org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler this;
        org.apache.batik.transcoder.TranscoderException te;

        this := @this: org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler;
        te := @parameter0: org.apache.batik.transcoder.TranscoderException;
        throw te;
    }

    public void warning(org.apache.batik.transcoder.TranscoderException) throws org.apache.batik.transcoder.TranscoderException
    {
        org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler this;
        org.apache.batik.transcoder.TranscoderException te;
        org.apache.fop.svg.AbstractFOPTranscoder $r0;
        org.apache.commons.logging.Log $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler;
        te := @parameter0: org.apache.batik.transcoder.TranscoderException;
        $r0 = this.<org.apache.fop.svg.AbstractFOPTranscoder$FOPErrorHandler: org.apache.fop.svg.AbstractFOPTranscoder this$0>;
        $r1 = virtualinvoke $r0.<org.apache.fop.svg.AbstractFOPTranscoder: org.apache.commons.logging.Log getLogger()>();
        $r2 = virtualinvoke te.<org.apache.batik.transcoder.TranscoderException: java.lang.String getMessage()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r2);
        return;
    }
}

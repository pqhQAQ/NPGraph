public class org.apache.fop.pdf.PDFProfile extends java.lang.Object
{
    protected org.apache.fop.pdf.PDFAMode pdfAMode;
    protected org.apache.fop.pdf.PDFXMode pdfXMode;
    private org.apache.fop.pdf.PDFDocument doc;

    public void <init>(org.apache.fop.pdf.PDFDocument)
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFDocument doc;
        org.apache.fop.pdf.PDFAMode $r0;
        org.apache.fop.pdf.PDFXMode $r1;

        this := @this: org.apache.fop.pdf.PDFProfile;
        doc := @parameter0: org.apache.fop.pdf.PDFDocument;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = <org.apache.fop.pdf.PDFAMode: org.apache.fop.pdf.PDFAMode DISABLED>;
        this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode> = $r0;
        $r1 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode DISABLED>;
        this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode pdfXMode> = $r1;
        this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFDocument doc> = doc;
        return;
    }

    protected void validateProfileCombination()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFAMode $r0, $r1, $r7;
        java.lang.UnsupportedOperationException $r2;
        org.apache.fop.pdf.PDFXMode $r3, $r4, $r8;
        org.apache.fop.pdf.PDFConformanceException $r5;
        java.lang.StringBuffer $r6;
        java.lang.String $r9;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r1 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode>;
        $r0 = <org.apache.fop.pdf.PDFAMode: org.apache.fop.pdf.PDFAMode DISABLED>;
        if $r1 == $r0 goto label1;

        $r1 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode>;
        $r0 = <org.apache.fop.pdf.PDFAMode: org.apache.fop.pdf.PDFAMode PDFA_1A>;
        if $r1 != $r0 goto label0;

        $r2 = new java.lang.UnsupportedOperationException;
        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("PDF/A-1a is not implemented, yet");
        throw $r2;

     label0:
        $r1 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode>;
        $r0 = <org.apache.fop.pdf.PDFAMode: org.apache.fop.pdf.PDFAMode PDFA_1B>;
        if $r1 != $r0 goto label1;

        $r3 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode pdfXMode>;
        $r4 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode DISABLED>;
        if $r3 == $r4 goto label1;

        $r3 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode pdfXMode>;
        $r4 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode PDFX_3_2003>;
        if $r3 == $r4 goto label1;

        $r5 = new org.apache.fop.pdf.PDFConformanceException;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r7 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode>;
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" and ");
        $r8 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode pdfXMode>;
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r8);
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" are not compatible!");
        $r9 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r5.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r9);
        throw $r5;

     label1:
        return;
    }

    public org.apache.fop.pdf.PDFDocument getDocument()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFDocument $r0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r0 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFDocument doc>;
        return $r0;
    }

    public org.apache.fop.pdf.PDFAMode getPDFAMode()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFAMode $r0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r0 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode>;
        return $r0;
    }

    public boolean isPDFAActive()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFAMode $r0, $r1;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $r0 = <org.apache.fop.pdf.PDFAMode: org.apache.fop.pdf.PDFAMode DISABLED>;
        if $r1 == $r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setPDFAMode(org.apache.fop.pdf.PDFAMode)
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFAMode mode;

        this := @this: org.apache.fop.pdf.PDFProfile;
        mode := @parameter0: org.apache.fop.pdf.PDFAMode;
        if mode != null goto label0;

        mode = <org.apache.fop.pdf.PDFAMode: org.apache.fop.pdf.PDFAMode DISABLED>;

     label0:
        this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode pdfAMode> = mode;
        virtualinvoke this.<org.apache.fop.pdf.PDFProfile: void validateProfileCombination()>();
        return;
    }

    public org.apache.fop.pdf.PDFXMode getPDFXMode()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFXMode $r0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r0 = this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode pdfXMode>;
        return $r0;
    }

    public boolean isPDFXActive()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFXMode $r0, $r1;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r0 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode DISABLED>;
        if $r1 == $r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setPDFXMode(org.apache.fop.pdf.PDFXMode)
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFXMode mode;

        this := @this: org.apache.fop.pdf.PDFProfile;
        mode := @parameter0: org.apache.fop.pdf.PDFXMode;
        if mode != null goto label0;

        mode = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode DISABLED>;

     label0:
        this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode pdfXMode> = mode;
        virtualinvoke this.<org.apache.fop.pdf.PDFProfile: void validateProfileCombination()>();
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.StringBuffer $r0, sb;
        boolean $z0;
        org.apache.fop.pdf.PDFAMode $r1;
        org.apache.fop.pdf.PDFXMode $r2;
        java.lang.String $r3, $r4;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 == 0 goto label0;

        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label0;

        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        goto label3;

     label0:
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 == 0 goto label1;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r1);
        goto label3;

     label1:
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label2;

        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);
        goto label3;

     label2:
        $r3 = specialinvoke this.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label3:
        $r4 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }

    private java.lang.String format(java.lang.String, java.lang.Object)
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String pattern, $r1;
        java.lang.Object arg;
        java.lang.Object[] $r0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        pattern := @parameter0: java.lang.String;
        arg := @parameter1: java.lang.Object;
        $r0 = newarray (java.lang.Object)[1];
        $r0[0] = arg;
        $r1 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(pattern, $r0);
        return $r1;
    }

    public void verifyEncryptionAllowed()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String err, $r2;
        boolean $z0;
        org.apache.fop.pdf.PDFConformanceException $r0;
        org.apache.fop.pdf.PDFAMode $r1;
        org.apache.fop.pdf.PDFXMode $r3;

        this := @this: org.apache.fop.pdf.PDFProfile;
        err = "{0} doesn\'t allow encrypted PDFs";
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 == 0 goto label0;

        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("{0} doesn\'t allow encrypted PDFs", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label0:
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label1;

        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("{0} doesn\'t allow encrypted PDFs", $r3);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label1:
        return;
    }

    public void verifyPSXObjectsAllowed()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String err, $r2;
        boolean $z0;
        org.apache.fop.pdf.PDFConformanceException $r0;
        org.apache.fop.pdf.PDFAMode $r1;
        org.apache.fop.pdf.PDFXMode $r3;

        this := @this: org.apache.fop.pdf.PDFProfile;
        err = "PostScript XObjects are prohibited when {0} is active. Convert EPS graphics to another format.";
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 == 0 goto label0;

        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("PostScript XObjects are prohibited when {0} is active. Convert EPS graphics to another format.", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label0:
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label1;

        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("PostScript XObjects are prohibited when {0} is active. Convert EPS graphics to another format.", $r3);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label1:
        return;
    }

    public void verifyTransparencyAllowed(java.lang.String)
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String context, err, $r3;
        boolean $z0;
        org.apache.fop.pdf.PDFConformanceException $r0;
        java.lang.Object[] $r1;
        org.apache.fop.pdf.PDFAMode $r2;
        org.apache.fop.pdf.PDFXMode $r4;

        this := @this: org.apache.fop.pdf.PDFProfile;
        context := @parameter0: java.lang.String;
        err = "{0} does not allow the use of transparency. ({1})";
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 == 0 goto label0;

        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = newarray (java.lang.Object)[2];
        $r2 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $r1[0] = $r2;
        $r1[1] = context;
        $r3 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0} does not allow the use of transparency. ({1})", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r3);
        throw $r0;

     label0:
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label1;

        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = newarray (java.lang.Object)[2];
        $r4 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r1[0] = $r4;
        $r1[1] = context;
        $r3 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0} does not allow the use of transparency. ({1})", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r3);
        throw $r0;

     label1:
        return;
    }

    public void verifyPDFVersion()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String err, $r4;
        org.apache.fop.pdf.PDFAMode $r0, $r3;
        boolean $z0;
        org.apache.fop.pdf.PDFDocument $r1;
        int $i0;
        org.apache.fop.pdf.PDFConformanceException $r2;
        org.apache.fop.pdf.PDFXMode $r5, $r6, $r7;

        this := @this: org.apache.fop.pdf.PDFProfile;
        err = "PDF version must be 1.4 for {0}";
        $r0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $z0 = virtualinvoke $r0.<org.apache.fop.pdf.PDFAMode: boolean isPDFA1LevelB()>();
        if $z0 == 0 goto label0;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFDocument getDocument()>();
        $i0 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: int getPDFVersion()>();
        if $i0 == 4 goto label0;

        $r2 = new org.apache.fop.pdf.PDFConformanceException;
        $r3 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFAMode getPDFAMode()>();
        $r4 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("PDF version must be 1.4 for {0}", $r3);
        specialinvoke $r2.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r4);
        throw $r2;

     label0:
        $r5 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r6 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode PDFX_3_2003>;
        if $r5 != $r6 goto label1;

        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFDocument getDocument()>();
        $i0 = virtualinvoke $r1.<org.apache.fop.pdf.PDFDocument: int getPDFVersion()>();
        if $i0 == 4 goto label1;

        $r2 = new org.apache.fop.pdf.PDFConformanceException;
        $r7 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r4 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("PDF version must be 1.4 for {0}", $r7);
        specialinvoke $r2.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r4);
        throw $r2;

     label1:
        return;
    }

    public boolean isIDEntryRequired()
    {
        org.apache.fop.pdf.PDFProfile this;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 != 0 goto label0;

        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFontEmbeddingRequired()
    {
        org.apache.fop.pdf.PDFProfile this;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFAActive()>();
        if $z0 != 0 goto label0;

        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void verifyTitleAbsent()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String err, $r2;
        boolean $z0;
        org.apache.fop.pdf.PDFConformanceException $r0;
        org.apache.fop.pdf.PDFXMode $r1;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label0;

        err = "{0} requires the title to be set.";
        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("{0} requires the title to be set.", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label0:
        return;
    }

    public boolean isModDateRequired()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFXMode $r0, $r1;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r0 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode PDFX_3_2003>;
        if $r1 != $r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isTrappedEntryRequired()
    {
        org.apache.fop.pdf.PDFProfile this;
        org.apache.fop.pdf.PDFXMode $r0, $r1;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r0 = <org.apache.fop.pdf.PDFXMode: org.apache.fop.pdf.PDFXMode PDFX_3_2003>;
        if $r1 != $r0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isAnnotationAllowed()
    {
        org.apache.fop.pdf.PDFProfile this;
        boolean $z0;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void verifyAnnotAllowed()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String err, $r2;
        boolean $z0;
        org.apache.fop.pdf.PDFConformanceException $r0;
        org.apache.fop.pdf.PDFXMode $r1;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isAnnotationAllowed()>();
        if $z0 != 0 goto label0;

        err = "{0} does not allow annotations inside the printable area.";
        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("{0} does not allow annotations inside the printable area.", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label0:
        return;
    }

    public void verifyActionAllowed()
    {
        org.apache.fop.pdf.PDFProfile this;
        java.lang.String err, $r2;
        boolean $z0;
        org.apache.fop.pdf.PDFConformanceException $r0;
        org.apache.fop.pdf.PDFXMode $r1;

        this := @this: org.apache.fop.pdf.PDFProfile;
        $z0 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: boolean isPDFXActive()>();
        if $z0 == 0 goto label0;

        err = "{0} does not allow Actions.";
        $r0 = new org.apache.fop.pdf.PDFConformanceException;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFProfile: org.apache.fop.pdf.PDFXMode getPDFXMode()>();
        $r2 = specialinvoke this.<org.apache.fop.pdf.PDFProfile: java.lang.String format(java.lang.String,java.lang.Object)>("{0} does not allow Actions.", $r1);
        specialinvoke $r0.<org.apache.fop.pdf.PDFConformanceException: void <init>(java.lang.String)>($r2);
        throw $r0;

     label0:
        return;
    }
}

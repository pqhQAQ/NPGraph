public class org.apache.fop.traits.MinOptMax extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    public int min;
    public int opt;
    public int max;

    public void <init>()
    {
        org.apache.fop.traits.MinOptMax this;

        this := @this: org.apache.fop.traits.MinOptMax;
        specialinvoke this.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        return;
    }

    public void <init>(int)
    {
        org.apache.fop.traits.MinOptMax this;
        int val;

        this := @this: org.apache.fop.traits.MinOptMax;
        val := @parameter0: int;
        specialinvoke this.<org.apache.fop.traits.MinOptMax: void <init>(int,int,int)>(val, val, val);
        return;
    }

    public void <init>(int, int, int)
    {
        org.apache.fop.traits.MinOptMax this;
        int min, opt, max;

        this := @this: org.apache.fop.traits.MinOptMax;
        min := @parameter0: int;
        opt := @parameter1: int;
        max := @parameter2: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.traits.MinOptMax: int min> = min;
        this.<org.apache.fop.traits.MinOptMax: int opt> = opt;
        this.<org.apache.fop.traits.MinOptMax: int max> = max;
        return;
    }

    public void <init>(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.traits.MinOptMax this, op;
        int $i0;

        this := @this: org.apache.fop.traits.MinOptMax;
        op := @parameter0: org.apache.fop.traits.MinOptMax;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $i0 = op.<org.apache.fop.traits.MinOptMax: int min>;
        this.<org.apache.fop.traits.MinOptMax: int min> = $i0;
        $i0 = op.<org.apache.fop.traits.MinOptMax: int opt>;
        this.<org.apache.fop.traits.MinOptMax: int opt> = $i0;
        $i0 = op.<org.apache.fop.traits.MinOptMax: int max>;
        this.<org.apache.fop.traits.MinOptMax: int max> = $i0;
        return;
    }

    public java.lang.Object clone()
    {
        org.apache.fop.traits.MinOptMax this;
        java.lang.CloneNotSupportedException ex, $r1;
        java.lang.Object $r0;

        this := @this: org.apache.fop.traits.MinOptMax;

     label0:
        $r0 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        ex = $r1;
        return null;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public static org.apache.fop.traits.MinOptMax subtract(org.apache.fop.traits.MinOptMax, org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.traits.MinOptMax op1, op2, $r0;
        int $i0, $i1, $i2, $i3;

        op1 := @parameter0: org.apache.fop.traits.MinOptMax;
        op2 := @parameter1: org.apache.fop.traits.MinOptMax;
        $r0 = new org.apache.fop.traits.MinOptMax;
        $i0 = op1.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = op2.<org.apache.fop.traits.MinOptMax: int max>;
        $i0 = $i0 - $i1;
        $i1 = op1.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = op2.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 - $i2;
        $i2 = op1.<org.apache.fop.traits.MinOptMax: int max>;
        $i3 = op2.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = $i2 - $i3;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int,int,int)>($i0, $i1, $i2);
        return $r0;
    }

    public static org.apache.fop.traits.MinOptMax add(org.apache.fop.traits.MinOptMax, org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.traits.MinOptMax op1, op2, $r0;
        int $i0, $i1, $i2, $i3;

        op1 := @parameter0: org.apache.fop.traits.MinOptMax;
        op2 := @parameter1: org.apache.fop.traits.MinOptMax;
        $r0 = new org.apache.fop.traits.MinOptMax;
        $i0 = op1.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = op2.<org.apache.fop.traits.MinOptMax: int min>;
        $i0 = $i0 + $i1;
        $i1 = op1.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = op2.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = $i1 + $i2;
        $i2 = op1.<org.apache.fop.traits.MinOptMax: int max>;
        $i3 = op2.<org.apache.fop.traits.MinOptMax: int max>;
        $i2 = $i2 + $i3;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int,int,int)>($i0, $i1, $i2);
        return $r0;
    }

    public static org.apache.fop.traits.MinOptMax multiply(org.apache.fop.traits.MinOptMax, double)
    {
        org.apache.fop.traits.MinOptMax op1, $r0;
        double mult, $d0, $d1, $d2;
        int $i0, $i1, $i2;

        op1 := @parameter0: org.apache.fop.traits.MinOptMax;
        mult := @parameter1: double;
        $r0 = new org.apache.fop.traits.MinOptMax;
        $i0 = op1.<org.apache.fop.traits.MinOptMax: int min>;
        $d0 = (double) $i0;
        $d0 = $d0 * mult;
        $i0 = (int) $d0;
        $i1 = op1.<org.apache.fop.traits.MinOptMax: int opt>;
        $d1 = (double) $i1;
        $d1 = $d1 * mult;
        $i1 = (int) $d1;
        $i2 = op1.<org.apache.fop.traits.MinOptMax: int max>;
        $d2 = (double) $i2;
        $d2 = $d2 * mult;
        $i2 = (int) $d2;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int,int,int)>($i0, $i1, $i2);
        return $r0;
    }

    public void add(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.traits.MinOptMax this, op;
        int $i0, $i1;

        this := @this: org.apache.fop.traits.MinOptMax;
        op := @parameter0: org.apache.fop.traits.MinOptMax;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = op.<org.apache.fop.traits.MinOptMax: int min>;
        $i0 = $i0 + $i1;
        this.<org.apache.fop.traits.MinOptMax: int min> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = op.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 + $i1;
        this.<org.apache.fop.traits.MinOptMax: int opt> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int max>;
        $i1 = op.<org.apache.fop.traits.MinOptMax: int max>;
        $i0 = $i0 + $i1;
        this.<org.apache.fop.traits.MinOptMax: int max> = $i0;
        return;
    }

    public void add(int, int, int)
    {
        org.apache.fop.traits.MinOptMax this;
        int min, opt, max, $i0;

        this := @this: org.apache.fop.traits.MinOptMax;
        min := @parameter0: int;
        opt := @parameter1: int;
        max := @parameter2: int;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $i0 = $i0 + min;
        this.<org.apache.fop.traits.MinOptMax: int min> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 + opt;
        this.<org.apache.fop.traits.MinOptMax: int opt> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int max>;
        $i0 = $i0 + max;
        this.<org.apache.fop.traits.MinOptMax: int max> = $i0;
        return;
    }

    public void add(int)
    {
        org.apache.fop.traits.MinOptMax this;
        int len, $i0;

        this := @this: org.apache.fop.traits.MinOptMax;
        len := @parameter0: int;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $i0 = $i0 + len;
        this.<org.apache.fop.traits.MinOptMax: int min> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 + len;
        this.<org.apache.fop.traits.MinOptMax: int opt> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int max>;
        $i0 = $i0 + len;
        this.<org.apache.fop.traits.MinOptMax: int max> = $i0;
        return;
    }

    public void subtract(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.traits.MinOptMax this, op;
        int $i0, $i1;

        this := @this: org.apache.fop.traits.MinOptMax;
        op := @parameter0: org.apache.fop.traits.MinOptMax;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = op.<org.apache.fop.traits.MinOptMax: int max>;
        $i0 = $i0 - $i1;
        this.<org.apache.fop.traits.MinOptMax: int min> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = op.<org.apache.fop.traits.MinOptMax: int opt>;
        $i0 = $i0 - $i1;
        this.<org.apache.fop.traits.MinOptMax: int opt> = $i0;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int max>;
        $i1 = op.<org.apache.fop.traits.MinOptMax: int min>;
        $i0 = $i0 - $i1;
        this.<org.apache.fop.traits.MinOptMax: int max> = $i0;
        return;
    }

    public boolean isNonZero()
    {
        org.apache.fop.traits.MinOptMax this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.traits.MinOptMax;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        if $i0 != 0 goto label0;

        $i0 = this.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 == 0 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isElastic()
    {
        org.apache.fop.traits.MinOptMax this;
        int $i0, $i1;
        boolean $z0;

        this := @this: org.apache.fop.traits.MinOptMax;
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        if $i0 != $i1 goto label0;

        $i0 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 == $i1 goto label1;

     label0:
        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.fop.traits.MinOptMax this;
        java.lang.StringBuffer $r0, sb;
        int $i0, $i1;
        java.lang.String $r1;

        this := @this: org.apache.fop.traits.MinOptMax;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("MinOptMax[min=");
        $i0 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        if $i0 == $i1 goto label0;

        $i1 = this.<org.apache.fop.traits.MinOptMax: int min>;
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

     label0:
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("opt=");
        $i0 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = this.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 == $i1 goto label1;

        $i1 = this.<org.apache.fop.traits.MinOptMax: int opt>;
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; ");

     label1:
        $r0 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("max=");
        $i1 = this.<org.apache.fop.traits.MinOptMax: int max>;
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r1 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }
}

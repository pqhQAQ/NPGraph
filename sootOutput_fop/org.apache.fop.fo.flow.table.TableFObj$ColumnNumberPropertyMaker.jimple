public class org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker extends org.apache.fop.fo.properties.NumberProperty$Maker
{

    public void <init>(int)
    {
        org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker this;
        int propId;

        this := @this: org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker;
        propId := @parameter0: int;
        specialinvoke this.<org.apache.fop.fo.properties.NumberProperty$Maker: void <init>(int)>(propId);
        return;
    }

    public org.apache.fop.fo.properties.Property make(org.apache.fop.fo.PropertyList) throws org.apache.fop.fo.expr.PropertyException
    {
        org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker this;
        org.apache.fop.fo.PropertyList propertyList;
        org.apache.fop.fo.FObj fo;
        org.apache.fop.fo.FONode $r0;
        org.apache.fop.fo.flow.table.ColumnNumberManagerHolder $r1;
        org.apache.fop.fo.flow.table.ColumnNumberManager $r2;
        int $i0;
        org.apache.fop.fo.properties.NumberProperty $r3;

        this := @this: org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker;
        propertyList := @parameter0: org.apache.fop.fo.PropertyList;
        fo = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.FObj getFObj()>();
        $r0 = virtualinvoke fo.<org.apache.fop.fo.FObj: org.apache.fop.fo.FONode getParent()>();
        $r1 = (org.apache.fop.fo.flow.table.ColumnNumberManagerHolder) $r0;
        $r2 = interfaceinvoke $r1.<org.apache.fop.fo.flow.table.ColumnNumberManagerHolder: org.apache.fop.fo.flow.table.ColumnNumberManager getColumnNumberManager()>();
        $i0 = virtualinvoke $r2.<org.apache.fop.fo.flow.table.ColumnNumberManager: int getCurrentColumnNumber()>();
        $r3 = staticinvoke <org.apache.fop.fo.properties.NumberProperty: org.apache.fop.fo.properties.NumberProperty getInstance(int)>($i0);
        return $r3;
    }

    public org.apache.fop.fo.properties.Property make(org.apache.fop.fo.PropertyList, java.lang.String, org.apache.fop.fo.FObj) throws org.apache.fop.fo.expr.PropertyException
    {
        org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker this;
        org.apache.fop.fo.PropertyList propertyList;
        java.lang.String value, $r4, $r5;
        org.apache.fop.fo.FObj fo, $r0;
        org.apache.fop.fo.properties.Property p, $r7;
        org.apache.fop.fo.flow.table.ColumnNumberManagerHolder parent;
        org.apache.fop.fo.flow.table.ColumnNumberManager columnIndexManager;
        int columnIndex, colSpan, i, $i0, $i1, $i4;
        double tmpIndex, $d0, $d1;
        java.lang.StringBuffer errorMessage, $r3, $r8;
        org.xml.sax.Locator loc;
        org.apache.fop.datatypes.Numeric $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.fop.fo.properties.NumberProperty $r6;
        byte $b2;
        long $l3;
        boolean $z0;
        org.apache.fop.fo.expr.PropertyException $r9;

        this := @this: org.apache.fop.fo.flow.table.TableFObj$ColumnNumberPropertyMaker;
        propertyList := @parameter0: org.apache.fop.fo.PropertyList;
        value := @parameter1: java.lang.String;
        fo := @parameter2: org.apache.fop.fo.FObj;
        p = specialinvoke this.<org.apache.fop.fo.properties.NumberProperty$Maker: org.apache.fop.fo.properties.Property make(org.apache.fop.fo.PropertyList,java.lang.String,org.apache.fop.fo.FObj)>(propertyList, value, fo);
        $r0 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.FObj getParentFObj()>();
        parent = (org.apache.fop.fo.flow.table.ColumnNumberManagerHolder) $r0;
        columnIndexManager = interfaceinvoke parent.<org.apache.fop.fo.flow.table.ColumnNumberManagerHolder: org.apache.fop.fo.flow.table.ColumnNumberManager getColumnNumberManager()>();
        $r1 = virtualinvoke p.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        columnIndex = interfaceinvoke $r1.<org.apache.fop.datatypes.Numeric: int getValue()>();
        if columnIndex > 0 goto label0;

        $r2 = staticinvoke <org.apache.fop.fo.flow.table.TableFObj: org.apache.commons.logging.Log access$000()>();
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Specified negative or zero value for column-number on ");
        $r4 = virtualinvoke fo.<org.apache.fop.fo.FObj: java.lang.String getName()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(columnIndex);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" forced to ");
        $i0 = virtualinvoke columnIndexManager.<org.apache.fop.fo.flow.table.ColumnNumberManager: int getCurrentColumnNumber()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r5);
        $i1 = virtualinvoke columnIndexManager.<org.apache.fop.fo.flow.table.ColumnNumberManager: int getCurrentColumnNumber()>();
        $r6 = staticinvoke <org.apache.fop.fo.properties.NumberProperty: org.apache.fop.fo.properties.NumberProperty getInstance(int)>($i1);
        return $r6;

     label0:
        $r1 = virtualinvoke p.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        tmpIndex = interfaceinvoke $r1.<org.apache.fop.datatypes.Numeric: double getNumericValue()>();
        $d0 = (double) columnIndex;
        $d1 = tmpIndex - $d0;
        $b2 = $d1 cmpl 0.0;
        if $b2 <= 0 goto label1;

        $l3 = staticinvoke <java.lang.Math: long round(double)>(tmpIndex);
        columnIndex = (int) $l3;
        $r2 = staticinvoke <org.apache.fop.fo.flow.table.TableFObj: org.apache.commons.logging.Log access$100()>();
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Rounding specified column-number of ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(tmpIndex);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" to ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(columnIndex);
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r5);
        p = staticinvoke <org.apache.fop.fo.properties.NumberProperty: org.apache.fop.fo.properties.NumberProperty getInstance(int)>(columnIndex);

     label1:
        $r7 = virtualinvoke propertyList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(149);
        $r1 = virtualinvoke $r7.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        colSpan = interfaceinvoke $r1.<org.apache.fop.datatypes.Numeric: int getValue()>();
        i = -1;

     label2:
        i = i + 1;
        if i >= colSpan goto label4;

        $i4 = columnIndex + i;
        $z0 = virtualinvoke columnIndexManager.<org.apache.fop.fo.flow.table.ColumnNumberManager: boolean isColumnNumberUsed(int)>($i4);
        if $z0 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        errorMessage = $r8;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke fo.<org.apache.fop.fo.FObj: java.lang.String getName()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" overlaps in column ");
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        $r8 = virtualinvoke errorMessage.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $i4 = columnIndex + i;
        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);
        loc = virtualinvoke fo.<org.apache.fop.fo.FObj: org.xml.sax.Locator getLocator()>();
        if loc == null goto label3;

        $i1 = interfaceinvoke loc.<org.xml.sax.Locator: int getLineNumber()>();
        if $i1 == -1 goto label3;

        $r8 = virtualinvoke errorMessage.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (line #");
        $i4 = interfaceinvoke loc.<org.xml.sax.Locator: int getLineNumber()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", column #");
        $i4 = interfaceinvoke loc.<org.xml.sax.Locator: int getColumnNumber()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);
        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

     label3:
        $r9 = new org.apache.fop.fo.expr.PropertyException;
        $r4 = virtualinvoke errorMessage.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r9.<org.apache.fop.fo.expr.PropertyException: void <init>(java.lang.String)>($r4);
        throw $r9;

     label4:
        return p;
    }
}

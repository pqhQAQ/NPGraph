class org.apache.fop.image.loader.batik.PreloaderWMF$Loader extends java.lang.Object
{
    private final org.apache.fop.image.loader.batik.PreloaderWMF this$0;

    void <init>(org.apache.fop.image.loader.batik.PreloaderWMF)
    {
        org.apache.fop.image.loader.batik.PreloaderWMF$Loader this;
        org.apache.fop.image.loader.batik.PreloaderWMF this$0;

        this := @this: org.apache.fop.image.loader.batik.PreloaderWMF$Loader;
        this$0 := @parameter0: org.apache.fop.image.loader.batik.PreloaderWMF;
        this.<org.apache.fop.image.loader.batik.PreloaderWMF$Loader: org.apache.fop.image.loader.batik.PreloaderWMF this$0> = this$0;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    private org.apache.xmlgraphics.image.loader.ImageInfo getImage(java.lang.String, javax.xml.transform.Source, org.apache.xmlgraphics.image.loader.ImageContext)
    {
        org.apache.fop.image.loader.batik.PreloaderWMF$Loader this;
        java.lang.String uri, $r16, $r17;
        javax.xml.transform.Source src;
        org.apache.xmlgraphics.image.loader.ImageContext context;
        org.apache.fop.util.UnclosableInputStream $r0, in;
        java.io.DataInputStream din, $r2;
        int magic, width, height, dpi, $i0;
        org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore wmfStore, $r3;
        org.apache.xmlgraphics.image.loader.ImageInfo info, $r4;
        org.apache.xmlgraphics.image.loader.ImageSize size, $r5;
        org.apache.fop.image.loader.batik.ImageWMF img, $r6;
        java.lang.NoClassDefFoundError ncdfe, $r10;
        java.io.IOException l6, e, $r11, $r14, $r18;
        java.io.InputStream $r1;
        null_type $n0;
        double $d0;
        java.util.Map $r7;
        java.lang.Object $r8;
        org.apache.fop.image.loader.batik.PreloaderWMF $r12;
        org.apache.commons.logging.Log $r13;
        java.lang.StringBuffer $r15;

        this := @this: org.apache.fop.image.loader.batik.PreloaderWMF$Loader;
        uri := @parameter0: java.lang.String;
        src := @parameter1: javax.xml.transform.Source;
        context := @parameter2: org.apache.xmlgraphics.image.loader.ImageContext;
        $r0 = new org.apache.fop.util.UnclosableInputStream;
        $r1 = staticinvoke <org.apache.xmlgraphics.image.loader.util.ImageUtil: java.io.InputStream needInputStream(javax.xml.transform.Source)>(src);
        specialinvoke $r0.<org.apache.fop.util.UnclosableInputStream: void <init>(java.io.InputStream)>($r1);
        in = $r0;

     label0:
        virtualinvoke in.<java.io.InputStream: void mark(int)>(5);
        $r2 = new java.io.DataInputStream;
        specialinvoke $r2.<java.io.DataInputStream: void <init>(java.io.InputStream)>(in);
        din = $r2;
        $i0 = virtualinvoke din.<java.io.DataInputStream: int readInt()>();
        magic = staticinvoke <org.apache.commons.io.EndianUtils: int swapInteger(int)>($i0);
        virtualinvoke din.<java.io.DataInputStream: void reset()>();
        if magic == -1698247209 goto label2;

        $n0 = null;

     label1:
        return $n0;

     label2:
        $r3 = new org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore;
        specialinvoke $r3.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: void <init>()>();
        wmfStore = $r3;
        virtualinvoke wmfStore.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: void read(java.io.DataInputStream)>(din);
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(din);
        width = virtualinvoke wmfStore.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: int getWidthUnits()>();
        height = virtualinvoke wmfStore.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: int getHeightUnits()>();
        dpi = virtualinvoke wmfStore.<org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore: int getMetaFileUnitsPerInch()>();
        $r4 = new org.apache.xmlgraphics.image.loader.ImageInfo;
        specialinvoke $r4.<org.apache.xmlgraphics.image.loader.ImageInfo: void <init>(java.lang.String,java.lang.String)>(uri, "image/x-wmf");
        info = $r4;
        $r5 = new org.apache.xmlgraphics.image.loader.ImageSize;
        specialinvoke $r5.<org.apache.xmlgraphics.image.loader.ImageSize: void <init>()>();
        size = $r5;
        virtualinvoke size.<org.apache.xmlgraphics.image.loader.ImageSize: void setSizeInPixels(int,int)>(width, height);
        $d0 = (double) dpi;
        virtualinvoke size.<org.apache.xmlgraphics.image.loader.ImageSize: void setResolution(double)>($d0);
        virtualinvoke size.<org.apache.xmlgraphics.image.loader.ImageSize: void calcSizeFromPixels()>();
        virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: void setSize(org.apache.xmlgraphics.image.loader.ImageSize)>(size);
        $r6 = new org.apache.fop.image.loader.batik.ImageWMF;
        specialinvoke $r6.<org.apache.fop.image.loader.batik.ImageWMF: void <init>(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.batik.transcoder.wmf.tosvg.WMFRecordStore)>(info, wmfStore);
        img = $r6;
        $r7 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: java.util.Map getCustomObjects()>();
        $r8 = <org.apache.xmlgraphics.image.loader.ImageInfo: java.lang.Object ORIGINAL_IMAGE>;
        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, img);

     label3:
        return info;

     label4:
        $r10 := @caughtexception;
        ncdfe = $r10;

     label5:
        virtualinvoke in.<java.io.InputStream: void reset()>();

     label6:
        goto label8;

     label7:
        $r11 := @caughtexception;
        l6 = $r11;

     label8:
        $r12 = this.<org.apache.fop.image.loader.batik.PreloaderWMF$Loader: org.apache.fop.image.loader.batik.PreloaderWMF this$0>;
        staticinvoke <org.apache.fop.image.loader.batik.PreloaderWMF: boolean access$102(org.apache.fop.image.loader.batik.PreloaderWMF,boolean)>($r12, 0);
        $r13 = staticinvoke <org.apache.fop.image.loader.batik.PreloaderWMF: org.apache.commons.logging.Log access$200()>();
        interfaceinvoke $r13.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Batik not in class path", ncdfe);
        return null;

     label9:
        $r14 := @caughtexception;
        e = $r14;
        $r13 = staticinvoke <org.apache.fop.image.loader.batik.PreloaderWMF: org.apache.commons.logging.Log access$200()>();
        $r15 = new java.lang.StringBuffer;
        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();
        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while trying to load stream as an WMF file: ");
        $r16 = virtualinvoke e.<java.io.IOException: java.lang.String getMessage()>();
        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);
        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r17);

     label10:
        virtualinvoke in.<java.io.InputStream: void reset()>();

     label11:
        goto label13;

     label12:
        $r18 := @caughtexception;
        l6 = $r18;

     label13:
        return null;

        catch java.lang.NoClassDefFoundError from label0 to label1 with label4;
        catch java.lang.NoClassDefFoundError from label2 to label3 with label4;
        catch java.io.IOException from label5 to label6 with label7;
        catch java.io.IOException from label0 to label1 with label9;
        catch java.io.IOException from label2 to label3 with label9;
        catch java.io.IOException from label10 to label11 with label12;
    }

    static org.apache.xmlgraphics.image.loader.ImageInfo access$000(org.apache.fop.image.loader.batik.PreloaderWMF$Loader, java.lang.String, javax.xml.transform.Source, org.apache.xmlgraphics.image.loader.ImageContext)
    {
        org.apache.fop.image.loader.batik.PreloaderWMF$Loader x0;
        java.lang.String x1;
        javax.xml.transform.Source x2;
        org.apache.xmlgraphics.image.loader.ImageContext x3;
        org.apache.xmlgraphics.image.loader.ImageInfo $r0;

        x0 := @parameter0: org.apache.fop.image.loader.batik.PreloaderWMF$Loader;
        x1 := @parameter1: java.lang.String;
        x2 := @parameter2: javax.xml.transform.Source;
        x3 := @parameter3: org.apache.xmlgraphics.image.loader.ImageContext;
        $r0 = specialinvoke x0.<org.apache.fop.image.loader.batik.PreloaderWMF$Loader: org.apache.xmlgraphics.image.loader.ImageInfo getImage(java.lang.String,javax.xml.transform.Source,org.apache.xmlgraphics.image.loader.ImageContext)>(x1, x2, x3);
        return $r0;
    }
}

public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer implements org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfParagraphContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfExternalGraphicContainer, org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer
{
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList list;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic;
    private final org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow parentRow;
    private boolean setCenter;
    private boolean setRight;
    private int id;
    public static final int DEFAULT_CELL_WIDTH;
    private int cellWidth;
    private int widthOffset;
    private int vMerge;
    private int hMerge;
    public static final int NO_MERGE;
    public static final int MERGE_START;
    public static final int MERGE_WITH_PREVIOUS;

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow, java.io.Writer, int, int) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow parent;
        java.io.Writer w;
        int cellWidth, idNum;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        w := @parameter1: java.io.Writer;
        cellWidth := @parameter2: int;
        idNum := @parameter3: int;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(parent, w);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int vMerge> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int id> = idNum;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow parentRow> = parent;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int cellWidth> = cellWidth;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setCenter> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setRight> = 0;
        return;
    }

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow, java.io.Writer, int, org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes, int) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow parent;
        java.io.Writer w;
        int cellWidth, idNum;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        w := @parameter1: java.io.Writer;
        cellWidth := @parameter2: int;
        attrs := @parameter3: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        idNum := @parameter4: int;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(parent, w, attrs);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int vMerge> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge> = 0;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int id> = idNum;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow parentRow> = parent;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int cellWidth> = cellWidth;
        return;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph newParagraph(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs, $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph $r1, $r3;
        java.io.Writer $r2;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeAll()>();
        if attrs != null goto label0;

        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        attrs = $r0;

     label0:
        virtualinvoke attrs.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("intbl");
        $r1 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.io.Writer writer>;
        specialinvoke $r1.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfParagraphContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(this, $r2, attrs);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph> = $r1;
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph>;
        $r0 = $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $z0 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: boolean isSet(java.lang.String)>("qc");
        if $z0 == 0 goto label1;

        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setCenter> = 1;
        virtualinvoke attrs.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("qc");
        goto label3;

     label1:
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph>;
        $r0 = $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $z0 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: boolean isSet(java.lang.String)>("qr");
        if $z0 == 0 goto label2;

        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setRight> = 1;
        virtualinvoke attrs.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("qr");
        goto label3;

     label2:
        virtualinvoke attrs.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("ql");

     label3:
        virtualinvoke attrs.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("intbl");
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph>;
        return $r3;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic newImage() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer)>(this, $r1);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph newParagraph() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph newParagraph(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(null);
        return $r0;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList newList(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        attrib := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(this, $r1, attrib);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList list> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList list>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable newTable(org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        tc := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo)>(this, $r1, tc);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        return $r2;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable newTable(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes, org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrs;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r0, $r2;
        java.io.Writer $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        attrs := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        tc := @parameter1: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeAll()>();
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.io.Writer writer>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo)>(this, $r1, attrs, tc);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table> = $r0;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        return $r2;
    }

    int writeCellDef(int) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int offset, iCurrentWidth, nbMergedCells, i, xPos, $i0, $i1;
        java.lang.String[] $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable tab;
        org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo tableColumnsInfo;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r1, $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r5;
        float $f0;
        boolean $z0;
        java.lang.StringBuffer $r6;
        java.lang.String $r7;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        offset := @parameter0: int;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge>;
        if $i0 != 2 goto label0;

        return offset;

     label0:
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void newLine()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int widthOffset> = offset;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int vMerge>;
        if $i0 != 1 goto label1;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("clvmgf");
        goto label2;

     label1:
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int vMerge>;
        if $i0 != 2 goto label2;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("clvmrg");

     label2:
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r0 = <org.apache.fop.render.rtf.rtflib.rtfdoc.ITableAttributes: java.lang.String[] CELL_COLOR>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])>($r1, $r0);
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r0 = <org.apache.fop.render.rtf.rtflib.rtfdoc.ITableAttributes: java.lang.String[] ATTRIB_CELL_PADDING>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])>($r1, $r0);
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r0 = <org.apache.fop.render.rtf.rtflib.rtfdoc.ITableAttributes: java.lang.String[] CELL_BORDER>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])>($r1, $r0);
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r0 = <org.apache.fop.render.rtf.rtflib.rtfdoc.IBorderAttributes: java.lang.String[] BORDERS>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])>($r1, $r0);
        iCurrentWidth = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int cellWidth>;
        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r3 = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Object getValue(java.lang.String)>("number-columns-spanned");
        if $r3 == null goto label6;

        $r2 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r3 = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Object getValue(java.lang.String)>("number-columns-spanned");
        $r4 = (java.lang.Integer) $r3;
        nbMergedCells = virtualinvoke $r4.<java.lang.Integer: int intValue()>();
        $r5 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow getRow()>();
        tab = virtualinvoke $r5.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable getTable()>();
        tableColumnsInfo = virtualinvoke tab.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo getITableColumnsInfo()>();
        interfaceinvoke tableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectFirstColumn()>();

     label3:
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int id>;
        $i0 = $i0 - 1;
        $i1 = interfaceinvoke tableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: int getColumnIndex()>();
        if $i0 == $i1 goto label4;

        interfaceinvoke tableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectNextColumn()>();
        goto label3;

     label4:
        i = nbMergedCells - 1;

     label5:
        if i <= 0 goto label6;

        interfaceinvoke tableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: void selectNextColumn()>();
        $f0 = interfaceinvoke tableColumnsInfo.<org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo: float getColumnWidth()>();
        $i1 = (int) $f0;
        iCurrentWidth = iCurrentWidth + $i1;
        i = i + -1;
        goto label5;

     label6:
        xPos = offset + iCurrentWidth;
        $z0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setCenter>;
        if $z0 == 0 goto label7;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("qc");
        goto label9;

     label7:
        $z0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setRight>;
        if $z0 == 0 goto label8;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("qr");
        goto label9;

     label8:
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("ql");

     label9:
        $r1 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attrib>;
        $r0 = <org.apache.fop.render.rtf.rtflib.rtfdoc.ITableAttributes: java.lang.String[] CELL_VERT_ALIGN>;
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String[])>($r1, $r0);
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("cellx");
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(xPos);
        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>($r7);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("ql");
        return xPos;
    }

    protected void writeRtfContent() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge>;
        if $i0 != 2 goto label0;

        return;

     label0:
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void writeRtfContent()>();
        return;
    }

    protected void writeRtfPrefix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge>;
        if $i0 != 2 goto label0;

        return;

     label0:
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void writeRtfPrefix()>();
        return;
    }

    protected void writeRtfSuffix() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement lastChild;
        int $i0, $i1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r1;
        boolean $z0;
        java.util.List $r2, $r3;
        java.lang.Object $r4;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge>;
        if $i0 != 2 goto label0;

        return;

     label0:
        $r0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow getRow()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable getTable()>();
        $z0 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: boolean isNestedTable()>();
        if $z0 == 0 goto label1;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWordNS(java.lang.String)>("nestcell");
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeGroupMark(boolean)>(1);
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("nonesttables");
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("par");
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeGroupMark(boolean)>(0);
        goto label8;

     label1:
        $z0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setCenter>;
        if $z0 == 0 goto label2;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("qc");
        goto label6;

     label2:
        $z0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean setRight>;
        if $z0 == 0 goto label3;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("qr");
        goto label6;

     label3:
        lastChild = null;
        $r2 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.util.List getChildren()>();
        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();
        if $i0 <= 0 goto label4;

        $r2 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.util.List getChildren()>();
        $r3 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.util.List getChildren()>();
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();
        $i1 = $i1 - 1;
        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);
        lastChild = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r4;

     label4:
        if lastChild == null goto label5;

        $z0 = lastChild instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun;
        if $z0 == 0 goto label5;

        goto label6;

     label5:
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("ql");

     label6:
        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: boolean containsText()>();
        if $z0 != 0 goto label7;

        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("intbl");

     label7:
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void writeControlWord(java.lang.String)>("cell");

     label8:
        return;
    }

    private void closeCurrentParagraph() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph paragraph>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: void close()>();

     label0:
        return;
    }

    private void closeCurrentList() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList list>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList list>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList: void close()>();

     label0:
        return;
    }

    private void closeCurrentTable() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void close()>();

     label0:
        return;
    }

    private void closeCurrentExternalGraphic() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic externalGraphic>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void close()>();

     label0:
        return;
    }

    private void closeAll() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeCurrentTable()>();
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeCurrentParagraph()>();
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeCurrentList()>();
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void closeCurrentExternalGraphic()>();
        return;
    }

    public void setVMerge(int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int mergeStatus;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        mergeStatus := @parameter0: int;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int vMerge> = mergeStatus;
        return;
    }

    public int getVMerge()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int vMerge>;
        return $i0;
    }

    public void setHMerge(int)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int mergeStatus;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        mergeStatus := @parameter0: int;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge> = mergeStatus;
        return;
    }

    public int getHMerge()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int hMerge>;
        return $i0;
    }

    int getCellWidth()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $i0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: int cellWidth>;
        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        return 0;
    }

    boolean paragraphNeedsPar(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph p, p2;
        boolean pFound, result, $z0;
        java.util.Iterator it;
        java.lang.Object o;
        java.util.List $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        p := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph;
        pFound = 0;
        result = 0;
        $r0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.util.List getChildren()>();
        it = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label7;

        o = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        if pFound != 0 goto label3;

        if o != p goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        pFound = $z0;
        goto label6;

     label3:
        $z0 = o instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph;
        if $z0 == 0 goto label5;

        p2 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph) o;
        $z0 = virtualinvoke p2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfParagraph: boolean isEmpty()>();
        if $z0 != 0 goto label4;

        result = 1;
        goto label7;

     label4:
        goto label6;

     label5:
        $z0 = o instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable;
        if $z0 == 0 goto label6;

        goto label7;

     label6:
        goto label0;

     label7:
        return result;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r0, attrs;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable $r2;
        boolean $z0;
        java.io.Writer $r3;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        attrs = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow getRow()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable getTable()>();
        $z0 = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: boolean isNestedTable()>();
        if $z0 != 0 goto label0;

        virtualinvoke attrs.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("intbl");

     label0:
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: java.io.Writer writer>;
        textrun = staticinvoke <org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(this, $r3, attrs);
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void setSuppressLastPar(boolean)>(1);
        return textrun;
    }

    public org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow getRow()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer e, $r0;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell;
        e = this;

     label0:
        $r0 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        if $r0 == null goto label2;

        $r0 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        $z0 = $r0 instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow;
        if $z0 == 0 goto label1;

        $r0 = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        $r1 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow) $r0;
        return $r1;

     label1:
        e = e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer parent>;
        goto label0;

     label2:
        return null;
    }
}

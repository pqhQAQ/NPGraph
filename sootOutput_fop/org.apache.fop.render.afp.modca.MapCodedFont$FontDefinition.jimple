class org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition extends java.lang.Object
{
    private byte[] codePage;
    private byte[] characterSet;
    private byte fontReferenceKey;
    private byte orientation;
    private int scale;
    private final org.apache.fop.render.afp.modca.MapCodedFont this$0;

    private void <init>(org.apache.fop.render.afp.modca.MapCodedFont)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition this;
        org.apache.fop.render.afp.modca.MapCodedFont l1;

        this := @this: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        l1 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont;
        this.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: org.apache.fop.render.afp.modca.MapCodedFont this$0> = l1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: int scale> = 0;
        return;
    }

    static int access$000(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        int $i0;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        $i0 = x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: int scale>;
        return $i0;
    }

    static byte[] access$100(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte[] $r0;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        $r0 = x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte[] characterSet>;
        return $r0;
    }

    static byte[] access$200(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte[] $r0;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        $r0 = x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte[] codePage>;
        return $r0;
    }

    static byte access$300(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte $b0;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        $b0 = x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte orientation>;
        return $b0;
    }

    static byte access$400(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte $b0;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        $b0 = x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte fontReferenceKey>;
        return $b0;
    }

    void <init>(org.apache.fop.render.afp.modca.MapCodedFont, org.apache.fop.render.afp.modca.MapCodedFont$1)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition this;
        org.apache.fop.render.afp.modca.MapCodedFont x0;
        org.apache.fop.render.afp.modca.MapCodedFont$1 x1;

        this := @this: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont;
        x1 := @parameter1: org.apache.fop.render.afp.modca.MapCodedFont$1;
        specialinvoke this.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: void <init>(org.apache.fop.render.afp.modca.MapCodedFont)>(x0);
        return;
    }

    static byte access$402(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition, byte)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte x1;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        x1 := @parameter1: byte;
        x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte fontReferenceKey> = x1;
        return x1;
    }

    static byte access$302(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition, byte)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte x1;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        x1 := @parameter1: byte;
        x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte orientation> = x1;
        return x1;
    }

    static byte[] access$102(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition, byte[])
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte[] x1;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        x1 := @parameter1: byte[];
        x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte[] characterSet> = x1;
        return x1;
    }

    static byte[] access$202(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition, byte[])
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        byte[] x1;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        x1 := @parameter1: byte[];
        x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: byte[] codePage> = x1;
        return x1;
    }

    static int access$002(org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition, int)
    {
        org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition x0;
        int x1;

        x0 := @parameter0: org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition;
        x1 := @parameter1: int;
        x0.<org.apache.fop.render.afp.modca.MapCodedFont$FontDefinition: int scale> = x1;
        return x1;
    }
}

public class org.apache.fop.svg.SVGUserAgent extends org.apache.batik.bridge.UserAgentAdapter
{
    private java.awt.geom.AffineTransform currentTransform;
    private float pixelUnitToMillimeter;
    private org.apache.commons.logging.Log logger;
    static java.lang.Class class$org$apache$fop$svg$SVGUserAgent;

    public void <init>(float, java.awt.geom.AffineTransform)
    {
        org.apache.fop.svg.SVGUserAgent this;
        float pixelUnitToMM;
        java.awt.geom.AffineTransform at;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        pixelUnitToMM := @parameter0: float;
        at := @parameter1: java.awt.geom.AffineTransform;
        specialinvoke this.<org.apache.batik.bridge.UserAgentAdapter: void <init>()>();
        this.<org.apache.fop.svg.SVGUserAgent: java.awt.geom.AffineTransform currentTransform> = null;
        this.<org.apache.fop.svg.SVGUserAgent: float pixelUnitToMillimeter> = 0.0F;
        $r1 = <org.apache.fop.svg.SVGUserAgent: java.lang.Class class$org$apache$fop$svg$SVGUserAgent>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <org.apache.fop.svg.SVGUserAgent: java.lang.Class class$(java.lang.String)>("org.apache.fop.svg.SVGUserAgent");
        <org.apache.fop.svg.SVGUserAgent: java.lang.Class class$org$apache$fop$svg$SVGUserAgent> = $r1;
        goto label1;

     label0:
        $r1 = <org.apache.fop.svg.SVGUserAgent: java.lang.Class class$org$apache$fop$svg$SVGUserAgent>;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);
        this.<org.apache.fop.svg.SVGUserAgent: org.apache.commons.logging.Log logger> = $r2;
        this.<org.apache.fop.svg.SVGUserAgent: float pixelUnitToMillimeter> = pixelUnitToMM;
        this.<org.apache.fop.svg.SVGUserAgent: java.awt.geom.AffineTransform currentTransform> = at;
        return;
    }

    protected final org.apache.commons.logging.Log getLogger()
    {
        org.apache.fop.svg.SVGUserAgent this;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        $r0 = this.<org.apache.fop.svg.SVGUserAgent: org.apache.commons.logging.Log logger>;
        return $r0;
    }

    public void displayError(java.lang.String)
    {
        org.apache.fop.svg.SVGUserAgent this;
        java.lang.String message;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        message := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.svg.SVGUserAgent: org.apache.commons.logging.Log logger>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>(message);
        return;
    }

    public void displayError(java.lang.Exception)
    {
        org.apache.fop.svg.SVGUserAgent this;
        java.lang.Exception ex;
        java.lang.StringBuffer $r0;
        org.apache.commons.logging.Log $r1;
        java.lang.String $r2, $r3;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        ex := @parameter0: java.lang.Exception;
        $r1 = this.<org.apache.fop.svg.SVGUserAgent: org.apache.commons.logging.Log logger>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SVG Error");
        $r2 = virtualinvoke ex.<java.lang.Exception: java.lang.String getMessage()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r3, ex);
        return;
    }

    public void displayMessage(java.lang.String)
    {
        org.apache.fop.svg.SVGUserAgent this;
        java.lang.String message;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        message := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.svg.SVGUserAgent: org.apache.commons.logging.Log logger>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void info(java.lang.Object)>(message);
        return;
    }

    public void showAlert(java.lang.String)
    {
        org.apache.fop.svg.SVGUserAgent this;
        java.lang.String message;
        org.apache.commons.logging.Log $r0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        message := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.svg.SVGUserAgent: org.apache.commons.logging.Log logger>;
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(message);
        return;
    }

    public float getPixelUnitToMillimeter()
    {
        org.apache.fop.svg.SVGUserAgent this;
        float $f0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        $f0 = this.<org.apache.fop.svg.SVGUserAgent: float pixelUnitToMillimeter>;
        return $f0;
    }

    public java.lang.String getLanguages()
    {
        org.apache.fop.svg.SVGUserAgent this;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        return "en";
    }

    public java.lang.String getMedia()
    {
        org.apache.fop.svg.SVGUserAgent this;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        return "print";
    }

    public java.lang.String getUserStyleSheetURI()
    {
        org.apache.fop.svg.SVGUserAgent this;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        return null;
    }

    public java.lang.String getXMLParserClassName()
    {
        org.apache.fop.svg.SVGUserAgent this;
        javax.xml.parsers.SAXParserFactory factory;
        java.lang.Exception e, $r4;
        javax.xml.parsers.SAXParser $r0;
        org.xml.sax.XMLReader $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.svg.SVGUserAgent;

     label0:
        factory = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        $r0 = virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        e = $r4;
        return null;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public boolean isXMLParserValidating()
    {
        org.apache.fop.svg.SVGUserAgent this;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        return 0;
    }

    public java.awt.geom.AffineTransform getTransform()
    {
        org.apache.fop.svg.SVGUserAgent this;
        java.awt.geom.AffineTransform $r0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        $r0 = this.<org.apache.fop.svg.SVGUserAgent: java.awt.geom.AffineTransform currentTransform>;
        return $r0;
    }

    public java.awt.geom.Dimension2D getViewportSize()
    {
        org.apache.fop.svg.SVGUserAgent this;
        java.awt.Dimension $r0;

        this := @this: org.apache.fop.svg.SVGUserAgent;
        $r0 = new java.awt.Dimension;
        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>(100, 100);
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

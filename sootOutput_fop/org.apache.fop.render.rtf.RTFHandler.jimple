public class org.apache.fop.render.rtf.RTFHandler extends org.apache.fop.fo.FOEventHandler
{
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile rtfFile;
    private final java.io.OutputStream os;
    private static org.apache.commons.logging.Log log;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea;
    private boolean bDefer;
    private boolean bPrevHeaderSpecified;
    private boolean bPrevFooterSpecified;
    private boolean bHeaderSpecified;
    private boolean bFooterSpecified;
    private org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext;
    private org.apache.fop.fo.pagination.SimplePageMaster pagemaster;
    private int nestedTableDepth;
    private org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager;
    private static final org.apache.xmlgraphics.image.loader.ImageFlavor[] FLAVORS;
    static java.lang.Class class$org$apache$fop$render$rtf$RTFHandler;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTableContainer;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfListContainer;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfListItem;
    static java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote;

    public void <init>(org.apache.fop.apps.FOUserAgent, java.io.OutputStream)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.apps.FOUserAgent userAgent;
        java.io.OutputStream os;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r1;
        org.apache.fop.fonts.FontInfo $r2;
        org.apache.fop.render.DefaultFontResolver $r3;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        userAgent := @parameter0: org.apache.fop.apps.FOUserAgent;
        os := @parameter1: java.io.OutputStream;
        specialinvoke this.<org.apache.fop.fo.FOEventHandler: void <init>(org.apache.fop.apps.FOUserAgent)>(userAgent);
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bPrevHeaderSpecified> = 0;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bPrevFooterSpecified> = 0;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bHeaderSpecified> = 0;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bFooterSpecified> = 0;
        $r0 = new org.apache.fop.render.rtf.rtflib.tools.BuilderContext;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfOptions)>(null);
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext> = $r0;
        this.<org.apache.fop.render.rtf.RTFHandler: int nestedTableDepth> = 1;
        $r1 = new org.apache.fop.render.rtf.rtflib.tools.PercentContext;
        specialinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void <init>()>();
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager> = $r1;
        this.<org.apache.fop.render.rtf.RTFHandler: java.io.OutputStream os> = os;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer> = 1;
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fonts.FontInfo fontInfo>;
        $r3 = new org.apache.fop.render.DefaultFontResolver;
        specialinvoke $r3.<org.apache.fop.render.DefaultFontResolver: void <init>(org.apache.fop.apps.FOUserAgent)>(userAgent);
        staticinvoke <org.apache.fop.fonts.FontSetup: void setup(org.apache.fop.fonts.FontInfo,java.util.List,org.apache.fop.fonts.FontResolver)>($r2, null, $r3);
        return;
    }

    public void startDocument() throws org.xml.sax.SAXException
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile $r0;
        java.io.OutputStreamWriter $r1;
        java.io.IOException ioe, $r4;
        java.io.OutputStream $r2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea $r3;
        org.xml.sax.SAXException $r5;

        this := @this: org.apache.fop.render.rtf.RTFHandler;

     label0:
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile;
        $r1 = new java.io.OutputStreamWriter;
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: java.io.OutputStream os>;
        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r2);
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void <init>(java.io.Writer)>($r1);
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile rtfFile> = $r0;
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile rtfFile>;
        $r3 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea startDocumentArea()>();
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea> = $r3;

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        ioe = $r4;
        $r5 = new org.xml.sax.SAXException;
        specialinvoke $r5.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(ioe);
        throw $r5;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void endDocument() throws org.xml.sax.SAXException
    {
        org.apache.fop.render.rtf.RTFHandler this;
        java.io.IOException ioe, $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile $r0;
        org.xml.sax.SAXException $r2;

        this := @this: org.apache.fop.render.rtf.RTFHandler;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile rtfFile>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile: void flush()>();

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        ioe = $r1;
        $r2 = new org.xml.sax.SAXException;
        specialinvoke $r2.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>(ioe);
        throw $r2;

     label3:
        return;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public void startPageSequence(org.apache.fop.fo.pagination.PageSequence)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.pagination.PageSequence pageSeq;
        java.lang.String reference, $r6, $r21;
        org.apache.fop.fo.pagination.PageSequenceMaster master;
        int useAblePageWidth, $i0, $i1;
        java.io.IOException ioe, $r20;
        org.apache.fop.apps.FOPException fope, $r22;
        org.apache.fop.fo.pagination.SimplePageMaster $r0, $r3;
        org.apache.fop.fo.pagination.Root $r1, $r7;
        org.apache.fop.fo.pagination.LayoutMasterSet $r2, $r8;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea $r9;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection $r10, $r11;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r12, $r13;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r14;
        org.apache.fop.datatypes.Length $r15, $r17;
        org.apache.fop.fo.properties.CommonMarginBlock $r16;
        java.lang.Integer $r18;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r19;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        pageSeq := @parameter0: org.apache.fop.fo.pagination.PageSequence;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        if $r0 != null goto label1;

        reference = virtualinvoke pageSeq.<org.apache.fop.fo.pagination.PageSequence: java.lang.String getMasterReference()>();
        $r1 = virtualinvoke pageSeq.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.pagination.Root: org.apache.fop.fo.pagination.LayoutMasterSet getLayoutMasterSet()>();
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.pagination.LayoutMasterSet: org.apache.fop.fo.pagination.SimplePageMaster getSimplePageMaster(java.lang.String)>(reference);
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster> = $r3;
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        if $r0 != null goto label1;

        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Only simple-page-masters are supported on page-sequences: ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(reference);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r6);
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Using default simple-page-master from page-sequence-master...");
        $r7 = virtualinvoke pageSeq.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Root getRoot()>();
        $r8 = virtualinvoke $r7.<org.apache.fop.fo.pagination.Root: org.apache.fop.fo.pagination.LayoutMasterSet getLayoutMasterSet()>();
        master = virtualinvoke $r8.<org.apache.fop.fo.pagination.LayoutMasterSet: org.apache.fop.fo.pagination.PageSequenceMaster getPageSequenceMaster(java.lang.String)>(reference);
        $r3 = virtualinvoke master.<org.apache.fop.fo.pagination.PageSequenceMaster: org.apache.fop.fo.pagination.SimplePageMaster getNextSimplePageMaster(boolean,boolean,boolean,boolean,boolean)>(0, 0, 0, 0, 0);
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster> = $r3;

     label1:
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        $r9 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea docArea>;
        $r10 = virtualinvoke $r9.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfDocumentArea: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection newSection()>();
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect> = $r10;
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        if $r0 == null goto label4;

        $r11 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect>;
        $r12 = virtualinvoke $r11.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        $r3 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        $r13 = staticinvoke <org.apache.fop.render.rtf.PageAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertPageAttributes(org.apache.fop.fo.pagination.SimplePageMaster)>($r3);
        virtualinvoke $r12.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r13);
        goto label5;

     label4:
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("No simple-page-master could be determined!");

     label5:
        $r14 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r10 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect>;
        virtualinvoke $r14.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>($r10);
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        $r15 = virtualinvoke $r0.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.datatypes.Length getPageWidth()>();
        $i0 = interfaceinvoke $r15.<org.apache.fop.datatypes.Length: int getValue()>();
        $r3 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        $r16 = virtualinvoke $r3.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.properties.CommonMarginBlock getCommonMarginBlock()>();
        $r17 = $r16.<org.apache.fop.fo.properties.CommonMarginBlock: org.apache.fop.datatypes.Length marginLeft>;
        $i1 = interfaceinvoke $r17.<org.apache.fop.datatypes.Length: int getValue()>();
        $i0 = $i0 - $i1;
        $r3 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        $r16 = virtualinvoke $r3.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.properties.CommonMarginBlock getCommonMarginBlock()>();
        $r17 = $r16.<org.apache.fop.fo.properties.CommonMarginBlock: org.apache.fop.datatypes.Length marginRight>;
        $i1 = interfaceinvoke $r17.<org.apache.fop.datatypes.Length: int getValue()>();
        $i0 = $i0 - $i1;
        $r10 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect>;
        $r13 = virtualinvoke $r10.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        $r18 = virtualinvoke $r13.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Integer getValueAsInteger(java.lang.String)>("margl");
        $i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();
        $i0 = $i0 - $i1;
        $r10 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection sect>;
        $r13 = virtualinvoke $r10.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfSection: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        $r18 = virtualinvoke $r13.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: java.lang.Integer getValueAsInteger(java.lang.String)>("margr");
        $i1 = virtualinvoke $r18.<java.lang.Integer: int intValue()>();
        useAblePageWidth = $i0 - $i1;
        $r19 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        virtualinvoke $r19.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj,int)>(pageSeq, useAblePageWidth);
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bHeaderSpecified> = 0;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bFooterSpecified> = 0;

     label6:
        goto label9;

     label7:
        $r20 := @caughtexception;
        ioe = $r20;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageSequence: ");
        $r21 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r6, ioe);
        goto label9;

     label8:
        $r22 := @caughtexception;
        fope = $r22;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageSequence: ");
        $r21 = virtualinvoke fope.<org.apache.fop.apps.FOPException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);
        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r6, fope);

     label9:
        return;

        catch java.io.IOException from label0 to label2 with label7;
        catch java.io.IOException from label3 to label6 with label7;
        catch org.apache.fop.apps.FOPException from label0 to label2 with label8;
        catch org.apache.fop.apps.FOPException from label3 to label6 with label8;
    }

    public void endPageSequence(org.apache.fop.fo.pagination.PageSequence)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.pagination.PageSequence pageSeq;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        pageSeq := @parameter0: org.apache.fop.fo.pagination.PageSequence;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer> = 0;
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>(pageSeq);
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster> = null;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer> = 1;
        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster> = null;
        return;
    }

    public void startFlow(org.apache.fop.fo.pagination.Flow)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.pagination.Flow fl;
        java.lang.StringBuffer $r0;
        boolean handled, $z0;
        org.apache.fop.fo.pagination.Region regionBody, regionBefore, regionAfter;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attr, beforeAttributes, afterAttributes, $r6;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer contBefore, c;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer contAfter, c;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfBefore before;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfter after;
        java.io.IOException ioe, $r13;
        java.lang.Exception e, $r15;
        org.apache.commons.logging.Log $r1;
        java.lang.String $r2, $r3, $r5;
        org.apache.fop.fo.pagination.SimplePageMaster $r4;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r7;
        java.lang.Class $r8;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r9;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement $r12;
        java.lang.RuntimeException $r14;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        fl := @parameter0: org.apache.fop.fo.pagination.Flow;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("starting flow: ");
        $r2 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r3);
        handled = 0;
        $r4 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionBody = virtualinvoke $r4.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(36);
        $r4 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionBefore = virtualinvoke $r4.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(35);
        $r4 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionAfter = virtualinvoke $r4.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(34);
        $r5 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r3 = virtualinvoke regionBody.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label7;

        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bPrevHeaderSpecified>;
        if $z0 == 0 goto label3;

        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bHeaderSpecified>;
        if $z0 != 0 goto label3;

        $r6 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r6.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        attr = $r6;
        virtualinvoke attr.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("header");
        $r7 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer>;
        if $r8 != null goto label1;

        $r8 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer> = $r8;
        goto label2;

     label1:
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer>;

     label2:
        $r9 = virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r8, 1, this);
        contBefore = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer) $r9;
        interfaceinvoke contBefore.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfBefore newBefore(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(attr);

     label3:
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bPrevFooterSpecified>;
        if $z0 == 0 goto label6;

        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bFooterSpecified>;
        if $z0 != 0 goto label6;

        $r6 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r6.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        attr = $r6;
        virtualinvoke attr.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("footer");
        $r7 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer>;
        if $r8 != null goto label4;

        $r8 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer> = $r8;
        goto label5;

     label4:
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer>;

     label5:
        $r9 = virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r8, 1, this);
        contAfter = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer) $r9;
        interfaceinvoke contAfter.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfter newAfter(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(attr);

     label6:
        handled = 1;
        goto label15;

     label7:
        if regionBefore == null goto label11;

        $r5 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r3 = virtualinvoke regionBefore.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label11;

        this.<org.apache.fop.render.rtf.RTFHandler: boolean bHeaderSpecified> = 1;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bPrevHeaderSpecified> = 1;
        $r7 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer>;
        if $r8 != null goto label8;

        $r8 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer> = $r8;
        goto label9;

     label8:
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfBeforeContainer>;

     label9:
        $r9 = virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r8, 1, this);
        c = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer) $r9;
        $r12 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) c;
        beforeAttributes = virtualinvoke $r12.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        if beforeAttributes != null goto label10;

        $r6 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r6.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        beforeAttributes = $r6;

     label10:
        virtualinvoke beforeAttributes.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("header");
        before = interfaceinvoke c.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfBeforeContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfBefore newBefore(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(beforeAttributes);
        $r7 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(before);
        handled = 1;
        goto label15;

     label11:
        if regionAfter == null goto label15;

        $r5 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r3 = virtualinvoke regionAfter.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);
        if $z0 == 0 goto label15;

        this.<org.apache.fop.render.rtf.RTFHandler: boolean bFooterSpecified> = 1;
        this.<org.apache.fop.render.rtf.RTFHandler: boolean bPrevFooterSpecified> = 1;
        $r7 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer>;
        if $r8 != null goto label12;

        $r8 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer> = $r8;
        goto label13;

     label12:
        $r8 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfAfterContainer>;

     label13:
        $r9 = virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r8, 1, this);
        c = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer) $r9;
        $r12 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) c;
        afterAttributes = virtualinvoke $r12.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        if afterAttributes != null goto label14;

        $r6 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r6.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        afterAttributes = $r6;

     label14:
        virtualinvoke afterAttributes.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("footer");
        after = interfaceinvoke c.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfAfterContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAfter newAfter(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(afterAttributes);
        $r7 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(after);
        handled = 1;

     label15:
        if handled != 0 goto label16;

        $r1 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A ");
        $r2 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getLocalName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" has been skipped: ");
        $r2 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r3);

     label16:
        goto label19;

     label17:
        $r13 := @caughtexception;
        ioe = $r13;
        $r1 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startFlow: ");
        $r2 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r14 = new java.lang.RuntimeException;
        $r2 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);
        throw $r14;

     label18:
        $r15 := @caughtexception;
        e = $r15;
        $r1 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startFlow: ");
        $r2 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r1.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r14 = new java.lang.RuntimeException;
        $r2 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);
        throw $r14;

     label19:
        return;

        catch java.io.IOException from label0 to label16 with label17;
        catch java.lang.Exception from label0 to label16 with label18;
    }

    public void endFlow(org.apache.fop.fo.pagination.Flow)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.pagination.Flow fl;
        org.apache.fop.fo.pagination.Region regionBody, regionBefore, regionAfter;
        java.lang.Exception e, $r4;
        boolean $z0;
        org.apache.fop.fo.pagination.SimplePageMaster $r0;
        java.lang.String $r1, $r2, $r7;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r3;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuffer $r6;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        fl := @parameter0: org.apache.fop.fo.pagination.Flow;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionBody = virtualinvoke $r0.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(36);
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionBefore = virtualinvoke $r0.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(35);
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionAfter = virtualinvoke $r0.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(34);
        $r1 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r2 = virtualinvoke regionBody.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label1;

        goto label3;

     label1:
        if regionBefore == null goto label2;

        $r1 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r2 = virtualinvoke regionBefore.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label2;

        $r3 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r3.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        goto label3;

     label2:
        if regionAfter == null goto label3;

        $r1 = virtualinvoke fl.<org.apache.fop.fo.pagination.Flow: java.lang.String getFlowName()>();
        $r2 = virtualinvoke regionAfter.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);
        if $z0 == 0 goto label3;

        $r3 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r3.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;
        e = $r4;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endFlow: ");
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r2);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    public void startBlock(org.apache.fop.fo.flow.Block)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Block bl;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes rtfAttr;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r4;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        java.lang.String $r3, $r7;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuffer $r6, $r9;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        bl := @parameter0: org.apache.fop.fo.flow.Block;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        rtfAttr = staticinvoke <org.apache.fop.render.rtf.TextAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertAttributes(org.apache.fop.fo.flow.Block)>(bl);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addParagraphBreak()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void pushBlockAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(rtfAttr);
        $r3 = virtualinvoke bl.<org.apache.fop.fo.flow.Block: java.lang.String getId()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addBookmark(java.lang.String)>($r3);

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;
        ioe = $r4;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock: ");
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IOException: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(ioe);
        $r7 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label5:
        $r10 := @caughtexception;
        e = $r10;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock: ");
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(e);
        $r7 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void endBlock(org.apache.fop.fo.flow.Block)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Block bl;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r9;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        bl := @parameter0: org.apache.fop.fo.flow.Block;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addParagraphBreak()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void popBlockAttributes()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock:");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r9 := @caughtexception;
        e = $r9;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock:");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void startBlockContainer(org.apache.fop.fo.flow.BlockContainer)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.BlockContainer blc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes rtfAttr;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5, $r9;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        blc := @parameter0: org.apache.fop.fo.flow.BlockContainer;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        rtfAttr = staticinvoke <org.apache.fop.render.rtf.TextAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertBlockContainerAttributes(org.apache.fop.fo.flow.BlockContainer)>(blc);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addParagraphBreak()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void pushBlockAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(rtfAttr);

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock: ");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IOException: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(ioe);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r10 := @caughtexception;
        e = $r10;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(e);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void endBlockContainer(org.apache.fop.fo.flow.BlockContainer)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.BlockContainer bl;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r9;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        bl := @parameter0: org.apache.fop.fo.flow.BlockContainer;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addParagraphBreak()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void popBlockAttributes()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock:");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r9 := @caughtexception;
        e = $r9;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBlock:");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void startTable(org.apache.fop.fo.flow.table.Table)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.Table tbl;
        org.apache.fop.render.rtf.rtflib.tools.TableContext tableContext, $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer tc;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes atts, borderAttributes, $r6;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable table;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground border;
        java.lang.Exception e, $r7;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1, $r2;
        java.lang.Class $r3;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r4;
        int $i0;
        org.apache.commons.logging.Log $r8;
        java.lang.StringBuffer $r9;
        java.lang.String $r10, $r11;
        java.lang.RuntimeException $r12;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tbl := @parameter0: org.apache.fop.fo.flow.table.Table;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = new org.apache.fop.render.rtf.rtflib.tools.TableContext;
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void <init>(org.apache.fop.render.rtf.rtflib.tools.BuilderContext)>($r1);
        tableContext = $r0;

     label1:
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r3 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTableContainer>;
        if $r3 != null goto label2;

        $r3 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTableContainer> = $r3;
        goto label3;

     label2:
        $r3 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTableContainer>;

     label3:
        $r4 = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r3, 1, null);
        tc = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer) $r4;
        atts = staticinvoke <org.apache.fop.render.rtf.TableAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertTableAttributes(org.apache.fop.fo.flow.table.Table)>(tbl);
        table = interfaceinvoke tc.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTableContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable newTable(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,org.apache.fop.render.rtf.rtflib.rtfdoc.ITableColumnsInfo)>(atts, tableContext);
        $i0 = this.<org.apache.fop.render.rtf.RTFHandler: int nestedTableDepth>;
        virtualinvoke table.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void setNestedTableDepth(int)>($i0);
        $i0 = this.<org.apache.fop.render.rtf.RTFHandler: int nestedTableDepth>;
        $i0 = $i0 + 1;
        this.<org.apache.fop.render.rtf.RTFHandler: int nestedTableDepth> = $i0;
        border = virtualinvoke tbl.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()>();
        $r6 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r6.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        borderAttributes = $r6;
        staticinvoke <org.apache.fop.render.rtf.BorderAttributesConverter: void makeBorder(org.apache.fop.fo.properties.CommonBorderPaddingBackground,int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String)>(border, 0, borderAttributes, "clbrdrt");
        staticinvoke <org.apache.fop.render.rtf.BorderAttributesConverter: void makeBorder(org.apache.fop.fo.properties.CommonBorderPaddingBackground,int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String)>(border, 1, borderAttributes, "clbrdrb");
        staticinvoke <org.apache.fop.render.rtf.BorderAttributesConverter: void makeBorder(org.apache.fop.fo.properties.CommonBorderPaddingBackground,int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String)>(border, 2, borderAttributes, "clbrdrl");
        staticinvoke <org.apache.fop.render.rtf.BorderAttributesConverter: void makeBorder(org.apache.fop.fo.properties.CommonBorderPaddingBackground,int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes,java.lang.String)>(border, 3, borderAttributes, "clbrdrr");
        virtualinvoke table.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void setBorderAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(borderAttributes);
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(table);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;
        e = $r7;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startTable:");
        $r10 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r11);
        $r12 = new java.lang.RuntimeException;
        $r10 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
        throw $r12;

     label6:
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushTableContext(org.apache.fop.render.rtf.rtflib.tools.TableContext)>(tableContext);
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void endTable(org.apache.fop.fo.flow.table.Table)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.Table tbl;
        boolean $z0;
        int $i0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tbl := @parameter0: org.apache.fop.fo.flow.table.Table;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $i0 = this.<org.apache.fop.render.rtf.RTFHandler: int nestedTableDepth>;
        $i0 = $i0 - 1;
        this.<org.apache.fop.render.rtf.RTFHandler: int nestedTableDepth> = $i0;
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popTableContext()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        return;
    }

    public void startColumn(org.apache.fop.fo.flow.table.TableColumn)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableColumn tc;
        int iWidth;
        java.lang.Float width, $r3;
        java.lang.Exception e, $r8;
        boolean $z0;
        org.apache.fop.datatypes.Length $r0;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r1, $r2;
        org.apache.fop.render.rtf.FoUnitsConverter $r4;
        float $f0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r5;
        org.apache.fop.render.rtf.rtflib.tools.TableContext $r6;
        java.lang.Integer $r7;
        org.apache.commons.logging.Log $r9;
        java.lang.StringBuffer $r10;
        java.lang.String $r11, $r12;
        java.lang.RuntimeException $r13;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tc := @parameter0: org.apache.fop.fo.flow.table.TableColumn;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = virtualinvoke tc.<org.apache.fop.fo.flow.table.TableColumn: org.apache.fop.datatypes.Length getColumnWidth()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        iWidth = interfaceinvoke $r0.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>($r1);
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj,int)>(tc, iWidth);
        $r3 = new java.lang.Float;
        $r4 = staticinvoke <org.apache.fop.render.rtf.FoUnitsConverter: org.apache.fop.render.rtf.FoUnitsConverter getInstance()>();
        $f0 = virtualinvoke $r4.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>(iWidth);
        specialinvoke $r3.<java.lang.Float: void <init>(float)>($f0);
        width = $r3;
        $r5 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r6 = virtualinvoke $r5.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        virtualinvoke $r6.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setNextColumnWidth(java.lang.Float)>(width);
        $r5 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r6 = virtualinvoke $r5.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        $r7 = new java.lang.Integer;
        specialinvoke $r7.<java.lang.Integer: void <init>(int)>(0);
        virtualinvoke $r6.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setNextColumnRowSpanning(java.lang.Integer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r7, null);
        $r5 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r6 = virtualinvoke $r5.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        virtualinvoke $r6.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setNextFirstSpanningCol(boolean)>(0);

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        e = $r8;
        $r9 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startColumn: ");
        $r11 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);
        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r12);
        $r13 = new java.lang.RuntimeException;
        $r11 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
        throw $r13;

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void endColumn(org.apache.fop.fo.flow.table.TableColumn)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableColumn tc;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tc := @parameter0: org.apache.fop.fo.flow.table.TableColumn;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        return;
    }

    public void startHeader(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableBody th;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        th := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        return;
    }

    public void endHeader(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableBody th;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        th := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        return;
    }

    public void startFooter(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableBody tf;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tf := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        return;
    }

    public void endFooter(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableBody tf;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tf := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        return;
    }

    public void startInline(org.apache.fop.fo.flow.Inline)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Inline inl;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes rtfAttr;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r4;
        org.apache.fop.apps.FOPException fe, $r9;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        java.lang.String $r3, $r7;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuffer $r6;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        inl := @parameter0: org.apache.fop.fo.flow.Inline;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        rtfAttr = staticinvoke <org.apache.fop.render.rtf.TextAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertCharacterAttributes(org.apache.fop.fo.flow.Inline)>(inl);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void pushInlineAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(rtfAttr);
        $r3 = virtualinvoke inl.<org.apache.fop.fo.flow.Inline: java.lang.String getId()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addBookmark(java.lang.String)>($r3);

     label3:
        goto label7;

     label4:
        $r4 := @caughtexception;
        ioe = $r4;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startInline:");
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label5:
        $r9 := @caughtexception;
        fe = $r9;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startInline:");
        $r7 = virtualinvoke fe.<org.apache.fop.apps.FOPException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke fe.<org.apache.fop.apps.FOPException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label6:
        $r10 := @caughtexception;
        e = $r10;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startInline:");
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label7:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch org.apache.fop.apps.FOPException from label0 to label3 with label5;
        catch java.lang.Exception from label0 to label3 with label6;
    }

    public void endInline(org.apache.fop.fo.flow.Inline)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Inline inl;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r9;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        inl := @parameter0: org.apache.fop.fo.flow.Inline;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void popInlineAttributes()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startInline:");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r9 := @caughtexception;
        e = $r9;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startInline:");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void startBody(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableBody tb;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes atts;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable tbl;
        java.lang.Exception e, $r3;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tb := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        atts = staticinvoke <org.apache.fop.render.rtf.TableAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertTableBodyAttributes(org.apache.fop.fo.flow.table.TableBody)>(tb);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        tbl = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable) $r2;
        virtualinvoke tbl.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void setHeaderAttribs(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(atts);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;
        e = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startBody: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    public void endBody(org.apache.fop.fo.flow.table.TableBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableBody tb;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable tbl;
        java.lang.Exception e, $r3;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tb := @parameter0: org.apache.fop.fo.flow.table.TableBody;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        tbl = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable) $r2;
        virtualinvoke tbl.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: void setHeaderAttribs(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(null);

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;
        e = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endBody: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    public void startRow(org.apache.fop.fo.flow.table.TableRow)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableRow tr;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable tbl;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes atts, $r3;
        java.lang.Exception e, $r8;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.fop.fo.FONode $r4;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow $r6;
        org.apache.fop.render.rtf.rtflib.tools.TableContext $r7;
        org.apache.commons.logging.Log $r9;
        java.lang.StringBuffer $r10;
        java.lang.String $r11, $r12;
        java.lang.RuntimeException $r13;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tr := @parameter0: org.apache.fop.fo.flow.table.TableRow;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTable>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, null);
        tbl = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable) $r2;
        $r3 = virtualinvoke tbl.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getHeaderAttribs()>();
        atts = staticinvoke <org.apache.fop.render.rtf.TableAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertRowAttributes(org.apache.fop.fo.flow.table.TableRow,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(tr, $r3);
        $r4 = virtualinvoke tr.<org.apache.fop.fo.flow.table.TableRow: org.apache.fop.fo.FONode getParent()>();
        $z0 = $r4 instanceof org.apache.fop.fo.flow.table.TableHeader;
        if $z0 == 0 goto label3;

        virtualinvoke atts.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes set(java.lang.String)>("trhdr");

     label3:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r6 = virtualinvoke tbl.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTable: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow newTableRow(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(atts);
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>($r6);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r7 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        virtualinvoke $r7.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void selectFirstColumn()>();

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;
        e = $r8;
        $r9 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r10 = new java.lang.StringBuffer;
        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startRow: ");
        $r11 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);
        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r9.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r12);
        $r13 = new java.lang.RuntimeException;
        $r11 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
        throw $r13;

     label6:
        return;

        catch java.lang.Exception from label0 to label4 with label5;
    }

    public void endRow(org.apache.fop.fo.flow.table.TableRow)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableRow tr;
        org.apache.fop.render.rtf.rtflib.tools.TableContext tctx, $r11;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell vCell;
        java.lang.Exception e, $r5;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        int $i0, $i1;
        java.lang.Integer $r3;
        float $f0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r4;
        org.apache.commons.logging.Log $r6;
        java.lang.StringBuffer $r7;
        java.lang.String $r8, $r9;
        java.lang.RuntimeException $r10;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tr := @parameter0: org.apache.fop.fo.flow.table.TableRow;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        tctx = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, null);
        row = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow) $r2;

     label3:
        $i0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: int getNumberOfColumns()>();
        $i1 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: int getColumnIndex()>();
        if $i0 <= $i1 goto label5;

        $r3 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: java.lang.Integer getColumnRowSpanningNumber()>();
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        if $i0 <= 0 goto label5;

        $f0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: float getColumnWidth()>();
        $i1 = (int) $f0;
        $r4 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getColumnRowSpanningAttrs()>();
        vCell = virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell newTableCellMergedVertically(int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($i1, $r4);
        $z0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: boolean getFirstSpanningCol()>();
        if $z0 != 0 goto label4;

        virtualinvoke vCell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void setHMerge(int)>(2);

     label4:
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void selectNextColumn()>();
        goto label3;

     label5:
        goto label7;

     label6:
        $r5 := @caughtexception;
        e = $r5;
        $r6 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r7 = new java.lang.StringBuffer;
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endRow: ");
        $r8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);
        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r9);
        $r10 = new java.lang.RuntimeException;
        $r8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
        throw $r10;

     label7:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r11 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        virtualinvoke $r11.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void decreaseRowSpannings()>();
        return;

        catch java.lang.Exception from label0 to label5 with label6;
    }

    public void startCell(org.apache.fop.fo.flow.table.TableCell)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableCell tc;
        org.apache.fop.render.rtf.rtflib.tools.TableContext tctx;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow row;
        int numberRowsSpanned, numberColumnsSpanned, i, $i0, $i1, $i2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell vCell, cell, hCell;
        float width, $f0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes atts, $r4;
        java.lang.Exception e, $r7;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        java.lang.Integer $r3, $r5;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r6;
        org.apache.commons.logging.Log $r8;
        java.lang.StringBuffer $r9;
        java.lang.String $r10, $r11;
        java.lang.RuntimeException $r12;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tc := @parameter0: org.apache.fop.fo.flow.table.TableCell;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        tctx = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfTableRow>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, null);
        row = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow) $r2;
        numberRowsSpanned = virtualinvoke tc.<org.apache.fop.fo.flow.table.TableCell: int getNumberRowsSpanned()>();
        numberColumnsSpanned = virtualinvoke tc.<org.apache.fop.fo.flow.table.TableCell: int getNumberColumnsSpanned()>();

     label3:
        $i0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: int getNumberOfColumns()>();
        $i1 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: int getColumnIndex()>();
        if $i0 <= $i1 goto label5;

        $r3 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: java.lang.Integer getColumnRowSpanningNumber()>();
        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();
        if $i0 <= 0 goto label5;

        $f0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: float getColumnWidth()>();
        $i1 = (int) $f0;
        $r4 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getColumnRowSpanningAttrs()>();
        vCell = virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell newTableCellMergedVertically(int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($i1, $r4);
        $z0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: boolean getFirstSpanningCol()>();
        if $z0 != 0 goto label4;

        virtualinvoke vCell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void setHMerge(int)>(2);

     label4:
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void selectNextColumn()>();
        goto label3;

     label5:
        width = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: float getColumnWidth()>();
        atts = staticinvoke <org.apache.fop.render.rtf.TableAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertCellAttributes(org.apache.fop.fo.flow.table.TableCell)>(tc);
        $i1 = (int) width;
        cell = virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell newTableCell(int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($i1, atts);
        if numberRowsSpanned <= 1 goto label6;

        virtualinvoke cell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void setVMerge(int)>(1);
        $r5 = new java.lang.Integer;
        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(numberRowsSpanned);
        $r4 = virtualinvoke cell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setCurrentColumnRowSpanning(java.lang.Integer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r5, $r4);
        goto label7;

     label6:
        $r5 = new java.lang.Integer;
        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(numberRowsSpanned);
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setCurrentColumnRowSpanning(java.lang.Integer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r5, null);

     label7:
        if numberColumnsSpanned <= 0 goto label11;

        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setCurrentFirstSpanningCol(boolean)>(1);
        i = 0;

     label8:
        $i1 = numberColumnsSpanned - 1;
        if i >= $i1 goto label11;

        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void selectNextColumn()>();
        $f0 = virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: float getColumnWidth()>();
        width = width + $f0;
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setCurrentFirstSpanningCol(boolean)>(0);
        hCell = virtualinvoke row.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableRow: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell newTableCellMergedHorizontally(int,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(0, null);
        if numberRowsSpanned <= 1 goto label9;

        virtualinvoke hCell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: void setVMerge(int)>(1);
        $r5 = new java.lang.Integer;
        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(numberRowsSpanned);
        $r4 = virtualinvoke cell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setCurrentColumnRowSpanning(java.lang.Integer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r5, $r4);
        goto label10;

     label9:
        $r5 = new java.lang.Integer;
        specialinvoke $r5.<java.lang.Integer: void <init>(int)>(numberRowsSpanned);
        $r4 = virtualinvoke cell.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTableCell: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes getRtfAttributes()>();
        virtualinvoke tctx.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void setCurrentColumnRowSpanning(java.lang.Integer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r5, $r4);

     label10:
        i = i + 1;
        goto label8;

     label11:
        $r6 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $i2 = (int) width;
        $i2 = $i2 * 50;
        virtualinvoke $r6.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj,int)>(tc, $i2);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(cell);

     label12:
        goto label14;

     label13:
        $r7 := @caughtexception;
        e = $r7;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startCell: ");
        $r10 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r11);
        $r12 = new java.lang.RuntimeException;
        $r10 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);
        throw $r12;

     label14:
        return;

        catch java.lang.Exception from label0 to label12 with label13;
    }

    public void endCell(org.apache.fop.fo.flow.table.TableCell)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.TableCell tc;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;
        org.apache.fop.render.rtf.rtflib.tools.TableContext $r1;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tc := @parameter0: org.apache.fop.fo.flow.table.TableCell;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r1 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.tools.TableContext getTableContext()>();
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.TableContext: void selectNextColumn()>();
        return;
    }

    public void startList(org.apache.fop.fo.flow.ListBlock)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.ListBlock lb;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer c;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList newList;
        java.io.IOException ioe, $r4;
        org.apache.fop.apps.FOPException fe, $r10;
        java.lang.Exception e, $r11;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r3;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuffer $r6;
        java.lang.String $r7, $r8;
        java.lang.RuntimeException $r9;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        lb := @parameter0: org.apache.fop.fo.flow.ListBlock;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfListContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfListContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfListContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        c = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer) $r2;
        $r3 = staticinvoke <org.apache.fop.render.rtf.ListAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertAttributes(org.apache.fop.fo.flow.ListBlock)>(lb);
        newList = interfaceinvoke c.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfListContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList newList(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r3);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(newList);

     label3:
        goto label7;

     label4:
        $r4 := @caughtexception;
        ioe = $r4;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startList: ");
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r8);
        $r9 = new java.lang.RuntimeException;
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r9;

     label5:
        $r10 := @caughtexception;
        fe = $r10;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startList: ");
        $r7 = virtualinvoke fe.<org.apache.fop.apps.FOPException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r8);
        $r9 = new java.lang.RuntimeException;
        $r7 = virtualinvoke fe.<org.apache.fop.apps.FOPException: java.lang.String getMessage()>();
        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r9;

     label6:
        $r11 := @caughtexception;
        e = $r11;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startList: ");
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r8);
        $r9 = new java.lang.RuntimeException;
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r9;

     label7:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch org.apache.fop.apps.FOPException from label0 to label3 with label5;
        catch java.lang.Exception from label0 to label3 with label6;
    }

    public void endList(org.apache.fop.fo.flow.ListBlock)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.ListBlock lb;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        lb := @parameter0: org.apache.fop.fo.flow.ListBlock;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        return;
    }

    public void startListItem(org.apache.fop.fo.flow.ListItem)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.ListItem li;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList list;
        java.io.IOException ioe, $r6;
        java.lang.Exception e, $r12;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        int $i0;
        org.apache.fop.fo.FONode $r3;
        org.apache.fop.fo.flow.ListBlock $r4;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem $r5;
        org.apache.commons.logging.Log $r7;
        java.lang.StringBuffer $r8;
        java.lang.String $r9, $r10;
        java.lang.RuntimeException $r11;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        li := @parameter0: org.apache.fop.fo.flow.ListItem;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        list = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList) $r2;
        $i0 = virtualinvoke list.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList: int getChildCount()>();
        if $i0 <= 0 goto label5;

        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endListBody()>();
        $r3 = virtualinvoke li.<org.apache.fop.fo.flow.ListItem: org.apache.fop.fo.FONode getParent()>();
        $r4 = (org.apache.fop.fo.flow.ListBlock) $r3;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endList(org.apache.fop.fo.flow.ListBlock)>($r4);
        $r3 = virtualinvoke li.<org.apache.fop.fo.flow.ListItem: org.apache.fop.fo.FONode getParent()>();
        $r4 = (org.apache.fop.fo.flow.ListBlock) $r3;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startList(org.apache.fop.fo.flow.ListBlock)>($r4);
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startListBody()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList>;
        if $r0 != null goto label3;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList> = $r0;
        goto label4;

     label3:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfList>;

     label4:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        list = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList) $r2;

     label5:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r5 = virtualinvoke list.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfList: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem newListItem()>();
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>($r5);

     label6:
        goto label9;

     label7:
        $r6 := @caughtexception;
        ioe = $r6;
        $r7 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startList: ");
        $r9 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r10);
        $r11 = new java.lang.RuntimeException;
        $r9 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
        throw $r11;

     label8:
        $r12 := @caughtexception;
        e = $r12;
        $r7 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startList: ");
        $r9 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r10);
        $r11 = new java.lang.RuntimeException;
        $r9 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
        throw $r11;

     label9:
        return;

        catch java.io.IOException from label0 to label6 with label7;
        catch java.lang.Exception from label0 to label6 with label8;
    }

    public void endListItem(org.apache.fop.fo.flow.ListItem)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.ListItem li;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        li := @parameter0: org.apache.fop.fo.flow.ListItem;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        return;
    }

    public void startListLabel()
    {
        org.apache.fop.render.rtf.RTFHandler this;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem item;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem$RtfListItemLabel label, $r3;
        java.io.IOException ioe, $r6;
        java.lang.Exception e, $r12;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r7;
        java.lang.StringBuffer $r8;
        java.lang.String $r9, $r10;
        java.lang.RuntimeException $r11;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfListItem>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfListItem> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfListItem>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        item = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem) $r2;
        $r3 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem$RtfListItemLabel;
        virtualinvoke item.<java.lang.Object: java.lang.Class getClass()>();
        specialinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem$RtfListItemLabel: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfListItem)>(item, item);
        label = $r3;
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(label);

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;
        ioe = $r6;
        $r7 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageNumber:");
        $r9 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r10);
        $r11 = new java.lang.RuntimeException;
        $r9 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
        throw $r11;

     label5:
        $r12 := @caughtexception;
        e = $r12;
        $r7 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r8 = new java.lang.StringBuffer;
        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageNumber: ");
        $r9 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);
        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r7.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r10);
        $r11 = new java.lang.RuntimeException;
        $r9 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
        throw $r11;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void endListLabel()
    {
        org.apache.fop.render.rtf.RTFHandler this;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        return;
    }

    public void startListBody()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void endListBody()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void startStatic()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void endStatic()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void startMarkup()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void endMarkup()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void startLink(org.apache.fop.fo.flow.BasicLink)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.BasicLink basicLink;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHyperLink link;
        java.io.IOException ioe, $r5;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes $r3;
        java.lang.String $r4, $r8;
        org.apache.commons.logging.Log $r6;
        java.lang.StringBuffer $r7;
        java.lang.RuntimeException $r9;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        basicLink := @parameter0: org.apache.fop.fo.flow.BasicLink;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        $r3 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke $r3.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes: void <init>()>();
        link = virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHyperLink addHyperlink(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>($r3);
        $z0 = virtualinvoke basicLink.<org.apache.fop.fo.flow.BasicLink: boolean hasExternalDestination()>();
        if $z0 == 0 goto label3;

        $r4 = virtualinvoke basicLink.<org.apache.fop.fo.flow.BasicLink: java.lang.String getExternalDestination()>();
        virtualinvoke link.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHyperLink: void setExternalURL(java.lang.String)>($r4);
        goto label4;

     label3:
        $r4 = virtualinvoke basicLink.<org.apache.fop.fo.flow.BasicLink: java.lang.String getInternalDestination()>();
        virtualinvoke link.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfHyperLink: void setInternalURL(java.lang.String)>($r4);

     label4:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(link);

     label5:
        goto label8;

     label6:
        $r5 := @caughtexception;
        ioe = $r5;
        $r6 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r7 = new java.lang.StringBuffer;
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startLink:");
        $r8 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);
        $r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r4);
        $r9 = new java.lang.RuntimeException;
        $r8 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
        throw $r9;

     label7:
        $r10 := @caughtexception;
        e = $r10;
        $r6 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r7 = new java.lang.StringBuffer;
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startLink: ");
        $r8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);
        $r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r4);
        $r9 = new java.lang.RuntimeException;
        $r8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
        throw $r9;

     label8:
        return;

        catch java.io.IOException from label0 to label5 with label6;
        catch java.lang.Exception from label0 to label5 with label7;
    }

    public void endLink()
    {
        org.apache.fop.render.rtf.RTFHandler this;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        return;
    }

    public void image(org.apache.fop.fo.flow.ExternalGraphic)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.ExternalGraphic eg;
        java.lang.String uri, $r4, $r6;
        org.apache.fop.apps.FOUserAgent userAgent;
        org.apache.xmlgraphics.image.loader.ImageManager manager;
        org.apache.xmlgraphics.image.loader.ImageInfo info;
        java.lang.Exception e, $r5;
        boolean $z0;
        org.apache.fop.apps.FopFactory $r0;
        org.apache.xmlgraphics.image.loader.ImageSessionContext $r1;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        eg := @parameter0: org.apache.fop.fo.flow.ExternalGraphic;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        uri = virtualinvoke eg.<org.apache.fop.fo.flow.ExternalGraphic: java.lang.String getURL()>();
        userAgent = virtualinvoke eg.<org.apache.fop.fo.flow.ExternalGraphic: org.apache.fop.apps.FOUserAgent getUserAgent()>();
        $r0 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.fop.apps.FopFactory getFactory()>();
        manager = virtualinvoke $r0.<org.apache.fop.apps.FopFactory: org.apache.xmlgraphics.image.loader.ImageManager getImageManager()>();
        $r1 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()>();
        info = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.ImageInfo getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)>(uri, $r1);
        if info != null goto label2;

        $r2 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Image could not be found: ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(uri);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r4);

     label1:
        return;

     label2:
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.ImageInfo)>(eg, info);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;
        e = $r5;
        $r2 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while handling an external-graphic: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r4, e);

     label5:
        return;

        catch java.lang.Exception from label0 to label1 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void foreignObject(org.apache.fop.fo.flow.InstreamForeignObject)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.InstreamForeignObject ifo;
        org.apache.fop.fo.XMLObj child;
        org.w3c.dom.Document doc;
        java.lang.String ns, $r10, $r11;
        org.apache.xmlgraphics.image.loader.ImageInfo info, $r0;
        org.apache.fop.apps.FOUserAgent ua, userAgent;
        org.apache.xmlgraphics.image.loader.ImageSize size, $r1;
        java.awt.geom.Point2D$Float csize, $r2;
        java.awt.geom.Point2D intrinsicDimensions;
        org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM image, $r3;
        org.apache.xmlgraphics.image.loader.ImageManager manager;
        java.util.Map hints;
        org.apache.xmlgraphics.image.loader.Image converted;
        java.lang.Exception e, $r7;
        boolean $z0;
        float $f0;
        double $d0, $d1;
        long $l0, $l2;
        int $i1, $i3;
        org.apache.fop.apps.FopFactory $r4;
        org.apache.xmlgraphics.image.loader.ImageSessionContext $r5;
        org.apache.xmlgraphics.image.loader.ImageFlavor[] $r6;
        org.apache.commons.logging.Log $r8;
        java.lang.StringBuffer $r9;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        ifo := @parameter0: org.apache.fop.fo.flow.InstreamForeignObject;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        child = virtualinvoke ifo.<org.apache.fop.fo.flow.InstreamForeignObject: org.apache.fop.fo.XMLObj getChildXMLObj()>();
        doc = virtualinvoke child.<org.apache.fop.fo.XMLObj: org.w3c.dom.Document getDOMDocument()>();
        ns = virtualinvoke child.<org.apache.fop.fo.XMLObj: java.lang.String getNamespaceURI()>();
        $r0 = new org.apache.xmlgraphics.image.loader.ImageInfo;
        specialinvoke $r0.<org.apache.xmlgraphics.image.loader.ImageInfo: void <init>(java.lang.String,java.lang.String)>(null, null);
        info = $r0;
        ua = virtualinvoke ifo.<org.apache.fop.fo.flow.InstreamForeignObject: org.apache.fop.apps.FOUserAgent getUserAgent()>();
        $r1 = new org.apache.xmlgraphics.image.loader.ImageSize;
        specialinvoke $r1.<org.apache.xmlgraphics.image.loader.ImageSize: void <init>()>();
        size = $r1;
        $f0 = virtualinvoke ua.<org.apache.fop.apps.FOUserAgent: float getSourceResolution()>();
        $d0 = (double) $f0;
        virtualinvoke size.<org.apache.xmlgraphics.image.loader.ImageSize: void setResolution(double)>($d0);
        $r2 = new java.awt.geom.Point2D$Float;
        specialinvoke $r2.<java.awt.geom.Point2D$Float: void <init>(float,float)>(-1.0F, -1.0F);
        csize = $r2;
        intrinsicDimensions = virtualinvoke child.<org.apache.fop.fo.XMLObj: java.awt.geom.Point2D getDimension(java.awt.geom.Point2D)>(csize);
        $d0 = virtualinvoke intrinsicDimensions.<java.awt.geom.Point2D: double getX()>();
        $d0 = $d0 * 1000.0;
        $l0 = staticinvoke <java.lang.Math: long round(double)>($d0);
        $i1 = (int) $l0;
        $d1 = virtualinvoke intrinsicDimensions.<java.awt.geom.Point2D: double getY()>();
        $d1 = $d1 * 1000.0;
        $l2 = staticinvoke <java.lang.Math: long round(double)>($d1);
        $i3 = (int) $l2;
        virtualinvoke size.<org.apache.xmlgraphics.image.loader.ImageSize: void setSizeInMillipoints(int,int)>($i1, $i3);
        virtualinvoke size.<org.apache.xmlgraphics.image.loader.ImageSize: void calcPixelsFromSize()>();
        virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: void setSize(org.apache.xmlgraphics.image.loader.ImageSize)>(size);
        $r3 = new org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM;
        specialinvoke $r3.<org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM: void <init>(org.apache.xmlgraphics.image.loader.ImageInfo,org.w3c.dom.Document,java.lang.String)>(info, doc, ns);
        image = $r3;
        userAgent = virtualinvoke ifo.<org.apache.fop.fo.flow.InstreamForeignObject: org.apache.fop.apps.FOUserAgent getUserAgent()>();
        $r4 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.fop.apps.FopFactory getFactory()>();
        manager = virtualinvoke $r4.<org.apache.fop.apps.FopFactory: org.apache.xmlgraphics.image.loader.ImageManager getImageManager()>();
        $r5 = virtualinvoke ua.<org.apache.fop.apps.FOUserAgent: org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()>();
        hints = staticinvoke <org.apache.xmlgraphics.image.loader.util.ImageUtil: java.util.Map getDefaultHints(org.apache.xmlgraphics.image.loader.ImageSessionContext)>($r5);
        $r6 = <org.apache.fop.render.rtf.RTFHandler: org.apache.xmlgraphics.image.loader.ImageFlavor[] FLAVORS>;
        converted = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.Image convertImage(org.apache.xmlgraphics.image.loader.Image,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map)>(image, $r6, hints);
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)>(ifo, converted);

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        e = $r7;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while handling an instream-foreign-object: ");
        $r10 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);
        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r11, e);

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private void putGraphic(org.apache.fop.fo.flow.AbstractGraphics, org.apache.xmlgraphics.image.loader.ImageInfo) throws java.io.IOException
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.AbstractGraphics abstractGraphic;
        org.apache.xmlgraphics.image.loader.ImageInfo info;
        org.apache.fop.apps.FOUserAgent userAgent;
        org.apache.xmlgraphics.image.loader.ImageManager manager;
        org.apache.xmlgraphics.image.loader.ImageSessionContext sessionContext;
        java.util.Map hints;
        org.apache.xmlgraphics.image.loader.ImageFlavor[] $r0;
        org.apache.xmlgraphics.image.loader.Image image;
        org.apache.xmlgraphics.image.loader.ImageException ie, $r2;
        org.apache.fop.apps.FopFactory $r1;
        org.apache.commons.logging.Log $r3;
        java.lang.StringBuffer $r4;
        java.lang.String $r5, $r6;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        abstractGraphic := @parameter0: org.apache.fop.fo.flow.AbstractGraphics;
        info := @parameter1: org.apache.xmlgraphics.image.loader.ImageInfo;

     label0:
        userAgent = virtualinvoke abstractGraphic.<org.apache.fop.fo.flow.AbstractGraphics: org.apache.fop.apps.FOUserAgent getUserAgent()>();
        $r1 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.fop.apps.FopFactory getFactory()>();
        manager = virtualinvoke $r1.<org.apache.fop.apps.FopFactory: org.apache.xmlgraphics.image.loader.ImageManager getImageManager()>();
        sessionContext = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()>();
        hints = staticinvoke <org.apache.xmlgraphics.image.loader.util.ImageUtil: java.util.Map getDefaultHints(org.apache.xmlgraphics.image.loader.ImageSessionContext)>(sessionContext);
        $r0 = <org.apache.fop.render.rtf.RTFHandler: org.apache.xmlgraphics.image.loader.ImageFlavor[] FLAVORS>;
        image = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.Image getImage(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[],java.util.Map,org.apache.xmlgraphics.image.loader.ImageSessionContext)>(info, $r0, hints, sessionContext);
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void putGraphic(org.apache.fop.fo.flow.AbstractGraphics,org.apache.xmlgraphics.image.loader.Image)>(abstractGraphic, image);

     label1:
        goto label3;

     label2:
        $r2 := @caughtexception;
        ie = $r2;
        $r3 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r4 = new java.lang.StringBuffer;
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error while loading/processing image: ");
        $r5 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: java.lang.String getOriginalURI()>();
        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r6, ie);

     label3:
        return;

        catch org.apache.xmlgraphics.image.loader.ImageException from label0 to label1 with label2;
    }

    private void putGraphic(org.apache.fop.fo.flow.AbstractGraphics, org.apache.xmlgraphics.image.loader.Image) throws java.io.IOException
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.AbstractGraphics abstractGraphic;
        org.apache.xmlgraphics.image.loader.Image image;
        byte[] rawData;
        org.apache.xmlgraphics.image.loader.ImageInfo info, $r7;
        org.apache.xmlgraphics.image.loader.impl.ImageRawStream rawImage;
        java.io.InputStream in;
        java.lang.Throwable l7, $r1;
        java.lang.StringBuffer $r0;
        org.apache.fop.render.rtf.RTFHandler$1 pContext, $r5;
        org.apache.fop.layoutmgr.inline.ImageLayout layout, $r6;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer c;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic rtfGraphic;
        org.apache.fop.render.rtf.FoUnitsConverter converter;
        java.awt.Dimension viewport, $r9;
        java.awt.Rectangle placement;
        int cropLeft, cropTop, cropRight, cropBottom, width, height, $i0, $i1, $i2;
        byte compression;
        boolean $z0;
        org.apache.commons.logging.Log $r2;
        java.lang.String $r3, $r14;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r4;
        org.apache.xmlgraphics.image.loader.ImageSize $r8;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r10;
        java.lang.Class $r11;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r12;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun $r13;
        float $f0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        abstractGraphic := @parameter0: org.apache.fop.fo.flow.AbstractGraphics;
        image := @parameter1: org.apache.xmlgraphics.image.loader.Image;
        rawData = null;
        info = interfaceinvoke image.<org.apache.xmlgraphics.image.loader.Image: org.apache.xmlgraphics.image.loader.ImageInfo getInfo()>();
        $z0 = image instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawStream;
        if $z0 == 0 goto label5;

        rawImage = (org.apache.xmlgraphics.image.loader.impl.ImageRawStream) image;
        in = virtualinvoke rawImage.<org.apache.xmlgraphics.image.loader.impl.ImageRawStream: java.io.InputStream createInputStream()>();

     label0:
        rawData = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(in);

     label1:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(in);
        goto label5;

     label2:
        $r1 := @caughtexception;

     label3:
        l7 = $r1;

     label4:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(in);
        throw l7;

     label5:
        if rawData != null goto label6;

        $r2 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Image could not be embedded: ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(image);
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        $r3 = staticinvoke <org.apache.fop.fo.FONode: java.lang.String decorateWithContextInfo(java.lang.String,org.apache.fop.fo.FONode)>($r3, abstractGraphic);
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r3);
        return;

     label6:
        $r4 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        virtualinvoke $r4.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj)>(abstractGraphic);
        $r5 = new org.apache.fop.render.rtf.RTFHandler$1;
        specialinvoke $r5.<org.apache.fop.render.rtf.RTFHandler$1: void <init>(org.apache.fop.render.rtf.RTFHandler,org.apache.xmlgraphics.image.loader.ImageInfo)>(this, info);
        pContext = $r5;
        $r6 = new org.apache.fop.layoutmgr.inline.ImageLayout;
        $r7 = interfaceinvoke image.<org.apache.xmlgraphics.image.loader.Image: org.apache.xmlgraphics.image.loader.ImageInfo getInfo()>();
        $r8 = virtualinvoke $r7.<org.apache.xmlgraphics.image.loader.ImageInfo: org.apache.xmlgraphics.image.loader.ImageSize getSize()>();
        $r9 = virtualinvoke $r8.<org.apache.xmlgraphics.image.loader.ImageSize: java.awt.Dimension getDimensionMpt()>();
        specialinvoke $r6.<org.apache.fop.layoutmgr.inline.ImageLayout: void <init>(org.apache.fop.fo.GraphicsProperties,org.apache.fop.datatypes.PercentBaseContext,java.awt.Dimension)>(abstractGraphic, pContext, $r9);
        layout = $r6;
        $r10 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r11 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r11 != null goto label7;

        $r11 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r11;
        goto label8;

     label7:
        $r11 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label8:
        $r12 = virtualinvoke $r10.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r11, 1, this);
        c = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r12;
        $r13 = interfaceinvoke c.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        rtfGraphic = virtualinvoke $r13.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic newImage()>();
        $r14 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: java.lang.String getOriginalURI()>();
        if $r14 == null goto label9;

        $r3 = virtualinvoke info.<org.apache.xmlgraphics.image.loader.ImageInfo: java.lang.String getOriginalURI()>();
        virtualinvoke rtfGraphic.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void setURL(java.lang.String)>($r3);

     label9:
        virtualinvoke rtfGraphic.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void setImageData(byte[])>(rawData);
        converter = staticinvoke <org.apache.fop.render.rtf.FoUnitsConverter: org.apache.fop.render.rtf.FoUnitsConverter getInstance()>();
        viewport = virtualinvoke layout.<org.apache.fop.layoutmgr.inline.ImageLayout: java.awt.Dimension getViewportSize()>();
        placement = virtualinvoke layout.<org.apache.fop.layoutmgr.inline.ImageLayout: java.awt.Rectangle getPlacement()>();
        $i0 = placement.<java.awt.Rectangle: int x>;
        $i0 = neg $i0;
        $f0 = virtualinvoke converter.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>($i0);
        cropLeft = staticinvoke <java.lang.Math: int round(float)>($f0);
        $i0 = placement.<java.awt.Rectangle: int y>;
        $i0 = neg $i0;
        $f0 = virtualinvoke converter.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>($i0);
        cropTop = staticinvoke <java.lang.Math: int round(float)>($f0);
        $i1 = viewport.<java.awt.Dimension: int width>;
        $i2 = placement.<java.awt.Rectangle: int x>;
        $i1 = $i1 - $i2;
        $i2 = placement.<java.awt.Rectangle: int width>;
        $i1 = $i1 - $i2;
        $i0 = -1 * $i1;
        $f0 = virtualinvoke converter.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>($i0);
        cropRight = staticinvoke <java.lang.Math: int round(float)>($f0);
        $i1 = viewport.<java.awt.Dimension: int height>;
        $i2 = placement.<java.awt.Rectangle: int y>;
        $i1 = $i1 - $i2;
        $i2 = placement.<java.awt.Rectangle: int height>;
        $i1 = $i1 - $i2;
        $i0 = -1 * $i1;
        $f0 = virtualinvoke converter.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>($i0);
        cropBottom = staticinvoke <java.lang.Math: int round(float)>($f0);
        virtualinvoke rtfGraphic.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void setCropping(int,int,int,int)>(cropLeft, cropTop, cropRight, cropBottom);
        $i0 = viewport.<java.awt.Dimension: int width>;
        $f0 = virtualinvoke converter.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>($i0);
        width = staticinvoke <java.lang.Math: int round(float)>($f0);
        $i0 = viewport.<java.awt.Dimension: int height>;
        $f0 = virtualinvoke converter.<org.apache.fop.render.rtf.FoUnitsConverter: float convertMptToTwips(int)>($i0);
        height = staticinvoke <java.lang.Math: int round(float)>($f0);
        $i0 = cropLeft + cropRight;
        width = width + $i0;
        $i0 = cropTop + cropBottom;
        height = height + $i0;
        virtualinvoke rtfGraphic.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void setWidthTwips(int)>(width);
        virtualinvoke rtfGraphic.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: void setHeightTwips(int)>(height);
        compression = 0;
        if compression == 0 goto label10;

        $z0 = virtualinvoke rtfGraphic.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfExternalGraphic: boolean setCompressionRate(int)>(compression);
        if $z0 != 0 goto label10;

        $r2 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("The compression rate ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(compression);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" is invalid. The value has to be between 1 and 100 %.");
        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r3);

     label10:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    public void pageRef()
    {
        org.apache.fop.render.rtf.RTFHandler this;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        return;
    }

    public void startFootnote(org.apache.fop.fo.flow.Footnote)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Footnote footnote;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote rtfFootnote;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5, $r9;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        footnote := @parameter0: org.apache.fop.fo.flow.Footnote;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        rtfFootnote = virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote addFootnote()>();
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void pushContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(rtfFootnote);

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startFootnote: ");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IOException: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(ioe);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r10 := @caughtexception;
        e = $r10;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startFootnote: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(e);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void endFootnote(org.apache.fop.fo.flow.Footnote)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Footnote footnote;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        footnote := @parameter0: org.apache.fop.fo.flow.Footnote;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: void popContainer()>();
        return;
    }

    public void startFootnoteBody(org.apache.fop.fo.flow.FootnoteBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.FootnoteBody body;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote rtfFootnote;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5, $r9;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        body := @parameter0: org.apache.fop.fo.flow.FootnoteBody;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        rtfFootnote = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote) $r2;
        virtualinvoke rtfFootnote.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote: void startBody()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startFootnoteBody: ");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IOException: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(ioe);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r10 := @caughtexception;
        e = $r10;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startFootnoteBody: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(e);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void endFootnoteBody(org.apache.fop.fo.flow.FootnoteBody)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.FootnoteBody body;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote rtfFootnote;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r10;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5, $r9;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        body := @parameter0: org.apache.fop.fo.flow.FootnoteBody;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$RtfFootnote>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        rtfFootnote = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote) $r2;
        virtualinvoke rtfFootnote.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFootnote: void endBody()>();

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endFootnoteBody: ");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("IOException: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(ioe);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r10 := @caughtexception;
        e = $r10;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endFootnoteBody: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r9 = new java.lang.StringBuffer;
        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(e);
        $r6 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void leader(org.apache.fop.fo.flow.Leader)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.Leader l;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes rtfAttr;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.lang.Exception e, $r5;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r0, $r1;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r2;
        java.lang.Class $r3;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r4;
        org.apache.commons.logging.Log $r6;
        java.lang.StringBuffer $r7;
        java.lang.String $r8, $r9;
        java.lang.RuntimeException $r10;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        l := @parameter0: org.apache.fop.fo.flow.Leader;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj)>(l);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        rtfAttr = staticinvoke <org.apache.fop.render.rtf.TextAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertLeaderAttributes(org.apache.fop.fo.flow.Leader,org.apache.fop.datatypes.PercentBaseContext)>(l, $r1);
        $r2 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r3 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r3 != null goto label1;

        $r3 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r3;
        goto label2;

     label1:
        $r3 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r4 = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r3, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r4;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addLeader(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(rtfAttr);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;
        e = $r5;
        $r6 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r7 = new java.lang.StringBuffer;
        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startLeader: ");
        $r8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r7 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);
        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r9);
        $r10 = new java.lang.RuntimeException;
        $r8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8);
        throw $r10;

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    public void text(org.apache.fop.fo.FOText, char[], int, int)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.FOText text;
        char[] data;
        int start, length, $i0;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes rtfAttr;
        java.io.IOException ioe, $r4;
        java.lang.Exception e, $r9;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        java.lang.String $r3, $r7;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuffer $r6;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        text := @parameter0: org.apache.fop.fo.FOText;
        data := @parameter1: char[];
        start := @parameter2: int;
        length := @parameter3: int;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        rtfAttr = staticinvoke <org.apache.fop.render.rtf.TextAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertCharacterAttributes(org.apache.fop.fo.FOText)>(text);
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void pushInlineAttributes(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(rtfAttr);
        $r3 = new java.lang.String;
        $i0 = length - start;
        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(data, start, $i0);
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addString(java.lang.String)>($r3);
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void popInlineAttributes()>();

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;
        ioe = $r4;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("characters: ");
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label5:
        $r9 := @caughtexception;
        e = $r9;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("characters:");
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void startPageNumber(org.apache.fop.fo.flow.PageNumber)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.PageNumber pagenum;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes rtfAttr;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.io.IOException ioe, $r3;
        java.lang.Exception e, $r9;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        org.apache.commons.logging.Log $r4;
        java.lang.StringBuffer $r5;
        java.lang.String $r6, $r7;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        pagenum := @parameter0: org.apache.fop.fo.flow.PageNumber;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        rtfAttr = staticinvoke <org.apache.fop.render.rtf.TextAttributesConverter: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes convertCharacterAttributes(org.apache.fop.fo.flow.PageNumber)>(pagenum);
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addPageNumber(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(rtfAttr);

     label3:
        goto label6;

     label4:
        $r3 := @caughtexception;
        ioe = $r3;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageNumber:");
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke ioe.<java.io.IOException: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label5:
        $r9 := @caughtexception;
        e = $r9;
        $r4 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r5 = new java.lang.StringBuffer;
        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageNumber: ");
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);
        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r7);
        $r8 = new java.lang.RuntimeException;
        $r6 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);
        throw $r8;

     label6:
        return;

        catch java.io.IOException from label0 to label3 with label4;
        catch java.lang.Exception from label0 to label3 with label5;
    }

    public void endPageNumber(org.apache.fop.fo.flow.PageNumber)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.PageNumber pagenum;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        pagenum := @parameter0: org.apache.fop.fo.flow.PageNumber;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        return;
    }

    public void startPageNumberCitation(org.apache.fop.fo.flow.PageNumberCitation)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.PageNumberCitation l;
        java.lang.Class $r0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer container;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun textrun;
        java.lang.Exception e, $r4;
        boolean $z0;
        org.apache.fop.render.rtf.rtflib.tools.BuilderContext $r1;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer $r2;
        java.lang.String $r3, $r7;
        org.apache.commons.logging.Log $r5;
        java.lang.StringBuffer $r6;
        java.lang.RuntimeException $r8;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        l := @parameter0: org.apache.fop.fo.flow.PageNumberCitation;
        $z0 = this.<org.apache.fop.render.rtf.RTFHandler: boolean bDefer>;
        if $z0 == 0 goto label0;

        return;

     label0:
        $r1 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.BuilderContext builderContext>;
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;
        if $r0 != null goto label1;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer> = $r0;
        goto label2;

     label1:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$rtflib$rtfdoc$IRtfTextrunContainer>;

     label2:
        $r2 = virtualinvoke $r1.<org.apache.fop.render.rtf.rtflib.tools.BuilderContext: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer getContainer(java.lang.Class,boolean,java.lang.Object)>($r0, 1, this);
        container = (org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer) $r2;
        textrun = interfaceinvoke container.<org.apache.fop.render.rtf.rtflib.rtfdoc.IRtfTextrunContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun getTextrun()>();
        $r3 = virtualinvoke l.<org.apache.fop.fo.flow.PageNumberCitation: java.lang.String getRefId()>();
        virtualinvoke textrun.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfTextrun: void addPageNumberCitation(java.lang.String)>($r3);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;
        e = $r4;
        $r5 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r6 = new java.lang.StringBuffer;
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("startPageNumberCitation: ");
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);
        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r5.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r3);
        $r8 = new java.lang.RuntimeException;
        $r7 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();
        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);
        throw $r8;

     label5:
        return;

        catch java.lang.Exception from label0 to label3 with label4;
    }

    private void prepareTable(org.apache.fop.fo.flow.table.Table)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.flow.table.Table tab;
        int tabDiff, $i0, $i1, $i2;
        org.apache.fop.layoutmgr.table.ColumnSetup columnSetup, $r11;
        float tableWidth, tableUnit;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r0, $r9, $r10, $r12;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r1, $r2;
        org.apache.fop.fo.properties.LengthRangeProperty $r3, $r6;
        org.apache.fop.fo.properties.Property $r4, $r7;
        org.apache.fop.datatypes.Length $r5, $r8;
        boolean $z0;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        tab := @parameter0: org.apache.fop.fo.flow.table.Table;
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj)>(tab);
        $r1 = virtualinvoke tab.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()>();
        $i0 = virtualinvoke $r1.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getBorderStartWidth(boolean)>(0);
        $i0 = $i0 / 2;
        $r2 = virtualinvoke tab.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()>();
        $i1 = virtualinvoke $r2.<org.apache.fop.fo.properties.CommonBorderPaddingBackground: int getBorderEndWidth(boolean)>(0);
        tabDiff = $i0 + $i1;
        $r3 = virtualinvoke tab.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.properties.LengthRangeProperty getInlineProgressionDimension()>();
        $r4 = virtualinvoke $r3.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $z0 = $r5 instanceof org.apache.fop.fo.properties.EnumLength;
        if $z0 != 0 goto label0;

        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $r6 = virtualinvoke tab.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.properties.LengthRangeProperty getInlineProgressionDimension()>();
        $r7 = virtualinvoke $r6.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(null);
        $r8 = virtualinvoke $r7.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $r9 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $i2 = interfaceinvoke $r8.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>($r9);
        $i2 = $i2 - tabDiff;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj,int)>(tab, $i2);
        goto label1;

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $r10 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $i2 = virtualinvoke $r10.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: int getBaseLength(int,org.apache.fop.fo.FObj)>(5, tab);
        $i2 = $i2 - tabDiff;
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setDimension(org.apache.fop.fo.FObj,int)>(tab, $i2);

     label1:
        $r11 = new org.apache.fop.layoutmgr.table.ColumnSetup;
        specialinvoke $r11.<org.apache.fop.layoutmgr.table.ColumnSetup: void <init>(org.apache.fop.fo.flow.table.Table)>(tab);
        columnSetup = $r11;
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $i0 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: int getBaseLength(int,org.apache.fop.fo.FObj)>(5, tab);
        tableWidth = (float) $i0;
        $r12 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $i2 = staticinvoke <java.lang.Math: int round(float)>(tableWidth);
        tableUnit = virtualinvoke columnSetup.<org.apache.fop.layoutmgr.table.ColumnSetup: float computeTableUnit(org.apache.fop.datatypes.PercentBaseContext,int)>($r12, $i2);
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        $i2 = staticinvoke <java.lang.Math: int round(float)>(tableUnit);
        virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.tools.PercentContext: void setTableUnit(org.apache.fop.fo.flow.table.Table,int)>(tab, $i2);
        return;
    }

    private void invokeDeferredEvent(org.apache.fop.fo.FONode, boolean)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.FONode foNode;
        boolean bStart, $z0;
        org.apache.fop.fo.FOText text;
        org.apache.fop.fo.flow.Character c;
        org.apache.fop.fo.pagination.PageSequence $r0;
        org.apache.fop.fo.pagination.Flow $r1;
        org.apache.fop.fo.flow.ExternalGraphic $r2;
        org.apache.fop.fo.flow.InstreamForeignObject $r3;
        org.apache.fop.fo.flow.Block $r4;
        org.apache.fop.fo.flow.BlockContainer $r5;
        org.apache.fop.fo.flow.BasicLink $r6;
        org.apache.fop.fo.flow.Inline $r7;
        char[] $r8;
        int $i0, $i1;
        org.apache.fop.fo.flow.PageNumber $r9;
        org.apache.fop.fo.flow.Footnote $r10;
        org.apache.fop.fo.flow.FootnoteBody $r11;
        org.apache.fop.fo.flow.ListBlock $r12;
        org.apache.fop.fo.flow.ListItem $r13;
        org.apache.fop.fo.flow.table.Table $r14;
        org.apache.fop.fo.flow.table.TableBody $r15;
        org.apache.fop.fo.flow.table.TableColumn $r16;
        org.apache.fop.fo.flow.table.TableRow $r17;
        org.apache.fop.fo.flow.table.TableCell $r18;
        org.apache.fop.fo.flow.Leader $r19;
        org.apache.fop.fo.flow.PageNumberCitation $r20;
        org.apache.commons.logging.Log $r21;
        java.lang.StringBuffer $r22;
        java.lang.String $r23;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        foNode := @parameter0: org.apache.fop.fo.FONode;
        bStart := @parameter1: boolean;
        $z0 = foNode instanceof org.apache.fop.fo.pagination.PageSequence;
        if $z0 == 0 goto label1;

        if bStart == 0 goto label0;

        $r0 = (org.apache.fop.fo.pagination.PageSequence) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startPageSequence(org.apache.fop.fo.pagination.PageSequence)>($r0);
        goto label45;

     label0:
        $r0 = (org.apache.fop.fo.pagination.PageSequence) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endPageSequence(org.apache.fop.fo.pagination.PageSequence)>($r0);
        goto label45;

     label1:
        $z0 = foNode instanceof org.apache.fop.fo.pagination.Flow;
        if $z0 == 0 goto label3;

        if bStart == 0 goto label2;

        $r1 = (org.apache.fop.fo.pagination.Flow) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startFlow(org.apache.fop.fo.pagination.Flow)>($r1);
        goto label45;

     label2:
        $r1 = (org.apache.fop.fo.pagination.Flow) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endFlow(org.apache.fop.fo.pagination.Flow)>($r1);
        goto label45;

     label3:
        $z0 = foNode instanceof org.apache.fop.fo.pagination.StaticContent;
        if $z0 == 0 goto label5;

        if bStart == 0 goto label4;

        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startStatic()>();
        goto label45;

     label4:
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endStatic()>();
        goto label45;

     label5:
        $z0 = foNode instanceof org.apache.fop.fo.flow.ExternalGraphic;
        if $z0 == 0 goto label6;

        if bStart == 0 goto label45;

        $r2 = (org.apache.fop.fo.flow.ExternalGraphic) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void image(org.apache.fop.fo.flow.ExternalGraphic)>($r2);
        goto label45;

     label6:
        $z0 = foNode instanceof org.apache.fop.fo.flow.InstreamForeignObject;
        if $z0 == 0 goto label7;

        if bStart == 0 goto label45;

        $r3 = (org.apache.fop.fo.flow.InstreamForeignObject) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void foreignObject(org.apache.fop.fo.flow.InstreamForeignObject)>($r3);
        goto label45;

     label7:
        $z0 = foNode instanceof org.apache.fop.fo.flow.Block;
        if $z0 == 0 goto label9;

        if bStart == 0 goto label8;

        $r4 = (org.apache.fop.fo.flow.Block) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startBlock(org.apache.fop.fo.flow.Block)>($r4);
        goto label45;

     label8:
        $r4 = (org.apache.fop.fo.flow.Block) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endBlock(org.apache.fop.fo.flow.Block)>($r4);
        goto label45;

     label9:
        $z0 = foNode instanceof org.apache.fop.fo.flow.BlockContainer;
        if $z0 == 0 goto label11;

        if bStart == 0 goto label10;

        $r5 = (org.apache.fop.fo.flow.BlockContainer) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startBlockContainer(org.apache.fop.fo.flow.BlockContainer)>($r5);
        goto label45;

     label10:
        $r5 = (org.apache.fop.fo.flow.BlockContainer) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endBlockContainer(org.apache.fop.fo.flow.BlockContainer)>($r5);
        goto label45;

     label11:
        $z0 = foNode instanceof org.apache.fop.fo.flow.BasicLink;
        if $z0 == 0 goto label13;

        if bStart == 0 goto label12;

        $r6 = (org.apache.fop.fo.flow.BasicLink) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startLink(org.apache.fop.fo.flow.BasicLink)>($r6);
        goto label45;

     label12:
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endLink()>();
        goto label45;

     label13:
        $z0 = foNode instanceof org.apache.fop.fo.flow.Inline;
        if $z0 == 0 goto label15;

        if bStart == 0 goto label14;

        $r7 = (org.apache.fop.fo.flow.Inline) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startInline(org.apache.fop.fo.flow.Inline)>($r7);
        goto label45;

     label14:
        $r7 = (org.apache.fop.fo.flow.Inline) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endInline(org.apache.fop.fo.flow.Inline)>($r7);
        goto label45;

     label15:
        $z0 = foNode instanceof org.apache.fop.fo.FOText;
        if $z0 == 0 goto label16;

        if bStart == 0 goto label45;

        text = (org.apache.fop.fo.FOText) foNode;
        $r8 = text.<org.apache.fop.fo.FOText: char[] ca>;
        $i0 = text.<org.apache.fop.fo.FOText: int startIndex>;
        $i1 = text.<org.apache.fop.fo.FOText: int endIndex>;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void text(org.apache.fop.fo.FOText,char[],int,int)>(text, $r8, $i0, $i1);
        goto label45;

     label16:
        $z0 = foNode instanceof org.apache.fop.fo.flow.Character;
        if $z0 == 0 goto label17;

        if bStart == 0 goto label45;

        c = (org.apache.fop.fo.flow.Character) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void character(org.apache.fop.fo.flow.Character)>(c);
        goto label45;

     label17:
        $z0 = foNode instanceof org.apache.fop.fo.flow.PageNumber;
        if $z0 == 0 goto label19;

        if bStart == 0 goto label18;

        $r9 = (org.apache.fop.fo.flow.PageNumber) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startPageNumber(org.apache.fop.fo.flow.PageNumber)>($r9);
        goto label45;

     label18:
        $r9 = (org.apache.fop.fo.flow.PageNumber) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endPageNumber(org.apache.fop.fo.flow.PageNumber)>($r9);
        goto label45;

     label19:
        $z0 = foNode instanceof org.apache.fop.fo.flow.Footnote;
        if $z0 == 0 goto label21;

        if bStart == 0 goto label20;

        $r10 = (org.apache.fop.fo.flow.Footnote) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startFootnote(org.apache.fop.fo.flow.Footnote)>($r10);
        goto label45;

     label20:
        $r10 = (org.apache.fop.fo.flow.Footnote) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endFootnote(org.apache.fop.fo.flow.Footnote)>($r10);
        goto label45;

     label21:
        $z0 = foNode instanceof org.apache.fop.fo.flow.FootnoteBody;
        if $z0 == 0 goto label23;

        if bStart == 0 goto label22;

        $r11 = (org.apache.fop.fo.flow.FootnoteBody) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startFootnoteBody(org.apache.fop.fo.flow.FootnoteBody)>($r11);
        goto label45;

     label22:
        $r11 = (org.apache.fop.fo.flow.FootnoteBody) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endFootnoteBody(org.apache.fop.fo.flow.FootnoteBody)>($r11);
        goto label45;

     label23:
        $z0 = foNode instanceof org.apache.fop.fo.flow.ListBlock;
        if $z0 == 0 goto label25;

        if bStart == 0 goto label24;

        $r12 = (org.apache.fop.fo.flow.ListBlock) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startList(org.apache.fop.fo.flow.ListBlock)>($r12);
        goto label45;

     label24:
        $r12 = (org.apache.fop.fo.flow.ListBlock) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endList(org.apache.fop.fo.flow.ListBlock)>($r12);
        goto label45;

     label25:
        $z0 = foNode instanceof org.apache.fop.fo.flow.ListItemBody;
        if $z0 == 0 goto label27;

        if bStart == 0 goto label26;

        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startListBody()>();
        goto label45;

     label26:
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endListBody()>();
        goto label45;

     label27:
        $z0 = foNode instanceof org.apache.fop.fo.flow.ListItem;
        if $z0 == 0 goto label29;

        if bStart == 0 goto label28;

        $r13 = (org.apache.fop.fo.flow.ListItem) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startListItem(org.apache.fop.fo.flow.ListItem)>($r13);
        goto label45;

     label28:
        $r13 = (org.apache.fop.fo.flow.ListItem) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endListItem(org.apache.fop.fo.flow.ListItem)>($r13);
        goto label45;

     label29:
        $z0 = foNode instanceof org.apache.fop.fo.flow.ListItemLabel;
        if $z0 == 0 goto label31;

        if bStart == 0 goto label30;

        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startListLabel()>();
        goto label45;

     label30:
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endListLabel()>();
        goto label45;

     label31:
        $z0 = foNode instanceof org.apache.fop.fo.flow.table.Table;
        if $z0 == 0 goto label33;

        if bStart == 0 goto label32;

        $r14 = (org.apache.fop.fo.flow.table.Table) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startTable(org.apache.fop.fo.flow.table.Table)>($r14);
        goto label45;

     label32:
        $r14 = (org.apache.fop.fo.flow.table.Table) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endTable(org.apache.fop.fo.flow.table.Table)>($r14);
        goto label45;

     label33:
        $z0 = foNode instanceof org.apache.fop.fo.flow.table.TableBody;
        if $z0 == 0 goto label35;

        if bStart == 0 goto label34;

        $r15 = (org.apache.fop.fo.flow.table.TableBody) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startBody(org.apache.fop.fo.flow.table.TableBody)>($r15);
        goto label45;

     label34:
        $r15 = (org.apache.fop.fo.flow.table.TableBody) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endBody(org.apache.fop.fo.flow.table.TableBody)>($r15);
        goto label45;

     label35:
        $z0 = foNode instanceof org.apache.fop.fo.flow.table.TableColumn;
        if $z0 == 0 goto label37;

        if bStart == 0 goto label36;

        $r16 = (org.apache.fop.fo.flow.table.TableColumn) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startColumn(org.apache.fop.fo.flow.table.TableColumn)>($r16);
        goto label45;

     label36:
        $r16 = (org.apache.fop.fo.flow.table.TableColumn) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endColumn(org.apache.fop.fo.flow.table.TableColumn)>($r16);
        goto label45;

     label37:
        $z0 = foNode instanceof org.apache.fop.fo.flow.table.TableRow;
        if $z0 == 0 goto label39;

        if bStart == 0 goto label38;

        $r17 = (org.apache.fop.fo.flow.table.TableRow) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startRow(org.apache.fop.fo.flow.table.TableRow)>($r17);
        goto label45;

     label38:
        $r17 = (org.apache.fop.fo.flow.table.TableRow) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endRow(org.apache.fop.fo.flow.table.TableRow)>($r17);
        goto label45;

     label39:
        $z0 = foNode instanceof org.apache.fop.fo.flow.table.TableCell;
        if $z0 == 0 goto label41;

        if bStart == 0 goto label40;

        $r18 = (org.apache.fop.fo.flow.table.TableCell) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startCell(org.apache.fop.fo.flow.table.TableCell)>($r18);
        goto label45;

     label40:
        $r18 = (org.apache.fop.fo.flow.table.TableCell) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endCell(org.apache.fop.fo.flow.table.TableCell)>($r18);
        goto label45;

     label41:
        $z0 = foNode instanceof org.apache.fop.fo.flow.Leader;
        if $z0 == 0 goto label42;

        if bStart == 0 goto label45;

        $r19 = (org.apache.fop.fo.flow.Leader) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void leader(org.apache.fop.fo.flow.Leader)>($r19);
        goto label45;

     label42:
        $z0 = foNode instanceof org.apache.fop.fo.flow.PageNumberCitation;
        if $z0 == 0 goto label44;

        if bStart == 0 goto label43;

        $r20 = (org.apache.fop.fo.flow.PageNumberCitation) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void startPageNumberCitation(org.apache.fop.fo.flow.PageNumberCitation)>($r20);
        goto label45;

     label43:
        $r20 = (org.apache.fop.fo.flow.PageNumberCitation) foNode;
        virtualinvoke this.<org.apache.fop.render.rtf.RTFHandler: void endPageNumberCitation(org.apache.fop.fo.flow.PageNumberCitation)>($r20);
        goto label45;

     label44:
        $r21 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r22 = new java.lang.StringBuffer;
        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();
        $r22 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Ignored deferred event for ");
        $r22 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(foNode);
        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r21.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r23);

     label45:
        return;
    }

    private void recurseFONode(org.apache.fop.fo.FONode)
    {
        org.apache.fop.render.rtf.RTFHandler this;
        org.apache.fop.fo.FONode foNode, staticBefore, staticAfter, $r7, fn;
        org.apache.fop.fo.pagination.PageSequence pageSequence;
        org.apache.fop.fo.pagination.Region regionBefore, regionAfter;
        org.apache.fop.fo.flow.table.Table table;
        java.util.Iterator it;
        org.apache.fop.fo.flow.ListItem item;
        org.apache.fop.fo.flow.Footnote fn;
        boolean $z0;
        org.apache.fop.fo.pagination.SimplePageMaster $r0;
        java.util.Map $r1;
        java.lang.String $r2, $r17;
        java.lang.Object $r3, $r6;
        org.apache.fop.fo.pagination.Flow $r4;
        java.util.List $r5;
        org.apache.commons.logging.Log $r8;
        org.apache.fop.fo.flow.table.TableBody $r9, $r10;
        org.apache.fop.fo.FONode$FONodeIterator $r11, it;
        org.apache.fop.fo.flow.ListItemLabel $r12;
        org.apache.fop.fo.flow.ListItemBody $r13;
        org.apache.fop.fo.flow.Inline $r14;
        org.apache.fop.fo.flow.FootnoteBody $r15;
        java.lang.StringBuffer $r16;

        this := @this: org.apache.fop.render.rtf.RTFHandler;
        foNode := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void invokeDeferredEvent(org.apache.fop.fo.FONode,boolean)>(foNode, 1);
        $z0 = foNode instanceof org.apache.fop.fo.pagination.PageSequence;
        if $z0 == 0 goto label2;

        pageSequence = (org.apache.fop.fo.pagination.PageSequence) foNode;
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionBefore = virtualinvoke $r0.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(35);
        if regionBefore == null goto label0;

        $r1 = virtualinvoke pageSequence.<org.apache.fop.fo.pagination.PageSequence: java.util.Map getFlowMap()>();
        $r2 = virtualinvoke regionBefore.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);
        staticBefore = (org.apache.fop.fo.FONode) $r3;
        if staticBefore == null goto label0;

        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>(staticBefore);

     label0:
        $r0 = this.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.fo.pagination.SimplePageMaster pagemaster>;
        regionAfter = virtualinvoke $r0.<org.apache.fop.fo.pagination.SimplePageMaster: org.apache.fop.fo.pagination.Region getRegion(int)>(34);
        if regionAfter == null goto label1;

        $r1 = virtualinvoke pageSequence.<org.apache.fop.fo.pagination.PageSequence: java.util.Map getFlowMap()>();
        $r2 = virtualinvoke regionAfter.<org.apache.fop.fo.pagination.Region: java.lang.String getRegionName()>();
        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);
        staticAfter = (org.apache.fop.fo.FONode) $r3;
        if staticAfter == null goto label1;

        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>(staticAfter);

     label1:
        $r4 = virtualinvoke pageSequence.<org.apache.fop.fo.pagination.PageSequence: org.apache.fop.fo.pagination.Flow getMainFlow()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r4);
        goto label16;

     label2:
        $z0 = foNode instanceof org.apache.fop.fo.flow.table.Table;
        if $z0 == 0 goto label11;

        table = (org.apache.fop.fo.flow.table.Table) foNode;
        $r5 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: java.util.List getColumns()>();
        if $r5 == null goto label5;

        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void prepareTable(org.apache.fop.fo.flow.table.Table)>(table);
        $r5 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: java.util.List getColumns()>();
        it = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        $r7 = (org.apache.fop.fo.FONode) $r6;
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r7);
        goto label3;

     label4:
        goto label6;

     label5:
        $r8 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("No table-columns found on table. RTF output requires that all table-columns for a table are defined. Output will be incorrect.");

     label6:
        $r9 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableHeader()>();
        if $r9 == null goto label7;

        $r10 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableHeader()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r10);

     label7:
        $r9 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableFooter()>();
        if $r9 == null goto label8;

        $r10 = virtualinvoke table.<org.apache.fop.fo.flow.table.Table: org.apache.fop.fo.flow.table.TableBody getTableFooter()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r10);

     label8:
        $r11 = virtualinvoke foNode.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();
        if $r11 == null goto label10;

        it = virtualinvoke foNode.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();

     label9:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label10;

        $r6 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        $r7 = (org.apache.fop.fo.FONode) $r6;
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r7);
        goto label9;

     label10:
        goto label16;

     label11:
        $z0 = foNode instanceof org.apache.fop.fo.flow.ListItem;
        if $z0 == 0 goto label12;

        item = (org.apache.fop.fo.flow.ListItem) foNode;
        $r12 = virtualinvoke item.<org.apache.fop.fo.flow.ListItem: org.apache.fop.fo.flow.ListItemLabel getLabel()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r12);
        $r13 = virtualinvoke item.<org.apache.fop.fo.flow.ListItem: org.apache.fop.fo.flow.ListItemBody getBody()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r13);
        goto label16;

     label12:
        $z0 = foNode instanceof org.apache.fop.fo.flow.Footnote;
        if $z0 == 0 goto label13;

        fn = (org.apache.fop.fo.flow.Footnote) foNode;
        $r14 = virtualinvoke fn.<org.apache.fop.fo.flow.Footnote: org.apache.fop.fo.flow.Inline getFootnoteCitation()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r14);
        $r15 = virtualinvoke fn.<org.apache.fop.fo.flow.Footnote: org.apache.fop.fo.flow.FootnoteBody getFootnoteBody()>();
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>($r15);
        goto label16;

     label13:
        $r11 = virtualinvoke foNode.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();
        if $r11 == null goto label16;

        it = virtualinvoke foNode.<org.apache.fop.fo.FONode: org.apache.fop.fo.FONode$FONodeIterator getChildNodes()>();

     label14:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label16;

        $r3 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        fn = (org.apache.fop.fo.FONode) $r3;
        $r8 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
        if $z0 == 0 goto label15;

        $r8 = <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log>;
        $r16 = new java.lang.StringBuffer;
        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();
        $r16 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("  ChildNode for ");
        $r16 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(fn);
        $r16 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");
        $r17 = virtualinvoke fn.<org.apache.fop.fo.FONode: java.lang.String getName()>();
        $r16 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);
        $r16 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r2 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void trace(java.lang.Object)>($r2);

     label15:
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void recurseFONode(org.apache.fop.fo.FONode)>(fn);
        goto label14;

     label16:
        specialinvoke this.<org.apache.fop.render.rtf.RTFHandler: void invokeDeferredEvent(org.apache.fop.fo.FONode,boolean)>(foNode, 0);
        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static org.apache.fop.render.rtf.rtflib.tools.PercentContext access$000(org.apache.fop.render.rtf.RTFHandler)
    {
        org.apache.fop.render.rtf.RTFHandler x0;
        org.apache.fop.render.rtf.rtflib.tools.PercentContext $r0;

        x0 := @parameter0: org.apache.fop.render.rtf.RTFHandler;
        $r0 = x0.<org.apache.fop.render.rtf.RTFHandler: org.apache.fop.render.rtf.rtflib.tools.PercentContext percentManager>;
        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.xmlgraphics.image.loader.ImageFlavor $r1;
        org.apache.commons.logging.Log $r2;
        org.apache.xmlgraphics.image.loader.ImageFlavor[] $r3;

        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$RTFHandler>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$(java.lang.String)>("org.apache.fop.render.rtf.RTFHandler");
        <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$RTFHandler> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.render.rtf.RTFHandler: java.lang.Class class$org$apache$fop$render$rtf$RTFHandler>;

     label1:
        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.render.rtf.RTFHandler: org.apache.commons.logging.Log log> = $r2;
        $r3 = newarray (org.apache.xmlgraphics.image.loader.ImageFlavor)[3];
        $r1 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor RAW_EMF>;
        $r3[0] = $r1;
        $r1 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor RAW_PNG>;
        $r3[1] = $r1;
        $r1 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor RAW_JPEG>;
        $r3[2] = $r1;
        <org.apache.fop.render.rtf.RTFHandler: org.apache.xmlgraphics.image.loader.ImageFlavor[] FLAVORS> = $r3;
        return;
    }
}

public abstract class org.apache.fop.render.txt.border.AbstractBorderElement extends java.lang.Object implements org.apache.fop.fo.Constants
{
    public static final int UP;
    public static final int RIGHT;
    public static final int DOWN;
    public static final int LEFT;
    protected int[] data;

    public void <init>()
    {
        org.apache.fop.render.txt.border.AbstractBorderElement this;
        int[] $r0;

        this := @this: org.apache.fop.render.txt.border.AbstractBorderElement;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = newarray (int)[4];
        $r0[0] = 0;
        $r0[1] = 0;
        $r0[2] = 0;
        $r0[3] = 0;
        this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data> = $r0;
        return;
    }

    public void <init>(int)
    {
        org.apache.fop.render.txt.border.AbstractBorderElement this;
        int type, i, $i0;
        int[] $r0, $r1;

        this := @this: org.apache.fop.render.txt.border.AbstractBorderElement;
        type := @parameter0: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = newarray (int)[4];
        $r0[0] = 0;
        $r0[1] = 0;
        $r0[2] = 0;
        $r0[3] = 0;
        this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data> = $r0;
        i = 0;

     label0:
        if i >= 4 goto label1;

        $r1 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $i0 = type >> i;
        $i0 = $i0 & 1;
        $r1[i] = $i0;
        i = i + 1;
        goto label0;

     label1:
        return;
    }

    public int getData(int)
    {
        org.apache.fop.render.txt.border.AbstractBorderElement this;
        int side, $i0;
        int[] $r0;

        this := @this: org.apache.fop.render.txt.border.AbstractBorderElement;
        side := @parameter0: int;
        $r0 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $i0 = $r0[side];
        return $i0;
    }

    public void setData(int, int)
    {
        org.apache.fop.render.txt.border.AbstractBorderElement this;
        int side, value;
        int[] $r0;

        this := @this: org.apache.fop.render.txt.border.AbstractBorderElement;
        side := @parameter0: int;
        value := @parameter1: int;
        $r0 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $r0[side] = value;
        return;
    }

    public void transformElement(org.apache.fop.render.txt.TXTState)
    {
        org.apache.fop.render.txt.border.AbstractBorderElement this;
        org.apache.fop.render.txt.TXTState state;
        double[] da;
        org.apache.fop.area.CTM ctm, $r0;
        java.awt.Point[] pa;
        int i, length, $i0, $i1, $i2;
        java.awt.Point p, $r1, $r5;
        double $d0, $d1, $d2, $d3, $d4;
        int[] $r2, $r3, $r4;

        this := @this: org.apache.fop.render.txt.border.AbstractBorderElement;
        state := @parameter0: org.apache.fop.render.txt.TXTState;
        $r0 = virtualinvoke state.<org.apache.fop.render.txt.TXTState: org.apache.fop.area.CTM getResultCTM()>();
        da = virtualinvoke $r0.<org.apache.fop.area.CTM: double[] toArray()>();
        $r0 = new org.apache.fop.area.CTM;
        $d0 = da[0];
        $d1 = da[1];
        $d1 = neg $d1;
        $d2 = da[2];
        $d2 = neg $d2;
        $d3 = da[3];
        specialinvoke $r0.<org.apache.fop.area.CTM: void <init>(double,double,double,double,double,double)>($d0, $d1, $d2, $d3, 0.0, 0.0);
        ctm = $r0;
        pa = newarray (java.awt.Point)[4];
        $r1 = new java.awt.Point;
        $r2 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $i0 = $r2[0];
        specialinvoke $r1.<java.awt.Point: void <init>(int,int)>(0, $i0);
        pa[0] = $r1;
        $r1 = new java.awt.Point;
        $r3 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $i1 = $r3[1];
        specialinvoke $r1.<java.awt.Point: void <init>(int,int)>($i1, 0);
        pa[1] = $r1;
        $r1 = new java.awt.Point;
        $r2 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $i0 = $r2[2];
        $i0 = neg $i0;
        specialinvoke $r1.<java.awt.Point: void <init>(int,int)>(0, $i0);
        pa[2] = $r1;
        $r1 = new java.awt.Point;
        $r3 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $i1 = $r3[3];
        $i1 = neg $i1;
        specialinvoke $r1.<java.awt.Point: void <init>(int,int)>($i1, 0);
        pa[3] = $r1;
        $r4 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        staticinvoke <java.util.Arrays: void fill(int[],int)>($r4, 0);
        i = 0;

     label0:
        if i >= 4 goto label5;

        $r5 = pa[i];
        p = virtualinvoke state.<org.apache.fop.render.txt.TXTState: java.awt.Point transformPoint(java.awt.Point,org.apache.fop.area.CTM)>($r5, ctm);
        $d4 = virtualinvoke p.<java.awt.Point: double distance(double,double)>(0.0, 0.0);
        length = (int) $d4;
        $i2 = p.<java.awt.Point: int x>;
        if $i2 != 0 goto label1;

        $i2 = p.<java.awt.Point: int y>;
        if $i2 <= 0 goto label1;

        $r4 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $r4[0] = length;
        goto label4;

     label1:
        $i2 = p.<java.awt.Point: int x>;
        if $i2 != 0 goto label2;

        $i2 = p.<java.awt.Point: int y>;
        if $i2 >= 0 goto label2;

        $r4 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $r4[2] = length;
        goto label4;

     label2:
        $i2 = p.<java.awt.Point: int x>;
        if $i2 <= 0 goto label3;

        $i2 = p.<java.awt.Point: int y>;
        if $i2 != 0 goto label3;

        $r4 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $r4[1] = length;
        goto label4;

     label3:
        $i2 = p.<java.awt.Point: int x>;
        if $i2 >= 0 goto label4;

        $i2 = p.<java.awt.Point: int y>;
        if $i2 != 0 goto label4;

        $r4 = this.<org.apache.fop.render.txt.border.AbstractBorderElement: int[] data>;
        $r4[3] = length;

     label4:
        i = i + 1;
        goto label0;

     label5:
        return;
    }

    public abstract org.apache.fop.render.txt.border.AbstractBorderElement merge(org.apache.fop.render.txt.border.AbstractBorderElement);

    public abstract char convert2Char();
}

public class org.apache.fop.render.afp.modca.TagLogicalElement extends org.apache.fop.render.afp.modca.AbstractAFPObject
{
    private java.lang.String tleName;
    private java.lang.String tleValue;
    private byte[] tleByteName;
    private byte[] tleByteValue;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.fop.render.afp.modca.TagLogicalElement this;
        java.lang.String name, value, $r4;
        java.io.UnsupportedEncodingException usee, $r1;
        byte[] $r0;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;

        this := @this: org.apache.fop.render.afp.modca.TagLogicalElement;
        name := @parameter0: java.lang.String;
        value := @parameter1: java.lang.String;
        specialinvoke this.<org.apache.fop.render.afp.modca.AbstractAFPObject: void <init>()>();
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleName> = null;
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleValue> = null;
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteName> = null;
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteValue> = null;
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleName> = name;
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleValue> = value;

     label0:
        $r0 = virtualinvoke name.<java.lang.String: byte[] getBytes(java.lang.String)>("Cp1146");
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteName> = $r0;
        $r0 = virtualinvoke value.<java.lang.String: byte[] getBytes(java.lang.String)>("Cp1146");
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteValue> = $r0;

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        usee = $r1;
        $r0 = virtualinvoke name.<java.lang.String: byte[] getBytes()>();
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteName> = $r0;
        $r0 = virtualinvoke value.<java.lang.String: byte[] getBytes()>();
        this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteValue> = $r0;
        $r2 = <org.apache.fop.render.afp.modca.TagLogicalElement: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Constructor:: UnsupportedEncodingException translating the name ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(name);
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r4);

     label3:
        return;

        catch java.io.UnsupportedEncodingException from label0 to label1 with label2;
    }

    public void writeDataStream(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.TagLogicalElement this;
        java.io.OutputStream os;
        byte[] data, rl1, rl2, rl3, $r2, $r3, $r4;
        int pos, i, $i0, $i1, pos;
        java.lang.String $r0, $r1;
        byte $b2;

        this := @this: org.apache.fop.render.afp.modca.TagLogicalElement;
        os := @parameter0: java.io.OutputStream;
        $r0 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleName>;
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        $i1 = 17 + $i0;
        $r0 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleValue>;
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        $i1 = $i1 + $i0;
        data = newarray (byte)[$i1];
        data[0] = 90;
        $r0 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleName>;
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        $i1 = 16 + $i0;
        $r0 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleValue>;
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        $i1 = $i1 + $i0;
        rl1 = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i1, 2);
        $b2 = rl1[0];
        data[1] = $b2;
        $b2 = rl1[1];
        data[2] = $b2;
        data[3] = -45;
        data[4] = -96;
        data[5] = -112;
        data[6] = 0;
        data[7] = 0;
        data[8] = 0;
        $r1 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: java.lang.String tleName>;
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();
        $i1 = $i1 + 4;
        rl2 = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i1, 1);
        $b2 = rl2[0];
        data[9] = $b2;
        data[10] = 2;
        data[11] = 11;
        data[12] = 0;
        pos = 13;
        i = 0;

     label0:
        $r2 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteName>;
        $i0 = lengthof $r2;
        if i >= $i0 goto label1;

        $i0 = pos;
        pos = pos + 1;
        $r3 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteName>;
        $b2 = $r3[i];
        data[$i0] = $b2;
        i = i + 1;
        goto label0;

     label1:
        $r4 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteValue>;
        $i1 = lengthof $r4;
        $i1 = $i1 + 4;
        rl3 = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i1, 1);
        pos = pos + 1;
        $b2 = rl3[0];
        data[pos] = $b2;
        pos = pos + 1;
        data[pos] = 54;
        pos = pos + 1;
        data[pos] = 0;
        pos = pos + 1;
        data[pos] = 0;
        i = 0;

     label2:
        $r2 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteValue>;
        $i0 = lengthof $r2;
        if i >= $i0 goto label3;

        $i0 = pos;
        pos = pos + 1;
        $r3 = this.<org.apache.fop.render.afp.modca.TagLogicalElement: byte[] tleByteValue>;
        $b2 = $r3[i];
        data[$i0] = $b2;
        i = i + 1;
        goto label2;

     label3:
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        return;
    }
}

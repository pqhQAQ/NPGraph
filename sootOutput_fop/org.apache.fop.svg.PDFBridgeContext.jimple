public class org.apache.fop.svg.PDFBridgeContext extends org.apache.batik.bridge.BridgeContext
{
    private final org.apache.fop.fonts.FontInfo fontInfo;
    private final org.apache.xmlgraphics.image.loader.ImageManager imageManager;
    private final org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext;
    private java.awt.geom.AffineTransform linkTransform;
    static java.lang.Class class$org$apache$fop$fonts$FontInfo;

    public void <init>(org.apache.batik.bridge.UserAgent, org.apache.batik.bridge.DocumentLoader, org.apache.fop.fonts.FontInfo, org.apache.xmlgraphics.image.loader.ImageManager, org.apache.xmlgraphics.image.loader.ImageSessionContext, java.awt.geom.AffineTransform)
    {
        org.apache.fop.svg.PDFBridgeContext this;
        org.apache.batik.bridge.UserAgent userAgent;
        org.apache.batik.bridge.DocumentLoader loader;
        org.apache.fop.fonts.FontInfo fontInfo;
        org.apache.xmlgraphics.image.loader.ImageManager imageManager;
        org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext;
        java.awt.geom.AffineTransform linkTransform;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        userAgent := @parameter0: org.apache.batik.bridge.UserAgent;
        loader := @parameter1: org.apache.batik.bridge.DocumentLoader;
        fontInfo := @parameter2: org.apache.fop.fonts.FontInfo;
        imageManager := @parameter3: org.apache.xmlgraphics.image.loader.ImageManager;
        imageSessionContext := @parameter4: org.apache.xmlgraphics.image.loader.ImageSessionContext;
        linkTransform := @parameter5: java.awt.geom.AffineTransform;
        specialinvoke this.<org.apache.batik.bridge.BridgeContext: void <init>(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.DocumentLoader)>(userAgent, loader);
        this.<org.apache.fop.svg.PDFBridgeContext: org.apache.fop.fonts.FontInfo fontInfo> = fontInfo;
        this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageManager imageManager> = imageManager;
        this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext> = imageSessionContext;
        this.<org.apache.fop.svg.PDFBridgeContext: java.awt.geom.AffineTransform linkTransform> = linkTransform;
        return;
    }

    public void <init>(org.apache.batik.bridge.UserAgent, org.apache.fop.fonts.FontInfo, org.apache.xmlgraphics.image.loader.ImageManager, org.apache.xmlgraphics.image.loader.ImageSessionContext, java.awt.geom.AffineTransform)
    {
        org.apache.fop.svg.PDFBridgeContext this;
        org.apache.batik.bridge.UserAgent userAgent;
        org.apache.fop.fonts.FontInfo fontInfo;
        org.apache.xmlgraphics.image.loader.ImageManager imageManager;
        org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext;
        java.awt.geom.AffineTransform linkTransform;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        userAgent := @parameter0: org.apache.batik.bridge.UserAgent;
        fontInfo := @parameter1: org.apache.fop.fonts.FontInfo;
        imageManager := @parameter2: org.apache.xmlgraphics.image.loader.ImageManager;
        imageSessionContext := @parameter3: org.apache.xmlgraphics.image.loader.ImageSessionContext;
        linkTransform := @parameter4: java.awt.geom.AffineTransform;
        specialinvoke this.<org.apache.batik.bridge.BridgeContext: void <init>(org.apache.batik.bridge.UserAgent)>(userAgent);
        this.<org.apache.fop.svg.PDFBridgeContext: org.apache.fop.fonts.FontInfo fontInfo> = fontInfo;
        this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageManager imageManager> = imageManager;
        this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext> = imageSessionContext;
        this.<org.apache.fop.svg.PDFBridgeContext: java.awt.geom.AffineTransform linkTransform> = linkTransform;
        return;
    }

    public void <init>(org.apache.batik.bridge.UserAgent, org.apache.fop.fonts.FontInfo, org.apache.xmlgraphics.image.loader.ImageManager, org.apache.xmlgraphics.image.loader.ImageSessionContext)
    {
        org.apache.fop.svg.PDFBridgeContext this;
        org.apache.batik.bridge.UserAgent userAgent;
        org.apache.fop.fonts.FontInfo fontInfo;
        org.apache.xmlgraphics.image.loader.ImageManager imageManager;
        org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        userAgent := @parameter0: org.apache.batik.bridge.UserAgent;
        fontInfo := @parameter1: org.apache.fop.fonts.FontInfo;
        imageManager := @parameter2: org.apache.xmlgraphics.image.loader.ImageManager;
        imageSessionContext := @parameter3: org.apache.xmlgraphics.image.loader.ImageSessionContext;
        specialinvoke this.<org.apache.fop.svg.PDFBridgeContext: void <init>(org.apache.batik.bridge.UserAgent,org.apache.fop.fonts.FontInfo,org.apache.xmlgraphics.image.loader.ImageManager,org.apache.xmlgraphics.image.loader.ImageSessionContext,java.awt.geom.AffineTransform)>(userAgent, fontInfo, imageManager, imageSessionContext, null);
        return;
    }

    public org.apache.xmlgraphics.image.loader.ImageManager getImageManager()
    {
        org.apache.fop.svg.PDFBridgeContext this;
        org.apache.xmlgraphics.image.loader.ImageManager $r0;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        $r0 = this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageManager imageManager>;
        return $r0;
    }

    public org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()
    {
        org.apache.fop.svg.PDFBridgeContext this;
        org.apache.xmlgraphics.image.loader.ImageSessionContext $r0;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        $r0 = this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageSessionContext imageSessionContext>;
        return $r0;
    }

    private void putPDFElementBridgeConditional(java.lang.String, java.lang.String)
    {
        org.apache.fop.svg.PDFBridgeContext this;
        java.lang.String className, testFor;
        java.lang.Class clazz, $r1;
        byte $b0;
        java.lang.reflect.Constructor constructor;
        java.lang.Throwable l3, $r8;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        org.apache.fop.fonts.FontInfo $r5;
        java.lang.Object $r6;
        org.apache.batik.bridge.Bridge $r7;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        className := @parameter0: java.lang.String;
        testFor := @parameter1: java.lang.String;

     label0:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(testFor);
        clazz = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className);
        $r3 = newarray (java.lang.Class)[1];
        $b0 = 0;
        $r1 = <org.apache.fop.svg.PDFBridgeContext: java.lang.Class class$org$apache$fop$fonts$FontInfo>;
        if $r1 != null goto label1;

        $r1 = staticinvoke <org.apache.fop.svg.PDFBridgeContext: java.lang.Class class$(java.lang.String)>("org.apache.fop.fonts.FontInfo");
        <org.apache.fop.svg.PDFBridgeContext: java.lang.Class class$org$apache$fop$fonts$FontInfo> = $r1;
        goto label2;

     label1:
        $r1 = <org.apache.fop.svg.PDFBridgeContext: java.lang.Class class$org$apache$fop$fonts$FontInfo>;

     label2:
        $r3[$b0] = $r1;
        constructor = virtualinvoke clazz.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);
        $r4 = newarray (java.lang.Object)[1];
        $r5 = this.<org.apache.fop.svg.PDFBridgeContext: org.apache.fop.fonts.FontInfo fontInfo>;
        $r4[0] = $r5;
        $r6 = virtualinvoke constructor.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r4);
        $r7 = (org.apache.batik.bridge.Bridge) $r6;
        virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r7);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;
        l3 = $r8;

     label5:
        return;

        catch java.lang.Throwable from label0 to label3 with label4;
    }

    public void registerSVGBridges()
    {
        org.apache.fop.svg.PDFBridgeContext this;
        org.apache.fop.svg.PDFTextElementBridge textElementBridge, $r1;
        org.apache.fop.svg.PDFAElementBridge pdfAElementBridge, $r3;
        org.apache.fop.fonts.FontInfo $r0, $r2;
        java.awt.geom.AffineTransform $r4, $r5;
        org.apache.fop.svg.PDFImageElementBridge $r6;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        specialinvoke this.<org.apache.batik.bridge.BridgeContext: void registerSVGBridges()>();
        $r0 = this.<org.apache.fop.svg.PDFBridgeContext: org.apache.fop.fonts.FontInfo fontInfo>;
        if $r0 == null goto label0;

        $r1 = new org.apache.fop.svg.PDFTextElementBridge;
        $r2 = this.<org.apache.fop.svg.PDFBridgeContext: org.apache.fop.fonts.FontInfo fontInfo>;
        specialinvoke $r1.<org.apache.fop.svg.PDFTextElementBridge: void <init>(org.apache.fop.fonts.FontInfo)>($r2);
        textElementBridge = $r1;
        virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>(textElementBridge);
        specialinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putPDFElementBridgeConditional(java.lang.String,java.lang.String)>("org.apache.fop.svg.PDFBatikFlowTextElementBridge", "org.apache.batik.extension.svg.BatikFlowTextElementBridge");
        specialinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putPDFElementBridgeConditional(java.lang.String,java.lang.String)>("org.apache.fop.svg.PDFSVG12TextElementBridge", "org.apache.batik.bridge.svg12.SVG12TextElementBridge");
        specialinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putPDFElementBridgeConditional(java.lang.String,java.lang.String)>("org.apache.fop.svg.PDFSVGFlowRootElementBridge", "org.apache.batik.bridge.svg12.SVGFlowRootElementBridge");

     label0:
        $r3 = new org.apache.fop.svg.PDFAElementBridge;
        specialinvoke $r3.<org.apache.fop.svg.PDFAElementBridge: void <init>()>();
        pdfAElementBridge = $r3;
        $r4 = this.<org.apache.fop.svg.PDFBridgeContext: java.awt.geom.AffineTransform linkTransform>;
        if $r4 == null goto label1;

        $r5 = this.<org.apache.fop.svg.PDFBridgeContext: java.awt.geom.AffineTransform linkTransform>;
        virtualinvoke pdfAElementBridge.<org.apache.fop.svg.PDFAElementBridge: void setCurrentTransform(java.awt.geom.AffineTransform)>($r5);
        goto label2;

     label1:
        $r5 = new java.awt.geom.AffineTransform;
        specialinvoke $r5.<java.awt.geom.AffineTransform: void <init>()>();
        virtualinvoke pdfAElementBridge.<org.apache.fop.svg.PDFAElementBridge: void setCurrentTransform(java.awt.geom.AffineTransform)>($r5);

     label2:
        virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>(pdfAElementBridge);
        $r6 = new org.apache.fop.svg.PDFImageElementBridge;
        specialinvoke $r6.<org.apache.fop.svg.PDFImageElementBridge: void <init>()>();
        virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: void putBridge(org.apache.batik.bridge.Bridge)>($r6);
        return;
    }

    public org.apache.batik.bridge.BridgeContext createBridgeContext()
    {
        org.apache.fop.svg.PDFBridgeContext this, $r0;
        org.apache.batik.bridge.UserAgent $r1;
        org.apache.batik.bridge.DocumentLoader $r2;
        org.apache.fop.fonts.FontInfo $r3;
        org.apache.xmlgraphics.image.loader.ImageManager $r4;
        org.apache.xmlgraphics.image.loader.ImageSessionContext $r5;
        java.awt.geom.AffineTransform $r6;

        this := @this: org.apache.fop.svg.PDFBridgeContext;
        $r0 = new org.apache.fop.svg.PDFBridgeContext;
        $r1 = virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();
        $r2 = virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: org.apache.batik.bridge.DocumentLoader getDocumentLoader()>();
        $r3 = this.<org.apache.fop.svg.PDFBridgeContext: org.apache.fop.fonts.FontInfo fontInfo>;
        $r4 = virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageManager getImageManager()>();
        $r5 = virtualinvoke this.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()>();
        $r6 = this.<org.apache.fop.svg.PDFBridgeContext: java.awt.geom.AffineTransform linkTransform>;
        specialinvoke $r0.<org.apache.fop.svg.PDFBridgeContext: void <init>(org.apache.batik.bridge.UserAgent,org.apache.batik.bridge.DocumentLoader,org.apache.fop.fonts.FontInfo,org.apache.xmlgraphics.image.loader.ImageManager,org.apache.xmlgraphics.image.loader.ImageSessionContext,java.awt.geom.AffineTransform)>($r1, $r2, $r3, $r4, $r5, $r6);
        return $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

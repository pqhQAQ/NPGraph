public class org.apache.fop.apps.FopFactory extends java.lang.Object implements org.apache.xmlgraphics.image.loader.ImageContext
{
    private static org.apache.commons.logging.Log log;
    private org.apache.fop.render.RendererFactory rendererFactory;
    private org.apache.fop.render.XMLHandlerRegistry xmlHandlers;
    private org.apache.fop.fo.ElementMappingRegistry elementMappingRegistry;
    private org.apache.fop.util.ContentHandlerFactoryRegistry contentHandlerFactoryRegistry;
    private org.apache.fop.hyphenation.HyphenationTreeResolver hyphResolver;
    private org.apache.fop.util.ColorSpaceCache colorSpaceCache;
    private org.apache.xmlgraphics.image.loader.ImageManager imageManager;
    private org.apache.fop.apps.FopFactoryConfigurator config;
    private java.lang.String base;
    private java.lang.String fontBase;
    private java.lang.String hyphenBase;
    private boolean strictFOValidation;
    private boolean strictUserConfigValidation;
    private org.apache.fop.fonts.FontCache fontCache;
    private boolean enableBase14Kerning;
    private float sourceResolution;
    private float targetResolution;
    private java.lang.String pageHeight;
    private java.lang.String pageWidth;
    private boolean breakIndentInheritanceOnReferenceAreaBoundary;
    private org.apache.fop.layoutmgr.LayoutManagerMaker lmMakerOverride;
    private java.util.Set ignoredNamespaces;
    private org.apache.fop.apps.FOURIResolver foURIResolver;
    static java.lang.Class class$org$apache$fop$apps$FopFactory;

    protected void <init>()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.util.ContentHandlerFactoryRegistry $r0;
        org.apache.fop.apps.FopFactoryConfigurator $r1;
        org.apache.fop.fo.ElementMappingRegistry $r2;
        org.apache.fop.apps.FOURIResolver $r3, $r5;
        boolean $z0;
        org.apache.fop.util.ColorSpaceCache $r4;
        org.apache.xmlgraphics.image.loader.ImageManager $r6;
        org.apache.fop.render.RendererFactory $r7;
        org.apache.fop.render.XMLHandlerRegistry $r8;
        java.util.HashSet $r9;

        this := @this: org.apache.fop.apps.FopFactory;
        specialinvoke this.<java.lang.Object: void <init>()>();
        $r0 = new org.apache.fop.util.ContentHandlerFactoryRegistry;
        specialinvoke $r0.<org.apache.fop.util.ContentHandlerFactoryRegistry: void <init>()>();
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.util.ContentHandlerFactoryRegistry contentHandlerFactoryRegistry> = $r0;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.hyphenation.HyphenationTreeResolver hyphResolver> = null;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.util.ColorSpaceCache colorSpaceCache> = null;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FopFactoryConfigurator config> = null;
        this.<org.apache.fop.apps.FopFactory: java.lang.String base> = null;
        this.<org.apache.fop.apps.FopFactory: java.lang.String fontBase> = null;
        this.<org.apache.fop.apps.FopFactory: java.lang.String hyphenBase> = null;
        this.<org.apache.fop.apps.FopFactory: boolean strictFOValidation> = 1;
        this.<org.apache.fop.apps.FopFactory: boolean strictUserConfigValidation> = 1;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache> = null;
        this.<org.apache.fop.apps.FopFactory: boolean enableBase14Kerning> = 0;
        this.<org.apache.fop.apps.FopFactory: float sourceResolution> = 72.0F;
        this.<org.apache.fop.apps.FopFactory: float targetResolution> = 72.0F;
        this.<org.apache.fop.apps.FopFactory: java.lang.String pageHeight> = "11in";
        this.<org.apache.fop.apps.FopFactory: java.lang.String pageWidth> = "8.26in";
        this.<org.apache.fop.apps.FopFactory: boolean breakIndentInheritanceOnReferenceAreaBoundary> = 0;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.layoutmgr.LayoutManagerMaker lmMakerOverride> = null;
        $r1 = new org.apache.fop.apps.FopFactoryConfigurator;
        specialinvoke $r1.<org.apache.fop.apps.FopFactoryConfigurator: void <init>(org.apache.fop.apps.FopFactory)>(this);
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FopFactoryConfigurator config> = $r1;
        $r2 = new org.apache.fop.fo.ElementMappingRegistry;
        specialinvoke $r2.<org.apache.fop.fo.ElementMappingRegistry: void <init>(org.apache.fop.apps.FopFactory)>(this);
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.fo.ElementMappingRegistry elementMappingRegistry> = $r2;
        $r3 = new org.apache.fop.apps.FOURIResolver;
        $z0 = virtualinvoke this.<org.apache.fop.apps.FopFactory: boolean validateUserConfigStrictly()>();
        specialinvoke $r3.<org.apache.fop.apps.FOURIResolver: void <init>(boolean)>($z0);
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOURIResolver foURIResolver> = $r3;
        $r4 = new org.apache.fop.util.ColorSpaceCache;
        $r5 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOURIResolver foURIResolver>;
        specialinvoke $r4.<org.apache.fop.util.ColorSpaceCache: void <init>(javax.xml.transform.URIResolver)>($r5);
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.util.ColorSpaceCache colorSpaceCache> = $r4;
        $r6 = new org.apache.xmlgraphics.image.loader.ImageManager;
        specialinvoke $r6.<org.apache.xmlgraphics.image.loader.ImageManager: void <init>(org.apache.xmlgraphics.image.loader.ImageContext)>(this);
        this.<org.apache.fop.apps.FopFactory: org.apache.xmlgraphics.image.loader.ImageManager imageManager> = $r6;
        $r7 = new org.apache.fop.render.RendererFactory;
        specialinvoke $r7.<org.apache.fop.render.RendererFactory: void <init>()>();
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.render.RendererFactory rendererFactory> = $r7;
        $r8 = new org.apache.fop.render.XMLHandlerRegistry;
        specialinvoke $r8.<org.apache.fop.render.XMLHandlerRegistry: void <init>()>();
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.render.XMLHandlerRegistry xmlHandlers> = $r8;
        $r9 = new java.util.HashSet;
        specialinvoke $r9.<java.util.HashSet: void <init>()>();
        this.<org.apache.fop.apps.FopFactory: java.util.Set ignoredNamespaces> = $r9;
        virtualinvoke this.<org.apache.fop.apps.FopFactory: void setUseCache(boolean)>(1);
        return;
    }

    public static org.apache.fop.apps.FopFactory newInstance()
    {
        org.apache.fop.apps.FopFactory $r0;

        $r0 = new org.apache.fop.apps.FopFactory;
        specialinvoke $r0.<org.apache.fop.apps.FopFactory: void <init>()>();
        return $r0;
    }

    public org.apache.fop.apps.FOUserAgent newFOUserAgent()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.apps.FOUserAgent $r0, userAgent;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = new org.apache.fop.apps.FOUserAgent;
        specialinvoke $r0.<org.apache.fop.apps.FOUserAgent: void <init>(org.apache.fop.apps.FopFactory)>(this);
        userAgent = $r0;
        return userAgent;
    }

    public org.apache.fop.apps.Fop newFop(java.lang.String) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String outputFormat;
        org.apache.fop.apps.FOUserAgent $r0;
        org.apache.fop.apps.Fop $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        outputFormat := @parameter0: java.lang.String;
        $r0 = virtualinvoke this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOUserAgent newFOUserAgent()>();
        $r1 = virtualinvoke this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.Fop newFop(java.lang.String,org.apache.fop.apps.FOUserAgent)>(outputFormat, $r0);
        return $r1;
    }

    public org.apache.fop.apps.Fop newFop(java.lang.String, org.apache.fop.apps.FOUserAgent) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String outputFormat;
        org.apache.fop.apps.FOUserAgent userAgent;
        org.apache.fop.apps.Fop $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        outputFormat := @parameter0: java.lang.String;
        userAgent := @parameter1: org.apache.fop.apps.FOUserAgent;
        $r0 = virtualinvoke this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.Fop newFop(java.lang.String,org.apache.fop.apps.FOUserAgent,java.io.OutputStream)>(outputFormat, userAgent, null);
        return $r0;
    }

    public org.apache.fop.apps.Fop newFop(java.lang.String, java.io.OutputStream) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String outputFormat;
        java.io.OutputStream stream;
        org.apache.fop.apps.FOUserAgent $r0;
        org.apache.fop.apps.Fop $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        outputFormat := @parameter0: java.lang.String;
        stream := @parameter1: java.io.OutputStream;
        $r0 = virtualinvoke this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOUserAgent newFOUserAgent()>();
        $r1 = virtualinvoke this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.Fop newFop(java.lang.String,org.apache.fop.apps.FOUserAgent,java.io.OutputStream)>(outputFormat, $r0, stream);
        return $r1;
    }

    public org.apache.fop.apps.Fop newFop(java.lang.String, org.apache.fop.apps.FOUserAgent, java.io.OutputStream) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String outputFormat;
        org.apache.fop.apps.FOUserAgent userAgent;
        java.io.OutputStream stream;
        java.lang.NullPointerException $r0;
        org.apache.fop.apps.Fop $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        outputFormat := @parameter0: java.lang.String;
        userAgent := @parameter1: org.apache.fop.apps.FOUserAgent;
        stream := @parameter2: java.io.OutputStream;
        if userAgent != null goto label0;

        $r0 = new java.lang.NullPointerException;
        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("The userAgent parameter must not be null!");
        throw $r0;

     label0:
        $r1 = new org.apache.fop.apps.Fop;
        specialinvoke $r1.<org.apache.fop.apps.Fop: void <init>(java.lang.String,org.apache.fop.apps.FOUserAgent,java.io.OutputStream)>(outputFormat, userAgent, stream);
        return $r1;
    }

    public org.apache.fop.apps.Fop newFop(org.apache.fop.apps.FOUserAgent) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.apps.FOUserAgent userAgent;
        org.apache.fop.render.Renderer $r0;
        org.apache.fop.fo.FOEventHandler $r1;
        java.lang.IllegalStateException $r2;
        org.apache.fop.apps.Fop $r3;

        this := @this: org.apache.fop.apps.FopFactory;
        userAgent := @parameter0: org.apache.fop.apps.FOUserAgent;
        $r0 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.fop.render.Renderer getRendererOverride()>();
        if $r0 != null goto label0;

        $r1 = virtualinvoke userAgent.<org.apache.fop.apps.FOUserAgent: org.apache.fop.fo.FOEventHandler getFOEventHandlerOverride()>();
        if $r1 != null goto label0;

        $r2 = new java.lang.IllegalStateException;
        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Either the overriding renderer or the overriding FOEventHandler must be set when this factory method is used!");
        throw $r2;

     label0:
        $r3 = virtualinvoke this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.Fop newFop(java.lang.String,org.apache.fop.apps.FOUserAgent)>(null, userAgent);
        return $r3;
    }

    public org.apache.fop.render.RendererFactory getRendererFactory()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.render.RendererFactory $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.render.RendererFactory rendererFactory>;
        return $r0;
    }

    public org.apache.fop.render.XMLHandlerRegistry getXMLHandlerRegistry()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.render.XMLHandlerRegistry $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.render.XMLHandlerRegistry xmlHandlers>;
        return $r0;
    }

    public org.apache.fop.fo.ElementMappingRegistry getElementMappingRegistry()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.fo.ElementMappingRegistry $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.fo.ElementMappingRegistry elementMappingRegistry>;
        return $r0;
    }

    public org.apache.fop.util.ContentHandlerFactoryRegistry getContentHandlerFactoryRegistry()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.util.ContentHandlerFactoryRegistry $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.util.ContentHandlerFactoryRegistry contentHandlerFactoryRegistry>;
        return $r0;
    }

    public org.apache.xmlgraphics.image.loader.ImageManager getImageManager()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.xmlgraphics.image.loader.ImageManager $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.xmlgraphics.image.loader.ImageManager imageManager>;
        return $r0;
    }

    public void addElementMapping(org.apache.fop.fo.ElementMapping)
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.fo.ElementMapping elementMapping;
        org.apache.fop.fo.ElementMappingRegistry $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        elementMapping := @parameter0: org.apache.fop.fo.ElementMapping;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.fo.ElementMappingRegistry elementMappingRegistry>;
        virtualinvoke $r0.<org.apache.fop.fo.ElementMappingRegistry: void addElementMapping(org.apache.fop.fo.ElementMapping)>(elementMapping);
        return;
    }

    public void setLayoutManagerMakerOverride(org.apache.fop.layoutmgr.LayoutManagerMaker)
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.layoutmgr.LayoutManagerMaker lmMaker;

        this := @this: org.apache.fop.apps.FopFactory;
        lmMaker := @parameter0: org.apache.fop.layoutmgr.LayoutManagerMaker;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.layoutmgr.LayoutManagerMaker lmMakerOverride> = lmMaker;
        return;
    }

    public org.apache.fop.layoutmgr.LayoutManagerMaker getLayoutManagerMakerOverride()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.layoutmgr.LayoutManagerMaker $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.layoutmgr.LayoutManagerMaker lmMakerOverride>;
        return $r0;
    }

    private java.lang.String checkBaseURL(java.lang.String) throws java.net.MalformedURLException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String base, $r5;
        java.io.File dir, $r1;
        java.net.MalformedURLException mfue, $r3;
        boolean $z0;
        java.lang.StringBuffer $r0;
        java.net.URL $r2;
        org.apache.commons.logging.Log $r4;

        this := @this: org.apache.fop.apps.FopFactory;
        base := @parameter0: java.lang.String;
        $z0 = virtualinvoke base.<java.lang.String: boolean endsWith(java.lang.String)>("/");
        if $z0 != 0 goto label0;

        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(base);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");
        base = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

     label0:
        $r1 = new java.io.File;
        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(base);
        dir = $r1;

     label1:
        $z0 = virtualinvoke dir.<java.io.File: boolean isDirectory()>();
        if $z0 == 0 goto label2;

        $r2 = virtualinvoke dir.<java.io.File: java.net.URL toURL()>();
        goto label3;

     label2:
        $r2 = new java.net.URL;
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(base);

     label3:
        base = virtualinvoke $r2.<java.net.URL: java.lang.String toExternalForm()>();

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;
        mfue = $r3;
        $z0 = this.<org.apache.fop.apps.FopFactory: boolean strictUserConfigValidation>;
        if $z0 == 0 goto label6;

        throw mfue;

     label6:
        $r4 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $r5 = virtualinvoke mfue.<java.net.MalformedURLException: java.lang.String getMessage()>();
        interfaceinvoke $r4.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r5);

     label7:
        return base;

        catch java.net.MalformedURLException from label1 to label4 with label5;
    }

    public void setBaseURL(java.lang.String) throws java.net.MalformedURLException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String base, $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        base := @parameter0: java.lang.String;
        $r0 = specialinvoke this.<org.apache.fop.apps.FopFactory: java.lang.String checkBaseURL(java.lang.String)>(base);
        this.<org.apache.fop.apps.FopFactory: java.lang.String base> = $r0;
        return;
    }

    public java.lang.String getBaseURL()
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.lang.String base>;
        return $r0;
    }

    public void setFontBaseURL(java.lang.String) throws java.net.MalformedURLException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String fontBase, $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        fontBase := @parameter0: java.lang.String;
        $r0 = specialinvoke this.<org.apache.fop.apps.FopFactory: java.lang.String checkBaseURL(java.lang.String)>(fontBase);
        this.<org.apache.fop.apps.FopFactory: java.lang.String fontBase> = $r0;
        return;
    }

    public java.lang.String getFontBaseURL()
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.lang.String fontBase>;
        return $r0;
    }

    public java.lang.String getHyphenBaseURL()
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.lang.String hyphenBase>;
        return $r0;
    }

    public void setHyphenBaseURL(java.lang.String) throws java.net.MalformedURLException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String hyphenBase, $r1;
        org.apache.fop.apps.FopFactory$1 $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        hyphenBase := @parameter0: java.lang.String;
        if hyphenBase == null goto label0;

        $r0 = new org.apache.fop.apps.FopFactory$1;
        specialinvoke $r0.<org.apache.fop.apps.FopFactory$1: void <init>(org.apache.fop.apps.FopFactory,java.lang.String)>(this, hyphenBase);
        virtualinvoke this.<org.apache.fop.apps.FopFactory: void setHyphenationTreeResolver(org.apache.fop.hyphenation.HyphenationTreeResolver)>($r0);

     label0:
        $r1 = specialinvoke this.<org.apache.fop.apps.FopFactory: java.lang.String checkBaseURL(java.lang.String)>(hyphenBase);
        this.<org.apache.fop.apps.FopFactory: java.lang.String hyphenBase> = $r1;
        return;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        org.apache.fop.apps.FopFactory this;
        javax.xml.transform.URIResolver uriResolver;
        org.apache.fop.apps.FOURIResolver $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        uriResolver := @parameter0: javax.xml.transform.URIResolver;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOURIResolver foURIResolver>;
        virtualinvoke $r0.<org.apache.fop.apps.FOURIResolver: void setCustomURIResolver(javax.xml.transform.URIResolver)>(uriResolver);
        return;
    }

    public javax.xml.transform.URIResolver getURIResolver()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.apps.FOURIResolver $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOURIResolver foURIResolver>;
        return $r0;
    }

    public org.apache.fop.hyphenation.HyphenationTreeResolver getHyphenationTreeResolver()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.hyphenation.HyphenationTreeResolver $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.hyphenation.HyphenationTreeResolver hyphResolver>;
        return $r0;
    }

    public void setHyphenationTreeResolver(org.apache.fop.hyphenation.HyphenationTreeResolver)
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.hyphenation.HyphenationTreeResolver hyphResolver;

        this := @this: org.apache.fop.apps.FopFactory;
        hyphResolver := @parameter0: org.apache.fop.hyphenation.HyphenationTreeResolver;
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.hyphenation.HyphenationTreeResolver hyphResolver> = hyphResolver;
        return;
    }

    public void setStrictValidation(boolean)
    {
        org.apache.fop.apps.FopFactory this;
        boolean validateStrictly;

        this := @this: org.apache.fop.apps.FopFactory;
        validateStrictly := @parameter0: boolean;
        this.<org.apache.fop.apps.FopFactory: boolean strictFOValidation> = validateStrictly;
        return;
    }

    public boolean validateStrictly()
    {
        org.apache.fop.apps.FopFactory this;
        boolean $z0;

        this := @this: org.apache.fop.apps.FopFactory;
        $z0 = this.<org.apache.fop.apps.FopFactory: boolean strictFOValidation>;
        return $z0;
    }

    public boolean isBreakIndentInheritanceOnReferenceAreaBoundary()
    {
        org.apache.fop.apps.FopFactory this;
        boolean $z0;

        this := @this: org.apache.fop.apps.FopFactory;
        $z0 = this.<org.apache.fop.apps.FopFactory: boolean breakIndentInheritanceOnReferenceAreaBoundary>;
        return $z0;
    }

    public void setBreakIndentInheritanceOnReferenceAreaBoundary(boolean)
    {
        org.apache.fop.apps.FopFactory this;
        boolean value;

        this := @this: org.apache.fop.apps.FopFactory;
        value := @parameter0: boolean;
        this.<org.apache.fop.apps.FopFactory: boolean breakIndentInheritanceOnReferenceAreaBoundary> = value;
        return;
    }

    public boolean isBase14KerningEnabled()
    {
        org.apache.fop.apps.FopFactory this;
        boolean $z0;

        this := @this: org.apache.fop.apps.FopFactory;
        $z0 = this.<org.apache.fop.apps.FopFactory: boolean enableBase14Kerning>;
        return $z0;
    }

    public void setBase14KerningEnabled(boolean)
    {
        org.apache.fop.apps.FopFactory this;
        boolean value;

        this := @this: org.apache.fop.apps.FopFactory;
        value := @parameter0: boolean;
        this.<org.apache.fop.apps.FopFactory: boolean enableBase14Kerning> = value;
        return;
    }

    public float getSourceResolution()
    {
        org.apache.fop.apps.FopFactory this;
        float $f0;

        this := @this: org.apache.fop.apps.FopFactory;
        $f0 = this.<org.apache.fop.apps.FopFactory: float sourceResolution>;
        return $f0;
    }

    public float getSourcePixelUnitToMillimeter()
    {
        org.apache.fop.apps.FopFactory this;
        float $f0, $f1;

        this := @this: org.apache.fop.apps.FopFactory;
        $f0 = virtualinvoke this.<org.apache.fop.apps.FopFactory: float getSourceResolution()>();
        $f1 = 25.4F / $f0;
        return $f1;
    }

    public void setSourceResolution(float)
    {
        org.apache.fop.apps.FopFactory this;
        float dpi, $f0;
        org.apache.commons.logging.Log $r0;
        boolean $z0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.apps.FopFactory;
        dpi := @parameter0: float;
        this.<org.apache.fop.apps.FopFactory: float sourceResolution> = dpi;
        $r0 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("source-resolution set to: ");
        $f0 = this.<org.apache.fop.apps.FopFactory: float sourceResolution>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("dpi (px2mm=");
        $f0 = virtualinvoke this.<org.apache.fop.apps.FopFactory: float getSourcePixelUnitToMillimeter()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f0);
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);

     label0:
        return;
    }

    public float getTargetResolution()
    {
        org.apache.fop.apps.FopFactory this;
        float $f0;

        this := @this: org.apache.fop.apps.FopFactory;
        $f0 = this.<org.apache.fop.apps.FopFactory: float targetResolution>;
        return $f0;
    }

    public float getTargetPixelUnitToMillimeter()
    {
        org.apache.fop.apps.FopFactory this;
        float $f0, $f1;

        this := @this: org.apache.fop.apps.FopFactory;
        $f0 = this.<org.apache.fop.apps.FopFactory: float targetResolution>;
        $f1 = 25.4F / $f0;
        return $f1;
    }

    public void setTargetResolution(float)
    {
        org.apache.fop.apps.FopFactory this;
        float dpi;

        this := @this: org.apache.fop.apps.FopFactory;
        dpi := @parameter0: float;
        this.<org.apache.fop.apps.FopFactory: float targetResolution> = dpi;
        return;
    }

    public void setSourceResolution(int)
    {
        org.apache.fop.apps.FopFactory this;
        int dpi;
        float $f0;

        this := @this: org.apache.fop.apps.FopFactory;
        dpi := @parameter0: int;
        $f0 = (float) dpi;
        virtualinvoke this.<org.apache.fop.apps.FopFactory: void setSourceResolution(float)>($f0);
        return;
    }

    public java.lang.String getPageHeight()
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.lang.String pageHeight>;
        return $r0;
    }

    public void setPageHeight(java.lang.String)
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String pageHeight, $r2;
        org.apache.commons.logging.Log $r0;
        boolean $z0;
        java.lang.StringBuffer $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        pageHeight := @parameter0: java.lang.String;
        this.<org.apache.fop.apps.FopFactory: java.lang.String pageHeight> = pageHeight;
        $r0 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default page-height set to: ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(pageHeight);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);

     label0:
        return;
    }

    public java.lang.String getPageWidth()
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.lang.String pageWidth>;
        return $r0;
    }

    public void setPageWidth(java.lang.String)
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String pageWidth, $r2;
        org.apache.commons.logging.Log $r0;
        boolean $z0;
        java.lang.StringBuffer $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        pageWidth := @parameter0: java.lang.String;
        this.<org.apache.fop.apps.FopFactory: java.lang.String pageWidth> = pageWidth;
        $r0 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r0.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Default page-width set to: ");
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(pageWidth);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r2);

     label0:
        return;
    }

    public void ignoreNamespace(java.lang.String)
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String namespaceURI;
        java.util.Set $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        namespaceURI := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.util.Set ignoredNamespaces>;
        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(namespaceURI);
        return;
    }

    public void ignoreNamespaces(java.util.Collection)
    {
        org.apache.fop.apps.FopFactory this;
        java.util.Collection namespaceURIs;
        java.util.Set $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        namespaceURIs := @parameter0: java.util.Collection;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.util.Set ignoredNamespaces>;
        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>(namespaceURIs);
        return;
    }

    public boolean isNamespaceIgnored(java.lang.String)
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String namespaceURI;
        java.util.Set $r0;
        boolean $z0;

        this := @this: org.apache.fop.apps.FopFactory;
        namespaceURI := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.util.Set ignoredNamespaces>;
        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>(namespaceURI);
        return $z0;
    }

    public java.util.Set getIgnoredNamespace()
    {
        org.apache.fop.apps.FopFactory this;
        java.util.Set $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: java.util.Set ignoredNamespaces>;
        $r0 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);
        return $r0;
    }

    public void setUserConfig(java.io.File) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.fop.apps.FopFactory this;
        java.io.File userConfigFile;
        org.apache.fop.apps.FopFactoryConfigurator $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        userConfigFile := @parameter0: java.io.File;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FopFactoryConfigurator config>;
        virtualinvoke $r0.<org.apache.fop.apps.FopFactoryConfigurator: void setUserConfig(java.io.File)>(userConfigFile);
        return;
    }

    public void setUserConfig(java.lang.String) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String uri;
        org.apache.fop.apps.FopFactoryConfigurator $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        uri := @parameter0: java.lang.String;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FopFactoryConfigurator config>;
        virtualinvoke $r0.<org.apache.fop.apps.FopFactoryConfigurator: void setUserConfig(java.lang.String)>(uri);
        return;
    }

    public void setUserConfig(org.apache.avalon.framework.configuration.Configuration) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.avalon.framework.configuration.Configuration userConfig;
        org.apache.fop.apps.FopFactoryConfigurator $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        userConfig := @parameter0: org.apache.avalon.framework.configuration.Configuration;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FopFactoryConfigurator config>;
        virtualinvoke $r0.<org.apache.fop.apps.FopFactoryConfigurator: void setUserConfig(org.apache.avalon.framework.configuration.Configuration)>(userConfig);
        return;
    }

    public org.apache.avalon.framework.configuration.Configuration getUserConfig()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.apps.FopFactoryConfigurator $r0;
        org.apache.avalon.framework.configuration.Configuration $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FopFactoryConfigurator config>;
        $r1 = virtualinvoke $r0.<org.apache.fop.apps.FopFactoryConfigurator: org.apache.avalon.framework.configuration.Configuration getUserConfig()>();
        return $r1;
    }

    public void setStrictUserConfigValidation(boolean)
    {
        org.apache.fop.apps.FopFactory this;
        boolean strictUserConfigValidation;
        org.apache.fop.apps.FOURIResolver $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        strictUserConfigValidation := @parameter0: boolean;
        this.<org.apache.fop.apps.FopFactory: boolean strictUserConfigValidation> = strictUserConfigValidation;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOURIResolver foURIResolver>;
        virtualinvoke $r0.<org.apache.fop.apps.FOURIResolver: void setThrowExceptions(boolean)>(strictUserConfigValidation);
        return;
    }

    public boolean validateUserConfigStrictly()
    {
        org.apache.fop.apps.FopFactory this;
        boolean $z0;

        this := @this: org.apache.fop.apps.FopFactory;
        $z0 = this.<org.apache.fop.apps.FopFactory: boolean strictUserConfigValidation>;
        return $z0;
    }

    public void setUseCache(boolean)
    {
        org.apache.fop.apps.FopFactory this;
        boolean useCache;
        org.apache.fop.fonts.FontCache $r0, $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        useCache := @parameter0: boolean;
        if useCache == 0 goto label0;

        $r0 = staticinvoke <org.apache.fop.fonts.FontCache: org.apache.fop.fonts.FontCache load()>();
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache> = $r0;
        $r1 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache>;
        if $r1 != null goto label1;

        $r0 = new org.apache.fop.fonts.FontCache;
        specialinvoke $r0.<org.apache.fop.fonts.FontCache: void <init>()>();
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache> = $r0;
        goto label1;

     label0:
        this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache> = null;

     label1:
        return;
    }

    public boolean useCache()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.fonts.FontCache $r0;
        boolean $z0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public org.apache.fop.fonts.FontCache getFontCache()
    {
        org.apache.fop.apps.FopFactory this;
        org.apache.fop.fonts.FontCache $r0;

        this := @this: org.apache.fop.apps.FopFactory;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.fonts.FontCache fontCache>;
        return $r0;
    }

    public javax.xml.transform.Source resolveURI(java.lang.String, java.lang.String)
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String href, baseUri, $r4;
        javax.xml.transform.Source source;
        javax.xml.transform.TransformerException e, $r1;
        org.apache.fop.apps.FOURIResolver $r0;
        org.apache.commons.logging.Log $r2;
        java.lang.StringBuffer $r3;

        this := @this: org.apache.fop.apps.FopFactory;
        href := @parameter0: java.lang.String;
        baseUri := @parameter1: java.lang.String;
        source = null;

     label0:
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.apps.FOURIResolver foURIResolver>;
        source = virtualinvoke $r0.<org.apache.fop.apps.FOURIResolver: javax.xml.transform.Source resolve(java.lang.String,java.lang.String)>(href, baseUri);

     label1:
        goto label3;

     label2:
        $r1 := @caughtexception;
        e = $r1;
        $r2 = <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log>;
        $r3 = new java.lang.StringBuffer;
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Attempt to resolve URI \'");
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(href);
        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' failed: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r2.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>($r4, e);

     label3:
        return source;

        catch javax.xml.transform.TransformerException from label0 to label1 with label2;
    }

    public java.awt.color.ColorSpace getColorSpace(java.lang.String, java.lang.String)
    {
        org.apache.fop.apps.FopFactory this;
        java.lang.String baseUri, iccProfileSrc;
        org.apache.fop.util.ColorSpaceCache $r0;
        java.awt.color.ColorSpace $r1;

        this := @this: org.apache.fop.apps.FopFactory;
        baseUri := @parameter0: java.lang.String;
        iccProfileSrc := @parameter1: java.lang.String;
        $r0 = this.<org.apache.fop.apps.FopFactory: org.apache.fop.util.ColorSpaceCache colorSpaceCache>;
        $r1 = virtualinvoke $r0.<org.apache.fop.util.ColorSpaceCache: java.awt.color.ColorSpace get(java.lang.String,java.lang.String)>(baseUri, iccProfileSrc);
        return $r1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        org.apache.commons.logging.Log $r1;

        $r0 = <org.apache.fop.apps.FopFactory: java.lang.Class class$org$apache$fop$apps$FopFactory>;
        if $r0 != null goto label0;

        $r0 = staticinvoke <org.apache.fop.apps.FopFactory: java.lang.Class class$(java.lang.String)>("org.apache.fop.apps.FopFactory");
        <org.apache.fop.apps.FopFactory: java.lang.Class class$org$apache$fop$apps$FopFactory> = $r0;
        goto label1;

     label0:
        $r0 = <org.apache.fop.apps.FopFactory: java.lang.Class class$org$apache$fop$apps$FopFactory>;

     label1:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r0);
        <org.apache.fop.apps.FopFactory: org.apache.commons.logging.Log log> = $r1;
        return;
    }
}

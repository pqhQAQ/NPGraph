public class org.apache.fop.layoutmgr.inline.PageNumberLayoutManager extends org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager
{
    private org.apache.fop.fo.flow.PageNumber fobj;
    private org.apache.fop.fonts.Font font;

    public void <init>(org.apache.fop.fo.flow.PageNumber)
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.fo.flow.PageNumber node;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        node := @parameter0: org.apache.fop.fo.flow.PageNumber;
        specialinvoke this.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager: void <init>(org.apache.fop.fo.FObj)>(node);
        this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj> = node;
        return;
    }

    public void initialize()
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.fonts.FontInfo fi;
        org.apache.fop.fonts.FontTriplet[] fontkeys;
        org.apache.fop.fo.flow.PageNumber $r0, $r4, $r8;
        org.apache.fop.fo.FOEventHandler $r1;
        org.apache.fop.fo.properties.CommonFont $r2, $r5;
        org.apache.fop.fonts.FontTriplet $r3;
        org.apache.fop.datatypes.Length $r6;
        int $i0;
        org.apache.fop.fonts.Font $r7;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r9;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        fi = virtualinvoke $r1.<org.apache.fop.fo.FOEventHandler: org.apache.fop.fonts.FontInfo getFontInfo()>();
        $r0 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r2 = virtualinvoke $r0.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.fo.properties.CommonFont getCommonFont()>();
        fontkeys = virtualinvoke $r2.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.fonts.FontTriplet[] getFontState(org.apache.fop.fonts.FontInfo)>(fi);
        $r3 = fontkeys[0];
        $r4 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.fo.properties.CommonFont getCommonFont()>();
        $r6 = $r5.<org.apache.fop.fo.properties.CommonFont: org.apache.fop.datatypes.Length fontSize>;
        $i0 = interfaceinvoke $r6.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(this);
        $r7 = virtualinvoke fi.<org.apache.fop.fonts.FontInfo: org.apache.fop.fonts.Font getFontInstance(org.apache.fop.fonts.FontTriplet,int)>($r3, $i0);
        this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font> = $r7;
        $r8 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r9 = virtualinvoke $r8.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()>();
        virtualinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: void setCommonBorderPaddingBackground(org.apache.fop.fo.properties.CommonBorderPaddingBackground)>($r9);
        return;
    }

    protected org.apache.fop.layoutmgr.inline.AlignmentContext makeAlignmentContext(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r0, $r12;
        org.apache.fop.fonts.Font $r1;
        org.apache.fop.fo.flow.PageNumber $r2, $r6, $r8, $r9, $r11;
        org.apache.fop.fo.properties.SpaceProperty $r3;
        org.apache.fop.fo.properties.Property $r4;
        org.apache.fop.datatypes.Length $r5, $r7, $r10;
        int $i0, $i1, $i2;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = new org.apache.fop.layoutmgr.inline.AlignmentContext;
        $r1 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font>;
        $r2 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.fo.properties.SpaceProperty getLineHeight()>();
        $r4 = virtualinvoke $r3.<org.apache.fop.fo.properties.SpaceProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(this);
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i0 = interfaceinvoke $r5.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(this);
        $r6 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r7 = virtualinvoke $r6.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.datatypes.Length getAlignmentAdjust()>();
        $r8 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $i1 = virtualinvoke $r8.<org.apache.fop.fo.flow.PageNumber: int getAlignmentBaseline()>();
        $r9 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r10 = virtualinvoke $r9.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.datatypes.Length getBaselineShift()>();
        $r11 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $i2 = virtualinvoke $r11.<org.apache.fop.fo.flow.PageNumber: int getDominantBaseline()>();
        $r12 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext getAlignmentContext()>();
        specialinvoke $r0.<org.apache.fop.layoutmgr.inline.AlignmentContext: void <init>(org.apache.fop.fonts.Font,int,org.apache.fop.datatypes.Length,int,org.apache.fop.datatypes.Length,int,org.apache.fop.layoutmgr.inline.AlignmentContext)>($r1, $i0, $r7, $i1, $r10, $i2, $r12);
        return $r0;
    }

    public org.apache.fop.area.inline.InlineArea get(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.layoutmgr.LayoutContext context;
        org.apache.fop.area.inline.TextArea $r0, text;
        java.lang.String str;
        int width, $i0, $i1;
        org.apache.fop.area.PageViewport $r1;
        org.apache.fop.fonts.Font $r2, $r3;
        java.lang.Integer $r4;
        org.apache.fop.fo.flow.PageNumber $r5, $r7;
        java.awt.Color $r6;
        org.apache.fop.fo.properties.CommonTextDecoration $r8;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = new org.apache.fop.area.inline.TextArea;
        specialinvoke $r0.<org.apache.fop.area.inline.TextArea: void <init>()>();
        text = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        str = virtualinvoke $r1.<org.apache.fop.area.PageViewport: java.lang.String getPageNumberString()>();
        width = specialinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: int getStringWidth(java.lang.String)>(str);
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void addWord(java.lang.String,int)>(str, 0);
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void setIPD(int)>(width);
        $r2 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font>;
        $i0 = virtualinvoke $r2.<org.apache.fop.fonts.Font: int getAscender()>();
        $r3 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font>;
        $i1 = virtualinvoke $r3.<org.apache.fop.fonts.Font: int getDescender()>();
        $i0 = $i0 - $i1;
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void setBPD(int)>($i0);
        $r2 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font>;
        $i0 = virtualinvoke $r2.<org.apache.fop.fonts.Font: int getAscender()>();
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void setBaselineOffset(int)>($i0);
        $r2 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font>;
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addFontTraits(org.apache.fop.area.Area,org.apache.fop.fonts.Font)>(text, $r2);
        $r4 = <org.apache.fop.area.Trait: java.lang.Integer COLOR>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r6 = virtualinvoke $r5.<org.apache.fop.fo.flow.PageNumber: java.awt.Color getColor()>();
        virtualinvoke text.<org.apache.fop.area.inline.TextArea: void addTrait(java.lang.Object,java.lang.Object)>($r4, $r6);
        $r7 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r8 = virtualinvoke $r7.<org.apache.fop.fo.flow.PageNumber: org.apache.fop.fo.properties.CommonTextDecoration getTextDecoration()>();
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void addTextDecoration(org.apache.fop.area.Area,org.apache.fop.fo.properties.CommonTextDecoration)>(text, $r8);
        return text;
    }

    protected org.apache.fop.area.inline.InlineArea getEffectiveArea()
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.area.inline.TextArea baseArea, ta, $r1;
        org.apache.fop.area.inline.InlineArea $r0;
        org.apache.fop.fo.flow.PageNumber $r2, $r5;
        java.lang.String $r3;
        int $i0;
        java.lang.Integer $r4;
        java.awt.Color $r6;
        java.util.Map $r7, $r8;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        $r0 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.area.inline.InlineArea curArea>;
        baseArea = (org.apache.fop.area.inline.TextArea) $r0;
        $r1 = new org.apache.fop.area.inline.TextArea;
        specialinvoke $r1.<org.apache.fop.area.inline.TextArea: void <init>()>();
        ta = $r1;
        $r2 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.flow.PageNumber: java.lang.String getId()>();
        staticinvoke <org.apache.fop.layoutmgr.TraitSetter: void setProducerID(org.apache.fop.area.Area,java.lang.String)>(ta, $r3);
        $i0 = virtualinvoke baseArea.<org.apache.fop.area.inline.TextArea: int getIPD()>();
        virtualinvoke ta.<org.apache.fop.area.inline.TextArea: void setIPD(int)>($i0);
        $i0 = virtualinvoke baseArea.<org.apache.fop.area.inline.TextArea: int getBPD()>();
        virtualinvoke ta.<org.apache.fop.area.inline.TextArea: void setBPD(int)>($i0);
        $i0 = virtualinvoke baseArea.<org.apache.fop.area.inline.TextArea: int getOffset()>();
        virtualinvoke ta.<org.apache.fop.area.inline.TextArea: void setOffset(int)>($i0);
        $i0 = virtualinvoke baseArea.<org.apache.fop.area.inline.TextArea: int getBaselineOffset()>();
        virtualinvoke ta.<org.apache.fop.area.inline.TextArea: void setBaselineOffset(int)>($i0);
        $r4 = <org.apache.fop.area.Trait: java.lang.Integer COLOR>;
        $r5 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r6 = virtualinvoke $r5.<org.apache.fop.fo.flow.PageNumber: java.awt.Color getColor()>();
        virtualinvoke ta.<org.apache.fop.area.inline.TextArea: void addTrait(java.lang.Object,java.lang.Object)>($r4, $r6);
        $r7 = virtualinvoke ta.<org.apache.fop.area.inline.TextArea: java.util.Map getTraits()>();
        $r8 = virtualinvoke baseArea.<org.apache.fop.area.inline.TextArea: java.util.Map getTraits()>();
        interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>($r8);
        specialinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: void updateContent(org.apache.fop.area.inline.TextArea)>(ta);
        return ta;
    }

    private void updateContent(org.apache.fop.area.inline.TextArea)
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.area.inline.TextArea area;
        org.apache.fop.area.PageViewport $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2;
        org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo $r3;
        org.apache.fop.traits.MinOptMax $r4;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        area := @parameter0: org.apache.fop.area.inline.TextArea;
        virtualinvoke area.<org.apache.fop.area.inline.TextArea: void removeText()>();
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.area.PageViewport getCurrentPV()>();
        $r1 = virtualinvoke $r0.<org.apache.fop.area.PageViewport: java.lang.String getPageNumberString()>();
        virtualinvoke area.<org.apache.fop.area.inline.TextArea: void addWord(java.lang.String,int)>($r1, 0);
        $r2 = virtualinvoke area.<org.apache.fop.area.inline.TextArea: java.lang.String getText()>();
        $i0 = specialinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: int getStringWidth(java.lang.String)>($r2);
        $i1 = virtualinvoke area.<org.apache.fop.area.inline.TextArea: int getIPD()>();
        $i0 = $i0 - $i1;
        virtualinvoke area.<org.apache.fop.area.inline.TextArea: void handleIPDVariation(int)>($i0);
        $r3 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo areaInfo>;
        $r4 = new org.apache.fop.traits.MinOptMax;
        $i2 = virtualinvoke area.<org.apache.fop.area.inline.TextArea: int getIPD()>();
        specialinvoke $r4.<org.apache.fop.traits.MinOptMax: void <init>(int)>($i2);
        $r3.<org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager$AreaInfo: org.apache.fop.traits.MinOptMax ipdArea> = $r4;
        return;
    }

    private int getStringWidth(java.lang.String)
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        java.lang.String str;
        int width, count, $i0;
        org.apache.fop.fonts.Font $r0;
        char $c1;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        str := @parameter0: java.lang.String;
        width = 0;
        count = 0;

     label0:
        $i0 = virtualinvoke str.<java.lang.String: int length()>();
        if count >= $i0 goto label1;

        $r0 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fonts.Font font>;
        $c1 = virtualinvoke str.<java.lang.String: char charAt(int)>(count);
        $i0 = virtualinvoke $r0.<org.apache.fop.fonts.Font: int getCharWidth(char)>($c1);
        width = width + $i0;
        count = count + 1;
        goto label0;

     label1:
        return width;
    }

    protected void addId()
    {
        org.apache.fop.layoutmgr.inline.PageNumberLayoutManager this;
        org.apache.fop.layoutmgr.PageSequenceLayoutManager $r0;
        org.apache.fop.fo.flow.PageNumber $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.layoutmgr.inline.PageNumberLayoutManager;
        $r0 = virtualinvoke this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.layoutmgr.PageSequenceLayoutManager getPSLM()>();
        $r1 = this.<org.apache.fop.layoutmgr.inline.PageNumberLayoutManager: org.apache.fop.fo.flow.PageNumber fobj>;
        $r2 = virtualinvoke $r1.<org.apache.fop.fo.flow.PageNumber: java.lang.String getId()>();
        virtualinvoke $r0.<org.apache.fop.layoutmgr.PageSequenceLayoutManager: void addIDToPage(java.lang.String)>($r2);
        return;
    }
}

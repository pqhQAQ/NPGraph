public class org.apache.fop.fo.flow.Block extends org.apache.fop.fo.FObjMixed implements org.apache.fop.fo.properties.BreakPropertySet
{
    private boolean blockOrInlineItemFound;
    private boolean initialPropertySetFound;
    private org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground;
    private org.apache.fop.fo.properties.CommonFont commonFont;
    private org.apache.fop.fo.properties.CommonHyphenation commonHyphenation;
    private org.apache.fop.fo.properties.CommonMarginBlock commonMarginBlock;
    private org.apache.fop.fo.properties.CommonRelativePosition commonRelativePosition;
    private int breakAfter;
    private int breakBefore;
    private java.awt.Color color;
    private int hyphenationKeep;
    private org.apache.fop.datatypes.Numeric hyphenationLadderCount;
    private int intrusionDisplace;
    private org.apache.fop.fo.properties.KeepProperty keepTogether;
    private org.apache.fop.fo.properties.KeepProperty keepWithNext;
    private org.apache.fop.fo.properties.KeepProperty keepWithPrevious;
    private org.apache.fop.datatypes.Length lastLineEndIndent;
    private int linefeedTreatment;
    private org.apache.fop.fo.properties.SpaceProperty lineHeight;
    private int lineHeightShiftAdjustment;
    private int lineStackingStrategy;
    private org.apache.fop.datatypes.Numeric orphans;
    private int whiteSpaceTreatment;
    private int span;
    private int textAlign;
    private int textAlignLast;
    private org.apache.fop.datatypes.Length textIndent;
    private int whiteSpaceCollapse;
    private org.apache.fop.datatypes.Numeric widows;
    private int wrapOption;

    public void <init>(org.apache.fop.fo.FONode)
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.FONode parent;

        this := @this: org.apache.fop.fo.flow.Block;
        parent := @parameter0: org.apache.fop.fo.FONode;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void <init>(org.apache.fop.fo.FONode)>(parent);
        this.<org.apache.fop.fo.flow.Block: boolean blockOrInlineItemFound> = 0;
        this.<org.apache.fop.fo.flow.Block: boolean initialPropertySetFound> = 0;
        return;
    }

    public void bind(org.apache.fop.fo.PropertyList) throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.PropertyList pList;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r0;
        org.apache.fop.fo.properties.CommonFont $r1;
        org.apache.fop.fo.properties.CommonHyphenation $r2;
        org.apache.fop.fo.properties.CommonMarginBlock $r3;
        org.apache.fop.fo.properties.CommonRelativePosition $r4;
        org.apache.fop.fo.properties.Property $r5;
        int $i0;
        org.apache.fop.apps.FOUserAgent $r6;
        java.awt.Color $r7;
        org.apache.fop.datatypes.Numeric $r8;
        org.apache.fop.fo.properties.KeepProperty $r9;
        org.apache.fop.datatypes.Length $r10;
        org.apache.fop.fo.properties.SpaceProperty $r11;

        this := @this: org.apache.fop.fo.flow.Block;
        pList := @parameter0: org.apache.fop.fo.PropertyList;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void bind(org.apache.fop.fo.PropertyList)>(pList);
        $r0 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.CommonBorderPaddingBackground getBorderPaddingBackgroundProps()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground> = $r0;
        $r1 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.CommonFont getFontProps()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonFont commonFont> = $r1;
        $r2 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.CommonHyphenation getHyphenationProps()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonHyphenation commonHyphenation> = $r2;
        $r3 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.CommonMarginBlock getMarginBlockProps()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonMarginBlock commonMarginBlock> = $r3;
        $r4 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.CommonRelativePosition getRelativePositionProps()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonRelativePosition commonRelativePosition> = $r4;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(58);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int breakAfter> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(59);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int breakBefore> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(66);
        $r6 = virtualinvoke this.<org.apache.fop.fo.flow.Block: org.apache.fop.apps.FOUserAgent getUserAgent()>();
        $r7 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: java.awt.Color getColor(org.apache.fop.apps.FOUserAgent)>($r6);
        this.<org.apache.fop.fo.flow.Block: java.awt.Color color> = $r7;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(109);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int hyphenationKeep> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(110);
        $r8 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Numeric hyphenationLadderCount> = $r8;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(248);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int intrusionDisplace> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(118);
        $r9 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.fo.properties.KeepProperty getKeep()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.KeepProperty keepTogether> = $r9;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(119);
        $r9 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.fo.properties.KeepProperty getKeep()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.KeepProperty keepWithNext> = $r9;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(120);
        $r9 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.fo.properties.KeepProperty getKeep()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.KeepProperty keepWithPrevious> = $r9;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(122);
        $r10 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Length lastLineEndIndent> = $r10;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(130);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int linefeedTreatment> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(131);
        $r11 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.fo.properties.SpaceProperty getSpace()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.SpaceProperty lineHeight> = $r11;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(132);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int lineHeightShiftAdjustment> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(133);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int lineStackingStrategy> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(152);
        $r8 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Numeric orphans> = $r8;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(240);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int whiteSpaceTreatment> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(204);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int span> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(223);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int textAlign> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(224);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int textAlignLast> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(228);
        $r10 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Length textIndent> = $r10;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(239);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int whiteSpaceCollapse> = $i0;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(241);
        $r8 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Numeric getNumeric()>();
        this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Numeric widows> = $r8;
        $r5 = virtualinvoke pList.<org.apache.fop.fo.PropertyList: org.apache.fop.fo.properties.Property get(int)>(244);
        $i0 = virtualinvoke $r5.<org.apache.fop.fo.properties.Property: int getEnum()>();
        this.<org.apache.fop.fo.flow.Block: int wrapOption> = $i0;
        return;
    }

    protected void startOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.FOEventHandler $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void startOfNode()>();
        $r0 = virtualinvoke this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        virtualinvoke $r0.<org.apache.fop.fo.FOEventHandler: void startBlock(org.apache.fop.fo.flow.Block)>(this);
        return;
    }

    protected void endOfNode() throws org.apache.fop.apps.FOPException
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.FOEventHandler $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        specialinvoke this.<org.apache.fop.fo.FObjMixed: void endOfNode()>();
        $r0 = virtualinvoke this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.FOEventHandler getFOEventHandler()>();
        virtualinvoke $r0.<org.apache.fop.fo.FOEventHandler: void endBlock(org.apache.fop.fo.flow.Block)>(this);
        return;
    }

    public org.apache.fop.fo.properties.CommonMarginBlock getCommonMarginBlock()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.CommonMarginBlock $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonMarginBlock commonMarginBlock>;
        return $r0;
    }

    public org.apache.fop.fo.properties.CommonBorderPaddingBackground getCommonBorderPaddingBackground()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.CommonBorderPaddingBackground $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonBorderPaddingBackground commonBorderPaddingBackground>;
        return $r0;
    }

    public org.apache.fop.fo.properties.CommonFont getCommonFont()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.CommonFont $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonFont commonFont>;
        return $r0;
    }

    public org.apache.fop.fo.properties.CommonHyphenation getCommonHyphenation()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.CommonHyphenation $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonHyphenation commonHyphenation>;
        return $r0;
    }

    public int getBreakAfter()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int breakAfter>;
        return $i0;
    }

    public int getBreakBefore()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int breakBefore>;
        return $i0;
    }

    public org.apache.fop.datatypes.Numeric getHyphenationLadderCount()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.datatypes.Numeric $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Numeric hyphenationLadderCount>;
        return $r0;
    }

    public org.apache.fop.fo.properties.KeepProperty getKeepWithNext()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.KeepProperty $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.KeepProperty keepWithNext>;
        return $r0;
    }

    public org.apache.fop.fo.properties.KeepProperty getKeepWithPrevious()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.KeepProperty $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.KeepProperty keepWithPrevious>;
        return $r0;
    }

    public org.apache.fop.fo.properties.KeepProperty getKeepTogether()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.KeepProperty $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.KeepProperty keepTogether>;
        return $r0;
    }

    public int getOrphans()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.datatypes.Numeric $r0;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Numeric orphans>;
        $i0 = interfaceinvoke $r0.<org.apache.fop.datatypes.Numeric: int getValue()>();
        return $i0;
    }

    public int getWidows()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.datatypes.Numeric $r0;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Numeric widows>;
        $i0 = interfaceinvoke $r0.<org.apache.fop.datatypes.Numeric: int getValue()>();
        return $i0;
    }

    public int getLineStackingStrategy()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int lineStackingStrategy>;
        return $i0;
    }

    public java.awt.Color getColor()
    {
        org.apache.fop.fo.flow.Block this;
        java.awt.Color $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: java.awt.Color color>;
        return $r0;
    }

    public org.apache.fop.fo.properties.SpaceProperty getLineHeight()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.SpaceProperty $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.SpaceProperty lineHeight>;
        return $r0;
    }

    public int getSpan()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int span>;
        return $i0;
    }

    public int getTextAlign()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int textAlign>;
        return $i0;
    }

    public int getTextAlignLast()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int textAlignLast>;
        return $i0;
    }

    public org.apache.fop.datatypes.Length getTextIndent()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.datatypes.Length $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Length textIndent>;
        return $r0;
    }

    public org.apache.fop.datatypes.Length getLastLineEndIndent()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.datatypes.Length $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.datatypes.Length lastLineEndIndent>;
        return $r0;
    }

    public int getWrapOption()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int wrapOption>;
        return $i0;
    }

    protected void validateChildNode(org.xml.sax.Locator, java.lang.String, java.lang.String) throws org.apache.fop.fo.ValidationException
    {
        org.apache.fop.fo.flow.Block this;
        org.xml.sax.Locator loc;
        java.lang.String nsURI, localName, $r0;
        boolean $z0;

        this := @this: org.apache.fop.fo.flow.Block;
        loc := @parameter0: org.xml.sax.Locator;
        nsURI := @parameter1: java.lang.String;
        localName := @parameter2: java.lang.String;
        $r0 = "http://www.w3.org/1999/XSL/Format";
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(nsURI);
        if $z0 == 0 goto label6;

        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("marker");
        if $z0 == 0 goto label1;

        $z0 = this.<org.apache.fop.fo.flow.Block: boolean blockOrInlineItemFound>;
        if $z0 != 0 goto label0;

        $z0 = this.<org.apache.fop.fo.flow.Block: boolean initialPropertySetFound>;
        if $z0 == 0 goto label6;

     label0:
        virtualinvoke this.<org.apache.fop.fo.flow.Block: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:marker", "initial-property-set? (#PCDATA|%inline;|%block;)");
        goto label6;

     label1:
        $z0 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("initial-property-set");
        if $z0 == 0 goto label4;

        $z0 = this.<org.apache.fop.fo.flow.Block: boolean initialPropertySetFound>;
        if $z0 == 0 goto label2;

        virtualinvoke this.<org.apache.fop.fo.flow.Block: void tooManyNodesError(org.xml.sax.Locator,java.lang.String)>(loc, "fo:initial-property-set");
        goto label6;

     label2:
        $z0 = this.<org.apache.fop.fo.flow.Block: boolean blockOrInlineItemFound>;
        if $z0 == 0 goto label3;

        virtualinvoke this.<org.apache.fop.fo.flow.Block: void nodesOutOfOrderError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, "fo:initial-property-set", "(#PCDATA|%inline;|%block;)");
        goto label6;

     label3:
        this.<org.apache.fop.fo.flow.Block: boolean initialPropertySetFound> = 1;
        goto label6;

     label4:
        $z0 = virtualinvoke this.<org.apache.fop.fo.flow.Block: boolean isBlockOrInlineItem(java.lang.String,java.lang.String)>(nsURI, localName);
        if $z0 == 0 goto label5;

        this.<org.apache.fop.fo.flow.Block: boolean blockOrInlineItemFound> = 1;
        goto label6;

     label5:
        virtualinvoke this.<org.apache.fop.fo.flow.Block: void invalidChildError(org.xml.sax.Locator,java.lang.String,java.lang.String)>(loc, nsURI, localName);

     label6:
        return;
    }

    public int getLinefeedTreatment()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int linefeedTreatment>;
        return $i0;
    }

    public int getWhitespaceTreatment()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int whiteSpaceTreatment>;
        return $i0;
    }

    public int getWhitespaceCollapse()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int whiteSpaceCollapse>;
        return $i0;
    }

    public org.apache.fop.fo.properties.CommonRelativePosition getCommonRelativePosition()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.properties.CommonRelativePosition $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = this.<org.apache.fop.fo.flow.Block: org.apache.fop.fo.properties.CommonRelativePosition commonRelativePosition>;
        return $r0;
    }

    public int getHyphenationKeep()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int hyphenationKeep>;
        return $i0;
    }

    public int getIntrusionDisplace()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int intrusionDisplace>;
        return $i0;
    }

    public int getLineHeightShiftAdjustment()
    {
        org.apache.fop.fo.flow.Block this;
        int $i0;

        this := @this: org.apache.fop.fo.flow.Block;
        $i0 = this.<org.apache.fop.fo.flow.Block: int lineHeightShiftAdjustment>;
        return $i0;
    }

    public org.apache.fop.fo.CharIterator charIterator()
    {
        org.apache.fop.fo.flow.Block this;
        org.apache.fop.fo.CharIterator $r0;

        this := @this: org.apache.fop.fo.flow.Block;
        $r0 = staticinvoke <org.apache.fop.fo.NullCharIterator: org.apache.fop.fo.CharIterator getInstance()>();
        return $r0;
    }

    public java.lang.String getLocalName()
    {
        org.apache.fop.fo.flow.Block this;

        this := @this: org.apache.fop.fo.flow.Block;
        return "block";
    }

    public int getNameId()
    {
        org.apache.fop.fo.flow.Block this;

        this := @this: org.apache.fop.fo.flow.Block;
        return 3;
    }
}

public class org.apache.fop.render.afp.modca.ImageSizeParameter extends org.apache.fop.render.afp.modca.AbstractAFPObject
{
    private int hRes;
    private int vRes;
    private int hSize;
    private int vSize;

    public void <init>(int, int, int, int)
    {
        org.apache.fop.render.afp.modca.ImageSizeParameter this;
        int hresol, vresol, hsize, vsize;

        this := @this: org.apache.fop.render.afp.modca.ImageSizeParameter;
        hresol := @parameter0: int;
        vresol := @parameter1: int;
        hsize := @parameter2: int;
        vsize := @parameter3: int;
        specialinvoke this.<org.apache.fop.render.afp.modca.AbstractAFPObject: void <init>()>();
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int hRes> = 0;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int vRes> = 0;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int hSize> = 0;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int vSize> = 0;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int hRes> = hresol;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int vRes> = vresol;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int hSize> = hsize;
        this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int vSize> = vsize;
        return;
    }

    public void writeDataStream(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.ImageSizeParameter this;
        java.io.OutputStream os;
        byte[] data, x, y, w, h, $r0;
        int $i0;
        byte $b1;

        this := @this: org.apache.fop.render.afp.modca.ImageSizeParameter;
        os := @parameter0: java.io.OutputStream;
        $r0 = newarray (byte)[11];
        $r0[0] = -108;
        $r0[1] = 9;
        $r0[2] = 0;
        $r0[3] = 0;
        $r0[4] = 0;
        $r0[5] = 0;
        $r0[6] = 0;
        $r0[7] = 0;
        $r0[8] = 0;
        $r0[9] = 0;
        $r0[10] = 0;
        data = $r0;
        $i0 = this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int hRes>;
        x = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = x[0];
        data[3] = $b1;
        $b1 = x[1];
        data[4] = $b1;
        $i0 = this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int vRes>;
        y = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = y[0];
        data[5] = $b1;
        $b1 = y[1];
        data[6] = $b1;
        $i0 = this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int hSize>;
        w = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = w[0];
        data[7] = $b1;
        $b1 = w[1];
        data[8] = $b1;
        $i0 = this.<org.apache.fop.render.afp.modca.ImageSizeParameter: int vSize>;
        h = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i0, 2);
        $b1 = h[0];
        data[9] = $b1;
        $b1 = h[1];
        data[10] = $b1;
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        return;
    }
}

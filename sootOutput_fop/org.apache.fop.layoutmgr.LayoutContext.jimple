public class org.apache.fop.layoutmgr.LayoutContext extends java.lang.Object
{
    public static final int LINEBREAK_AT_LF_ONLY;
    public static final int NEW_AREA;
    public static final int IPD_UNKNOWN;
    public static final int CHECK_REF_AREA;
    public static final int SUPPRESS_BREAK_BEFORE;
    public static final int FIRST_AREA;
    public static final int TRY_HYPHENATE;
    public static final int LAST_AREA;
    public static final int RESOLVE_LEADING_SPACE;
    public static final int KEEP_WITH_NEXT_PENDING;
    public static final int KEEP_WITH_PREVIOUS_PENDING;
    private int flags;
    private org.apache.fop.traits.MinOptMax stackLimitBP;
    private org.apache.fop.traits.MinOptMax stackLimitIP;
    private int nextSpan;
    private int refIPD;
    private int writingMode;
    private org.apache.fop.layoutmgr.SpaceSpecifier trailingSpace;
    private org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace;
    private java.util.List pendingAfterMarks;
    private java.util.List pendingBeforeMarks;
    private org.apache.fop.layoutmgr.inline.HyphContext hyphContext;
    private int bpAlignment;
    private double ipdAdjust;
    private double dSpaceAdjust;
    private org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext;
    private int spaceBefore;
    private int spaceAfter;
    private int lineStartBorderAndPaddingWidth;
    private int lineEndBorderAndPaddingWidth;
    private int breakBefore;
    private int breakAfter;

    public void <init>(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.LayoutContext this, parentLC;
        int $i0;
        org.apache.fop.layoutmgr.SpaceSpecifier $r0;
        org.apache.fop.layoutmgr.inline.HyphContext $r1;
        double $d0;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r2;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        parentLC := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.LayoutContext: int nextSpan> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int writingMode> = 79;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.HyphContext hyphContext> = null;
        this.<org.apache.fop.layoutmgr.LayoutContext: int bpAlignment> = 135;
        this.<org.apache.fop.layoutmgr.LayoutContext: double ipdAdjust> = 0.0;
        this.<org.apache.fop.layoutmgr.LayoutContext: double dSpaceAdjust> = 0.0;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = null;
        this.<org.apache.fop.layoutmgr.LayoutContext: int spaceBefore> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int spaceAfter> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineStartBorderAndPaddingWidth> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineEndBorderAndPaddingWidth> = 0;
        $i0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        this.<org.apache.fop.layoutmgr.LayoutContext: int flags> = $i0;
        $i0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: int refIPD>;
        this.<org.apache.fop.layoutmgr.LayoutContext: int refIPD> = $i0;
        $i0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: int writingMode>;
        this.<org.apache.fop.layoutmgr.LayoutContext: int writingMode> = $i0;
        virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: void setStackLimitsFrom(org.apache.fop.layoutmgr.LayoutContext)>(parentLC);
        $r0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace>;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace> = $r0;
        $r0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier trailingSpace>;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier trailingSpace> = $r0;
        $r1 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.HyphContext hyphContext>;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.HyphContext hyphContext> = $r1;
        $i0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: int bpAlignment>;
        this.<org.apache.fop.layoutmgr.LayoutContext: int bpAlignment> = $i0;
        $d0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: double dSpaceAdjust>;
        this.<org.apache.fop.layoutmgr.LayoutContext: double dSpaceAdjust> = $d0;
        $d0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: double ipdAdjust>;
        this.<org.apache.fop.layoutmgr.LayoutContext: double ipdAdjust> = $d0;
        $r2 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = $r2;
        $i0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: int lineStartBorderAndPaddingWidth>;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineStartBorderAndPaddingWidth> = $i0;
        $i0 = parentLC.<org.apache.fop.layoutmgr.LayoutContext: int lineEndBorderAndPaddingWidth>;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineEndBorderAndPaddingWidth> = $i0;
        virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: void copyPendingMarksFrom(org.apache.fop.layoutmgr.LayoutContext)>(parentLC);
        return;
    }

    public void <init>(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int flags;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        flags := @parameter0: int;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.layoutmgr.LayoutContext: int nextSpan> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int writingMode> = 79;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.HyphContext hyphContext> = null;
        this.<org.apache.fop.layoutmgr.LayoutContext: int bpAlignment> = 135;
        this.<org.apache.fop.layoutmgr.LayoutContext: double ipdAdjust> = 0.0;
        this.<org.apache.fop.layoutmgr.LayoutContext: double dSpaceAdjust> = 0.0;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = null;
        this.<org.apache.fop.layoutmgr.LayoutContext: int spaceBefore> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int spaceAfter> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineStartBorderAndPaddingWidth> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineEndBorderAndPaddingWidth> = 0;
        this.<org.apache.fop.layoutmgr.LayoutContext: int flags> = flags;
        this.<org.apache.fop.layoutmgr.LayoutContext: int refIPD> = 0;
        $r0 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax stackLimitBP> = $r0;
        $r0 = new org.apache.fop.traits.MinOptMax;
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int)>(0);
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax stackLimitIP> = $r0;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace> = null;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier trailingSpace> = null;
        return;
    }

    public void copyPendingMarksFrom(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.LayoutContext this, source;
        java.util.ArrayList $r0;
        java.util.List $r1, $r2;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        source := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        $r1 = source.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks>;
        if $r1 == null goto label0;

        $r0 = new java.util.ArrayList;
        $r2 = source.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks>;
        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks> = $r0;

     label0:
        $r1 = source.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks>;
        if $r1 == null goto label1;

        $r0 = new java.util.ArrayList;
        $r2 = source.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks>;
        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);
        this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks> = $r0;

     label1:
        return;
    }

    public void setFlags(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int flags;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        flags := @parameter0: int;
        virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: void setFlags(int,boolean)>(flags, 1);
        return;
    }

    public void setFlags(int, boolean)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int flags, $i0, $i1;
        boolean bSet;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        flags := @parameter0: int;
        bSet := @parameter1: boolean;
        if bSet == 0 goto label0;

        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 | flags;
        this.<org.apache.fop.layoutmgr.LayoutContext: int flags> = $i0;
        goto label1;

     label0:
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i1 = flags ^ -1;
        $i0 = $i0 & $i1;
        this.<org.apache.fop.layoutmgr.LayoutContext: int flags> = $i0;

     label1:
        return;
    }

    public void unsetFlags(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int flags;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        flags := @parameter0: int;
        virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: void setFlags(int,boolean)>(flags, 0);
        return;
    }

    public boolean isStart()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean startsNewArea()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        org.apache.fop.layoutmgr.SpaceSpecifier $r0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 2;
        if $i0 == 0 goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isFirstArea()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 32;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isLastArea()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 128;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean suppressBreakBefore()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 16;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isKeepWithNextPending()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 512;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public boolean isKeepWithPreviousPending()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 1024;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setLeadingSpace(org.apache.fop.layoutmgr.SpaceSpecifier)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.SpaceSpecifier space;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        space := @parameter0: org.apache.fop.layoutmgr.SpaceSpecifier;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace> = space;
        return;
    }

    public org.apache.fop.layoutmgr.SpaceSpecifier getLeadingSpace()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.SpaceSpecifier $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier leadingSpace>;
        return $r0;
    }

    public boolean resolveLeadingSpace()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 256;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setTrailingSpace(org.apache.fop.layoutmgr.SpaceSpecifier)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.SpaceSpecifier space;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        space := @parameter0: org.apache.fop.layoutmgr.SpaceSpecifier;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier trailingSpace> = space;
        return;
    }

    public org.apache.fop.layoutmgr.SpaceSpecifier getTrailingSpace()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.SpaceSpecifier $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier trailingSpace>;
        return $r0;
    }

    public void addPendingAfterMark(org.apache.fop.layoutmgr.UnresolvedListElementWithLength)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength element;
        java.util.ArrayList $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        element := @parameter0: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $r1 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks>;
        if $r1 != null goto label0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks> = $r0;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(element);
        return;
    }

    public java.util.List getPendingAfterMarks()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        java.util.List $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks>;
        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);
        return $r0;

     label0:
        return null;
    }

    public void clearPendingMarks()
    {
        org.apache.fop.layoutmgr.LayoutContext this;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks> = null;
        this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingAfterMarks> = null;
        return;
    }

    public void addPendingBeforeMark(org.apache.fop.layoutmgr.UnresolvedListElementWithLength)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.UnresolvedListElementWithLength element;
        java.util.ArrayList $r0;
        java.util.List $r1;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        element := @parameter0: org.apache.fop.layoutmgr.UnresolvedListElementWithLength;
        $r1 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks>;
        if $r1 != null goto label0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks> = $r0;

     label0:
        $r1 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(element);
        return;
    }

    public java.util.List getPendingBeforeMarks()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        java.util.List $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: java.util.List pendingBeforeMarks>;
        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);
        return $r0;

     label0:
        return null;
    }

    public void setStackLimitBP(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.traits.MinOptMax limit;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        limit := @parameter0: org.apache.fop.traits.MinOptMax;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax stackLimitBP> = limit;
        return;
    }

    public org.apache.fop.traits.MinOptMax getStackLimitBP()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax stackLimitBP>;
        return $r0;
    }

    public void setStackLimitIP(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.traits.MinOptMax limit;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        limit := @parameter0: org.apache.fop.traits.MinOptMax;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax stackLimitIP> = limit;
        return;
    }

    public org.apache.fop.traits.MinOptMax getStackLimitIP()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax stackLimitIP>;
        return $r0;
    }

    public void setStackLimitsFrom(org.apache.fop.layoutmgr.LayoutContext)
    {
        org.apache.fop.layoutmgr.LayoutContext this, context;
        org.apache.fop.traits.MinOptMax $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        context := @parameter0: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitBP()>();
        virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: void setStackLimitBP(org.apache.fop.traits.MinOptMax)>($r0);
        $r0 = virtualinvoke context.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitIP()>();
        virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: void setStackLimitIP(org.apache.fop.traits.MinOptMax)>($r0);
        return;
    }

    public void setRefIPD(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int ipd;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        ipd := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int refIPD> = ipd;
        return;
    }

    public int getRefIPD()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int refIPD>;
        return $i0;
    }

    public void setHyphContext(org.apache.fop.layoutmgr.inline.HyphContext)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.inline.HyphContext hyph;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        hyph := @parameter0: org.apache.fop.layoutmgr.inline.HyphContext;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.HyphContext hyphContext> = hyph;
        return;
    }

    public org.apache.fop.layoutmgr.inline.HyphContext getHyphContext()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.inline.HyphContext $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.HyphContext hyphContext>;
        return $r0;
    }

    public boolean tryHyphenate()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int flags>;
        $i0 = $i0 & 64;
        if $i0 == 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    public void setBPAlignment(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int alignment;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        alignment := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int bpAlignment> = alignment;
        return;
    }

    public int getBPAlignment()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int bpAlignment>;
        return $i0;
    }

    public void setSpaceAdjust(double)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        double adjust;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        adjust := @parameter0: double;
        this.<org.apache.fop.layoutmgr.LayoutContext: double dSpaceAdjust> = adjust;
        return;
    }

    public double getSpaceAdjust()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        double $d0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $d0 = this.<org.apache.fop.layoutmgr.LayoutContext: double dSpaceAdjust>;
        return $d0;
    }

    public void setIPDAdjust(double)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        double ipdA;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        ipdA := @parameter0: double;
        this.<org.apache.fop.layoutmgr.LayoutContext: double ipdAdjust> = ipdA;
        return;
    }

    public double getIPDAdjust()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        double $d0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $d0 = this.<org.apache.fop.layoutmgr.LayoutContext: double ipdAdjust>;
        return $d0;
    }

    public void setAlignmentContext(org.apache.fop.layoutmgr.inline.AlignmentContext)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        alignmentContext := @parameter0: org.apache.fop.layoutmgr.inline.AlignmentContext;
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = alignmentContext;
        return;
    }

    public org.apache.fop.layoutmgr.inline.AlignmentContext getAlignmentContext()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        return $r0;
    }

    public void resetAlignmentContext()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        org.apache.fop.layoutmgr.inline.AlignmentContext $r0, $r1;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        if $r0 == null goto label0;

        $r1 = this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext>;
        $r1 = virtualinvoke $r1.<org.apache.fop.layoutmgr.inline.AlignmentContext: org.apache.fop.layoutmgr.inline.AlignmentContext getParentAlignmentContext()>();
        this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.inline.AlignmentContext alignmentContext> = $r1;

     label0:
        return;
    }

    public int getLineStartBorderAndPaddingWidth()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int lineStartBorderAndPaddingWidth>;
        return $i0;
    }

    public void setLineStartBorderAndPaddingWidth(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int lineStartBorderAndPaddingWidth;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        lineStartBorderAndPaddingWidth := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineStartBorderAndPaddingWidth> = lineStartBorderAndPaddingWidth;
        return;
    }

    public int getLineEndBorderAndPaddingWidth()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int lineEndBorderAndPaddingWidth>;
        return $i0;
    }

    public void setLineEndBorderAndPaddingWidth(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int lineEndBorderAndPaddingWidth;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        lineEndBorderAndPaddingWidth := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int lineEndBorderAndPaddingWidth> = lineEndBorderAndPaddingWidth;
        return;
    }

    public int getNextSpan()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int nextSpan>;
        return $i0;
    }

    public void signalSpanChange(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int span;
        java.lang.StringBuffer $r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        span := @parameter0: int;
        if span == 0 goto label0;

        if span == 95 goto label0;

        if span != 5 goto label1;

     label0:
        this.<org.apache.fop.layoutmgr.LayoutContext: int nextSpan> = span;
        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Illegal value on signalSpanChange() for span: ");
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(span);
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);
        throw $r1;

     label2:
        return;
    }

    public int getWritingMode()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int writingMode>;
        return $i0;
    }

    public void setWritingMode(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int writingMode;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        writingMode := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int writingMode> = writingMode;
        return;
    }

    public int getSpaceBefore()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int spaceBefore>;
        return $i0;
    }

    public void setSpaceBefore(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int spaceBefore;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        spaceBefore := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int spaceBefore> = spaceBefore;
        return;
    }

    public int getSpaceAfter()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int spaceAfter>;
        return $i0;
    }

    public void setSpaceAfter(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int spaceAfter;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        spaceAfter := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int spaceAfter> = spaceAfter;
        return;
    }

    public int getBreakBefore()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int breakBefore>;
        return $i0;
    }

    public void setBreakBefore(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int breakBefore;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        breakBefore := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int breakBefore> = breakBefore;
        return;
    }

    public int getBreakAfter()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int $i0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int breakAfter>;
        return $i0;
    }

    public void setBreakAfter(int)
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        int breakAfter;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        breakAfter := @parameter0: int;
        this.<org.apache.fop.layoutmgr.LayoutContext: int breakAfter> = breakAfter;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.layoutmgr.LayoutContext this;
        java.lang.StringBuffer $r0;
        org.apache.fop.traits.MinOptMax $r1;
        java.lang.String $r2, $r4;
        org.apache.fop.layoutmgr.SpaceSpecifier $r3;
        int $i0;
        double $d0;
        boolean $z0;

        this := @this: org.apache.fop.layoutmgr.LayoutContext;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Layout Context:\nStack Limit BPD: \t");
        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitBP()>();
        if $r1 != null goto label0;

        $r2 = "null";
        goto label1;

     label0:
        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitBP()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.traits.MinOptMax: java.lang.String toString()>();

     label1:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nStack Limit IPD: \t");
        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitIP()>();
        if $r1 != null goto label2;

        $r2 = "null";
        goto label3;

     label2:
        $r1 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.traits.MinOptMax getStackLimitIP()>();
        $r2 = virtualinvoke $r1.<org.apache.fop.traits.MinOptMax: java.lang.String toString()>();

     label3:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nTrailing Space: \t");
        $r3 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier getTrailingSpace()>();
        if $r3 != null goto label4;

        $r2 = "null";
        goto label5;

     label4:
        $r3 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier getTrailingSpace()>();
        $r2 = virtualinvoke $r3.<org.apache.fop.layoutmgr.SpaceSpecifier: java.lang.String toString()>();

     label5:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nLeading Space: \t");
        $r3 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier getLeadingSpace()>();
        if $r3 != null goto label6;

        $r2 = "null";
        goto label7;

     label6:
        $r3 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: org.apache.fop.layoutmgr.SpaceSpecifier getLeadingSpace()>();
        $r2 = virtualinvoke $r3.<org.apache.fop.layoutmgr.SpaceSpecifier: java.lang.String toString()>();

     label7:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nReference IPD: \t");
        $i0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: int getRefIPD()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nSpace Adjust: \t");
        $d0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: double getSpaceAdjust()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nIPD Adjust: \t");
        $d0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: double getIPDAdjust()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nResolve Leading Space: \t");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean resolveLeadingSpace()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nSuppress Break Before: \t");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean suppressBreakBefore()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nIs First Area: \t");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean isFirstArea()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nStarts New Area: \t");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean startsNewArea()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nIs Last Area: \t");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean isLastArea()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nTry Hyphenate: \t");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean tryHyphenate()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nKeeps: \t[");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean isKeepWithNextPending()>();
        if $z0 == 0 goto label8;

        $r2 = "keep-with-next";
        goto label9;

     label8:
        $r2 = "";

     label9:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("][");
        $z0 = virtualinvoke this.<org.apache.fop.layoutmgr.LayoutContext: boolean isKeepWithPreviousPending()>();
        if $z0 == 0 goto label10;

        $r2 = "keep-with-previous";
        goto label11;

     label10:
        $r2 = "";

     label11:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] pending\nBreaks: \tforced [");
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int breakBefore>;
        if $i0 == 9 goto label12;

        $r2 = "break-before";
        goto label13;

     label12:
        $r2 = "";

     label13:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("][");
        $i0 = this.<org.apache.fop.layoutmgr.LayoutContext: int breakAfter>;
        if $i0 == 9 goto label14;

        $r2 = "break-after";
        goto label15;

     label14:
        $r2 = "";

     label15:
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r4;
    }
}

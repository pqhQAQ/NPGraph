public class org.apache.fop.layoutmgr.ElementListObserver extends java.lang.Object
{
    private static java.util.List activeObservers;

    public void <init>()
    {
        org.apache.fop.layoutmgr.ElementListObserver this;

        this := @this: org.apache.fop.layoutmgr.ElementListObserver;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void addObserver(org.apache.fop.layoutmgr.ElementListObserver$Observer)
    {
        org.apache.fop.layoutmgr.ElementListObserver$Observer observer;
        boolean $z0;
        java.util.ArrayList $r0;
        java.util.List $r1;

        observer := @parameter0: org.apache.fop.layoutmgr.ElementListObserver$Observer;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.ElementListObserver: boolean isObservationActive()>();
        if $z0 != 0 goto label0;

        $r0 = new java.util.ArrayList;
        specialinvoke $r0.<java.util.ArrayList: void <init>()>();
        <org.apache.fop.layoutmgr.ElementListObserver: java.util.List activeObservers> = $r0;

     label0:
        $r1 = <org.apache.fop.layoutmgr.ElementListObserver: java.util.List activeObservers>;
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(observer);
        return;
    }

    public static void removeObserver(org.apache.fop.layoutmgr.ElementListObserver$Observer)
    {
        org.apache.fop.layoutmgr.ElementListObserver$Observer observer;
        boolean $z0;
        java.util.List $r0;

        observer := @parameter0: org.apache.fop.layoutmgr.ElementListObserver$Observer;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.ElementListObserver: boolean isObservationActive()>();
        if $z0 == 0 goto label0;

        $r0 = <org.apache.fop.layoutmgr.ElementListObserver: java.util.List activeObservers>;
        interfaceinvoke $r0.<java.util.List: boolean remove(java.lang.Object)>(observer);

     label0:
        return;
    }

    public static void observe(java.util.List, java.lang.String, java.lang.String)
    {
        java.util.List elementList, $r1;
        java.lang.String category, id;
        boolean $z0;
        java.util.Iterator i;
        java.lang.NullPointerException $r0;
        java.lang.Object $r2;
        org.apache.fop.layoutmgr.ElementListObserver$Observer $r3;

        elementList := @parameter0: java.util.List;
        category := @parameter1: java.lang.String;
        id := @parameter2: java.lang.String;
        $z0 = staticinvoke <org.apache.fop.layoutmgr.ElementListObserver: boolean isObservationActive()>();
        if $z0 == 0 goto label2;

        if category != null goto label0;

        $r0 = new java.lang.NullPointerException;
        specialinvoke $r0.<java.lang.NullPointerException: void <init>(java.lang.String)>("category must not be null");
        throw $r0;

     label0:
        $r1 = <org.apache.fop.layoutmgr.ElementListObserver: java.util.List activeObservers>;
        i = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        $r3 = (org.apache.fop.layoutmgr.ElementListObserver$Observer) $r2;
        interfaceinvoke $r3.<org.apache.fop.layoutmgr.ElementListObserver$Observer: void observe(java.util.List,java.lang.String,java.lang.String)>(elementList, category, id);
        goto label1;

     label2:
        return;
    }

    public static boolean isObservationActive()
    {
        java.util.List $r0;
        boolean $z0;

        $r0 = <org.apache.fop.layoutmgr.ElementListObserver: java.util.List activeObservers>;
        if $r0 == null goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        return $z0;
    }

    static void <clinit>()
    {
        <org.apache.fop.layoutmgr.ElementListObserver: java.util.List activeObservers> = null;
        return;
    }
}

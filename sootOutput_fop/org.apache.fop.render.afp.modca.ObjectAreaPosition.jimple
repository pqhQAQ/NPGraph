public class org.apache.fop.render.afp.modca.ObjectAreaPosition extends org.apache.fop.render.afp.modca.AbstractAFPObject
{
    private int _x;
    private int _y;
    private int _rot;

    public void <init>(int, int, int)
    {
        org.apache.fop.render.afp.modca.ObjectAreaPosition this;
        int x, y, rotation;

        this := @this: org.apache.fop.render.afp.modca.ObjectAreaPosition;
        x := @parameter0: int;
        y := @parameter1: int;
        rotation := @parameter2: int;
        specialinvoke this.<org.apache.fop.render.afp.modca.AbstractAFPObject: void <init>()>();
        this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _x> = 0;
        this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _y> = 0;
        this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _rot> = 0;
        this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _x> = x;
        this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _y> = y;
        this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _rot> = rotation;
        return;
    }

    public void writeDataStream(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.fop.render.afp.modca.ObjectAreaPosition this;
        java.io.OutputStream os;
        byte[] data, l, x, y, $r0;
        int $i0, $i2;
        byte $b1, $b3;

        this := @this: org.apache.fop.render.afp.modca.ObjectAreaPosition;
        os := @parameter0: java.io.OutputStream;
        $r0 = newarray (byte)[33];
        $r0[0] = 90;
        $r0[1] = 0;
        $r0[2] = 32;
        $r0[3] = -45;
        $r0[4] = -84;
        $r0[5] = 107;
        $r0[6] = 0;
        $r0[7] = 0;
        $r0[8] = 0;
        $r0[9] = 1;
        $r0[10] = 23;
        $r0[11] = 0;
        $r0[12] = 0;
        $r0[13] = 0;
        $r0[14] = 0;
        $r0[15] = 0;
        $r0[16] = 0;
        $i0 = this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _rot>;
        $i0 = $i0 / 2;
        $b1 = (byte) $i0;
        $r0[17] = $b1;
        $r0[18] = 0;
        $i0 = this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _rot>;
        $i0 = $i0 / 2;
        $i0 = $i0 + 45;
        $b1 = (byte) $i0;
        $r0[19] = $b1;
        $r0[20] = 0;
        $r0[21] = 0;
        $r0[22] = 0;
        $r0[23] = 0;
        $r0[24] = 0;
        $r0[25] = 0;
        $r0[26] = 0;
        $r0[27] = 0;
        $r0[28] = 0;
        $r0[29] = 0;
        $r0[30] = 45;
        $r0[31] = 0;
        $r0[32] = 1;
        data = $r0;
        $i2 = lengthof data;
        $i2 = $i2 - 1;
        l = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i2, 2);
        $b3 = l[0];
        data[1] = $b3;
        $b3 = l[1];
        data[2] = $b3;
        $i2 = this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _x>;
        x = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i2, 3);
        $b3 = x[0];
        data[11] = $b3;
        $b3 = x[1];
        data[12] = $b3;
        $b3 = x[2];
        data[13] = $b3;
        $i2 = this.<org.apache.fop.render.afp.modca.ObjectAreaPosition: int _y>;
        y = staticinvoke <org.apache.fop.render.afp.tools.BinaryUtils: byte[] convert(int,int)>($i2, 3);
        $b3 = y[0];
        data[14] = $b3;
        $b3 = y[1];
        data[15] = $b3;
        $b3 = y[2];
        data[16] = $b3;
        virtualinvoke os.<java.io.OutputStream: void write(byte[])>(data);
        return;
    }
}

public final class org.apache.fop.Version extends java.lang.Object
{
    static java.lang.Class class$org$apache$fop$Version;

    private void <init>()
    {
        org.apache.fop.Version this;

        this := @this: org.apache.fop.Version;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.String getVersion()
    {
        java.lang.String version, headURL, pathPrefix, $r0;
        java.lang.Package jarinfo;
        int pos, $i0, $i1;
        java.lang.Class $r1;
        java.lang.StringBuffer $r2;

        version = null;
        $r1 = <org.apache.fop.Version: java.lang.Class class$org$apache$fop$Version>;
        if $r1 != null goto label0;

        $r1 = staticinvoke <org.apache.fop.Version: java.lang.Class class$(java.lang.String)>("org.apache.fop.Version");
        <org.apache.fop.Version: java.lang.Class class$org$apache$fop$Version> = $r1;
        goto label1;

     label0:
        $r1 = <org.apache.fop.Version: java.lang.Class class$org$apache$fop$Version>;

     label1:
        jarinfo = virtualinvoke $r1.<java.lang.Class: java.lang.Package getPackage()>();
        if jarinfo == null goto label2;

        version = virtualinvoke jarinfo.<java.lang.Package: java.lang.String getImplementationVersion()>();

     label2:
        if version != null goto label5;

        headURL = "$HeadURL: http://svn.apache.org/repos/asf/xmlgraphics/fop/branches/fop-0_95/src/java/org/apache/fop/Version.java $";
        version = headURL;
        pathPrefix = "/xmlgraphics/fop/";
        pos = virtualinvoke version.<java.lang.String: int indexOf(java.lang.String)>("/xmlgraphics/fop/");
        if pos < 0 goto label3;

        $r0 = "/xmlgraphics/fop/";
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        $i1 = pos + $i0;
        $i1 = $i1 - 1;
        $i0 = virtualinvoke version.<java.lang.String: int length()>();
        $i0 = $i0 - 2;
        version = virtualinvoke version.<java.lang.String: java.lang.String substring(int,int)>($i1, $i0);
        pos = virtualinvoke version.<java.lang.String: int indexOf(java.lang.String)>("/src/");
        version = virtualinvoke version.<java.lang.String: java.lang.String substring(int,int)>(1, pos);
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(version);
        version = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();
        goto label4;

     label3:
        version = "";

     label4:
        $r2 = new java.lang.StringBuffer;
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SVN");
        $r2 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(version);
        version = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        return version;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String x0;
        java.lang.ClassNotFoundException l1, $r1;
        java.lang.Class $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.Throwable $r3;

        x0 := @parameter0: java.lang.String;

     label0:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(x0);

     label1:
        return $r0;

     label2:
        $r1 := @caughtexception;
        l1 = $r1;
        $r2 = new java.lang.NoClassDefFoundError;
        specialinvoke $r2.<java.lang.NoClassDefFoundError: void <init>()>();
        $r3 = virtualinvoke $r2.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>(l1);
        throw $r3;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}

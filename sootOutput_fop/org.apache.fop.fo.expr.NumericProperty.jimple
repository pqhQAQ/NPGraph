public class org.apache.fop.fo.expr.NumericProperty extends org.apache.fop.fo.properties.Property implements org.apache.fop.datatypes.Numeric, org.apache.fop.datatypes.Length
{
    private double value;
    private int dim;

    protected void <init>(double, int)
    {
        org.apache.fop.fo.expr.NumericProperty this;
        double value;
        int dim;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        value := @parameter0: double;
        dim := @parameter1: int;
        specialinvoke this.<org.apache.fop.fo.properties.Property: void <init>()>();
        this.<org.apache.fop.fo.expr.NumericProperty: double value> = value;
        this.<org.apache.fop.fo.expr.NumericProperty: int dim> = dim;
        return;
    }

    public int getDimension()
    {
        org.apache.fop.fo.expr.NumericProperty this;
        int $i0;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        $i0 = this.<org.apache.fop.fo.expr.NumericProperty: int dim>;
        return $i0;
    }

    public double getNumericValue()
    {
        org.apache.fop.fo.expr.NumericProperty this;
        double $d0;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        return $d0;
    }

    public double getNumericValue(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.expr.NumericProperty this;
        org.apache.fop.datatypes.PercentBaseContext context;
        double $d0;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        return $d0;
    }

    public boolean isAbsolute()
    {
        org.apache.fop.fo.expr.NumericProperty this;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        return 1;
    }

    public org.apache.fop.datatypes.Numeric getNumeric()
    {
        org.apache.fop.fo.expr.NumericProperty this;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        return this;
    }

    public java.lang.Number getNumber()
    {
        org.apache.fop.fo.expr.NumericProperty this;
        java.lang.Double $r0;
        double $d0;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        $r0 = new java.lang.Double;
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d0);
        return $r0;
    }

    public int getValue()
    {
        org.apache.fop.fo.expr.NumericProperty this;
        double $d0;
        int $i0;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        $i0 = (int) $d0;
        return $i0;
    }

    public int getValue(org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.expr.NumericProperty this;
        org.apache.fop.datatypes.PercentBaseContext context;
        double $d0;
        int $i0;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        context := @parameter0: org.apache.fop.datatypes.PercentBaseContext;
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        $i0 = (int) $d0;
        return $i0;
    }

    public org.apache.fop.datatypes.Length getLength()
    {
        org.apache.fop.fo.expr.NumericProperty this;
        int $i0, $i1;
        org.apache.commons.logging.Log $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        $i0 = this.<org.apache.fop.fo.expr.NumericProperty: int dim>;
        if $i0 != 1 goto label0;

        return this;

     label0:
        $r0 = <org.apache.fop.fo.expr.NumericProperty: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Can\'t create length with dimension ");
        $i1 = this.<org.apache.fop.fo.expr.NumericProperty: int dim>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        interfaceinvoke $r0.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r2);
        return null;
    }

    public java.awt.Color getColor(org.apache.fop.apps.FOUserAgent)
    {
        org.apache.fop.fo.expr.NumericProperty this;
        org.apache.fop.apps.FOUserAgent foUserAgent;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        foUserAgent := @parameter0: org.apache.fop.apps.FOUserAgent;
        return null;
    }

    public java.lang.Object getObject()
    {
        org.apache.fop.fo.expr.NumericProperty this;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        return this;
    }

    public java.lang.String toString()
    {
        org.apache.fop.fo.expr.NumericProperty this;
        int $i0, $i1;
        java.lang.StringBuffer $r0;
        double $d0;
        java.lang.String $r1;

        this := @this: org.apache.fop.fo.expr.NumericProperty;
        $i0 = this.<org.apache.fop.fo.expr.NumericProperty: int dim>;
        if $i0 != 1 goto label0;

        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        $i1 = (int) $d0;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("mpt");
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;

     label0:
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $d0 = this.<org.apache.fop.fo.expr.NumericProperty: double value>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>($d0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("^");
        $i1 = this.<org.apache.fop.fo.expr.NumericProperty: int dim>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);
        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r1;
    }
}

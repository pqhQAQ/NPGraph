public class org.apache.fop.pdf.PDFCIDFont extends org.apache.fop.pdf.PDFObject
{
    private java.lang.String basefont;
    private org.apache.fop.fonts.CIDFontType cidtype;
    private java.lang.Integer dw;
    private org.apache.fop.pdf.PDFWArray w;
    private int[] dw2;
    private org.apache.fop.pdf.PDFWArray w2;
    private org.apache.fop.pdf.PDFCIDSystemInfo systemInfo;
    private org.apache.fop.pdf.PDFCIDFontDescriptor descriptor;
    private org.apache.fop.pdf.PDFCMap cmap;
    private org.apache.fop.pdf.PDFStream cidMap;

    public void <init>(java.lang.String, org.apache.fop.fonts.CIDFontType, int, int[], java.lang.String, java.lang.String, int, org.apache.fop.pdf.PDFCIDFontDescriptor)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        java.lang.String basefont, registry, ordering;
        org.apache.fop.fonts.CIDFontType cidtype;
        int dw, supplement;
        int[] w;
        org.apache.fop.pdf.PDFCIDFontDescriptor descriptor;
        org.apache.fop.pdf.PDFWArray $r0;
        org.apache.fop.pdf.PDFCIDSystemInfo $r1;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        basefont := @parameter0: java.lang.String;
        cidtype := @parameter1: org.apache.fop.fonts.CIDFontType;
        dw := @parameter2: int;
        w := @parameter3: int[];
        registry := @parameter4: java.lang.String;
        ordering := @parameter5: java.lang.String;
        supplement := @parameter6: int;
        descriptor := @parameter7: org.apache.fop.pdf.PDFCIDFontDescriptor;
        $r0 = new org.apache.fop.pdf.PDFWArray;
        specialinvoke $r0.<org.apache.fop.pdf.PDFWArray: void <init>(int[])>(w);
        $r1 = new org.apache.fop.pdf.PDFCIDSystemInfo;
        specialinvoke $r1.<org.apache.fop.pdf.PDFCIDSystemInfo: void <init>(java.lang.String,java.lang.String,int)>(registry, ordering, supplement);
        specialinvoke this.<org.apache.fop.pdf.PDFCIDFont: void <init>(java.lang.String,org.apache.fop.fonts.CIDFontType,int,org.apache.fop.pdf.PDFWArray,org.apache.fop.pdf.PDFCIDSystemInfo,org.apache.fop.pdf.PDFCIDFontDescriptor)>(basefont, cidtype, dw, $r0, $r1, descriptor);
        return;
    }

    public void <init>(java.lang.String, org.apache.fop.fonts.CIDFontType, int, int[], org.apache.fop.pdf.PDFCIDSystemInfo, org.apache.fop.pdf.PDFCIDFontDescriptor)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        java.lang.String basefont;
        org.apache.fop.fonts.CIDFontType cidtype;
        int dw;
        int[] w;
        org.apache.fop.pdf.PDFCIDSystemInfo systemInfo;
        org.apache.fop.pdf.PDFCIDFontDescriptor descriptor;
        org.apache.fop.pdf.PDFWArray $r0;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        basefont := @parameter0: java.lang.String;
        cidtype := @parameter1: org.apache.fop.fonts.CIDFontType;
        dw := @parameter2: int;
        w := @parameter3: int[];
        systemInfo := @parameter4: org.apache.fop.pdf.PDFCIDSystemInfo;
        descriptor := @parameter5: org.apache.fop.pdf.PDFCIDFontDescriptor;
        $r0 = new org.apache.fop.pdf.PDFWArray;
        specialinvoke $r0.<org.apache.fop.pdf.PDFWArray: void <init>(int[])>(w);
        specialinvoke this.<org.apache.fop.pdf.PDFCIDFont: void <init>(java.lang.String,org.apache.fop.fonts.CIDFontType,int,org.apache.fop.pdf.PDFWArray,org.apache.fop.pdf.PDFCIDSystemInfo,org.apache.fop.pdf.PDFCIDFontDescriptor)>(basefont, cidtype, dw, $r0, systemInfo, descriptor);
        return;
    }

    public void <init>(java.lang.String, org.apache.fop.fonts.CIDFontType, int, org.apache.fop.pdf.PDFWArray, org.apache.fop.pdf.PDFCIDSystemInfo, org.apache.fop.pdf.PDFCIDFontDescriptor)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        java.lang.String basefont;
        org.apache.fop.fonts.CIDFontType cidtype;
        int dw;
        org.apache.fop.pdf.PDFWArray w;
        org.apache.fop.pdf.PDFCIDSystemInfo systemInfo;
        org.apache.fop.pdf.PDFCIDFontDescriptor descriptor;
        java.lang.Integer $r0;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        basefont := @parameter0: java.lang.String;
        cidtype := @parameter1: org.apache.fop.fonts.CIDFontType;
        dw := @parameter2: int;
        w := @parameter3: org.apache.fop.pdf.PDFWArray;
        systemInfo := @parameter4: org.apache.fop.pdf.PDFCIDSystemInfo;
        descriptor := @parameter5: org.apache.fop.pdf.PDFCIDFontDescriptor;
        specialinvoke this.<org.apache.fop.pdf.PDFObject: void <init>()>();
        this.<org.apache.fop.pdf.PDFCIDFont: java.lang.String basefont> = basefont;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.fonts.CIDFontType cidtype> = cidtype;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(dw);
        this.<org.apache.fop.pdf.PDFCIDFont: java.lang.Integer dw> = $r0;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w> = w;
        this.<org.apache.fop.pdf.PDFCIDFont: int[] dw2> = null;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w2> = null;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCIDSystemInfo systemInfo> = systemInfo;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCIDFontDescriptor descriptor> = descriptor;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFStream cidMap> = null;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCMap cmap> = null;
        return;
    }

    public void setDW(int)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        int dw;
        java.lang.Integer $r0;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        dw := @parameter0: int;
        $r0 = new java.lang.Integer;
        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(dw);
        this.<org.apache.fop.pdf.PDFCIDFont: java.lang.Integer dw> = $r0;
        return;
    }

    public void setW(org.apache.fop.pdf.PDFWArray)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        org.apache.fop.pdf.PDFWArray w;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        w := @parameter0: org.apache.fop.pdf.PDFWArray;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w> = w;
        return;
    }

    public void setDW2(int[])
    {
        org.apache.fop.pdf.PDFCIDFont this;
        int[] dw2;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        dw2 := @parameter0: int[];
        this.<org.apache.fop.pdf.PDFCIDFont: int[] dw2> = dw2;
        return;
    }

    public void setDW2(int, int)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        int posY, displacementY;
        int[] $r0;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        posY := @parameter0: int;
        displacementY := @parameter1: int;
        $r0 = newarray (int)[2];
        $r0[0] = posY;
        $r0[1] = displacementY;
        this.<org.apache.fop.pdf.PDFCIDFont: int[] dw2> = $r0;
        return;
    }

    public void setCMAP(org.apache.fop.pdf.PDFCMap)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        org.apache.fop.pdf.PDFCMap cmap;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        cmap := @parameter0: org.apache.fop.pdf.PDFCMap;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCMap cmap> = cmap;
        return;
    }

    public void setW2(org.apache.fop.pdf.PDFWArray)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        org.apache.fop.pdf.PDFWArray w2;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        w2 := @parameter0: org.apache.fop.pdf.PDFWArray;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w2> = w2;
        return;
    }

    public void setCIDMap(org.apache.fop.pdf.PDFStream)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        org.apache.fop.pdf.PDFStream map;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        map := @parameter0: org.apache.fop.pdf.PDFStream;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFStream cidMap> = map;
        return;
    }

    public void setCIDMapIdentity()
    {
        org.apache.fop.pdf.PDFCIDFont this;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFStream cidMap> = null;
        return;
    }

    protected java.lang.String getPDFNameForCIDFontType(org.apache.fop.fonts.CIDFontType)
    {
        org.apache.fop.pdf.PDFCIDFont this;
        org.apache.fop.fonts.CIDFontType cidFontType, $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, $r4, $r5;
        java.lang.IllegalArgumentException $r3;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        cidFontType := @parameter0: org.apache.fop.fonts.CIDFontType;
        $r0 = <org.apache.fop.fonts.CIDFontType: org.apache.fop.fonts.CIDFontType CIDTYPE0>;
        if cidFontType != $r0 goto label0;

        $r2 = virtualinvoke cidFontType.<org.apache.fop.fonts.CIDFontType: java.lang.String getName()>();
        return $r2;

     label0:
        $r0 = <org.apache.fop.fonts.CIDFontType: org.apache.fop.fonts.CIDFontType CIDTYPE2>;
        if cidFontType != $r0 goto label1;

        $r2 = virtualinvoke cidFontType.<org.apache.fop.fonts.CIDFontType: java.lang.String getName()>();
        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported CID font type: ");
        $r4 = virtualinvoke cidFontType.<org.apache.fop.fonts.CIDFontType: java.lang.String getName()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);
        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);
        throw $r3;
    }

    public java.lang.String toPDFString()
    {
        org.apache.fop.pdf.PDFCIDFont this;
        java.lang.StringBuffer $r0, p;
        java.lang.String $r1, $r15;
        org.apache.fop.pdf.PDFStream $r2, $r3;
        org.apache.fop.fonts.CIDFontType $r4;
        org.apache.fop.pdf.PDFCIDSystemInfo $r5;
        org.apache.fop.pdf.PDFCIDFontDescriptor $r6;
        org.apache.fop.pdf.PDFCMap $r7, $r8;
        java.lang.Integer $r9, $r10;
        org.apache.fop.pdf.PDFWArray $r11, $r12;
        int[] $r13, $r14;
        int $i0;

        this := @this: org.apache.fop.pdf.PDFCIDFont;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(128);
        p = $r0;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFCIDFont: java.lang.String getObjectID()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<< /Type /Font");
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/BaseFont /");
        $r1 = this.<org.apache.fop.pdf.PDFCIDFont: java.lang.String basefont>;
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n/CIDToGIDMap ");
        $r2 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFStream cidMap>;
        if $r2 == null goto label0;

        $r3 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFStream cidMap>;
        $r1 = virtualinvoke $r3.<org.apache.fop.pdf.PDFStream: java.lang.String referencePDF()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        goto label1;

     label0:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/Identity");

     label1:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n/Subtype /");
        $r4 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.fonts.CIDFontType cidtype>;
        $r1 = virtualinvoke this.<org.apache.fop.pdf.PDFCIDFont: java.lang.String getPDFNameForCIDFontType(org.apache.fop.fonts.CIDFontType)>($r4);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");
        $r5 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCIDSystemInfo systemInfo>;
        $r1 = virtualinvoke $r5.<org.apache.fop.pdf.PDFCIDSystemInfo: java.lang.String toPDFString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/FontDescriptor ");
        $r6 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCIDFontDescriptor descriptor>;
        $r1 = virtualinvoke $r6.<org.apache.fop.pdf.PDFCIDFontDescriptor: java.lang.String referencePDF()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r7 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCMap cmap>;
        if $r7 == null goto label2;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/ToUnicode ");
        $r8 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFCMap cmap>;
        $r1 = virtualinvoke $r8.<org.apache.fop.pdf.PDFCMap: java.lang.String referencePDF()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label2:
        $r9 = this.<org.apache.fop.pdf.PDFCIDFont: java.lang.Integer dw>;
        if $r9 == null goto label3;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/DW ");
        $r10 = this.<org.apache.fop.pdf.PDFCIDFont: java.lang.Integer dw>;
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

     label3:
        $r11 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w>;
        if $r11 == null goto label4;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/W ");
        $r12 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w>;
        $r1 = virtualinvoke $r12.<org.apache.fop.pdf.PDFWArray: java.lang.String toPDFString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label4:
        $r13 = this.<org.apache.fop.pdf.PDFCIDFont: int[] dw2>;
        if $r13 == null goto label5;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/DW2 [");
        $r14 = this.<org.apache.fop.pdf.PDFCIDFont: int[] dw2>;
        $i0 = $r14[0];
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r14 = this.<org.apache.fop.pdf.PDFCIDFont: int[] dw2>;
        $i0 = $r14[1];
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] \n>>\nendobj\n");

     label5:
        $r11 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w2>;
        if $r11 == null goto label6;

        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n/W2 ");
        $r12 = this.<org.apache.fop.pdf.PDFCIDFont: org.apache.fop.pdf.PDFWArray w2>;
        $r1 = virtualinvoke $r12.<org.apache.fop.pdf.PDFWArray: java.lang.String toPDFString()>();
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n>>\nendobj\n");

     label6:
        virtualinvoke p.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" \n>>\nendobj\n");
        $r15 = virtualinvoke p.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r15;
    }
}

public class org.apache.fop.layoutmgr.MinOptMaxUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.fop.layoutmgr.MinOptMaxUtil this;

        this := @this: org.apache.fop.layoutmgr.MinOptMaxUtil;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void restrict(org.apache.fop.traits.MinOptMax, org.apache.fop.fo.properties.LengthRangeProperty, org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.traits.MinOptMax mom;
        org.apache.fop.fo.properties.LengthRangeProperty lr;
        org.apache.fop.datatypes.PercentBaseContext context;
        int min, max, opt, $i0, $i1;
        org.apache.fop.fo.properties.Property $r0;
        org.apache.fop.datatypes.Length $r1;

        mom := @parameter0: org.apache.fop.traits.MinOptMax;
        lr := @parameter1: org.apache.fop.fo.properties.LengthRangeProperty;
        context := @parameter2: org.apache.fop.datatypes.PercentBaseContext;
        $i0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: int getEnum()>();
        if $i0 == 9 goto label2;

        $r0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: int getEnum()>();
        if $i0 == 9 goto label0;

        $r0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        min = interfaceinvoke $r1.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int min>;
        if min <= $i1 goto label0;

        mom.<org.apache.fop.traits.MinOptMax: int min> = min;
        staticinvoke <org.apache.fop.layoutmgr.MinOptMaxUtil: void fixAfterMinChanged(org.apache.fop.traits.MinOptMax)>(mom);

     label0:
        $r0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: int getEnum()>();
        if $i0 == 9 goto label1;

        $r0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        max = interfaceinvoke $r1.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int max>;
        if max >= $i1 goto label1;

        mom.<org.apache.fop.traits.MinOptMax: int max> = max;
        $i0 = mom.<org.apache.fop.traits.MinOptMax: int max>;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        if $i0 >= $i1 goto label1;

        $i1 = mom.<org.apache.fop.traits.MinOptMax: int max>;
        mom.<org.apache.fop.traits.MinOptMax: int opt> = $i1;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        mom.<org.apache.fop.traits.MinOptMax: int min> = $i1;

     label1:
        $r0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i0 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: int getEnum()>();
        if $i0 == 9 goto label2;

        $r0 = virtualinvoke lr.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r1 = virtualinvoke $r0.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        opt = interfaceinvoke $r1.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int min>;
        if opt <= $i1 goto label2;

        mom.<org.apache.fop.traits.MinOptMax: int opt> = opt;
        $i0 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 <= $i1 goto label2;

        $i1 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        mom.<org.apache.fop.traits.MinOptMax: int max> = $i1;

     label2:
        return;
    }

    public static void extendMinimum(org.apache.fop.traits.MinOptMax, int)
    {
        org.apache.fop.traits.MinOptMax mom;
        int len, $i0, $i1, $i2;

        mom := @parameter0: org.apache.fop.traits.MinOptMax;
        len := @parameter1: int;
        $i0 = mom.<org.apache.fop.traits.MinOptMax: int min>;
        if $i0 >= len goto label0;

        mom.<org.apache.fop.traits.MinOptMax: int min> = len;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int min>;
        $i2 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);
        mom.<org.apache.fop.traits.MinOptMax: int opt> = $i1;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        $i2 = mom.<org.apache.fop.traits.MinOptMax: int max>;
        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);
        mom.<org.apache.fop.traits.MinOptMax: int max> = $i1;

     label0:
        return;
    }

    public static void fixAfterMinChanged(org.apache.fop.traits.MinOptMax)
    {
        org.apache.fop.traits.MinOptMax mom;
        int $i0, $i1;

        mom := @parameter0: org.apache.fop.traits.MinOptMax;
        $i0 = mom.<org.apache.fop.traits.MinOptMax: int min>;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        if $i0 <= $i1 goto label0;

        $i1 = mom.<org.apache.fop.traits.MinOptMax: int min>;
        mom.<org.apache.fop.traits.MinOptMax: int opt> = $i1;
        $i0 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        $i1 = mom.<org.apache.fop.traits.MinOptMax: int max>;
        if $i0 <= $i1 goto label0;

        $i1 = mom.<org.apache.fop.traits.MinOptMax: int opt>;
        mom.<org.apache.fop.traits.MinOptMax: int max> = $i1;

     label0:
        return;
    }

    public static org.apache.fop.traits.MinOptMax toMinOptMax(org.apache.fop.fo.properties.LengthRangeProperty, org.apache.fop.datatypes.PercentBaseContext)
    {
        org.apache.fop.fo.properties.LengthRangeProperty prop;
        org.apache.fop.datatypes.PercentBaseContext context;
        org.apache.fop.traits.MinOptMax $r0, mom;
        org.apache.fop.fo.properties.Property $r2, $r4, $r6;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        org.apache.fop.datatypes.Length $r3, $r5, $r7;

        prop := @parameter0: org.apache.fop.fo.properties.LengthRangeProperty;
        context := @parameter1: org.apache.fop.datatypes.PercentBaseContext;
        $r0 = new org.apache.fop.traits.MinOptMax;
        $r2 = virtualinvoke prop.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $z0 = virtualinvoke $r2.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z0 == 0 goto label0;

        $i0 = 0;
        goto label1;

     label0:
        $r2 = virtualinvoke prop.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMinimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r3 = virtualinvoke $r2.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i0 = interfaceinvoke $r3.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);

     label1:
        $r4 = virtualinvoke prop.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $z1 = virtualinvoke $r4.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z1 == 0 goto label2;

        $i1 = 0;
        goto label3;

     label2:
        $r4 = virtualinvoke prop.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getOptimum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r5 = virtualinvoke $r4.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i1 = interfaceinvoke $r5.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);

     label3:
        $r6 = virtualinvoke prop.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $z2 = virtualinvoke $r6.<org.apache.fop.fo.properties.Property: boolean isAuto()>();
        if $z2 == 0 goto label4;

        $i2 = 2147483647;
        goto label5;

     label4:
        $r6 = virtualinvoke prop.<org.apache.fop.fo.properties.LengthRangeProperty: org.apache.fop.fo.properties.Property getMaximum(org.apache.fop.datatypes.PercentBaseContext)>(context);
        $r7 = virtualinvoke $r6.<org.apache.fop.fo.properties.Property: org.apache.fop.datatypes.Length getLength()>();
        $i2 = interfaceinvoke $r7.<org.apache.fop.datatypes.Length: int getValue(org.apache.fop.datatypes.PercentBaseContext)>(context);

     label5:
        specialinvoke $r0.<org.apache.fop.traits.MinOptMax: void <init>(int,int,int)>($i0, $i1, $i2);
        mom = $r0;
        return mom;
    }
}

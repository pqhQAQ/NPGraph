public class org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer extends org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement
{
    private java.util.LinkedList children;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions options;
    private org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement lastChild;

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer, java.io.Writer) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this, parent;
        java.io.Writer w;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        w := @parameter1: java.io.Writer;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(parent, w, null);
        return;
    }

    void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer, java.io.Writer, org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this, parent;
        java.io.Writer w;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes attr;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions $r0;
        java.util.LinkedList $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        parent := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        w := @parameter1: java.io.Writer;
        attr := @parameter2: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: void <init>(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer,java.io.Writer,org.apache.fop.render.rtf.rtflib.rtfdoc.RtfAttributes)>(parent, w, attr);
        $r0 = new org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions;
        specialinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions options> = $r0;
        $r1 = new java.util.LinkedList;
        specialinvoke $r1.<java.util.LinkedList: void <init>()>();
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children> = $r1;
        return;
    }

    public void setOptions(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions opt;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        opt := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions options> = opt;
        return;
    }

    protected void addChild(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) throws org.apache.fop.render.rtf.rtflib.exceptions.RtfStructureException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        java.lang.StringBuffer sb, $r0;
        boolean $z0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.util.LinkedList $r3;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        e := @parameter0: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement;
        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: boolean isClosed()>();
        if $z0 == 0 goto label0;

        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        sb = $r0;
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("addChild: container already closed (parent=");
        $r1 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" child=");
        $r1 = virtualinvoke e.<java.lang.Object: java.lang.Class getClass()>();
        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");
        virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfFile getRtfFile()>();

     label0:
        $r3 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(e);
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement lastChild> = e;
        return;
    }

    public java.util.List getChildren()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        java.util.LinkedList $r0;
        java.lang.Object $r1;
        java.util.List $r2;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        $r1 = virtualinvoke $r0.<java.util.LinkedList: java.lang.Object clone()>();
        $r2 = (java.util.List) $r1;
        return $r2;
    }

    public int getChildCount()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        java.util.LinkedList $r0;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        $i0 = virtualinvoke $r0.<java.util.LinkedList: int size()>();
        return $i0;
    }

    public boolean setChildren(java.util.List)
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        java.util.List list;
        boolean $z0;
        java.util.LinkedList $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        list := @parameter0: java.util.List;
        $z0 = list instanceof java.util.LinkedList;
        if $z0 == 0 goto label0;

        $r0 = (java.util.LinkedList) list;
        this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children> = $r0;
        return 1;

     label0:
        return 0;
    }

    protected void writeRtfContent() throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        java.util.LinkedList $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        it = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        e = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r1;
        virtualinvoke e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: void writeRtf()>();
        goto label0;

     label1:
        return;
    }

    org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions getOptions()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions options>;
        return $r0;
    }

    boolean containsText()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this, $r2;
        boolean result, $z0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        java.util.LinkedList $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        result = 0;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        it = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label6;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        e = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r1;
        $z0 = e instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfText;
        if $z0 == 0 goto label3;

        $z0 = virtualinvoke e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        $z0 = 1;
        goto label2;

     label1:
        $z0 = 0;

     label2:
        result = $z0;
        goto label4;

     label3:
        $z0 = e instanceof org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        if $z0 == 0 goto label4;

        $r2 = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer) e;
        $z0 = virtualinvoke $r2.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: boolean containsText()>();
        if $z0 == 0 goto label4;

        result = 1;

     label4:
        if result == 0 goto label5;

        goto label6;

     label5:
        goto label0;

     label6:
        return result;
    }

    void dump(java.io.Writer, int) throws java.io.IOException
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        java.io.Writer w;
        int indent, $i0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        java.util.LinkedList $r0;
        boolean $z0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        w := @parameter0: java.io.Writer;
        indent := @parameter1: int;
        specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: void dump(java.io.Writer,int)>(w, indent);
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        it = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label1;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        e = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r1;
        $i0 = indent + 1;
        virtualinvoke e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: void dump(java.io.Writer,int)>(w, $i0);
        goto label0;

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        java.lang.StringBuffer $r0;
        java.lang.String $r1, $r2;
        int $i0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        $r1 = specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: java.lang.String toString()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");
        $i0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: int getChildCount()>();
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);
        $r0 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" children)");
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r2;
    }

    protected boolean okToWriteRtf()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        boolean result, $z0;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions $r0;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        $z0 = specialinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: boolean okToWriteRtf()>();
        if $z0 == 0 goto label0;

        $z0 = virtualinvoke this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: boolean isEmpty()>();
        if $z0 != 0 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        result = $z0;
        if result == 0 goto label2;

        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions options>;
        $z0 = virtualinvoke $r0.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfOptions: boolean renderContainer(org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer)>(this);
        if $z0 != 0 goto label2;

        result = 0;

     label2:
        return result;
    }

    public boolean isEmpty()
    {
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer this;
        boolean result, $z0;
        java.util.Iterator it;
        org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement e;
        java.util.LinkedList $r0;
        java.lang.Object $r1;

        this := @this: org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer;
        result = 1;
        $r0 = this.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfContainer: java.util.LinkedList children>;
        it = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label0:
        $z0 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();
        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();
        e = (org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement) $r1;
        $z0 = virtualinvoke e.<org.apache.fop.render.rtf.rtflib.rtfdoc.RtfElement: boolean isEmpty()>();
        if $z0 != 0 goto label1;

        result = 0;
        goto label2;

     label1:
        goto label0;

     label2:
        return result;
    }
}

public class org.apache.fop.hyphenation.Hyphen extends java.lang.Object implements java.io.Serializable
{
    public java.lang.String preBreak;
    public java.lang.String noBreak;
    public java.lang.String postBreak;

    void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.fop.hyphenation.Hyphen this;
        java.lang.String pre, no, post;

        this := @this: org.apache.fop.hyphenation.Hyphen;
        pre := @parameter0: java.lang.String;
        no := @parameter1: java.lang.String;
        post := @parameter2: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.hyphenation.Hyphen: java.lang.String preBreak> = pre;
        this.<org.apache.fop.hyphenation.Hyphen: java.lang.String noBreak> = no;
        this.<org.apache.fop.hyphenation.Hyphen: java.lang.String postBreak> = post;
        return;
    }

    void <init>(java.lang.String)
    {
        org.apache.fop.hyphenation.Hyphen this;
        java.lang.String pre;

        this := @this: org.apache.fop.hyphenation.Hyphen;
        pre := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<org.apache.fop.hyphenation.Hyphen: java.lang.String preBreak> = pre;
        this.<org.apache.fop.hyphenation.Hyphen: java.lang.String noBreak> = null;
        this.<org.apache.fop.hyphenation.Hyphen: java.lang.String postBreak> = null;
        return;
    }

    public java.lang.String toString()
    {
        org.apache.fop.hyphenation.Hyphen this;
        java.lang.StringBuffer res, $r1;
        java.lang.String $r0, $r2;
        boolean $z0;

        this := @this: org.apache.fop.hyphenation.Hyphen;
        $r0 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String noBreak>;
        if $r0 != null goto label0;

        $r0 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String postBreak>;
        if $r0 != null goto label0;

        $r0 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String preBreak>;
        if $r0 == null goto label0;

        $r0 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String preBreak>;
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("-");
        if $z0 == 0 goto label0;

        return "-";

     label0:
        $r1 = new java.lang.StringBuffer;
        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("{");
        res = $r1;
        $r2 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String preBreak>;
        virtualinvoke res.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke res.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}{");
        $r2 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String postBreak>;
        virtualinvoke res.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke res.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}{");
        $r2 = this.<org.apache.fop.hyphenation.Hyphen: java.lang.String noBreak>;
        virtualinvoke res.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);
        virtualinvoke res.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);
        $r0 = virtualinvoke res.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r0;
    }
}

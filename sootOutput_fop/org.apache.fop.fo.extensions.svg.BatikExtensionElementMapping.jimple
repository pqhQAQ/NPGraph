public class org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping extends org.apache.fop.fo.ElementMapping
{
    public static final java.lang.String URI;
    private boolean batikAvail;

    public void <init>()
    {
        org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping this;

        this := @this: org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping;
        specialinvoke this.<org.apache.fop.fo.ElementMapping: void <init>()>();
        this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: boolean batikAvail> = 1;
        this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: java.lang.String namespaceURI> = "http://xml.apache.org/batik/ext";
        return;
    }

    public org.w3c.dom.DOMImplementation getDOMImplementation()
    {
        org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping this;

        this := @this: org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping;
        return null;
    }

    private final java.lang.String getAParserClassName()
    {
        org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping this;
        javax.xml.parsers.SAXParserFactory factory;
        java.lang.Exception e, $r4;
        javax.xml.parsers.SAXParser $r0;
        org.xml.sax.XMLReader $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        this := @this: org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping;

     label0:
        factory = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();
        $r0 = virtualinvoke factory.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();
        $r1 = virtualinvoke $r0.<javax.xml.parsers.SAXParser: org.xml.sax.XMLReader getXMLReader()>();
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

     label1:
        return $r3;

     label2:
        $r4 := @caughtexception;
        e = $r4;
        return null;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    protected void initialize()
    {
        org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping this;
        java.util.HashMap $r0, $r1;
        java.lang.Throwable t, $r6;
        boolean $z0;
        java.lang.String $r2;
        org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping$SE $r3;
        org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping$SVGMaker $r5;

        this := @this: org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping;
        $r1 = this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: java.util.HashMap foObjs>;
        if $r1 != null goto label3;

        $z0 = this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: boolean batikAvail>;
        if $z0 == 0 goto label3;

     label0:
        $r2 = specialinvoke this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: java.lang.String getAParserClassName()>();
        staticinvoke <org.apache.batik.util.XMLResourceDescriptor: void setXMLParserClassName(java.lang.String)>($r2);
        $r0 = new java.util.HashMap;
        specialinvoke $r0.<java.util.HashMap: void <init>()>();
        this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: java.util.HashMap foObjs> = $r0;
        $r1 = this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: java.util.HashMap foObjs>;
        $r3 = new org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping$SE;
        specialinvoke $r3.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping$SE: void <init>()>();
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("batik", $r3);
        $r1 = this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: java.util.HashMap foObjs>;
        $r5 = new org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping$SVGMaker;
        specialinvoke $r5.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping$SVGMaker: void <init>()>();
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("<default>", $r5);

     label1:
        goto label3;

     label2:
        $r6 := @caughtexception;
        t = $r6;
        this.<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: boolean batikAvail> = 0;

     label3:
        return;

        catch java.lang.Throwable from label0 to label1 with label2;
    }
}

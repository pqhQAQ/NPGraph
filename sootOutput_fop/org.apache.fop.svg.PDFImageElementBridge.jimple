public class org.apache.fop.svg.PDFImageElementBridge extends org.apache.batik.bridge.SVGImageElementBridge
{
    private final org.apache.xmlgraphics.image.loader.ImageFlavor[] supportedFlavors;

    public void <init>()
    {
        org.apache.fop.svg.PDFImageElementBridge this;
        org.apache.xmlgraphics.image.loader.ImageFlavor $r0;
        org.apache.xmlgraphics.image.loader.ImageFlavor[] $r1;

        this := @this: org.apache.fop.svg.PDFImageElementBridge;
        specialinvoke this.<org.apache.batik.bridge.SVGImageElementBridge: void <init>()>();
        $r1 = newarray (org.apache.xmlgraphics.image.loader.ImageFlavor)[4];
        $r0 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor RAW_JPEG>;
        $r1[0] = $r0;
        $r0 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor RAW_CCITTFAX>;
        $r1[1] = $r0;
        $r0 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor GRAPHICS2D>;
        $r1[2] = $r0;
        $r0 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor XML_DOM>;
        $r1[3] = $r0;
        this.<org.apache.fop.svg.PDFImageElementBridge: org.apache.xmlgraphics.image.loader.ImageFlavor[] supportedFlavors> = $r1;
        return;
    }

    protected org.apache.batik.gvt.GraphicsNode createImageGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.util.ParsedURL)
    {
        org.apache.fop.svg.PDFImageElementBridge this;
        org.apache.batik.bridge.BridgeContext ctx;
        org.w3c.dom.Element imageElement;
        org.apache.batik.util.ParsedURL purl;
        org.apache.fop.svg.PDFBridgeContext pdfCtx;
        org.apache.xmlgraphics.image.loader.ImageManager manager;
        org.apache.xmlgraphics.image.loader.ImageSessionContext sessionContext;
        org.apache.xmlgraphics.image.loader.ImageInfo info;
        org.apache.xmlgraphics.image.loader.Image image;
        org.apache.batik.gvt.AbstractGraphicsNode specializedNode;
        org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM xmlImage;
        org.apache.xmlgraphics.image.loader.ImageFlavor $r0;
        org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D g2dImage;
        java.awt.geom.Rectangle2D imgBounds, bounds;
        float[] vb;
        java.lang.Exception e, $r14;
        java.lang.String $r1, $r12;
        org.apache.xmlgraphics.image.loader.ImageFlavor[] $r2;
        boolean $z0;
        org.w3c.dom.Document $r3, $r4;
        org.w3c.dom.svg.SVGDocument $r5;
        org.apache.batik.gvt.GraphicsNode $r6;
        org.apache.fop.svg.PDFImageElementBridge$LoaderImageNode $r7;
        org.apache.fop.svg.PDFImageElementBridge$Graphics2DNode $r8;
        org.apache.batik.bridge.UserAgent $r9;
        org.apache.xmlgraphics.image.loader.ImageException $r10;
        java.lang.StringBuffer $r11;
        double $d0;
        float $f0;

        this := @this: org.apache.fop.svg.PDFImageElementBridge;
        ctx := @parameter0: org.apache.batik.bridge.BridgeContext;
        imageElement := @parameter1: org.w3c.dom.Element;
        purl := @parameter2: org.apache.batik.util.ParsedURL;
        pdfCtx = (org.apache.fop.svg.PDFBridgeContext) ctx;
        manager = virtualinvoke pdfCtx.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageManager getImageManager()>();
        sessionContext = virtualinvoke pdfCtx.<org.apache.fop.svg.PDFBridgeContext: org.apache.xmlgraphics.image.loader.ImageSessionContext getImageSessionContext()>();

     label0:
        $r1 = virtualinvoke purl.<org.apache.batik.util.ParsedURL: java.lang.String toString()>();
        info = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.ImageInfo getImageInfo(java.lang.String,org.apache.xmlgraphics.image.loader.ImageSessionContext)>($r1, sessionContext);
        $r2 = this.<org.apache.fop.svg.PDFImageElementBridge: org.apache.xmlgraphics.image.loader.ImageFlavor[] supportedFlavors>;
        image = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.Image getImage(org.apache.xmlgraphics.image.loader.ImageInfo,org.apache.xmlgraphics.image.loader.ImageFlavor[],org.apache.xmlgraphics.image.loader.ImageSessionContext)>(info, $r2, sessionContext);
        specializedNode = null;
        $z0 = image instanceof org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM;
        if $z0 == 0 goto label3;

        xmlImage = (org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM) image;
        $r3 = virtualinvoke xmlImage.<org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM: org.w3c.dom.Document getDocument()>();
        $z0 = $r3 instanceof org.w3c.dom.svg.SVGDocument;
        if $z0 == 0 goto label2;

        $r4 = virtualinvoke xmlImage.<org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM: org.w3c.dom.Document getDocument()>();
        $r5 = (org.w3c.dom.svg.SVGDocument) $r4;
        $r6 = virtualinvoke this.<org.apache.fop.svg.PDFImageElementBridge: org.apache.batik.gvt.GraphicsNode createSVGImageNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.w3c.dom.svg.SVGDocument)>(ctx, imageElement, $r5);

     label1:
        return $r6;

     label2:
        $r2 = newarray (org.apache.xmlgraphics.image.loader.ImageFlavor)[1];
        $r0 = <org.apache.xmlgraphics.image.loader.ImageFlavor: org.apache.xmlgraphics.image.loader.ImageFlavor GRAPHICS2D>;
        $r2[0] = $r0;
        image = virtualinvoke manager.<org.apache.xmlgraphics.image.loader.ImageManager: org.apache.xmlgraphics.image.loader.Image convertImage(org.apache.xmlgraphics.image.loader.Image,org.apache.xmlgraphics.image.loader.ImageFlavor[])>(xmlImage, $r2);

     label3:
        $z0 = image instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG;
        if $z0 == 0 goto label4;

        $r7 = new org.apache.fop.svg.PDFImageElementBridge$LoaderImageNode;
        specialinvoke $r7.<org.apache.fop.svg.PDFImageElementBridge$LoaderImageNode: void <init>(org.apache.fop.svg.PDFImageElementBridge,org.apache.xmlgraphics.image.loader.Image,org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)>(this, image, ctx, imageElement, purl);
        specializedNode = $r7;
        goto label7;

     label4:
        $z0 = image instanceof org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax;
        if $z0 == 0 goto label5;

        $r7 = new org.apache.fop.svg.PDFImageElementBridge$LoaderImageNode;
        specialinvoke $r7.<org.apache.fop.svg.PDFImageElementBridge$LoaderImageNode: void <init>(org.apache.fop.svg.PDFImageElementBridge,org.apache.xmlgraphics.image.loader.Image,org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)>(this, image, ctx, imageElement, purl);
        specializedNode = $r7;
        goto label7;

     label5:
        $z0 = image instanceof org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;
        if $z0 == 0 goto label6;

        g2dImage = (org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D) image;
        $r8 = new org.apache.fop.svg.PDFImageElementBridge$Graphics2DNode;
        specialinvoke $r8.<org.apache.fop.svg.PDFImageElementBridge$Graphics2DNode: void <init>(org.apache.fop.svg.PDFImageElementBridge,org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D)>(this, g2dImage);
        specializedNode = $r8;
        goto label7;

     label6:
        $r9 = virtualinvoke ctx.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();
        $r10 = new org.apache.xmlgraphics.image.loader.ImageException;
        $r11 = new java.lang.StringBuffer;
        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();
        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot convert an image to a usable format: ");
        $r11 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(purl);
        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();
        specialinvoke $r10.<org.apache.xmlgraphics.image.loader.ImageException: void <init>(java.lang.String)>($r12);
        interfaceinvoke $r9.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>($r10);

     label7:
        imgBounds = staticinvoke <org.apache.fop.svg.PDFImageElementBridge: java.awt.geom.Rectangle2D getImageBounds(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element)>(ctx, imageElement);
        bounds = virtualinvoke specializedNode.<org.apache.batik.gvt.AbstractGraphicsNode: java.awt.geom.Rectangle2D getPrimitiveBounds()>();
        vb = newarray (float)[4];
        vb[0] = 0.0F;
        vb[1] = 0.0F;
        $d0 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getWidth()>();
        $f0 = (float) $d0;
        vb[2] = $f0;
        $d0 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getHeight()>();
        $f0 = (float) $d0;
        vb[3] = $f0;
        staticinvoke <org.apache.fop.svg.PDFImageElementBridge: void initializeViewport(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,float[],java.awt.geom.Rectangle2D)>(ctx, imageElement, specializedNode, vb, imgBounds);

     label8:
        return specializedNode;

     label9:
        $r14 := @caughtexception;
        e = $r14;
        $r9 = virtualinvoke ctx.<org.apache.batik.bridge.BridgeContext: org.apache.batik.bridge.UserAgent getUserAgent()>();
        interfaceinvoke $r9.<org.apache.batik.bridge.UserAgent: void displayError(java.lang.Exception)>(e);
        $r6 = virtualinvoke this.<org.apache.fop.svg.PDFImageElementBridge: org.apache.batik.gvt.GraphicsNode superCreateGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)>(ctx, imageElement, purl);
        return $r6;

        catch java.lang.Exception from label0 to label1 with label9;
        catch java.lang.Exception from label2 to label8 with label9;
    }

    protected org.apache.batik.gvt.GraphicsNode superCreateGraphicsNode(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.apache.batik.util.ParsedURL)
    {
        org.apache.fop.svg.PDFImageElementBridge this;
        org.apache.batik.bridge.BridgeContext ctx;
        org.w3c.dom.Element imageElement;
        org.apache.batik.util.ParsedURL purl;
        org.apache.batik.gvt.GraphicsNode $r0;

        this := @this: org.apache.fop.svg.PDFImageElementBridge;
        ctx := @parameter0: org.apache.batik.bridge.BridgeContext;
        imageElement := @parameter1: org.w3c.dom.Element;
        purl := @parameter2: org.apache.batik.util.ParsedURL;
        $r0 = specialinvoke this.<org.apache.batik.bridge.SVGImageElementBridge: org.apache.batik.gvt.GraphicsNode createImageGraphicsNode(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,org.apache.batik.util.ParsedURL)>(ctx, imageElement, purl);
        return $r0;
    }
}

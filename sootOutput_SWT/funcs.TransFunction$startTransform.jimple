public class funcs.TransFunction$startTransform extends java.lang.Thread
{
    final funcs.TransFunction this$0;

    public void <init>(funcs.TransFunction)
    {
        funcs.TransFunction$startTransform this;
        funcs.TransFunction l1;

        this := @this: funcs.TransFunction$startTransform;
        l1 := @parameter0: funcs.TransFunction;
        this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0> = l1;
        specialinvoke this.<java.lang.Thread: void <init>()>();
        return;
    }

    public void run()
    {
        funcs.TransFunction$startTransform this;
        java.lang.String precode, postcode, $r3, $r7, $r10, $r15;
        java.lang.StringBuilder $r0;
        java.io.File tarfile, seqFile, $r4;
        java.io.IOException e1, e, $r11, $r16;
        java.io.FileWriter fw, fw1, $r12;
        java.util.Iterator l8;
        data.action.Action action;
        funcs.TransFunction $r1, $r5;
        data.MyDevice $r2, $r9;
        boolean $z0;
        data.MyScript $r6;
        java.lang.String[] $r8;
        java.util.ArrayList $r13;
        java.lang.Object $r14;

        this := @this: funcs.TransFunction$startTransform;
        $r1 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r2 = $r1.<funcs.TransFunction: data.MyDevice tardev>;
        $r3 = $r2.<data.MyDevice: java.lang.String OS>;
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("iOS");
        if $z0 == 0 goto label0;

        precode = virtualinvoke this.<funcs.TransFunction$startTransform: java.lang.String preCodeBoilerplateiOS()>();
        goto label1;

     label0:
        precode = virtualinvoke this.<funcs.TransFunction$startTransform: java.lang.String preCodeBoilerplateAndroid()>();

     label1:
        postcode = virtualinvoke this.<funcs.TransFunction$startTransform: java.lang.String postCodeBoilerplate()>();
        $r4 = new java.io.File;
        $r0 = new java.lang.StringBuilder;
        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("Scripts/");
        $r5 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r6 = $r5.<funcs.TransFunction: data.MyScript source>;
        $r7 = $r6.<data.MyScript: java.lang.String scriptname>;
        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
        $r7 = $r8[0];
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");
        $r5 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r9 = $r5.<funcs.TransFunction: data.MyDevice tardev>;
        $r7 = $r9.<data.MyDevice: java.lang.String OS>;
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".py");
        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r10);
        tarfile = $r4;
        $r4 = new java.io.File;
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("Scripts/Appium.seq");
        seqFile = $r4;

     label2:
        $z0 = virtualinvoke seqFile.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label5;

        virtualinvoke seqFile.<java.io.File: boolean createNewFile()>();

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;
        e1 = $r11;
        virtualinvoke e1.<java.io.IOException: void printStackTrace()>();

     label5:
        $z0 = virtualinvoke tarfile.<java.io.File: boolean exists()>();
        if $z0 != 0 goto label6;

        virtualinvoke tarfile.<java.io.File: boolean createNewFile()>();

     label6:
        $r12 = new java.io.FileWriter;
        specialinvoke $r12.<java.io.FileWriter: void <init>(java.io.File)>(tarfile);
        fw = $r12;
        $r12 = new java.io.FileWriter;
        specialinvoke $r12.<java.io.FileWriter: void <init>(java.io.File)>(seqFile);
        fw1 = $r12;
        virtualinvoke fw.<java.io.FileWriter: void write(java.lang.String)>(precode);
        virtualinvoke fw.<java.io.FileWriter: void flush()>();
        $r1 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r13 = $r1.<funcs.TransFunction: java.util.ArrayList actionseq>;
        l8 = virtualinvoke $r13.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label8;

     label7:
        $r14 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();
        action = (data.action.Action) $r14;
        $r15 = virtualinvoke action.<data.action.Action: java.lang.String toScript()>();
        virtualinvoke fw.<java.io.FileWriter: void write(java.lang.String)>($r15);
        $r15 = virtualinvoke action.<java.lang.Object: java.lang.String toString()>();
        virtualinvoke fw1.<java.io.FileWriter: void write(java.lang.String)>($r15);
        virtualinvoke fw1.<java.io.FileWriter: void flush()>();

     label8:
        $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label7;

        virtualinvoke fw.<java.io.FileWriter: void flush()>();
        virtualinvoke fw.<java.io.FileWriter: void write(java.lang.String)>(postcode);
        virtualinvoke fw.<java.io.FileWriter: void flush()>();
        virtualinvoke fw.<java.io.FileWriter: void close()>();
        virtualinvoke fw1.<java.io.FileWriter: void flush()>();
        virtualinvoke fw1.<java.io.FileWriter: void close()>();

     label9:
        goto label11;

     label10:
        $r16 := @caughtexception;
        e = $r16;
        virtualinvoke e.<java.io.IOException: void printStackTrace()>();

     label11:
        return;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label5 to label9 with label10;
    }

    java.lang.String preCodeBoilerplateiOS()
    {
        funcs.TransFunction$startTransform this;
        java.lang.StringBuffer $r0, transcode;
        java.lang.StringBuilder $r1;
        funcs.TransFunction $r2, $r6;
        data.MyDevice $r3, $r7;
        java.lang.String $r4, $r5, $r8;
        int $i0;
        data.MyApp $r9, $r10;

        this := @this: funcs.TransFunction$startTransform;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        transcode = $r0;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("from selenium.webdriver.firefox.webdriver import WebDriver\nfrom selenium.webdriver.common.action_chains import ActionChains\nimport time\n\nsuccess = True\ndesired_caps = {}\ndesired_caps[\'appium-version\'] = \'1.0\'\ndesired_caps[\'platformName\'] = \'iOS\'\ndesired_caps[\'platformVersion\'] = \'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r3 = $r2.<funcs.TransFunction: data.MyDevice tardev>;
        $r4 = $r3.<data.MyDevice: java.lang.String Model>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r6 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r7 = $r6.<funcs.TransFunction: data.MyDevice tardev>;
        $r8 = $r7.<data.MyDevice: java.lang.String SerialNumber>;
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("desired_caps[\'deviceName\'] = \'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r3 = $r2.<funcs.TransFunction: data.MyDevice tardev>;
        $r4 = $r3.<data.MyDevice: java.lang.String SerialNumber>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label0:
        $r6 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r9 = $r6.<funcs.TransFunction: data.MyApp tarapp>;
        $r8 = $r9.<data.MyApp: java.lang.String apppath>;
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("desired_caps[\'app\'] = os.path.abspath(\'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r10 = $r2.<funcs.TransFunction: data.MyApp tarapp>;
        $r4 = $r10.<data.MyApp: java.lang.String apppath>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label1:
        transcode = virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nwd = webdriver.Remote(\'http://0.0.0.0:4723/wd/hub\', desired_caps)\nwd.implicitly_wait(60)\n\ndef is_alert_present(wd):\n\ttry:\n\t\twd.switch_to_alert().text\n\t\treturn True\n\texcept:\n\t\treturn False\n\ntry:\n");
        $r8 = virtualinvoke transcode.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r8;
    }

    java.lang.String preCodeBoilerplateAndroid()
    {
        funcs.TransFunction$startTransform this;
        java.lang.StringBuffer $r0, transcode;
        java.lang.StringBuilder $r1;
        funcs.TransFunction $r2, $r6;
        data.MyDevice $r3, $r7;
        java.lang.String $r4, $r5, $r8;
        int $i0;
        data.MyApp $r9, $r10;

        this := @this: funcs.TransFunction$startTransform;
        $r0 = new java.lang.StringBuffer;
        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();
        transcode = $r0;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("from selenium.webdriver.firefox.webdriver import WebDriver\nfrom selenium.webdriver.common.action_chains import ActionChains\nimport time\n\nsuccess = True\ndesired_caps = {}\ndesired_caps[\'appium-version\'] = \'1.0\'\ndesired_caps[\'platformName\'] = \'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r3 = $r2.<funcs.TransFunction: data.MyDevice tardev>;
        $r4 = $r3.<data.MyDevice: java.lang.String OS>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("desired_caps[\'platformVersion\'] = \'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r3 = $r2.<funcs.TransFunction: data.MyDevice tardev>;
        $r4 = $r3.<data.MyDevice: java.lang.String Version>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);
        $r6 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r7 = $r6.<funcs.TransFunction: data.MyDevice tardev>;
        $r8 = $r7.<data.MyDevice: java.lang.String Model>;
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("desired_caps[\'deviceName\'] = \'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r3 = $r2.<funcs.TransFunction: data.MyDevice tardev>;
        $r4 = $r3.<data.MyDevice: java.lang.String Model>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label0:
        $r6 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r9 = $r6.<funcs.TransFunction: data.MyApp tarapp>;
        $r8 = $r9.<data.MyApp: java.lang.String apppath>;
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("desired_caps[\'app\'] = os.path.abspath(\'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r10 = $r2.<funcs.TransFunction: data.MyApp tarapp>;
        $r4 = $r10.<data.MyApp: java.lang.String apppath>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label1:
        $r6 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r9 = $r6.<funcs.TransFunction: data.MyApp tarapp>;
        $r8 = $r9.<data.MyApp: java.lang.String packagename>;
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();
        if $i0 <= 0 goto label2;

        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("desired_caps[\'appPackage\'] = \'");
        $r2 = this.<funcs.TransFunction$startTransform: funcs.TransFunction this$0>;
        $r10 = $r2.<funcs.TransFunction: data.MyApp tarapp>;
        $r4 = $r10.<data.MyApp: java.lang.String packagename>;
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'\n");
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label2:
        transcode = virtualinvoke transcode.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\nwd = webdriver.Remote(\'http://0.0.0.0:4723/wd/hub\', desired_caps)\nwd.implicitly_wait(60)\n\ndef is_alert_present(wd):\n\ttry:\n\t\twd.switch_to_alert().text\n\t\treturn True\n\texcept:\n\t\treturn False\n\ntry:\n");
        $r8 = virtualinvoke transcode.<java.lang.StringBuffer: java.lang.String toString()>();
        return $r8;
    }

    java.lang.String postCodeBoilerplate()
    {
        funcs.TransFunction$startTransform this;

        this := @this: funcs.TransFunction$startTransform;
        return "finally:\n\twd.quit()\n\tif not success:\n\t\traise Exception(\"Test failed.\")\n";
    }
}

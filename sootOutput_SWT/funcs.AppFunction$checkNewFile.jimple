class funcs.AppFunction$checkNewFile extends java.lang.Thread
{
    final funcs.AppFunction this$0;

    void <init>(funcs.AppFunction)
    {
        funcs.AppFunction$checkNewFile this;
        funcs.AppFunction l1;

        this := @this: funcs.AppFunction$checkNewFile;
        l1 := @parameter0: funcs.AppFunction;
        this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0> = l1;
        specialinvoke this.<java.lang.Thread: void <init>()>();
        return;
    }

    public void run()
    {
        funcs.AppFunction$checkNewFile this;
        java.io.File $r0, f;
        funcs.FileSelect $r1;
        java.lang.String[] $r2;
        java.io.File[] apkFiles, l5, appFiles, l6;
        int l4, l3, l5;
        boolean isInList, $z0;
        java.util.Iterator l8, l9;
        data.MyApp app, $r9;
        java.lang.Exception e, $r11, $r12;
        funcs.AppFunction $r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r8, $r10;

        this := @this: funcs.AppFunction$checkNewFile;
        $r0 = staticinvoke <funcs.AppFunction: java.io.File access$0()>();
        $r1 = new funcs.FileSelect;
        $r2 = staticinvoke <funcs.AppFunction: java.lang.String[] access$1()>();
        specialinvoke $r1.<funcs.FileSelect: void <init>(java.lang.String[])>($r2);
        apkFiles = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r1);
        l5 = apkFiles;
        l4 = lengthof apkFiles;
        l3 = 0;
        goto label8;

     label0:
        f = l5[l3];

     label1:
        isInList = 0;
        $r4 = this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0>;
        $r5 = staticinvoke <funcs.AppFunction: java.util.ArrayList access$2(funcs.AppFunction)>($r4);
        l8 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label3;

     label2:
        $r6 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();
        app = (data.MyApp) $r6;
        $r7 = virtualinvoke f.<java.io.File: java.lang.String getAbsolutePath()>();
        $r8 = app.<data.MyApp: java.lang.String apppath>;
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z0 == 0 goto label3;

        isInList = 1;
        goto label4;

     label3:
        $z0 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label2;

     label4:
        if isInList != 0 goto label7;

        $r4 = this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0>;
        $r5 = staticinvoke <funcs.AppFunction: java.util.ArrayList access$2(funcs.AppFunction)>($r4);
        $r9 = new data.MyApp;
        $r10 = virtualinvoke f.<java.io.File: java.lang.String getAbsolutePath()>();
        specialinvoke $r9.<data.MyApp: void <init>(java.lang.String,java.lang.String)>($r10, "Android");
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);
        $r4 = this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0>;
        $r5 = $r4.<funcs.AppFunction: java.util.ArrayList androidAppFiles>;
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(f);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;
        e = $r11;
        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label7:
        l3 = l3 + 1;

     label8:
        if l3 < l4 goto label0;

        $r0 = staticinvoke <funcs.AppFunction: java.io.File access$0()>();
        $r1 = new funcs.FileSelect;
        $r2 = staticinvoke <funcs.AppFunction: java.lang.String[] access$3()>();
        specialinvoke $r1.<funcs.FileSelect: void <init>(java.lang.String[])>($r2);
        appFiles = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r1);
        l6 = appFiles;
        l5 = lengthof appFiles;
        l4 = 0;
        goto label17;

     label9:
        f = l6[l4];

     label10:
        isInList = 0;
        $r4 = this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0>;
        $r5 = staticinvoke <funcs.AppFunction: java.util.ArrayList access$2(funcs.AppFunction)>($r4);
        l9 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();
        goto label12;

     label11:
        $r6 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();
        app = (data.MyApp) $r6;
        $r7 = virtualinvoke f.<java.io.File: java.lang.String getAbsolutePath()>();
        $r8 = app.<data.MyApp: java.lang.String apppath>;
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);
        if $z0 == 0 goto label12;

        isInList = 1;
        goto label13;

     label12:
        $z0 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label11;

     label13:
        if isInList != 0 goto label16;

        $r4 = this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0>;
        $r5 = staticinvoke <funcs.AppFunction: java.util.ArrayList access$2(funcs.AppFunction)>($r4);
        $r9 = new data.MyApp;
        $r10 = virtualinvoke f.<java.io.File: java.lang.String getAbsolutePath()>();
        specialinvoke $r9.<data.MyApp: void <init>(java.lang.String,java.lang.String)>($r10, "iOS");
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);
        $r4 = this.<funcs.AppFunction$checkNewFile: funcs.AppFunction this$0>;
        $r5 = $r4.<funcs.AppFunction: java.util.ArrayList iosAppFiles>;
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(f);

     label14:
        goto label16;

     label15:
        $r12 := @caughtexception;
        e = $r12;
        virtualinvoke e.<java.lang.Exception: void printStackTrace()>();

     label16:
        l4 = l4 + 1;

     label17:
        if l4 < l5 goto label9;

        return;

        catch java.lang.Exception from label1 to label5 with label6;
        catch java.lang.Exception from label10 to label14 with label15;
    }
}
